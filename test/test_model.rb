# coding: utf-8
# Test for model
require 'rubygems'
gem 'minitest'
require 'minitest/autorun'
require_relative '../lib/model'

class TestModel < Minitest::Test
  def self.runnable_methods
    puts 'Overriding minitest to run tests in a defined order'
    methods = methods_matching(/^test_/)
  end
  def worksheet; @worksheet ||= init_spreadsheet; end
  def init_spreadsheet; ModelShim.new end
  def test_control_m1; assert_equal("Version 3.5.1", worksheet.control_m1); end
  def test_control_m4; assert_equal("Doesn't tackle climate change (All at level 1)", worksheet.control_m4); end
  def test_control_n4; assert_equal("Maximium demand, no supply", worksheet.control_n4); end
  def test_control_o4; assert_equal("Maximum supply, no demand", worksheet.control_o4); end
  def test_control_p4; assert_equal("Analogous to MARKAL 3.26", worksheet.control_p4); end
  def test_control_q4; assert_equal("Higher renewables, more energy efficiency", worksheet.control_q4); end
  def test_control_r4; assert_equal("Higher nuclear, less energy efficiency", worksheet.control_r4); end
  def test_control_s4; assert_equal("Higher CCS, more bioenergy", worksheet.control_s4); end
  def test_control_t4; assert_equal("Low cost pathway", worksheet.control_t4); end
  def test_control_u4; assert_equal("Friends of the Earth", worksheet.control_u4); end
  def test_control_v4; assert_equal("Campaign to Protect Rural England", worksheet.control_v4); end
  def test_control_w4; assert_equal("Mark Brinkley", worksheet.control_w4); end
  def test_control_x4; assert_equal("National Grid", worksheet.control_x4); end
  def test_control_y4; assert_equal("Atkins", worksheet.control_y4); end
  def test_control_d5; assert_equal("Nuclear power stations", worksheet.control_d5); end
  def test_control_f5; assert_in_epsilon(4, worksheet.control_f5, 0.001); end
  def test_control_h5; assert_equal("No new nuclear power installed; estimated closure of final plant in 2035", worksheet.control_h5); end
  def test_control_i5; assert_equal("~13 3GW power stations delivering ~280 TWh/yr", worksheet.control_i5); end
  def test_control_j5; assert_equal("~30 3GW power stations delivering ~630 TWh/yr", worksheet.control_j5); end
  def test_control_k5; assert_equal("~50 3GW power stations delivering ~1030 TWh/yr", worksheet.control_k5); end
  def test_control_m5; assert_in_delta(1, worksheet.control_m5, 0.001); end
  def test_control_n5; assert_in_delta(1, worksheet.control_n5, 0.001); end
  def test_control_o5; assert_in_epsilon(4, worksheet.control_o5, 0.001); end
  def test_control_p5; assert_in_epsilon(1.8, worksheet.control_p5, 0.001); end
  def test_control_q5; assert_in_epsilon(1.4, worksheet.control_q5, 0.001); end
  def test_control_r5; assert_in_epsilon(2.7, worksheet.control_r5, 0.001); end
  def test_control_s5; assert_in_epsilon(1.5, worksheet.control_s5, 0.001); end
  def test_control_t5; assert_in_epsilon(2.6, worksheet.control_t5, 0.001); end
  def test_control_u5; assert_in_delta(1, worksheet.control_u5, 0.001); end
  def test_control_v5; assert_in_delta(1, worksheet.control_v5, 0.001); end
  def test_control_w5; assert_in_epsilon(2, worksheet.control_w5, 0.001); end
  def test_control_x5; assert_in_epsilon(1.7, worksheet.control_x5, 0.001); end
  def test_control_y5; assert_in_epsilon(1.6, worksheet.control_y5, 0.001); end
  def test_control_bo5; assert_equal("No new nuclear power installed. Final nuclear power station estimated to close in 2035", worksheet.control_bo5); end
  def test_control_bp5; assert_equal("~13 3GW nuclear power stations delivering ~280 TWh/yr", worksheet.control_bp5); end
  def test_control_bq5; assert_equal("~30 3GW nuclear power stations delivering ~630 TWh/yr", worksheet.control_bq5); end
  def test_control_br5; assert_equal("~50 3GW nuclear power stations delivering ~1030 TWh/yr", worksheet.control_br5); end
  def test_control_d6; assert_equal("Carbon Capture Storage (CCS)", worksheet.control_d6); end
  def test_control_d7; assert_equal("CCS power stations", worksheet.control_d7); end
  def test_control_f7; assert_in_epsilon(4, worksheet.control_f7, 0.001); end
  def test_control_h7; assert_equal("Demonstration plants only; no roll-out of CCS", worksheet.control_h7); end
  def test_control_i7; assert_equal("~240 TWh/yr from 25-40 CCS power stations; comparable to current gas & coal generation", worksheet.control_i7); end
  def test_control_j7; assert_equal("~340 TWh/yr from 35-60 CCS power stations; comparable to total current demand", worksheet.control_j7); end
  def test_control_k7; assert_equal("~510 TWh/yr  from 50-90 CCS power stations; build rate of gas plants in the 1990s", worksheet.control_k7); end
  def test_control_m7; assert_in_delta(1, worksheet.control_m7, 0.001); end
  def test_control_n7; assert_in_delta(1, worksheet.control_n7, 0.001); end
  def test_control_o7; assert_in_epsilon(4, worksheet.control_o7, 0.001); end
  def test_control_p7; assert_in_epsilon(1.6, worksheet.control_p7, 0.001); end
  def test_control_q7; assert_in_epsilon(1.3, worksheet.control_q7, 0.001); end
  def test_control_r7; assert_in_delta(1, worksheet.control_r7, 0.001); end
  def test_control_s7; assert_in_epsilon(2, worksheet.control_s7, 0.001); end
  def test_control_t7; assert_in_delta(1, worksheet.control_t7, 0.001); end
  def test_control_u7; assert_in_epsilon(1.7, worksheet.control_u7, 0.001); end
  def test_control_v7; assert_in_epsilon(1.7, worksheet.control_v7, 0.001); end
  def test_control_w7; assert_in_epsilon(2, worksheet.control_w7, 0.001); end
  def test_control_x7; assert_in_epsilon(1.7, worksheet.control_x7, 0.001); end
  def test_control_y7; assert_in_epsilon(1.5, worksheet.control_y7, 0.001); end
  def test_control_bo7; assert_equal("CCS demonstration plants only", worksheet.control_bo7); end
  def test_control_bp7; assert_equal("~240 TWh/yr from 25-40 CCS power stations - comparable to current gas & coal generation", worksheet.control_bp7); end
  def test_control_bq7; assert_equal("~340 TWh/yr from 35-60 CCS power stations - comparable to total current demand", worksheet.control_bq7); end
  def test_control_br7; assert_equal("~510 TWh/yr  from 50-90 CCS power stations - this requires a similar build rate to that of gas plants in the 1990s", worksheet.control_br7); end
  def test_control_d8; assert_equal("CCS power station fuel mix", worksheet.control_d8); end
  def test_control_f8; assert_equal("D", worksheet.control_f8); end
  def test_control_h8; assert_equal("100% coal/biomass, 0% gas/biogas CCS after demonstration plants", worksheet.control_h8); end
  def test_control_i8; assert_equal("66% coal/biomass, 33% gas/biogas CCS after demonstration plants", worksheet.control_i8); end
  def test_control_j8; assert_equal("33% coal/biomass, 66% gas/biogas CCS after demonstration plants", worksheet.control_j8); end
  def test_control_k8; assert_equal("0% coal/biomas, 100% gas/biogas CCS after demonstration plants", worksheet.control_k8); end
  def test_control_m8; assert_in_delta(1, worksheet.control_m8, 0.001); end
  def test_control_n8; assert_in_delta(1, worksheet.control_n8, 0.001); end
  def test_control_o8; assert_in_epsilon(4, worksheet.control_o8, 0.001); end
  def test_control_p8; assert_in_epsilon(2, worksheet.control_p8, 0.001); end
  def test_control_q8; assert_in_epsilon(3, worksheet.control_q8, 0.001); end
  def test_control_r8; assert_in_epsilon(3, worksheet.control_r8, 0.001); end
  def test_control_s8; assert_in_epsilon(3, worksheet.control_s8, 0.001); end
  def test_control_t8; assert_in_delta(1, worksheet.control_t8, 0.001); end
  def test_control_u8; assert_in_epsilon(4, worksheet.control_u8, 0.001); end
  def test_control_v8; assert_in_epsilon(2, worksheet.control_v8, 0.001); end
  def test_control_w8; assert_in_epsilon(2, worksheet.control_w8, 0.001); end
  def test_control_x8; assert_in_epsilon(2, worksheet.control_x8, 0.001); end
  def test_control_y8; assert_in_epsilon(2, worksheet.control_y8, 0.001); end
  def test_control_bo8; assert_equal("After demonstration plants, all CCS electricity is from solid fuel (coal or biomass)", worksheet.control_bo8); end
  def test_control_bp8; assert_equal("After demonstration plants, two thirds of CCS electricity is from solid fuel (coal or biomass), one third from gas (natural gas or biogas)", worksheet.control_bp8); end
  def test_control_bq8; assert_equal("After demonstration plants, one third of CCS electricity is from solid fuel (coal or biomass), two thirds from gas (natural gas or biogas)", worksheet.control_bq8); end
  def test_control_br8; assert_equal("After demonstration plants, all CCS electricity is from gas (natural gas or biogas)", worksheet.control_br8); end
  def test_control_d9; assert_equal("Offshore wind", worksheet.control_d9); end
  def test_control_f9; assert_in_epsilon(4, worksheet.control_f9, 0.001); end
  def test_control_h9; assert_equal("~1,400 turbines in 2025, reducing to zero as decommissioned sites are not replanted", worksheet.control_h9); end
  def test_control_i9; assert_equal("~10,000 turbines in 2050, delivering ~180 TWh/yr", worksheet.control_i9); end
  def test_control_j9; assert_equal("~17,000 turbines in 2050, delivering ~310 TWh/yr", worksheet.control_j9); end
  def test_control_k9; assert_equal("~40,000 turbines in 2050, delivering ~430 TWh/yr", worksheet.control_k9); end
  def test_control_m9; assert_in_delta(1, worksheet.control_m9, 0.001); end
  def test_control_n9; assert_in_delta(1, worksheet.control_n9, 0.001); end
  def test_control_o9; assert_in_epsilon(4, worksheet.control_o9, 0.001); end
  def test_control_p9; assert_in_epsilon(1.3, worksheet.control_p9, 0.001); end
  def test_control_q9; assert_in_epsilon(1.9, worksheet.control_q9, 0.001); end
  def test_control_r9; assert_in_epsilon(1.2, worksheet.control_r9, 0.001); end
  def test_control_s9; assert_in_epsilon(1.3, worksheet.control_s9, 0.001); end
  def test_control_t9; assert_in_delta(1, worksheet.control_t9, 0.001); end
  def test_control_u9; assert_in_epsilon(2.3, worksheet.control_u9, 0.001); end
  def test_control_v9; assert_in_epsilon(2.5, worksheet.control_v9, 0.001); end
  def test_control_w9; assert_in_epsilon(2, worksheet.control_w9, 0.001); end
  def test_control_x9; assert_in_epsilon(1.6, worksheet.control_x9, 0.001); end
  def test_control_y9; assert_in_epsilon(2.4, worksheet.control_y9, 0.001); end
  def test_control_bo9; assert_equal("~1,400 offshore wind turbines in 2025, reducing to zero as decommissioned sites are not replanted", worksheet.control_bo9); end
  def test_control_bp9; assert_equal("~10,000 offshore wind turbines in 2050, delivering ~180 TWh/yr", worksheet.control_bp9); end
  def test_control_bq9; assert_equal("~17,000 offshore wind turbines in 2050, delivering ~310 TWh/yr", worksheet.control_bq9); end
  def test_control_br9; assert_equal("~40,000 offshore wind turbines in 2050, delivering ~430 TWh/yr", worksheet.control_br9); end
  def test_control_d10; assert_equal("Onshore wind", worksheet.control_d10); end
  def test_control_f10; assert_in_epsilon(4, worksheet.control_f10, 0.001); end
  def test_control_h10; assert_equal("~4,400 turbines in 2025, reducing to zero as decommissioned sites are not replanted", worksheet.control_h10); end
  def test_control_i10; assert_equal("~8,000 turbines in 2050, delivering ~50 TWh/yr. ", worksheet.control_i10); end
  def test_control_j10; assert_equal("~13,000 turbines in 2050, delivering ~80 TWh/yr", worksheet.control_j10); end
  def test_control_k10; assert_equal("~20,000 turbines in 2050, delivering ~130 TWh/yr", worksheet.control_k10); end
  def test_control_m10; assert_in_delta(1, worksheet.control_m10, 0.001); end
  def test_control_n10; assert_in_delta(1, worksheet.control_n10, 0.001); end
  def test_control_o10; assert_in_epsilon(4, worksheet.control_o10, 0.001); end
  def test_control_p10; assert_in_epsilon(1.3, worksheet.control_p10, 0.001); end
  def test_control_q10; assert_in_epsilon(2.7, worksheet.control_q10, 0.001); end
  def test_control_r10; assert_in_epsilon(1.4, worksheet.control_r10, 0.001); end
  def test_control_s10; assert_in_epsilon(1.5, worksheet.control_s10, 0.001); end
  def test_control_t10; assert_in_delta(1, worksheet.control_t10, 0.001); end
  def test_control_u10; assert_in_epsilon(2.3, worksheet.control_u10, 0.001); end
  def test_control_v10; assert_in_epsilon(1.3, worksheet.control_v10, 0.001); end
  def test_control_w10; assert_in_delta(1, worksheet.control_w10, 0.001); end
  def test_control_x10; assert_in_epsilon(1.6, worksheet.control_x10, 0.001); end
  def test_control_y10; assert_in_epsilon(1.9, worksheet.control_y10, 0.001); end
  def test_control_bo10; assert_equal("~4,400 onshore wind turbines in 2025, reducing to zero as decommissioned sites are not replanted", worksheet.control_bo10); end
  def test_control_bp10; assert_equal("~8,000 onshore wind turbines in 2050, delivering ~50 TWh/yr. ", worksheet.control_bp10); end
  def test_control_bq10; assert_equal("~13,000 onshore wind turbines in 2050, delivering ~80 TWh/yr", worksheet.control_bq10); end
  def test_control_br10; assert_equal("~20,000 onshore wind turbines in 2050, delivering ~130 TWh/yr", worksheet.control_br10); end
  def test_control_d11; assert_equal("Wave", worksheet.control_d11); end
  def test_control_f11; assert_in_epsilon(4, worksheet.control_f11, 0.001); end
  def test_control_h11; assert_equal("None in 2050", worksheet.control_h11); end
  def test_control_i11; assert_equal("~300km of wave farms", worksheet.control_i11); end
  def test_control_j11; assert_equal("~600km of wave farms", worksheet.control_j11); end
  def test_control_k11; assert_equal("~900km of wave farms", worksheet.control_k11); end
  def test_control_m11; assert_in_delta(1, worksheet.control_m11, 0.001); end
  def test_control_n11; assert_in_delta(1, worksheet.control_n11, 0.001); end
  def test_control_o11; assert_in_epsilon(4, worksheet.control_o11, 0.001); end
  def test_control_p11; assert_in_epsilon(2, worksheet.control_p11, 0.001); end
  def test_control_q11; assert_in_epsilon(1.6, worksheet.control_q11, 0.001); end
  def test_control_r11; assert_in_delta(1, worksheet.control_r11, 0.001); end
  def test_control_s11; assert_in_delta(1, worksheet.control_s11, 0.001); end
  def test_control_t11; assert_in_delta(1, worksheet.control_t11, 0.001); end
  def test_control_u11; assert_in_epsilon(4, worksheet.control_u11, 0.001); end
  def test_control_v11; assert_in_epsilon(2.5, worksheet.control_v11, 0.001); end
  def test_control_w11; assert_in_epsilon(4, worksheet.control_w11, 0.001); end
  def test_control_x11; assert_in_delta(1, worksheet.control_x11, 0.001); end
  def test_control_y11; assert_in_delta(1, worksheet.control_y11, 0.001); end
  def test_control_bo11; assert_equal("None in 2050", worksheet.control_bo11); end
  def test_control_bp11; assert_equal("~300km of wave farms", worksheet.control_bp11); end
  def test_control_bq11; assert_equal("~600km of wave farms", worksheet.control_bq11); end
  def test_control_br11; assert_equal("~900km of wave farms", worksheet.control_br11); end
  def test_control_d12; assert_equal("Tidal Stream", worksheet.control_d12); end
  def test_control_f12; assert_in_epsilon(4, worksheet.control_f12, 0.001); end
  def test_control_h12; assert_equal("None in 2050", worksheet.control_h12); end
  def test_control_i12; assert_equal("1,000 tidal stream turbines", worksheet.control_i12); end
  def test_control_j12; assert_equal("4,700 tidal stream turbines", worksheet.control_j12); end
  def test_control_k12; assert_equal("10,600 tidal stream turbines", worksheet.control_k12); end
  def test_control_m12; assert_in_delta(1, worksheet.control_m12, 0.001); end
  def test_control_n12; assert_in_delta(1, worksheet.control_n12, 0.001); end
  def test_control_o12; assert_in_epsilon(4, worksheet.control_o12, 0.001); end
  def test_control_p12; assert_in_epsilon(2.5, worksheet.control_p12, 0.001); end
  def test_control_q12; assert_in_epsilon(2, worksheet.control_q12, 0.001); end
  def test_control_r12; assert_in_delta(1, worksheet.control_r12, 0.001); end
  def test_control_s12; assert_in_delta(1, worksheet.control_s12, 0.001); end
  def test_control_t12; assert_in_delta(1, worksheet.control_t12, 0.001); end
  def test_control_u12; assert_in_epsilon(4, worksheet.control_u12, 0.001); end
  def test_control_v12; assert_in_epsilon(2.5, worksheet.control_v12, 0.001); end
  def test_control_w12; assert_in_epsilon(4, worksheet.control_w12, 0.001); end
  def test_control_x12; assert_in_epsilon(2, worksheet.control_x12, 0.001); end
  def test_control_y12; assert_in_delta(1, worksheet.control_y12, 0.001); end
  def test_control_bo12; assert_equal("None in 2050", worksheet.control_bo12); end
  def test_control_bp12; assert_equal("1,000 tidal stream turbines", worksheet.control_bp12); end
  def test_control_bq12; assert_equal("4,700 tidal stream turbines", worksheet.control_bq12); end
  def test_control_br12; assert_equal("10,600 tidal stream turbines", worksheet.control_br12); end
  def test_control_d13; assert_equal("Tidal Range", worksheet.control_d13); end
  def test_control_f13; assert_in_epsilon(4, worksheet.control_f13, 0.001); end
  def test_control_h13; assert_equal("None in  2050", worksheet.control_h13); end
  def test_control_i13; assert_equal("3 small tidal range schemes", worksheet.control_i13); end
  def test_control_j13; assert_equal("4 tidal range schemes", worksheet.control_j13); end
  def test_control_k13; assert_equal("8 tidal range schemes", worksheet.control_k13); end
  def test_control_m13; assert_in_delta(1, worksheet.control_m13, 0.001); end
  def test_control_n13; assert_in_delta(1, worksheet.control_n13, 0.001); end
  def test_control_o13; assert_in_epsilon(4, worksheet.control_o13, 0.001); end
  def test_control_p13; assert_in_epsilon(2.5, worksheet.control_p13, 0.001); end
  def test_control_q13; assert_in_epsilon(2, worksheet.control_q13, 0.001); end
  def test_control_r13; assert_in_delta(1, worksheet.control_r13, 0.001); end
  def test_control_s13; assert_in_delta(1, worksheet.control_s13, 0.001); end
  def test_control_t13; assert_in_delta(1, worksheet.control_t13, 0.001); end
  def test_control_u13; assert_in_epsilon(3, worksheet.control_u13, 0.001); end
  def test_control_v13; assert_in_epsilon(2.5, worksheet.control_v13, 0.001); end
  def test_control_w13; assert_in_epsilon(4, worksheet.control_w13, 0.001); end
  def test_control_x13; assert_in_delta(1, worksheet.control_x13, 0.001); end
  def test_control_y13; assert_in_epsilon(2.9, worksheet.control_y13, 0.001); end
  def test_control_bo13; assert_equal("None in  2050", worksheet.control_bo13); end
  def test_control_bp13; assert_equal("3 small tidal range schemes", worksheet.control_bp13); end
  def test_control_bq13; assert_equal("4 tidal range schemes", worksheet.control_bq13); end
  def test_control_br13; assert_equal("8 tidal range schemes", worksheet.control_br13); end
  def test_control_d14; assert_equal("Biomass power stations", worksheet.control_d14); end
  def test_control_f14; assert_in_epsilon(4, worksheet.control_f14, 0.001); end
  def test_control_h14; assert_equal("Only plants built and under construction (0.6GW)", worksheet.control_h14); end
  def test_control_i14; assert_equal("8GW power stations by 2050 delivering 62TWh/yr", worksheet.control_i14); end
  def test_control_j14; assert_equal("12GW power stations by 2050 delivering 100TWh/yr", worksheet.control_j14); end
  def test_control_k14; assert_equal("Over 20GW installed capacity by 2050 delivering 180TWh/yr", worksheet.control_k14); end
  def test_control_m14; assert_in_delta(1, worksheet.control_m14, 0.001); end
  def test_control_n14; assert_in_delta(1, worksheet.control_n14, 0.001); end
  def test_control_o14; assert_in_epsilon(4, worksheet.control_o14, 0.001); end
  def test_control_p14; assert_in_delta(1, worksheet.control_p14, 0.001); end
  def test_control_q14; assert_in_delta(1, worksheet.control_q14, 0.001); end
  def test_control_r14; assert_in_delta(1, worksheet.control_r14, 0.001); end
  def test_control_s14; assert_in_delta(1, worksheet.control_s14, 0.001); end
  def test_control_t14; assert_in_delta(1, worksheet.control_t14, 0.001); end
  def test_control_u14; assert_in_delta(1, worksheet.control_u14, 0.001); end
  def test_control_v14; assert_in_delta(1, worksheet.control_v14, 0.001); end
  def test_control_w14; assert_in_delta(1, worksheet.control_w14, 0.001); end
  def test_control_x14; assert_in_delta(1, worksheet.control_x14, 0.001); end
  def test_control_y14; assert_in_delta(1, worksheet.control_y14, 0.001); end
  def test_control_bo14; assert_equal("Only existing biomass plants and those already under construction (0.6GW)", worksheet.control_bo14); end
  def test_control_bp14; assert_equal("8GW of biomass power stations by 2050 delivering 62TWh/yr", worksheet.control_bp14); end
  def test_control_bq14; assert_equal("12GW of biomass power stations by 2050 delivering 100TWh/yr", worksheet.control_bq14); end
  def test_control_br14; assert_equal("Over 20GW of biomass power stations by 2050 delivering 180TWh/yr", worksheet.control_br14); end
  def test_control_d15; assert_equal("Solar panels for electricity", worksheet.control_d15); end
  def test_control_f15; assert_in_epsilon(4, worksheet.control_f15, 0.001); end
  def test_control_h15; assert_equal("No significant solar PV capacity is installed", worksheet.control_h15); end
  def test_control_i15; assert_equal("4m2 of photovoltaic panels per person in 2050, supplying ~60 TWh/yr of electricity", worksheet.control_i15); end
  def test_control_j15; assert_equal(" 5.4m2 of photovoltaic panels per person in 2050, supplying ~80 TWh/yr", worksheet.control_j15); end
  def test_control_k15; assert_equal("9.5m2 of photovoltaic panels per person – all suitable roof and facade space used", worksheet.control_k15); end
  def test_control_m15; assert_in_delta(1, worksheet.control_m15, 0.001); end
  def test_control_n15; assert_in_delta(1, worksheet.control_n15, 0.001); end
  def test_control_o15; assert_in_epsilon(4, worksheet.control_o15, 0.001); end
  def test_control_p15; assert_in_delta(1, worksheet.control_p15, 0.001); end
  def test_control_q15; assert_in_epsilon(1.2, worksheet.control_q15, 0.001); end
  def test_control_r15; assert_in_delta(1, worksheet.control_r15, 0.001); end
  def test_control_s15; assert_in_delta(1, worksheet.control_s15, 0.001); end
  def test_control_t15; assert_in_delta(1, worksheet.control_t15, 0.001); end
  def test_control_u15; assert_in_epsilon(3.2, worksheet.control_u15, 0.001); end
  def test_control_v15; assert_in_epsilon(2, worksheet.control_v15, 0.001); end
  def test_control_w15; assert_in_delta(1, worksheet.control_w15, 0.001); end
  def test_control_x15; assert_in_epsilon(1.2, worksheet.control_x15, 0.001); end
  def test_control_y15; assert_in_epsilon(2.7, worksheet.control_y15, 0.001); end
  def test_control_bo15; assert_equal("No significant solar PV capacity is installed", worksheet.control_bo15); end
  def test_control_bp15; assert_equal("4m2 of photovoltaic panels per person in 2050, supplying ~60 TWh/yr of electricity", worksheet.control_bp15); end
  def test_control_bq15; assert_equal(" 5.4m2 of photovoltaic panels per person in 2050, supplying ~80 TWh/yr", worksheet.control_bq15); end
  def test_control_br15; assert_equal("9.5m2 of photovoltaic panels per person – all suitable roof and facade space used", worksheet.control_br15); end
  def test_control_d16; assert_equal("Solar panels for hot water", worksheet.control_d16); end
  def test_control_f16; assert_in_epsilon(4, worksheet.control_f16, 0.001); end
  def test_control_h16; assert_equal("As today, a negligible proportion of buildings have solar thermal in 2050", worksheet.control_h16); end
  def test_control_i16; assert_equal("~30% of suitable buildings get ~30% of their hot water from solar thermal", worksheet.control_i16); end
  def test_control_j16; assert_equal("All suitable buildings get ~30% of their hot water from solar thermal", worksheet.control_j16); end
  def test_control_k16; assert_equal("All suitable buildings get ~60% of their hot water from solar thermal", worksheet.control_k16); end
  def test_control_m16; assert_in_delta(1, worksheet.control_m16, 0.001); end
  def test_control_n16; assert_in_delta(1, worksheet.control_n16, 0.001); end
  def test_control_o16; assert_in_epsilon(4, worksheet.control_o16, 0.001); end
  def test_control_p16; assert_in_epsilon(2, worksheet.control_p16, 0.001); end
  def test_control_q16; assert_in_epsilon(1.8, worksheet.control_q16, 0.001); end
  def test_control_r16; assert_in_delta(1, worksheet.control_r16, 0.001); end
  def test_control_s16; assert_in_delta(1, worksheet.control_s16, 0.001); end
  def test_control_t16; assert_in_delta(1, worksheet.control_t16, 0.001); end
  def test_control_u16; assert_in_epsilon(2, worksheet.control_u16, 0.001); end
  def test_control_v16; assert_in_epsilon(3, worksheet.control_v16, 0.001); end
  def test_control_w16; assert_in_epsilon(3, worksheet.control_w16, 0.001); end
  def test_control_x16; assert_in_epsilon(1.9, worksheet.control_x16, 0.001); end
  def test_control_y16; assert_in_epsilon(1.6, worksheet.control_y16, 0.001); end
  def test_control_bo16; assert_equal("As today, a negligible proportion of buildings have solar thermal in 2050", worksheet.control_bo16); end
  def test_control_bp16; assert_equal("~30% of suitable buildings get ~30% of their hot water from solar thermal", worksheet.control_bp16); end
  def test_control_bq16; assert_equal("All suitable buildings get ~30% of their hot water from solar thermal", worksheet.control_bq16); end
  def test_control_br16; assert_equal("All suitable buildings get ~60% of their hot water from solar thermal", worksheet.control_br16); end
  def test_control_d17; assert_equal("Geothermal electricity", worksheet.control_d17); end
  def test_control_f17; assert_in_epsilon(4, worksheet.control_f17, 0.001); end
  def test_control_h17; assert_equal("No deployment of geothermal electricity generation", worksheet.control_h17); end
  def test_control_i17; assert_equal("Supply of geothermal electricity grows slowly to 7 TWh/yr in 2035 and is sustained", worksheet.control_i17); end
  def test_control_j17; assert_equal("Supply grows quickly reaching 21 TWh/yr by 2030 and is sustained", worksheet.control_j17); end
  def test_control_k17; assert_equal("Supply grows rapidly reaching 35 TWh/yr by 2030 and is sustained", worksheet.control_k17); end
  def test_control_m17; assert_in_delta(1, worksheet.control_m17, 0.001); end
  def test_control_n17; assert_in_delta(1, worksheet.control_n17, 0.001); end
  def test_control_o17; assert_in_epsilon(4, worksheet.control_o17, 0.001); end
  def test_control_p17; assert_in_delta(1, worksheet.control_p17, 0.001); end
  def test_control_q17; assert_in_delta(1, worksheet.control_q17, 0.001); end
  def test_control_r17; assert_in_delta(1, worksheet.control_r17, 0.001); end
  def test_control_s17; assert_in_delta(1, worksheet.control_s17, 0.001); end
  def test_control_t17; assert_in_delta(1, worksheet.control_t17, 0.001); end
  def test_control_u17; assert_in_epsilon(3, worksheet.control_u17, 0.001); end
  def test_control_v17; assert_in_epsilon(3, worksheet.control_v17, 0.001); end
  def test_control_w17; assert_in_epsilon(4, worksheet.control_w17, 0.001); end
  def test_control_x17; assert_in_delta(1, worksheet.control_x17, 0.001); end
  def test_control_y17; assert_in_epsilon(2.6, worksheet.control_y17, 0.001); end
  def test_control_bo17; assert_equal("No deployment of geothermal electricity generation", worksheet.control_bo17); end
  def test_control_bp17; assert_equal("Supply of geothermal electricity grows slowly to 7 TWh/yr in 2035 and is sustained", worksheet.control_bp17); end
  def test_control_bq17; assert_equal("Supply of geothermal electricity grows quickly reaching 21 TWh/yr by 2030 and is sustained", worksheet.control_bq17); end
  def test_control_br17; assert_equal("Supply of geothermal electricity grows rapidly reaching 35 TWh/yr by 2030 and is sustained", worksheet.control_br17); end
  def test_control_d18; assert_equal("Hydroelectric power stations", worksheet.control_d18); end
  def test_control_f18; assert_in_epsilon(4, worksheet.control_f18, 0.001); end
  def test_control_h18; assert_equal("Supply of electricity is maintained at current levels of 5 TWh/yr", worksheet.control_h18); end
  def test_control_i18; assert_equal("Supply grows slowly, reaching 7 TWh/yr by 2050", worksheet.control_i18); end
  def test_control_j18; assert_equal("Supply grows more quickly, reaching 8 TWh/yr by 2030 and is sustained", worksheet.control_j18); end
  def test_control_k18; assert_equal("Supply grows rapidly reaching 13 TWh/yr by 2035 and is sustained", worksheet.control_k18); end
  def test_control_m18; assert_in_delta(1, worksheet.control_m18, 0.001); end
  def test_control_n18; assert_in_delta(1, worksheet.control_n18, 0.001); end
  def test_control_o18; assert_in_epsilon(4, worksheet.control_o18, 0.001); end
  def test_control_p18; assert_in_epsilon(1.5, worksheet.control_p18, 0.001); end
  def test_control_q18; assert_in_epsilon(2, worksheet.control_q18, 0.001); end
  def test_control_r18; assert_in_delta(1, worksheet.control_r18, 0.001); end
  def test_control_s18; assert_in_delta(1, worksheet.control_s18, 0.001); end
  def test_control_t18; assert_in_delta(1, worksheet.control_t18, 0.001); end
  def test_control_u18; assert_in_epsilon(3.4, worksheet.control_u18, 0.001); end
  def test_control_v18; assert_in_epsilon(2, worksheet.control_v18, 0.001); end
  def test_control_w18; assert_in_delta(1, worksheet.control_w18, 0.001); end
  def test_control_x18; assert_in_epsilon(1.9, worksheet.control_x18, 0.001); end
  def test_control_y18; assert_in_epsilon(1.9, worksheet.control_y18, 0.001); end
  def test_control_bo18; assert_equal("Supply of hydroelectricity is maintained at current levels of 5 TWh/yr", worksheet.control_bo18); end
  def test_control_bp18; assert_equal("Supply of hydroelectricity grows slowly, reaching 7 TWh/yr by 2050", worksheet.control_bp18); end
  def test_control_bq18; assert_equal("Supply of hydroelectricity grows more quickly, reaching 8 TWh/yr by 2030 and is sustained", worksheet.control_bq18); end
  def test_control_br18; assert_equal("Supply of hydroelectricity grows rapidly reaching 13 TWh/yr by 2035 and is sustained", worksheet.control_br18); end
  def test_control_d19; assert_equal("Small-scale wind", worksheet.control_d19); end
  def test_control_f19; assert_in_epsilon(4, worksheet.control_f19, 0.001); end
  def test_control_h19; assert_equal("As today, no discernable supply of electricity from micro-wind turbines", worksheet.control_h19); end
  def test_control_i19; assert_equal("Supply increases to 1.3 TWh/yr by 2020 and is sustained", worksheet.control_i19); end
  def test_control_j19; assert_equal("Installed in all ~450,000 suitable domestic properties; supplies 3.5 TWh/year from 2020", worksheet.control_j19); end
  def test_control_k19; assert_equal("Installed in all suitable domestic and non-domestic sties; 8.9 TWh/year from 2020", worksheet.control_k19); end
  def test_control_m19; assert_in_delta(1, worksheet.control_m19, 0.001); end
  def test_control_n19; assert_in_delta(1, worksheet.control_n19, 0.001); end
  def test_control_o19; assert_in_epsilon(4, worksheet.control_o19, 0.001); end
  def test_control_p19; assert_in_delta(1, worksheet.control_p19, 0.001); end
  def test_control_q19; assert_in_delta(1, worksheet.control_q19, 0.001); end
  def test_control_r19; assert_in_delta(1, worksheet.control_r19, 0.001); end
  def test_control_s19; assert_in_delta(1, worksheet.control_s19, 0.001); end
  def test_control_t19; assert_in_delta(1, worksheet.control_t19, 0.001); end
  def test_control_u19; assert_in_delta(1, worksheet.control_u19, 0.001); end
  def test_control_v19; assert_in_delta(1, worksheet.control_v19, 0.001); end
  def test_control_w19; assert_in_delta(1, worksheet.control_w19, 0.001); end
  def test_control_x19; assert_in_delta(1, worksheet.control_x19, 0.001); end
  def test_control_y19; assert_in_delta(1, worksheet.control_y19, 0.001); end
  def test_control_bo19; assert_equal("As today, no discernable supply of electricity from micro-wind turbines", worksheet.control_bo19); end
  def test_control_bp19; assert_equal("Supply of electricity from micro wind turbines increases to 1.3 TWh/yr by 2020 and is sustained", worksheet.control_bp19); end
  def test_control_bq19; assert_equal("Micro wind turbines installed in all ~450,000 suitable domestic properties, supplying 3.5 TWh/year from 2020", worksheet.control_bq19); end
  def test_control_br19; assert_equal("Micro wind turbines installed in all suitable domestic and non-domestic sties, supplying 8.9 TWh/year from 2020", worksheet.control_br19); end
  def test_control_d20; assert_equal("Electricity imports", worksheet.control_d20); end
  def test_control_f20; assert_in_epsilon(4, worksheet.control_f20, 0.001); end
  def test_control_h20; assert_equal("No electricity imports, other than for balancing", worksheet.control_h20); end
  def test_control_i20; assert_equal("30 TWh/yr of electricity imported from Southern Europe", worksheet.control_i20); end
  def test_control_j20; assert_equal("70 TWh/yr imported from UK 10% share of international desert solar project ", worksheet.control_j20); end
  def test_control_k20; assert_equal("140 TWh/yr imported from UK 20% share of international desert solar project", worksheet.control_k20); end
  def test_control_m20; assert_in_delta(1, worksheet.control_m20, 0.001); end
  def test_control_n20; assert_in_delta(1, worksheet.control_n20, 0.001); end
  def test_control_o20; assert_in_epsilon(4, worksheet.control_o20, 0.001); end
  def test_control_p20; assert_in_epsilon(1.8, worksheet.control_p20, 0.001); end
  def test_control_q20; assert_in_delta(1, worksheet.control_q20, 0.001); end
  def test_control_r20; assert_in_delta(1, worksheet.control_r20, 0.001); end
  def test_control_s20; assert_in_epsilon(1.5, worksheet.control_s20, 0.001); end
  def test_control_t20; assert_in_delta(1, worksheet.control_t20, 0.001); end
  def test_control_u20; assert_in_delta(1, worksheet.control_u20, 0.001); end
  def test_control_v20; assert_in_epsilon(3, worksheet.control_v20, 0.001); end
  def test_control_w20; assert_in_delta(1, worksheet.control_w20, 0.001); end
  def test_control_x20; assert_in_delta(1, worksheet.control_x20, 0.001); end
  def test_control_y20; assert_in_epsilon(1.9, worksheet.control_y20, 0.001); end
  def test_control_bo20; assert_equal("No electricity imports, other than for balancing", worksheet.control_bo20); end
  def test_control_bp20; assert_equal("30 TWh/yr of electricity imported from Southern Europe", worksheet.control_bp20); end
  def test_control_bq20; assert_equal("70 TWh/yr of electricity imported from a 10% share of an internationally coordinated desert solar project ", worksheet.control_bq20); end
  def test_control_br20; assert_equal("140 TWh/yr of electricity imported from a 20% share of an internationally coordinated desert solar project", worksheet.control_br20); end
  def test_control_d21; assert_equal("Agriculture and land use", worksheet.control_d21); end
  def test_control_d22; assert_equal("Land dedicated to bioenergy", worksheet.control_d22); end
  def test_control_f22; assert_in_epsilon(4, worksheet.control_f22, 0.001); end
  def test_control_h22; assert_equal("Energy crops and food production similar to today", worksheet.control_h22); end
  def test_control_i22; assert_equal("5% of land used for energy crops", worksheet.control_i22); end
  def test_control_j22; assert_equal("10% of land used for energy crops", worksheet.control_j22); end
  def test_control_k22; assert_equal("17% of land used for energy crops", worksheet.control_k22); end
  def test_control_m22; assert_in_delta(1, worksheet.control_m22, 0.001); end
  def test_control_n22; assert_in_delta(1, worksheet.control_n22, 0.001); end
  def test_control_o22; assert_in_epsilon(4, worksheet.control_o22, 0.001); end
  def test_control_p22; assert_in_epsilon(3, worksheet.control_p22, 0.001); end
  def test_control_q22; assert_in_epsilon(2, worksheet.control_q22, 0.001); end
  def test_control_r22; assert_in_epsilon(4, worksheet.control_r22, 0.001); end
  def test_control_s22; assert_in_epsilon(3, worksheet.control_s22, 0.001); end
  def test_control_t22; assert_in_epsilon(3, worksheet.control_t22, 0.001); end
  def test_control_u22; assert_in_epsilon(2, worksheet.control_u22, 0.001); end
  def test_control_v22; assert_in_epsilon(2, worksheet.control_v22, 0.001); end
  def test_control_w22; assert_in_epsilon(3, worksheet.control_w22, 0.001); end
  def test_control_x22; assert_in_epsilon(3, worksheet.control_x22, 0.001); end
  def test_control_y22; assert_in_epsilon(3, worksheet.control_y22, 0.001); end
  def test_control_bo22; assert_equal("Energy crops and food production similar to today", worksheet.control_bo22); end
  def test_control_bp22; assert_equal("5% of UK land used for energy crops", worksheet.control_bp22); end
  def test_control_bq22; assert_equal("10% of UK land used for energy crops", worksheet.control_bq22); end
  def test_control_br22; assert_equal("17% of UK land used for energy crops", worksheet.control_br22); end
  def test_control_d23; assert_equal("Livestock and their management", worksheet.control_d23); end
  def test_control_f23; assert_in_epsilon(4, worksheet.control_f23, 0.001); end
  def test_control_h23; assert_equal("Livestock numbers increase by 10%", worksheet.control_h23); end
  def test_control_i23; assert_equal("Livestock numbers same as today", worksheet.control_i23); end
  def test_control_j23; assert_equal("Livestock numbers decrease by 10%", worksheet.control_j23); end
  def test_control_k23; assert_equal("Livestock numbers decrease by 20%", worksheet.control_k23); end
  def test_control_m23; assert_in_delta(1, worksheet.control_m23, 0.001); end
  def test_control_n23; assert_in_delta(1, worksheet.control_n23, 0.001); end
  def test_control_o23; assert_in_epsilon(4, worksheet.control_o23, 0.001); end
  def test_control_p23; assert_in_epsilon(2, worksheet.control_p23, 0.001); end
  def test_control_q23; assert_in_epsilon(2, worksheet.control_q23, 0.001); end
  def test_control_r23; assert_in_epsilon(2, worksheet.control_r23, 0.001); end
  def test_control_s23; assert_in_epsilon(2, worksheet.control_s23, 0.001); end
  def test_control_t23; assert_in_epsilon(2, worksheet.control_t23, 0.001); end
  def test_control_u23; assert_in_epsilon(4, worksheet.control_u23, 0.001); end
  def test_control_v23; assert_in_epsilon(3, worksheet.control_v23, 0.001); end
  def test_control_w23; assert_in_epsilon(4, worksheet.control_w23, 0.001); end
  def test_control_x23; assert_in_epsilon(2, worksheet.control_x23, 0.001); end
  def test_control_y23; assert_in_epsilon(4, worksheet.control_y23, 0.001); end
  def test_control_bo23; assert_equal("Livestock numbers increase by 10%", worksheet.control_bo23); end
  def test_control_bp23; assert_equal("Livestock numbers same as today", worksheet.control_bp23); end
  def test_control_bq23; assert_equal("Livestock numbers decrease by 10%", worksheet.control_bq23); end
  def test_control_br23; assert_equal("Livestock numbers decrease by 20%", worksheet.control_br23); end
  def test_control_d24; assert_equal("Volume of waste and recycling", worksheet.control_d24); end
  def test_control_f24; assert_equal("D", worksheet.control_f24); end
  def test_control_h24; assert_equal("Quantity of waste increases 50%; Small increase in rates of recycling and EFW.", worksheet.control_h24); end
  def test_control_i24; assert_equal("Quantity of waste increases 20%; Increase in rates of recycling and EFW.", worksheet.control_i24); end
  def test_control_j24; assert_equal("Quantity of waste increases 33%; Significant increase in rates of recycling and EFW through innovation.", worksheet.control_j24); end
  def test_control_k24; assert_equal("Quantity of waste decreases 20%; Significant increase in rate of recycling.", worksheet.control_k24); end
  def test_control_m24; assert_in_delta(1, worksheet.control_m24, 0.001); end
  def test_control_n24; assert_in_delta(1, worksheet.control_n24, 0.001); end
  def test_control_o24; assert_in_epsilon(3, worksheet.control_o24, 0.001); end
  def test_control_p24; assert_in_epsilon(2, worksheet.control_p24, 0.001); end
  def test_control_q24; assert_in_epsilon(2, worksheet.control_q24, 0.001); end
  def test_control_r24; assert_in_epsilon(2, worksheet.control_r24, 0.001); end
  def test_control_s24; assert_in_epsilon(2, worksheet.control_s24, 0.001); end
  def test_control_t24; assert_in_epsilon(4, worksheet.control_t24, 0.001); end
  def test_control_u24; assert_in_epsilon(4, worksheet.control_u24, 0.001); end
  def test_control_v24; assert_in_epsilon(3, worksheet.control_v24, 0.001); end
  def test_control_w24; assert_in_epsilon(3, worksheet.control_w24, 0.001); end
  def test_control_x24; assert_in_epsilon(2, worksheet.control_x24, 0.001); end
  def test_control_y24; assert_in_epsilon(3, worksheet.control_y24, 0.001); end
  def test_control_bo24; assert_equal("Overall quantity of waste increases 50% to 2050; 21% increase in recycling rate and 44% increase in rate of energy from waste. 24% of waste is sent to landfill", worksheet.control_bo24); end
  def test_control_bp24; assert_equal("Overall quantity of waste increases almost 20% by 2050; recycling and energy from waste rates increase by 36% and 89% respectively. 11% of waste is sent to landfill.", worksheet.control_bp24); end
  def test_control_bq24; assert_equal("Overall quantity of waste increases 33%; waste is handled through high-tech and industry-led approaches; by 2050, recycling and energy from waste rates increase by 36% and 89% respectively. Only 2% is sent to landfill.", worksheet.control_bq24); end
  def test_control_br24; assert_equal("Quantity of waste decreases 20% by 2050; recycling and energy from waste increase by 70% and 7% respectively; by 2050, 3% of waste sent to landfill.", worksheet.control_br24); end
  def test_control_d25; assert_equal("Marine algae", worksheet.control_d25); end
  def test_control_f25; assert_in_epsilon(4, worksheet.control_f25, 0.001); end
  def test_control_h25; assert_equal("No development of macro-algae cultivation", worksheet.control_h25); end
  def test_control_i25; assert_equal("Area same as half of natural reserve used, delivering ~4 TWh/yr", worksheet.control_i25); end
  def test_control_j25; assert_equal("Area same as all of natural reserve used, delivering ~9 TWh/yr", worksheet.control_j25); end
  def test_control_k25; assert_equal("Area same as four times natural reserve used, delivering ~46 TWh/yr", worksheet.control_k25); end
  def test_control_m25; assert_in_delta(1, worksheet.control_m25, 0.001); end
  def test_control_n25; assert_in_delta(1, worksheet.control_n25, 0.001); end
  def test_control_o25; assert_in_epsilon(4, worksheet.control_o25, 0.001); end
  def test_control_p25; assert_in_delta(1, worksheet.control_p25, 0.001); end
  def test_control_q25; assert_in_delta(1, worksheet.control_q25, 0.001); end
  def test_control_r25; assert_in_epsilon(3, worksheet.control_r25, 0.001); end
  def test_control_s25; assert_in_delta(1, worksheet.control_s25, 0.001); end
  def test_control_t25; assert_in_delta(1, worksheet.control_t25, 0.001); end
  def test_control_u25; assert_in_delta(1, worksheet.control_u25, 0.001); end
  def test_control_v25; assert_in_delta(1, worksheet.control_v25, 0.001); end
  def test_control_w25; assert_in_epsilon(3, worksheet.control_w25, 0.001); end
  def test_control_x25; assert_in_epsilon(2, worksheet.control_x25, 0.001); end
  def test_control_y25; assert_in_delta(1, worksheet.control_y25, 0.001); end
  def test_control_bo25; assert_equal("No development of macro-algae cultivation", worksheet.control_bo25); end
  def test_control_bp25; assert_equal("Macro algae covering the same area as half of natural reserve used, delivering ~4 TWh/yr", worksheet.control_bp25); end
  def test_control_bq25; assert_equal("Macro algae covering the same area as all of natural reserve used, delivering ~9 TWh/yr", worksheet.control_bq25); end
  def test_control_br25; assert_equal("Macro algae covering the same area as four times natural reserve used, delivering ~46 TWh/yr", worksheet.control_br25); end
  def test_control_d26; assert_equal("Type of fuels from biomass", worksheet.control_d26); end
  def test_control_f26; assert_equal("D", worksheet.control_f26); end
  def test_control_h26; assert_equal("Biomass converted to a mixture of solid, liquid and gas biofuels", worksheet.control_h26); end
  def test_control_i26; assert_equal("Biomass mainly converted to solid biofuel", worksheet.control_i26); end
  def test_control_j26; assert_equal("Biomass mainly converted to liquid biofuel", worksheet.control_j26); end
  def test_control_k26; assert_equal("Biomass mainly converted to biogas fuel", worksheet.control_k26); end
  def test_control_m26; assert_in_delta(1, worksheet.control_m26, 0.001); end
  def test_control_n26; assert_in_delta(1, worksheet.control_n26, 0.001); end
  def test_control_o26; assert_in_epsilon(2, worksheet.control_o26, 0.001); end
  def test_control_p26; assert_in_delta(1, worksheet.control_p26, 0.001); end
  def test_control_q26; assert_in_delta(1, worksheet.control_q26, 0.001); end
  def test_control_r26; assert_in_epsilon(3, worksheet.control_r26, 0.001); end
  def test_control_s26; assert_in_epsilon(2, worksheet.control_s26, 0.001); end
  def test_control_t26; assert_in_epsilon(3, worksheet.control_t26, 0.001); end
  def test_control_u26; assert_in_delta(1, worksheet.control_u26, 0.001); end
  def test_control_v26; assert_in_epsilon(2, worksheet.control_v26, 0.001); end
  def test_control_w26; assert_in_epsilon(2, worksheet.control_w26, 0.001); end
  def test_control_x26; assert_in_epsilon(2, worksheet.control_x26, 0.001); end
  def test_control_y26; assert_in_delta(1, worksheet.control_y26, 0.001); end
  def test_control_bo26; assert_equal("Biomass converted to a mixture of solid, liquid and gas biofuels", worksheet.control_bo26); end
  def test_control_bp26; assert_equal("Biomass mainly converted to solid biofuel", worksheet.control_bp26); end
  def test_control_bq26; assert_equal("Biomass mainly converted to liquid biofuel", worksheet.control_bq26); end
  def test_control_br26; assert_equal("Biomass mainly converted to biogas fuel", worksheet.control_br26); end
  def test_control_d27; assert_equal("Bioenergy imports", worksheet.control_d27); end
  def test_control_f27; assert_in_epsilon(4, worksheet.control_f27, 0.001); end
  def test_control_h27; assert_equal("Imported biofuel declines from ~ 4 TWh/yr currently to zero", worksheet.control_h27); end
  def test_control_i27; assert_equal("Up to 70 TWh/yr of imported bioenergy in 2050", worksheet.control_i27); end
  def test_control_j27; assert_equal("Up to 140 TWh/yr of imported bioenergy in 2050", worksheet.control_j27); end
  def test_control_k27; assert_equal("Up to 280 TWh/yr of imported bioenergy in 2050", worksheet.control_k27); end
  def test_control_m27; assert_in_delta(1, worksheet.control_m27, 0.001); end
  def test_control_n27; assert_in_delta(1, worksheet.control_n27, 0.001); end
  def test_control_o27; assert_in_epsilon(4, worksheet.control_o27, 0.001); end
  def test_control_p27; assert_in_epsilon(2.5, worksheet.control_p27, 0.001); end
  def test_control_q27; assert_in_epsilon(2, worksheet.control_q27, 0.001); end
  def test_control_r27; assert_in_epsilon(3.7, worksheet.control_r27, 0.001); end
  def test_control_s27; assert_in_epsilon(3, worksheet.control_s27, 0.001); end
  def test_control_t27; assert_in_epsilon(2.1, worksheet.control_t27, 0.001); end
  def test_control_u27; assert_in_delta(1, worksheet.control_u27, 0.001); end
  def test_control_v27; assert_in_epsilon(2, worksheet.control_v27, 0.001); end
  def test_control_w27; assert_in_delta(1, worksheet.control_w27, 0.001); end
  def test_control_x27; assert_in_epsilon(2, worksheet.control_x27, 0.001); end
  def test_control_y27; assert_in_delta(1, worksheet.control_y27, 0.001); end
  def test_control_bo27; assert_equal("Imported biofuel declines from ~ 4 TWh/yr currently to zero", worksheet.control_bo27); end
  def test_control_bp27; assert_equal("Up to 70 TWh/yr of imported bioenergy in 2050", worksheet.control_bp27); end
  def test_control_bq27; assert_equal("Up to 140 TWh/yr of imported bioenergy in 2050", worksheet.control_bq27); end
  def test_control_br27; assert_equal("Up to 280 TWh/yr of imported bioenergy in 2050", worksheet.control_br27); end
  def test_control_d29; assert_equal("Domestic passenger transport", worksheet.control_d29); end
  def test_control_d30; assert_equal("Domestic transport behaviour", worksheet.control_d30); end
  def test_control_f30; assert_in_epsilon(4, worksheet.control_f30, 0.001); end
  def test_control_h30; assert_equal("In 2050, individuals travel 9% further than today. No noticeable modal shift.", worksheet.control_h30); end
  def test_control_i30; assert_equal("Individuals travel distance unchanged from today, cars and vans are 80% of 2050 passenger mileage", worksheet.control_i30); end
  def test_control_j30; assert_equal("In 2050, individuals travel distance 10% lower than today. Signficant shift to public transport. Levels of cycling higher than today.", worksheet.control_j30); end
  def test_control_k30; assert_equal("In 2050, individuals travel distance 20% lower than today. Signficant shift to public transport. Levels of cycling comparable with those in the Netherlands.", worksheet.control_k30); end
  def test_control_m30; assert_in_delta(1, worksheet.control_m30, 0.001); end
  def test_control_n30; assert_in_epsilon(4, worksheet.control_n30, 0.001); end
  def test_control_o30; assert_in_delta(1, worksheet.control_o30, 0.001); end
  def test_control_p30; assert_in_epsilon(4, worksheet.control_p30, 0.001); end
  def test_control_q30; assert_in_epsilon(4, worksheet.control_q30, 0.001); end
  def test_control_r30; assert_in_epsilon(2, worksheet.control_r30, 0.001); end
  def test_control_s30; assert_in_epsilon(3, worksheet.control_s30, 0.001); end
  def test_control_t30; assert_in_epsilon(4, worksheet.control_t30, 0.001); end
  def test_control_u30; assert_in_epsilon(4, worksheet.control_u30, 0.001); end
  def test_control_v30; assert_in_epsilon(4, worksheet.control_v30, 0.001); end
  def test_control_w30; assert_in_epsilon(3, worksheet.control_w30, 0.001); end
  def test_control_x30; assert_in_epsilon(3, worksheet.control_x30, 0.001); end
  def test_control_y30; assert_in_epsilon(3, worksheet.control_y30, 0.001); end
  def test_control_bo30; assert_equal("In 2050, individuals travel 9% further than today. No noticeable modal shift.", worksheet.control_bo30); end
  def test_control_bp30; assert_equal("Individuals travel 7% further than today, cars and vans are 80% of 2050 passenger mileage", worksheet.control_bp30); end
  def test_control_bq30; assert_equal("Individuals travel 7% further than today; cars and vans 74% of 2050 passenger mileage", worksheet.control_bq30); end
  def test_control_br30; assert_equal("In 2050, individuals travel the same distance as today. Signficant shift to public transport.", worksheet.control_br30); end
  def test_control_d31; assert_equal("Shift to zero emission transport", worksheet.control_d31); end
  def test_control_f31; assert_in_epsilon(4, worksheet.control_f31, 0.001); end
  def test_control_h31; assert_equal("By 2050, 20% plug in hybrid electric cars; 2.5% zero emission cars.", worksheet.control_h31); end
  def test_control_i31; assert_equal("By 2050, 54% plug-in hybrid vehicles; 11%  zero emission vehicles, all buses hybrids.", worksheet.control_i31); end
  def test_control_j31; assert_equal("By 2050, 32% plug-in hybrid vehicles; 48% zero emission vehicles; 22% buses electric.", worksheet.control_j31); end
  def test_control_k31; assert_equal("By 2050 100%  zero emission vehiclesl; all passenger trains electrified; 50% bus electrified ", worksheet.control_k31); end
  def test_control_m31; assert_in_delta(1, worksheet.control_m31, 0.001); end
  def test_control_n31; assert_in_epsilon(4, worksheet.control_n31, 0.001); end
  def test_control_o31; assert_in_delta(1, worksheet.control_o31, 0.001); end
  def test_control_p31; assert_in_epsilon(3, worksheet.control_p31, 0.001); end
  def test_control_q31; assert_in_epsilon(4, worksheet.control_q31, 0.001); end
  def test_control_r31; assert_in_epsilon(3, worksheet.control_r31, 0.001); end
  def test_control_s31; assert_in_epsilon(2, worksheet.control_s31, 0.001); end
  def test_control_t31; assert_in_epsilon(3, worksheet.control_t31, 0.001); end
  def test_control_u31; assert_in_epsilon(4, worksheet.control_u31, 0.001); end
  def test_control_v31; assert_in_epsilon(4, worksheet.control_v31, 0.001); end
  def test_control_w31; assert_in_epsilon(4, worksheet.control_w31, 0.001); end
  def test_control_x31; assert_in_epsilon(3, worksheet.control_x31, 0.001); end
  def test_control_y31; assert_in_epsilon(3, worksheet.control_y31, 0.001); end
  def test_control_bo31; assert_equal("By 2050, 20% plug in hybrid electric cars; 2.5% zero emission cars.", worksheet.control_bo31); end
  def test_control_bp31; assert_equal("By 2050, 35% conventional petrol or diesel engine cars; 54% plug-in hybrid vehicles; 11%  zero emission vehicles; all buses hybrids; 73% of passenger railway is electrifi", worksheet.control_bp31); end
  def test_control_bq31; assert_equal("By 2050, 20% conventional combustion engine cars, with 32% in plug-in hybrid vehicles and 48% in zero emission vehicles: 22% of bus travel fully electric or fuel cell electric ", worksheet.control_bq31); end
  def test_control_br31; assert_equal("By 2050 100%  electric motor or hydrogen fuel cell; all passenger trains electrified; 50% bus  electrified ", worksheet.control_br31); end
  def test_control_d32; assert_equal("Choice of fuel cells or batteries", worksheet.control_d32); end
  def test_control_f32; assert_equal("D", worksheet.control_f32); end
  def test_control_h32; assert_equal("100% of zero emission cars use batteries by 2050", worksheet.control_h32); end
  def test_control_i32; assert_equal("Among zero emission cars, 80% use batteries and 20% use fuel cells by 2050", worksheet.control_i32); end
  def test_control_j32; assert_equal("Among zero emission cars, 20% use batteries and 80% use fuel cells by 2050", worksheet.control_j32); end
  def test_control_k32; assert_equal("100% of zero emission cars use fuel cells by 2050", worksheet.control_k32); end
  def test_control_m32; assert_in_delta(1, worksheet.control_m32, 0.001); end
  def test_control_n32; assert_in_epsilon(2, worksheet.control_n32, 0.001); end
  def test_control_o32; assert_in_epsilon(2, worksheet.control_o32, 0.001); end
  def test_control_p32; assert_in_delta(1, worksheet.control_p32, 0.001); end
  def test_control_q32; assert_in_epsilon(2, worksheet.control_q32, 0.001); end
  def test_control_r32; assert_in_epsilon(2, worksheet.control_r32, 0.001); end
  def test_control_s32; assert_in_epsilon(2, worksheet.control_s32, 0.001); end
  def test_control_t32; assert_in_delta(1, worksheet.control_t32, 0.001); end
  def test_control_u32; assert_in_epsilon(2, worksheet.control_u32, 0.001); end
  def test_control_v32; assert_in_delta(1, worksheet.control_v32, 0.001); end
  def test_control_w32; assert_in_epsilon(2, worksheet.control_w32, 0.001); end
  def test_control_x32; assert_in_delta(1, worksheet.control_x32, 0.001); end
  def test_control_y32; assert_in_epsilon(2, worksheet.control_y32, 0.001); end
  def test_control_bo32; assert_equal("By 2050, 100% electric", worksheet.control_bo32); end
  def test_control_bp32; assert_equal("by 2050, 80% electric,  20% hydrogen fuel cell", worksheet.control_bp32); end
  def test_control_bq32; assert_equal("By 2050, 20% electric, 80% hydrogen fuel cell", worksheet.control_bq32); end
  def test_control_br32; assert_equal("By 2050, 100% hydrogen fuel cells", worksheet.control_br32); end
  def test_control_d33; assert_equal("Domestic freight", worksheet.control_d33); end
  def test_control_f33; assert_in_epsilon(4, worksheet.control_f33, 0.001); end
  def test_control_h33; assert_equal("Road haulage makes up 73% of distance, using conventional engines. Rail all diesel", worksheet.control_h33); end
  def test_control_i33; assert_equal("Some shift from road to rail and water, and more efficient engines", worksheet.control_i33); end
  def test_control_j33; assert_equal("Greater modal shift to rail and water; more efficient HGVs; more efficient logistics", worksheet.control_j33); end
  def test_control_k33; assert_equal("Road modal share falls to half; greater hybridisation. Rail freight is all electric ", worksheet.control_k33); end
  def test_control_m33; assert_in_delta(1, worksheet.control_m33, 0.001); end
  def test_control_n33; assert_in_epsilon(4, worksheet.control_n33, 0.001); end
  def test_control_o33; assert_in_delta(1, worksheet.control_o33, 0.001); end
  def test_control_p33; assert_in_epsilon(4, worksheet.control_p33, 0.001); end
  def test_control_q33; assert_in_epsilon(3, worksheet.control_q33, 0.001); end
  def test_control_r33; assert_in_epsilon(2, worksheet.control_r33, 0.001); end
  def test_control_s33; assert_in_epsilon(3, worksheet.control_s33, 0.001); end
  def test_control_t33; assert_in_epsilon(4, worksheet.control_t33, 0.001); end
  def test_control_u33; assert_in_epsilon(4, worksheet.control_u33, 0.001); end
  def test_control_v33; assert_in_epsilon(4, worksheet.control_v33, 0.001); end
  def test_control_w33; assert_in_epsilon(2, worksheet.control_w33, 0.001); end
  def test_control_x33; assert_in_epsilon(3, worksheet.control_x33, 0.001); end
  def test_control_y33; assert_in_epsilon(4, worksheet.control_y33, 0.001); end
  def test_control_bo33; assert_equal("Road haulage makes up 73% of distance, using conventional engines. Rail all diesel", worksheet.control_bo33); end
  def test_control_bp33; assert_equal("Some shift from road to rail and water, and more efficient engines", worksheet.control_bp33); end
  def test_control_bq33; assert_equal("Greater modal shift to rail and water; more efficient HGVs; more efficient logistics", worksheet.control_bq33); end
  def test_control_br33; assert_equal("Road modal share falls to half; greater hybridisation. Rail freight is all electric ", worksheet.control_br33); end
  def test_control_d34; assert_equal("International aviation", worksheet.control_d34); end
  def test_control_f34; assert_in_epsilon(4, worksheet.control_f34, 0.001); end
  def test_control_h34; assert_equal("By 2050, 130% passengers increase; 50% more fuel use", worksheet.control_h34); end
  def test_control_i34; assert_equal("By 2050, 130% passengers increase; 45% more fuel use", worksheet.control_i34); end
  def test_control_j34; assert_equal("By 2050, 75% passengers increase; 31% more fuel use", worksheet.control_j34); end
  def test_control_k34; assert_equal("By 2050, 20% passengers increase; 5% more fuel use", worksheet.control_k34); end
  def test_control_m34; assert_in_delta(1, worksheet.control_m34, 0.001); end
  def test_control_n34; assert_in_epsilon(4, worksheet.control_n34, 0.001); end
  def test_control_o34; assert_in_delta(1, worksheet.control_o34, 0.001); end
  def test_control_p34; assert_in_delta(1, worksheet.control_p34, 0.001); end
  def test_control_q34; assert_in_epsilon(2, worksheet.control_q34, 0.001); end
  def test_control_r34; assert_in_epsilon(2, worksheet.control_r34, 0.001); end
  def test_control_s34; assert_in_epsilon(2, worksheet.control_s34, 0.001); end
  def test_control_t34; assert_in_delta(1, worksheet.control_t34, 0.001); end
  def test_control_u34; assert_in_epsilon(4, worksheet.control_u34, 0.001); end
  def test_control_v34; assert_in_epsilon(4, worksheet.control_v34, 0.001); end
  def test_control_w34; assert_in_epsilon(4, worksheet.control_w34, 0.001); end
  def test_control_x34; assert_in_epsilon(2, worksheet.control_x34, 0.001); end
  def test_control_y34; assert_in_epsilon(2, worksheet.control_y34, 0.001); end
  def test_control_bo34; assert_equal("By 2050, international aviation has 130% more passengers but uses only 50% more fuel", worksheet.control_bo34); end
  def test_control_bp34; assert_equal("By 2050, international aviation has 130% more passengers but uses only 45% more fuel", worksheet.control_bp34); end
  def test_control_bq34; assert_equal("By 2050, international aviation has 130% more passengers but uses only 31% more fuel", worksheet.control_bq34); end
  def test_control_br34; assert_equal("By 2050, international aviation has 85% more passengers but uses only 5% more fuel", worksheet.control_br34); end
  def test_control_d35; assert_equal("International shipping", worksheet.control_d35); end
  def test_control_f35; assert_in_epsilon(4, worksheet.control_f35, 0.001); end
  def test_control_h35; assert_equal("no improvements from energy efficiency; between 2007 and 2050 emissions increase by 139%", worksheet.control_h35); end
  def test_control_i35; assert_equal("1/3 of technical feasible reductions realised; between 2007 and 2050 emissions increase by 78%", worksheet.control_i35); end
  def test_control_j35; assert_equal("2/3 of technical feasible reductions realised; between 2007 and 2050 emissions increase by 16%", worksheet.control_j35); end
  def test_control_k35; assert_equal("maximum technical feasible reductions realised; between 2007 and 2050 emissions decrease by 46%", worksheet.control_k35); end
  def test_control_m35; assert_in_delta(1, worksheet.control_m35, 0.001); end
  def test_control_n35; assert_in_epsilon(4, worksheet.control_n35, 0.001); end
  def test_control_o35; assert_in_delta(1, worksheet.control_o35, 0.001); end
  def test_control_p35; assert_in_delta(1, worksheet.control_p35, 0.001); end
  def test_control_q35; assert_in_epsilon(2, worksheet.control_q35, 0.001); end
  def test_control_r35; assert_in_epsilon(2, worksheet.control_r35, 0.001); end
  def test_control_s35; assert_in_epsilon(2, worksheet.control_s35, 0.001); end
  def test_control_t35; assert_in_delta(1, worksheet.control_t35, 0.001); end
  def test_control_u35; assert_in_epsilon(4, worksheet.control_u35, 0.001); end
  def test_control_v35; assert_in_epsilon(3, worksheet.control_v35, 0.001); end
  def test_control_w35; assert_in_epsilon(4, worksheet.control_w35, 0.001); end
  def test_control_x35; assert_in_epsilon(3, worksheet.control_x35, 0.001); end
  def test_control_y35; assert_in_epsilon(4, worksheet.control_y35, 0.001); end
  def test_control_bo35; assert_equal("no improvements from energy efficiency; between 2007 and 2050 emissions increase by 139%", worksheet.control_bo35); end
  def test_control_bp35; assert_equal("1/3 of technical feasible reductions realised; between 2007 and 2050 emissions increase by 78%", worksheet.control_bp35); end
  def test_control_bq35; assert_equal("2/3 of technical feasible reductions realised; between 2007 and 2050 emissions increase by 16%", worksheet.control_bq35); end
  def test_control_br35; assert_equal("maximum technical feasible reductions realised; between 2007 and 2050 emissions decrease by 46%", worksheet.control_br35); end
  def test_control_d36; assert_equal("Domestic space heating and hot water", worksheet.control_d36); end
  def test_control_d37; assert_equal("Average temperature of homes", worksheet.control_d37); end
  def test_control_f37; assert_in_epsilon(4, worksheet.control_f37, 0.001); end
  def test_control_h37; assert_equal("Average room temperature increases to 20°C (a 2.5°C increase on 2007)", worksheet.control_h37); end
  def test_control_i37; assert_equal("Average room temperature increases to 18°C (a 0.5°C increase on 2007)", worksheet.control_i37); end
  def test_control_j37; assert_equal("Average room temperature decreases to 17°C (a 0.5°C decrease on 2007)", worksheet.control_j37); end
  def test_control_k37; assert_equal("Average room temperature decreases to 16°C (a 1.5°C decrease on 2007)", worksheet.control_k37); end
  def test_control_m37; assert_in_delta(1, worksheet.control_m37, 0.001); end
  def test_control_n37; assert_in_epsilon(4, worksheet.control_n37, 0.001); end
  def test_control_o37; assert_in_delta(1, worksheet.control_o37, 0.001); end
  def test_control_p37; assert_in_epsilon(4, worksheet.control_p37, 0.001); end
  def test_control_q37; assert_in_epsilon(4, worksheet.control_q37, 0.001); end
  def test_control_r37; assert_in_epsilon(2, worksheet.control_r37, 0.001); end
  def test_control_s37; assert_in_epsilon(3, worksheet.control_s37, 0.001); end
  def test_control_t37; assert_in_epsilon(4, worksheet.control_t37, 0.001); end
  def test_control_u37; assert_in_epsilon(3, worksheet.control_u37, 0.001); end
  def test_control_v37; assert_in_epsilon(3, worksheet.control_v37, 0.001); end
  def test_control_w37; assert_in_epsilon(4, worksheet.control_w37, 0.001); end
  def test_control_x37; assert_in_epsilon(2, worksheet.control_x37, 0.001); end
  def test_control_y37; assert_in_epsilon(2, worksheet.control_y37, 0.001); end
  def test_control_bo37; assert_equal("Average room temperature increases to 20°C (a 2.5°C increase on 2007)", worksheet.control_bo37); end
  def test_control_bp37; assert_equal("Average room temperature increases to 18°C (a 0.5°C increase on 2007)", worksheet.control_bp37); end
  def test_control_bq37; assert_equal("Average room temperature decreases to 17°C (a 0.5°C decrease on 2007)", worksheet.control_bq37); end
  def test_control_br37; assert_equal("Average room temperature decreases to 16°C (a 1.5°C decrease on 2007)", worksheet.control_br37); end
  def test_control_d38; assert_equal("Home insulation", worksheet.control_d38); end
  def test_control_f38; assert_in_epsilon(4, worksheet.control_f38, 0.001); end
  def test_control_h38; assert_equal("Over 7M homes insulated, average thermal leakiness falls by 25%", worksheet.control_h38); end
  def test_control_i38; assert_equal("Over 8M homes insulated, average thermal leakiness falls by 33%", worksheet.control_i38); end
  def test_control_j38; assert_equal("Over 24M homes insulated, average thermal leakiness decreases by 50% ", worksheet.control_j38); end
  def test_control_k38; assert_equal("Over 24M homes insulated, average thermal leakiness decreases by 75% ", worksheet.control_k38); end
  def test_control_m38; assert_in_delta(1, worksheet.control_m38, 0.001); end
  def test_control_n38; assert_in_epsilon(4, worksheet.control_n38, 0.001); end
  def test_control_o38; assert_in_delta(1, worksheet.control_o38, 0.001); end
  def test_control_p38; assert_in_epsilon(3, worksheet.control_p38, 0.001); end
  def test_control_q38; assert_in_epsilon(4, worksheet.control_q38, 0.001); end
  def test_control_r38; assert_in_epsilon(3, worksheet.control_r38, 0.001); end
  def test_control_s38; assert_in_epsilon(3, worksheet.control_s38, 0.001); end
  def test_control_t38; assert_in_epsilon(3, worksheet.control_t38, 0.001); end
  def test_control_u38; assert_in_epsilon(4, worksheet.control_u38, 0.001); end
  def test_control_v38; assert_in_epsilon(4, worksheet.control_v38, 0.001); end
  def test_control_w38; assert_in_epsilon(2, worksheet.control_w38, 0.001); end
  def test_control_x38; assert_in_epsilon(3, worksheet.control_x38, 0.001); end
  def test_control_y38; assert_in_epsilon(4, worksheet.control_y38, 0.001); end
  def test_control_bo38; assert_equal("Over 7M homes insulated, average thermal leakiness falls by 25%", worksheet.control_bo38); end
  def test_control_bp38; assert_equal("Over 8M homes insulated, average thermal leakiness falls by 33%", worksheet.control_bp38); end
  def test_control_bq38; assert_equal("Over 18M homes insulated, average thermal leakiness falls by 42%", worksheet.control_bq38); end
  def test_control_br38; assert_equal("Over 24M homes insulated, average thermal leakiness decreases by 50% ", worksheet.control_br38); end
  def test_control_d39; assert_equal("Home heating electrification", worksheet.control_d39); end
  def test_control_f39; assert_equal("D", worksheet.control_f39); end
  def test_control_h39; assert_equal("The proportion of domestic heat supplied using electricity is 0-10%, as today", worksheet.control_h39); end
  def test_control_i39; assert_equal("The proportion of new domestic heating systems using electricity is 20%", worksheet.control_i39); end
  def test_control_j39; assert_equal("The proportion of new domestic heating systems supplied using electricity is 30-60%", worksheet.control_j39); end
  def test_control_k39; assert_equal("The proportion of new domestic heating systems supplied using electricity is 80-100%", worksheet.control_k39); end
  def test_control_m39; assert_in_delta(1, worksheet.control_m39, 0.001); end
  def test_control_n39; assert_in_epsilon(4, worksheet.control_n39, 0.001); end
  def test_control_o39; assert_in_delta(1, worksheet.control_o39, 0.001); end
  def test_control_p39; assert_in_epsilon(3, worksheet.control_p39, 0.001); end
  def test_control_q39; assert_in_epsilon(4, worksheet.control_q39, 0.001); end
  def test_control_r39; assert_in_epsilon(3, worksheet.control_r39, 0.001); end
  def test_control_s39; assert_in_epsilon(3, worksheet.control_s39, 0.001); end
  def test_control_t39; assert_in_epsilon(4, worksheet.control_t39, 0.001); end
  def test_control_u39; assert_in_epsilon(3, worksheet.control_u39, 0.001); end
  def test_control_v39; assert_in_epsilon(3, worksheet.control_v39, 0.001); end
  def test_control_w39; assert_in_epsilon(3, worksheet.control_w39, 0.001); end
  def test_control_x39; assert_in_epsilon(4, worksheet.control_x39, 0.001); end
  def test_control_y39; assert_in_epsilon(4, worksheet.control_y39, 0.001); end
  def test_control_bo39; assert_equal("The proportion of domestic heat supplied using electricity is 0-10%, as today", worksheet.control_bo39); end
  def test_control_bp39; assert_equal("The proportion of new domestic heating systems using electricity is 20%", worksheet.control_bp39); end
  def test_control_bq39; assert_equal("The proportion of new domestic heating systems supplied using electricity is 30-60%", worksheet.control_bq39); end
  def test_control_br39; assert_equal("The proportion of new domestic heating systems supplied using electricity is 80-100%", worksheet.control_br39); end
  def test_control_d40; assert_equal("Home heating that isn't electric", worksheet.control_d40); end
  def test_control_f40; assert_equal("D", worksheet.control_f40); end
  def test_control_h40; assert_equal("The dominant non-electric heat source is gas or gas CHP (biogas if available)", worksheet.control_h40); end
  def test_control_i40; assert_equal("The dominant non-electric heat source is coal or coal CHP (biomass if available)", worksheet.control_i40); end
  def test_control_j40; assert_equal("The dominant non-electric heat source is waste heat from power stations", worksheet.control_j40); end
  def test_control_k40; assert_equal("A mixture of gas/biogas; coal/biomass; and heat from power stations", worksheet.control_k40); end
  def test_control_m40; assert_in_delta(1, worksheet.control_m40, 0.001); end
  def test_control_n40; assert_in_epsilon(4, worksheet.control_n40, 0.001); end
  def test_control_o40; assert_in_delta(1, worksheet.control_o40, 0.001); end
  def test_control_p40; assert_in_epsilon(3, worksheet.control_p40, 0.001); end
  def test_control_q40; assert_in_epsilon(4, worksheet.control_q40, 0.001); end
  def test_control_r40; assert_in_epsilon(3, worksheet.control_r40, 0.001); end
  def test_control_s40; assert_in_epsilon(2, worksheet.control_s40, 0.001); end
  def test_control_t40; assert_in_delta(1, worksheet.control_t40, 0.001); end
  def test_control_u40; assert_in_epsilon(3, worksheet.control_u40, 0.001); end
  def test_control_v40; assert_in_epsilon(3, worksheet.control_v40, 0.001); end
  def test_control_w40; assert_in_epsilon(4, worksheet.control_w40, 0.001); end
  def test_control_x40; assert_in_delta(1, worksheet.control_x40, 0.001); end
  def test_control_y40; assert_in_delta(1, worksheet.control_y40, 0.001); end
  def test_control_bo40; assert_equal("The dominant non-electric heat source is gas (biogas if available)", worksheet.control_bo40); end
  def test_control_bp40; assert_equal("The dominant non-electric heat source is coal (biomass if available)", worksheet.control_bp40); end
  def test_control_bq40; assert_equal("The dominant non-electric heat source is waste heat from power stations", worksheet.control_bq40); end
  def test_control_br40; assert_equal("A mixture of gas/biogas; coal/biomass; and heat from power stations", worksheet.control_br40); end
  def test_control_d41; assert_equal("Domestic lighting, appliances, and cooking", worksheet.control_d41); end
  def test_control_d42; assert_equal("Home lighting & appliances", worksheet.control_d42); end
  def test_control_f42; assert_in_epsilon(4, worksheet.control_f42, 0.001); end
  def test_control_h42; assert_equal("Energy demand for domestic lights and appliances increases by 20% (relative to 2007)", worksheet.control_h42); end
  def test_control_i42; assert_equal("Energy demand for domestic lights and appliances is stable", worksheet.control_i42); end
  def test_control_j42; assert_equal("Energy demand for domestic lights and appliances decreases by 40%", worksheet.control_j42); end
  def test_control_k42; assert_equal("Energy demand for domestic lights and appliances decreases by 60%", worksheet.control_k42); end
  def test_control_m42; assert_in_delta(1, worksheet.control_m42, 0.001); end
  def test_control_n42; assert_in_epsilon(4, worksheet.control_n42, 0.001); end
  def test_control_o42; assert_in_delta(1, worksheet.control_o42, 0.001); end
  def test_control_p42; assert_in_epsilon(4, worksheet.control_p42, 0.001); end
  def test_control_q42; assert_in_epsilon(4, worksheet.control_q42, 0.001); end
  def test_control_r42; assert_in_epsilon(2, worksheet.control_r42, 0.001); end
  def test_control_s42; assert_in_epsilon(3, worksheet.control_s42, 0.001); end
  def test_control_t42; assert_in_epsilon(4, worksheet.control_t42, 0.001); end
  def test_control_u42; assert_in_epsilon(4, worksheet.control_u42, 0.001); end
  def test_control_v42; assert_in_epsilon(4, worksheet.control_v42, 0.001); end
  def test_control_w42; assert_in_epsilon(4, worksheet.control_w42, 0.001); end
  def test_control_x42; assert_in_epsilon(2, worksheet.control_x42, 0.001); end
  def test_control_y42; assert_in_epsilon(4, worksheet.control_y42, 0.001); end
  def test_control_bo42; assert_equal("Energy demand for domestic lights and appliances increases by 20% (relative to 2007)", worksheet.control_bo42); end
  def test_control_bp42; assert_equal("Energy demand for domestic lights and appliances is stable", worksheet.control_bp42); end
  def test_control_bq42; assert_equal("Energy demand for domestic lights and appliances decreases by 40%", worksheet.control_bq42); end
  def test_control_br42; assert_equal("Energy demand for domestic lights and appliances decreases by 60%", worksheet.control_br42); end
  def test_control_d43; assert_equal("Electrification of home cooking", worksheet.control_d43); end
  def test_control_f43; assert_equal("B", worksheet.control_f43); end
  def test_control_h43; assert_equal("Energy used for domestic cooking remains at 63% electricity and 37% gas", worksheet.control_h43); end
  def test_control_i43; assert_equal("Energy used for domestic cooking is entirely electric", worksheet.control_i43); end
  def test_control_j43; assert_equal("Same as B", worksheet.control_j43); end
  def test_control_k43; assert_equal("Same as B", worksheet.control_k43); end
  def test_control_m43; assert_in_delta(1, worksheet.control_m43, 0.001); end
  def test_control_n43; assert_in_epsilon(2, worksheet.control_n43, 0.001); end
  def test_control_o43; assert_in_delta(1, worksheet.control_o43, 0.001); end
  def test_control_p43; assert_in_epsilon(2, worksheet.control_p43, 0.001); end
  def test_control_q43; assert_in_epsilon(2, worksheet.control_q43, 0.001); end
  def test_control_r43; assert_in_epsilon(2, worksheet.control_r43, 0.001); end
  def test_control_s43; assert_in_delta(1, worksheet.control_s43, 0.001); end
  def test_control_t43; assert_in_delta(1, worksheet.control_t43, 0.001); end
  def test_control_u43; assert_in_epsilon(2, worksheet.control_u43, 0.001); end
  def test_control_v43; assert_in_delta(1, worksheet.control_v43, 0.001); end
  def test_control_w43; assert_in_epsilon(2, worksheet.control_w43, 0.001); end
  def test_control_x43; assert_in_delta(1, worksheet.control_x43, 0.001); end
  def test_control_y43; assert_in_epsilon(2, worksheet.control_y43, 0.001); end
  def test_control_bo43; assert_equal("Energy used for domestic cooking remains at 63% electricity and 37% gas", worksheet.control_bo43); end
  def test_control_bp43; assert_equal("Energy used for domestic cooking is entirely electric", worksheet.control_bp43); end
  def test_control_bq43; assert_equal("Energy used for domestic cooking is entirely electric", worksheet.control_bq43); end
  def test_control_br43; assert_equal("Energy used for domestic cooking is entirely electric", worksheet.control_br43); end
  def test_control_d44; assert_equal("Industrial processes", worksheet.control_d44); end
  def test_control_d45; assert_equal("Growth in industry", worksheet.control_d45); end
  def test_control_f45; assert_equal("C", worksheet.control_f45); end
  def test_control_h45; assert_equal("UK industry output more than doubles by 2050", worksheet.control_h45); end
  def test_control_i45; assert_equal("UK industry grows in line with current trends", worksheet.control_i45); end
  def test_control_j45; assert_equal("UK industry output falls 30-40% by 2050", worksheet.control_j45); end
  def test_control_k45; assert_equal("Same as C", worksheet.control_k45); end
  def test_control_m45; assert_in_delta(1, worksheet.control_m45, 0.001); end
  def test_control_n45; assert_in_epsilon(3, worksheet.control_n45, 0.001); end
  def test_control_o45; assert_in_epsilon(2, worksheet.control_o45, 0.001); end
  def test_control_p45; assert_in_epsilon(2, worksheet.control_p45, 0.001); end
  def test_control_q45; assert_in_epsilon(2, worksheet.control_q45, 0.001); end
  def test_control_r45; assert_in_epsilon(2, worksheet.control_r45, 0.001); end
  def test_control_s45; assert_in_epsilon(2, worksheet.control_s45, 0.001); end
  def test_control_t45; assert_in_epsilon(3, worksheet.control_t45, 0.001); end
  def test_control_u45; assert_in_epsilon(2, worksheet.control_u45, 0.001); end
  def test_control_v45; assert_in_epsilon(2, worksheet.control_v45, 0.001); end
  def test_control_w45; assert_in_epsilon(3, worksheet.control_w45, 0.001); end
  def test_control_x45; assert_in_epsilon(2, worksheet.control_x45, 0.001); end
  def test_control_y45; assert_in_delta(1, worksheet.control_y45, 0.001); end
  def test_control_bo45; assert_equal("UK industry output more than doubles by 2050", worksheet.control_bo45); end
  def test_control_bp45; assert_equal("UK industry grows in line with current trends", worksheet.control_bp45); end
  def test_control_bq45; assert_equal("UK industry output falls 30-40% by 2050", worksheet.control_bq45); end
  def test_control_br45; assert_equal("UK industry output falls 30-40% by 2050", worksheet.control_br45); end
  def test_control_d46; assert_equal("Energy intensity of industry", worksheet.control_d46); end
  def test_control_f46; assert_in_epsilon(3, worksheet.control_f46, 0.001); end
  def test_control_h46; assert_equal("No electrification of processes, little improvement in energy intensity", worksheet.control_h46); end
  def test_control_i46; assert_equal("Some processes electrified; moderate improvements in process emissions and energy demand", worksheet.control_i46); end
  def test_control_j46; assert_equal("High electrification; CCS captures 48% of emissions; process emissions reduced", worksheet.control_j46); end
  def test_control_k46; assert_equal("Same as 3", worksheet.control_k46); end
  def test_control_m46; assert_in_delta(1, worksheet.control_m46, 0.001); end
  def test_control_n46; assert_in_epsilon(3, worksheet.control_n46, 0.001); end
  def test_control_o46; assert_in_delta(1, worksheet.control_o46, 0.001); end
  def test_control_p46; assert_in_epsilon(3, worksheet.control_p46, 0.001); end
  def test_control_q46; assert_in_epsilon(3, worksheet.control_q46, 0.001); end
  def test_control_r46; assert_in_delta(1, worksheet.control_r46, 0.001); end
  def test_control_s46; assert_in_epsilon(3, worksheet.control_s46, 0.001); end
  def test_control_t46; assert_in_epsilon(2, worksheet.control_t46, 0.001); end
  def test_control_u46; assert_in_epsilon(3, worksheet.control_u46, 0.001); end
  def test_control_v46; assert_in_epsilon(3, worksheet.control_v46, 0.001); end
  def test_control_w46; assert_in_epsilon(2, worksheet.control_w46, 0.001); end
  def test_control_x46; assert_in_epsilon(2, worksheet.control_x46, 0.001); end
  def test_control_y46; assert_in_epsilon(3, worksheet.control_y46, 0.001); end
  def test_control_bo46; assert_equal("No electrification of industrial processes and little improvement in industrial energy intensity", worksheet.control_bo46); end
  def test_control_bp46; assert_equal("Some industrial processes electrified and moderate improvements in process emissions and energy demand", worksheet.control_bp46); end
  def test_control_bq46; assert_equal("Many industrial processes electrified, CCS captures 48% of emissions and  substantial improvements in process emissions and energy demand", worksheet.control_bq46); end
  def test_control_br46; assert_equal("Many industrial processes electrified, CCS captures 48% of emissions and  substantial improvements in process emissions and energy demand", worksheet.control_br46); end
  def test_control_d47; assert_equal("Commercial heating and cooling", worksheet.control_d47); end
  def test_control_d48; assert_equal("Commercial demand for heating and cooling", worksheet.control_d48); end
  def test_control_f48; assert_in_epsilon(4, worksheet.control_f48, 0.001); end
  def test_control_h48; assert_equal("Space heating demand increases by 50%, hot water demand by 60%, cooling demand by 250%", worksheet.control_h48); end
  def test_control_i48; assert_equal("Space heating demand increases by 30%, hot water demand by 50%, cooling demand by 60%", worksheet.control_i48); end
  def test_control_j48; assert_equal("Space heating demand stable, hot water demand increases by 25%, cooling demand stable", worksheet.control_j48); end
  def test_control_k48; assert_equal("Space heating demand drops by 25%, hot water demand by 10%, cooling demand by 60%", worksheet.control_k48); end
  def test_control_m48; assert_in_delta(1, worksheet.control_m48, 0.001); end
  def test_control_n48; assert_in_epsilon(4, worksheet.control_n48, 0.001); end
  def test_control_o48; assert_in_delta(1, worksheet.control_o48, 0.001); end
  def test_control_p48; assert_in_epsilon(4, worksheet.control_p48, 0.001); end
  def test_control_q48; assert_in_epsilon(4, worksheet.control_q48, 0.001); end
  def test_control_r48; assert_in_epsilon(2, worksheet.control_r48, 0.001); end
  def test_control_s48; assert_in_epsilon(3, worksheet.control_s48, 0.001); end
  def test_control_t48; assert_in_epsilon(4, worksheet.control_t48, 0.001); end
  def test_control_u48; assert_in_epsilon(4, worksheet.control_u48, 0.001); end
  def test_control_v48; assert_in_epsilon(4, worksheet.control_v48, 0.001); end
  def test_control_w48; assert_in_epsilon(3, worksheet.control_w48, 0.001); end
  def test_control_x48; assert_in_epsilon(3, worksheet.control_x48, 0.001); end
  def test_control_y48; assert_in_epsilon(4, worksheet.control_y48, 0.001); end
  def test_control_bo48; assert_equal("Commercial space heating demand increases by 50%, hot water demand by 60%, cooling demand by 250%", worksheet.control_bo48); end
  def test_control_bp48; assert_equal("Commercial space heating demand increases by 30%, hot water demand by 50%, cooling demand by 60%", worksheet.control_bp48); end
  def test_control_bq48; assert_equal("Commercial space heating demand stable, hot water demand increases by 25%, cooling demand stable", worksheet.control_bq48); end
  def test_control_br48; assert_equal("Commercial space heating demand drops by 25%, hot water demand by 10%, cooling demand by 60%", worksheet.control_br48); end
  def test_control_d49; assert_equal("Commercial heating electrification", worksheet.control_d49); end
  def test_control_f49; assert_equal("D", worksheet.control_f49); end
  def test_control_h49; assert_equal("The proportion of non-domestic heat supplied using electricity is 0-10%, as today", worksheet.control_h49); end
  def test_control_i49; assert_equal("The proportion of non-domestic heat supplied using electricity is 20%", worksheet.control_i49); end
  def test_control_j49; assert_equal("The proportion of non-domestic heat supplied using electricity is 30-60%", worksheet.control_j49); end
  def test_control_k49; assert_equal("The proportion of non-domestic heat supplied using electricity is 80-100%", worksheet.control_k49); end
  def test_control_m49; assert_in_delta(1, worksheet.control_m49, 0.001); end
  def test_control_n49; assert_in_epsilon(4, worksheet.control_n49, 0.001); end
  def test_control_o49; assert_in_delta(1, worksheet.control_o49, 0.001); end
  def test_control_p49; assert_in_epsilon(3, worksheet.control_p49, 0.001); end
  def test_control_q49; assert_in_epsilon(4, worksheet.control_q49, 0.001); end
  def test_control_r49; assert_in_epsilon(3, worksheet.control_r49, 0.001); end
  def test_control_s49; assert_in_epsilon(4, worksheet.control_s49, 0.001); end
  def test_control_t49; assert_in_epsilon(4, worksheet.control_t49, 0.001); end
  def test_control_u49; assert_in_epsilon(4, worksheet.control_u49, 0.001); end
  def test_control_v49; assert_in_epsilon(4, worksheet.control_v49, 0.001); end
  def test_control_w49; assert_in_epsilon(3, worksheet.control_w49, 0.001); end
  def test_control_x49; assert_in_epsilon(4, worksheet.control_x49, 0.001); end
  def test_control_y49; assert_in_epsilon(4, worksheet.control_y49, 0.001); end
  def test_control_bo49; assert_equal("The proportion of non-domestic heat supplied using electricity is 0-10%, as today", worksheet.control_bo49); end
  def test_control_bp49; assert_equal("The proportion of non-domestic heat supplied using electricity is 20%", worksheet.control_bp49); end
  def test_control_bq49; assert_equal("The proportion of non-domestic heat supplied using electricity is 30-60%", worksheet.control_bq49); end
  def test_control_br49; assert_equal("The proportion of non-domestic heat supplied using electricity is 80-100%", worksheet.control_br49); end
  def test_control_d50; assert_equal("Commercial heating that isn't electric", worksheet.control_d50); end
  def test_control_f50; assert_equal("D", worksheet.control_f50); end
  def test_control_h50; assert_equal("The dominant non-electric heat source is gas or gas CHP (biogas if available)", worksheet.control_h50); end
  def test_control_i50; assert_equal("The dominant non-electric heat source is coal or coal CHP (biomass if available)", worksheet.control_i50); end
  def test_control_j50; assert_equal("The dominant non-electric heat source is heat from power stations", worksheet.control_j50); end
  def test_control_k50; assert_equal("A mixture of gas/biogas, coal/biomass, and heat from power stations", worksheet.control_k50); end
  def test_control_m50; assert_in_delta(1, worksheet.control_m50, 0.001); end
  def test_control_n50; assert_in_epsilon(4, worksheet.control_n50, 0.001); end
  def test_control_o50; assert_in_delta(1, worksheet.control_o50, 0.001); end
  def test_control_p50; assert_in_epsilon(2, worksheet.control_p50, 0.001); end
  def test_control_q50; assert_in_epsilon(4, worksheet.control_q50, 0.001); end
  def test_control_r50; assert_in_epsilon(3, worksheet.control_r50, 0.001); end
  def test_control_s50; assert_in_epsilon(3, worksheet.control_s50, 0.001); end
  def test_control_t50; assert_in_epsilon(4, worksheet.control_t50, 0.001); end
  def test_control_u50; assert_in_epsilon(3, worksheet.control_u50, 0.001); end
  def test_control_v50; assert_in_epsilon(3, worksheet.control_v50, 0.001); end
  def test_control_w50; assert_in_epsilon(4, worksheet.control_w50, 0.001); end
  def test_control_x50; assert_in_epsilon(4, worksheet.control_x50, 0.001); end
  def test_control_y50; assert_in_epsilon(3, worksheet.control_y50, 0.001); end
  def test_control_bo50; assert_equal("The dominant non-electric heat source is gas (biogas if available)", worksheet.control_bo50); end
  def test_control_bp50; assert_equal("The dominant non-electric heating fuel is coal (biomass if available)", worksheet.control_bp50); end
  def test_control_bq50; assert_equal("The dominant non-electric heat source is heat from power stations", worksheet.control_bq50); end
  def test_control_br50; assert_equal("A mixture of gas/biogas, coal/biomass, and heat from power stations", worksheet.control_br50); end
  def test_control_d51; assert_equal("Commercial lighting, appliances, and catering", worksheet.control_d51); end
  def test_control_d52; assert_equal("Commercial lighting & appliances", worksheet.control_d52); end
  def test_control_f52; assert_in_epsilon(4, worksheet.control_f52, 0.001); end
  def test_control_h52; assert_equal("Energy demand for lights & appliances increases by 33%. Energy for cooking is stable", worksheet.control_h52); end
  def test_control_i52; assert_equal("Energy demand for lights & appliances increases by 15%; decreases by 5% for cooking", worksheet.control_i52); end
  def test_control_j52; assert_equal("Energy demand for lights & appliances decreases by 5%; decreases by 20% for cooking", worksheet.control_j52); end
  def test_control_k52; assert_equal("Energy demand for lights & appliances decreases by 30%; decreases by 25% for cooking", worksheet.control_k52); end
  def test_control_m52; assert_in_delta(1, worksheet.control_m52, 0.001); end
  def test_control_n52; assert_in_epsilon(4, worksheet.control_n52, 0.001); end
  def test_control_o52; assert_in_delta(1, worksheet.control_o52, 0.001); end
  def test_control_p52; assert_in_epsilon(4, worksheet.control_p52, 0.001); end
  def test_control_q52; assert_in_epsilon(4, worksheet.control_q52, 0.001); end
  def test_control_r52; assert_in_epsilon(2, worksheet.control_r52, 0.001); end
  def test_control_s52; assert_in_epsilon(3, worksheet.control_s52, 0.001); end
  def test_control_t52; assert_in_epsilon(4, worksheet.control_t52, 0.001); end
  def test_control_u52; assert_in_epsilon(4, worksheet.control_u52, 0.001); end
  def test_control_v52; assert_in_epsilon(4, worksheet.control_v52, 0.001); end
  def test_control_w52; assert_in_epsilon(4, worksheet.control_w52, 0.001); end
  def test_control_x52; assert_in_epsilon(3, worksheet.control_x52, 0.001); end
  def test_control_y52; assert_in_epsilon(4, worksheet.control_y52, 0.001); end
  def test_control_bo52; assert_equal("Energy demand for commercial lights & appliances increases by 33%. Energy for cooking is stable", worksheet.control_bo52); end
  def test_control_bp52; assert_equal("Energy demand for commercial lights & appliances increases by 15%; decreases by 5% for cooking", worksheet.control_bp52); end
  def test_control_bq52; assert_equal("Energy demand for commercial lights & appliances decreases by 5%; decreases by 20% for cooking", worksheet.control_bq52); end
  def test_control_br52; assert_equal("Energy demand for commercial lights & appliances decreases by 30%; decreases by 25% for cooking", worksheet.control_br52); end
  def test_control_d53; assert_equal("Electrification of commercial cooking", worksheet.control_d53); end
  def test_control_f53; assert_equal("B", worksheet.control_f53); end
  def test_control_h53; assert_equal("60% electricity and 40% gas (no change from 2007)", worksheet.control_h53); end
  def test_control_i53; assert_equal("100% electric", worksheet.control_i53); end
  def test_control_j53; assert_equal("Same as B", worksheet.control_j53); end
  def test_control_k53; assert_equal("Same as B", worksheet.control_k53); end
  def test_control_m53; assert_in_delta(1, worksheet.control_m53, 0.001); end
  def test_control_n53; assert_in_epsilon(2, worksheet.control_n53, 0.001); end
  def test_control_o53; assert_in_delta(1, worksheet.control_o53, 0.001); end
  def test_control_p53; assert_in_epsilon(2, worksheet.control_p53, 0.001); end
  def test_control_q53; assert_in_epsilon(2, worksheet.control_q53, 0.001); end
  def test_control_r53; assert_in_epsilon(2, worksheet.control_r53, 0.001); end
  def test_control_s53; assert_in_delta(1, worksheet.control_s53, 0.001); end
  def test_control_t53; assert_in_delta(1, worksheet.control_t53, 0.001); end
  def test_control_u53; assert_in_epsilon(2, worksheet.control_u53, 0.001); end
  def test_control_v53; assert_in_delta(1, worksheet.control_v53, 0.001); end
  def test_control_w53; assert_in_epsilon(2, worksheet.control_w53, 0.001); end
  def test_control_x53; assert_in_epsilon(2, worksheet.control_x53, 0.001); end
  def test_control_y53; assert_in_epsilon(2, worksheet.control_y53, 0.001); end
  def test_control_bo53; assert_equal("Energy used for commercial cooking is 60% electricity and 40% gas (no change from 2007)", worksheet.control_bo53); end
  def test_control_bp53; assert_equal("Energy used for commercial cooking is 100% electric", worksheet.control_bp53); end
  def test_control_bq53; assert_equal("Energy used for commercial cooking is 100% electric", worksheet.control_bq53); end
  def test_control_br53; assert_equal("Energy used for commercial cooking is 100% electric", worksheet.control_br53); end
  def test_control_d55; assert_equal("Geosequestration", worksheet.control_d55); end
  def test_control_f55; assert_in_epsilon(4, worksheet.control_f55, 0.001); end
  def test_control_h55; assert_equal("No geosequestration", worksheet.control_h55); end
  def test_control_i55; assert_equal("Carbon dioxide sequestration rate of 1 million tonnes per annum by 2050", worksheet.control_i55); end
  def test_control_j55; assert_equal("Carbon dioxide sequestration rate of ~30 million tonnes per annum by 2050", worksheet.control_j55); end
  def test_control_k55; assert_equal("Carbon dioxide sequestration rate of ~110 million tonnes per annum by 2050", worksheet.control_k55); end
  def test_control_m55; assert_in_delta(1, worksheet.control_m55, 0.001); end
  def test_control_n55; assert_in_delta(1, worksheet.control_n55, 0.001); end
  def test_control_o55; assert_in_delta(1, worksheet.control_o55, 0.001); end
  def test_control_p55; assert_in_delta(1, worksheet.control_p55, 0.001); end
  def test_control_q55; assert_in_delta(1, worksheet.control_q55, 0.001); end
  def test_control_r55; assert_in_delta(1, worksheet.control_r55, 0.001); end
  def test_control_s55; assert_in_epsilon(2, worksheet.control_s55, 0.001); end
  def test_control_t55; assert_in_delta(1, worksheet.control_t55, 0.001); end
  def test_control_u55; assert_in_epsilon(4, worksheet.control_u55, 0.001); end
  def test_control_v55; assert_in_epsilon(2, worksheet.control_v55, 0.001); end
  def test_control_w55; assert_in_delta(1, worksheet.control_w55, 0.001); end
  def test_control_x55; assert_in_delta(1, worksheet.control_x55, 0.001); end
  def test_control_y55; assert_in_epsilon(2, worksheet.control_y55, 0.001); end
  def test_control_bo55; assert_equal("No geosequestration", worksheet.control_bo55); end
  def test_control_bp55; assert_equal("Carbon dioxide sequestred at a rate of 1 million tonnes per annum by 2050", worksheet.control_bp55); end
  def test_control_bq55; assert_equal("Carbon dioxide  sequestred at a rate of ~30 million tonnes per annum by 2050", worksheet.control_bq55); end
  def test_control_br55; assert_equal("Carbon dioxide sequestred at a rate of ~110 million tonnes per annum by 2050", worksheet.control_br55); end
  def test_control_d56; assert_equal("Storage, demand shifting & interconnection", worksheet.control_d56); end
  def test_control_f56; assert_in_epsilon(4, worksheet.control_f56, 0.001); end
  def test_control_h56; assert_equal("Today’s 3.5 GW storage & 4 GW interconnection with Europe for balancing", worksheet.control_h56); end
  def test_control_i56; assert_equal("4 GW storage & 10 GW interconnection with Europe for balancing", worksheet.control_i56); end
  def test_control_j56; assert_equal("7 GW storage with 2 more pumped storage, 15 GW interconnection & some demand shifting", worksheet.control_j56); end
  def test_control_k56; assert_equal("20 GW storage with large lagoons, 30 GW interconnection & substantial demand shifting", worksheet.control_k56); end
  def test_control_m56; assert_in_delta(1, worksheet.control_m56, 0.001); end
  def test_control_n56; assert_in_delta(1, worksheet.control_n56, 0.001); end
  def test_control_o56; assert_in_delta(1, worksheet.control_o56, 0.001); end
  def test_control_p56; assert_in_epsilon(2, worksheet.control_p56, 0.001); end
  def test_control_q56; assert_in_epsilon(4, worksheet.control_q56, 0.001); end
  def test_control_r56; assert_in_epsilon(2, worksheet.control_r56, 0.001); end
  def test_control_s56; assert_in_epsilon(2, worksheet.control_s56, 0.001); end
  def test_control_t56; assert_in_delta(1, worksheet.control_t56, 0.001); end
  def test_control_u56; assert_in_epsilon(4, worksheet.control_u56, 0.001); end
  def test_control_v56; assert_in_epsilon(3, worksheet.control_v56, 0.001); end
  def test_control_w56; assert_in_epsilon(4, worksheet.control_w56, 0.001); end
  def test_control_x56; assert_in_epsilon(2, worksheet.control_x56, 0.001); end
  def test_control_y56; assert_in_epsilon(3, worksheet.control_y56, 0.001); end
  def test_control_bo56; assert_equal("Today’s 3.5 GW of pumped storage and 4 GW interconnection with Europe available for balancing electricity supply and demand", worksheet.control_bo56); end
  def test_control_bp56; assert_equal("4 GW of pumped storage and 10 GW interconnection with Europe available for balancing electricity supply and demand", worksheet.control_bp56); end
  def test_control_bq56; assert_equal("7 GW of pumped storage (includign 2 more sites), 15 GW of interconnection with Europe and some demand shifting available for balancing electricity supply and demand", worksheet.control_bq56); end
  def test_control_br56; assert_equal("20 GW of pumped storage with large lagoons, 30 GW of interconnection with Europe and substantial demand shifting available for balancing electricity supply and demand", worksheet.control_br56); end
  def test_control_d57; assert_equal("Indigenous fossil-fuel production", worksheet.control_d57); end
  def test_control_f57; assert_in_epsilon(3, worksheet.control_f57, 0.001); end
  def test_control_h57; assert_equal("Central case", worksheet.control_h57); end
  def test_control_i57; assert_equal("Low production case", worksheet.control_i57); end
  def test_control_j57; assert_equal("Very low production case", worksheet.control_j57); end
  def test_control_m57; assert_in_delta(1, worksheet.control_m57, 0.001); end
  def test_control_n57; assert_in_delta(1, worksheet.control_n57, 0.001); end
  def test_control_o57; assert_in_delta(1, worksheet.control_o57, 0.001); end
  def test_control_p57; assert_in_delta(1, worksheet.control_p57, 0.001); end
  def test_control_q57; assert_in_delta(1, worksheet.control_q57, 0.001); end
  def test_control_r57; assert_in_delta(1, worksheet.control_r57, 0.001); end
  def test_control_s57; assert_in_delta(1, worksheet.control_s57, 0.001); end
  def test_control_t57; assert_in_delta(1, worksheet.control_t57, 0.001); end
  def test_control_u57; assert_in_delta(1, worksheet.control_u57, 0.001); end
  def test_control_v57; assert_in_delta(1, worksheet.control_v57, 0.001); end
  def test_control_w57; assert_in_delta(1, worksheet.control_w57, 0.001); end
  def test_control_x57; assert_in_delta(1, worksheet.control_x57, 0.001); end
  def test_control_y57; assert_in_delta(1, worksheet.control_y57, 0.001); end
  def test_control_m58; assert_equal("Imported natural gas for electricity and heat. Imported oil for vehicles.", worksheet.control_m58); end
  def test_control_p58; assert_equal("Cost-optimising model based. Mix of supply sources. Ambitious demand reduction.", worksheet.control_p58); end
  def test_control_q58; assert_equal("Renewables largest supply component. Very ambitious demand reduction. Lots of storage.", worksheet.control_q58); end
  def test_control_r58; assert_equal("Lots of nuclear. Moderate energy demand reduction. Minimal renewables.", worksheet.control_r58); end
  def test_control_s58; assert_equal("Lots of CCS and biomass co-firing. Ambitious demand reduction. ", worksheet.control_s58); end
  def test_control_t58; assert_equal("TBD", worksheet.control_t58); end
  def test_control_u58; assert_equal("Generation from wind, marine renewables and hydro. Ambitious demand reduction. ", worksheet.control_u58); end
  def test_control_v58; assert_equal("Offshore renewables, solar, geothermal and electricity imports. Ambitious demand reduction.", worksheet.control_v58); end
  def test_control_w58; assert_equal("Marine renewables, geothermal and algae supply. Some nuclear and CCS.", worksheet.control_w58); end
  def test_control_x58; assert_equal("Wide range of generation sources. Moderate demand reduction. Considerable bioenergy.", worksheet.control_x58); end
  def test_control_y58; assert_equal("Energy from a range of sources. Emphasis on UK self-reliance.", worksheet.control_y58); end
  def test_control_m59; assert_in_epsilon(75, worksheet.control_m59, 0.001); end
  def test_control_n59; assert_equal("No", worksheet.control_n59); end
  def test_control_o59; assert_equal("No", worksheet.control_o59); end
  def test_control_p59; assert_in_epsilon(112, worksheet.control_p59, 0.001); end
  def test_control_q59; assert_in_epsilon(109, worksheet.control_q59, 0.001); end
  def test_control_r59; assert_in_epsilon(110, worksheet.control_r59, 0.001); end
  def test_control_s59; assert_in_epsilon(111, worksheet.control_s59, 0.001); end
  def test_control_t59; assert_in_epsilon(170, worksheet.control_t59, 0.001); end
  def test_control_u59; assert_in_epsilon(95, worksheet.control_u59, 0.001); end
  def test_control_v59; assert_in_epsilon(96, worksheet.control_v59, 0.001); end
  def test_control_w59; assert_in_epsilon(94, worksheet.control_w59, 0.001); end
  def test_control_x59; assert_in_epsilon(97, worksheet.control_x59, 0.001); end
  def test_control_y59; assert_in_epsilon(92, worksheet.control_y59, 0.001); end
  def test_control_m60; assert_in_epsilon(10, worksheet.control_m60, 0.001); end
  def test_control_n60; assert_equal("No", worksheet.control_n60); end
  def test_control_o60; assert_equal("No", worksheet.control_o60); end
  def test_control_p60; assert_in_delta(0, (worksheet.control_p60||0), 0.001); end
  def test_control_q60; assert_in_delta(1, worksheet.control_q60, 0.001); end
  def test_control_r60; assert_in_epsilon(2, worksheet.control_r60, 0.001); end
  def test_control_s60; assert_in_epsilon(3, worksheet.control_s60, 0.001); end
  def test_control_t60; assert_in_epsilon(4, worksheet.control_t60, 0.001); end
  def test_control_u60; assert_in_epsilon(5, worksheet.control_u60, 0.001); end
  def test_control_v60; assert_in_epsilon(6, worksheet.control_v60, 0.001); end
  def test_control_w60; assert_in_epsilon(7, worksheet.control_w60, 0.001); end
  def test_control_x60; assert_in_epsilon(8, worksheet.control_x60, 0.001); end
  def test_control_y60; assert_in_epsilon(9, worksheet.control_y60, 0.001); end
  def test_intermediate_output_b2; assert_equal("Energy source / use charts", worksheet.intermediate_output_b2); end
  def test_intermediate_output_h3; assert_equal("Historic data:", worksheet.intermediate_output_h3); end
  def test_intermediate_output_ay3; assert_equal("2050 Calculator calculations", worksheet.intermediate_output_ay3); end
  def test_intermediate_output_d4; assert_equal("TWh / year", worksheet.intermediate_output_d4); end
  def test_intermediate_output_f4; assert_equal("2007 (Consistent)", worksheet.intermediate_output_f4); end
  def test_intermediate_output_h4; assert_in_epsilon(1970, worksheet.intermediate_output_h4, 0.001); end
  def test_intermediate_output_i4; assert_in_epsilon(1971, worksheet.intermediate_output_i4, 0.001); end
  def test_intermediate_output_j4; assert_in_epsilon(1972, worksheet.intermediate_output_j4, 0.001); end
  def test_intermediate_output_k4; assert_in_epsilon(1973, worksheet.intermediate_output_k4, 0.001); end
  def test_intermediate_output_l4; assert_in_epsilon(1974, worksheet.intermediate_output_l4, 0.001); end
  def test_intermediate_output_m4; assert_in_epsilon(1975, worksheet.intermediate_output_m4, 0.001); end
  def test_intermediate_output_n4; assert_in_epsilon(1976, worksheet.intermediate_output_n4, 0.001); end
  def test_intermediate_output_o4; assert_in_epsilon(1977, worksheet.intermediate_output_o4, 0.001); end
  def test_intermediate_output_p4; assert_in_epsilon(1978, worksheet.intermediate_output_p4, 0.001); end
  def test_intermediate_output_q4; assert_in_epsilon(1979, worksheet.intermediate_output_q4, 0.001); end
  def test_intermediate_output_r4; assert_in_epsilon(1980, worksheet.intermediate_output_r4, 0.001); end
  def test_intermediate_output_s4; assert_in_epsilon(1981, worksheet.intermediate_output_s4, 0.001); end
  def test_intermediate_output_t4; assert_in_epsilon(1982, worksheet.intermediate_output_t4, 0.001); end
  def test_intermediate_output_u4; assert_in_epsilon(1983, worksheet.intermediate_output_u4, 0.001); end
  def test_intermediate_output_v4; assert_in_epsilon(1984, worksheet.intermediate_output_v4, 0.001); end
  def test_intermediate_output_w4; assert_in_epsilon(1985, worksheet.intermediate_output_w4, 0.001); end
  def test_intermediate_output_x4; assert_in_epsilon(1986, worksheet.intermediate_output_x4, 0.001); end
  def test_intermediate_output_y4; assert_in_epsilon(1987, worksheet.intermediate_output_y4, 0.001); end
  def test_intermediate_output_z4; assert_in_epsilon(1988, worksheet.intermediate_output_z4, 0.001); end
  def test_intermediate_output_aa4; assert_in_epsilon(1989, worksheet.intermediate_output_aa4, 0.001); end
  def test_intermediate_output_ab4; assert_in_epsilon(1990, worksheet.intermediate_output_ab4, 0.001); end
  def test_intermediate_output_ac4; assert_in_epsilon(1991, worksheet.intermediate_output_ac4, 0.001); end
  def test_intermediate_output_ad4; assert_in_epsilon(1992, worksheet.intermediate_output_ad4, 0.001); end
  def test_intermediate_output_ae4; assert_in_epsilon(1993, worksheet.intermediate_output_ae4, 0.001); end
  def test_intermediate_output_af4; assert_in_epsilon(1994, worksheet.intermediate_output_af4, 0.001); end
  def test_intermediate_output_ag4; assert_in_epsilon(1995, worksheet.intermediate_output_ag4, 0.001); end
  def test_intermediate_output_ah4; assert_in_epsilon(1996, worksheet.intermediate_output_ah4, 0.001); end
  def test_intermediate_output_ai4; assert_in_epsilon(1997, worksheet.intermediate_output_ai4, 0.001); end
  def test_intermediate_output_aj4; assert_in_epsilon(1998, worksheet.intermediate_output_aj4, 0.001); end
  def test_intermediate_output_ak4; assert_in_epsilon(1999, worksheet.intermediate_output_ak4, 0.001); end
  def test_intermediate_output_al4; assert_in_epsilon(2000, worksheet.intermediate_output_al4, 0.001); end
  def test_intermediate_output_am4; assert_in_epsilon(2001, worksheet.intermediate_output_am4, 0.001); end
  def test_intermediate_output_an4; assert_in_epsilon(2002, worksheet.intermediate_output_an4, 0.001); end
  def test_intermediate_output_ao4; assert_in_epsilon(2003, worksheet.intermediate_output_ao4, 0.001); end
  def test_intermediate_output_ap4; assert_in_epsilon(2004, worksheet.intermediate_output_ap4, 0.001); end
  def test_intermediate_output_aq4; assert_in_epsilon(2005, worksheet.intermediate_output_aq4, 0.001); end
  def test_intermediate_output_ar4; assert_in_epsilon(2006, worksheet.intermediate_output_ar4, 0.001); end
  def test_intermediate_output_as4; assert_in_epsilon(2007, worksheet.intermediate_output_as4, 0.001); end
  def test_intermediate_output_at4; assert_in_epsilon(2008, worksheet.intermediate_output_at4, 0.001); end
  def test_intermediate_output_au4; assert_in_epsilon(2009, worksheet.intermediate_output_au4, 0.001); end
  def test_intermediate_output_av4; assert_in_epsilon(2010, worksheet.intermediate_output_av4, 0.001); end
  def test_intermediate_output_aw4; assert_equal("Source:", worksheet.intermediate_output_aw4); end
  def test_intermediate_output_ay4; assert_in_epsilon(2007, worksheet.intermediate_output_ay4, 0.001); end
  def test_intermediate_output_az4; assert_in_epsilon(2010, worksheet.intermediate_output_az4, 0.001); end
  def test_intermediate_output_ba4; assert_in_epsilon(2015, worksheet.intermediate_output_ba4, 0.001); end
  def test_intermediate_output_bb4; assert_in_epsilon(2020, worksheet.intermediate_output_bb4, 0.001); end
  def test_intermediate_output_bc4; assert_in_epsilon(2025, worksheet.intermediate_output_bc4, 0.001); end
  def test_intermediate_output_bd4; assert_in_epsilon(2030, worksheet.intermediate_output_bd4, 0.001); end
  def test_intermediate_output_be4; assert_in_epsilon(2035, worksheet.intermediate_output_be4, 0.001); end
  def test_intermediate_output_bf4; assert_in_epsilon(2040, worksheet.intermediate_output_bf4, 0.001); end
  def test_intermediate_output_bg4; assert_in_epsilon(2045, worksheet.intermediate_output_bg4, 0.001); end
  def test_intermediate_output_bh4; assert_in_epsilon(2050, worksheet.intermediate_output_bh4, 0.001); end
  def test_intermediate_output_c6; assert_equal("Use", worksheet.intermediate_output_c6); end
  def test_intermediate_output_c7; assert_equal("T.01", worksheet.intermediate_output_c7); end
  def test_intermediate_output_d7; assert_equal("Road transport", worksheet.intermediate_output_d7); end
  def test_intermediate_output_f7; assert_in_epsilon(502.50552967076953, worksheet.intermediate_output_f7, 0.001); end
  def test_intermediate_output_h7; assert_in_epsilon(249, worksheet.intermediate_output_h7, 0.001); end
  def test_intermediate_output_i7; assert_in_epsilon(260.7, worksheet.intermediate_output_i7, 0.001); end
  def test_intermediate_output_j7; assert_in_epsilon(273.7, worksheet.intermediate_output_j7, 0.001); end
  def test_intermediate_output_k7; assert_in_epsilon(292.2, worksheet.intermediate_output_k7, 0.001); end
  def test_intermediate_output_l7; assert_in_epsilon(284.5, worksheet.intermediate_output_l7, 0.001); end
  def test_intermediate_output_m7; assert_in_epsilon(278.5, worksheet.intermediate_output_m7, 0.001); end
  def test_intermediate_output_n7; assert_in_epsilon(290.7, worksheet.intermediate_output_n7, 0.001); end
  def test_intermediate_output_o7; assert_in_epsilon(298.1, worksheet.intermediate_output_o7, 0.001); end
  def test_intermediate_output_p7; assert_in_epsilon(313.4, worksheet.intermediate_output_p7, 0.001); end
  def test_intermediate_output_q7; assert_in_epsilon(320.1, worksheet.intermediate_output_q7, 0.001); end
  def test_intermediate_output_r7; assert_in_epsilon(323.5, worksheet.intermediate_output_r7, 0.001); end
  def test_intermediate_output_s7; assert_in_epsilon(314.1, worksheet.intermediate_output_s7, 0.001); end
  def test_intermediate_output_t7; assert_in_epsilon(323.3, worksheet.intermediate_output_t7, 0.001); end
  def test_intermediate_output_u7; assert_in_epsilon(333.2, worksheet.intermediate_output_u7, 0.001); end
  def test_intermediate_output_v7; assert_in_epsilon(349, worksheet.intermediate_output_v7, 0.001); end
  def test_intermediate_output_w7; assert_in_epsilon(355.7, worksheet.intermediate_output_w7, 0.001); end
  def test_intermediate_output_x7; assert_in_epsilon(379.2, worksheet.intermediate_output_x7, 0.001); end
  def test_intermediate_output_y7; assert_in_epsilon(396.1, worksheet.intermediate_output_y7, 0.001); end
  def test_intermediate_output_z7; assert_in_epsilon(421.4, worksheet.intermediate_output_z7, 0.001); end
  def test_intermediate_output_aa7; assert_in_epsilon(439.6, worksheet.intermediate_output_aa7, 0.001); end
  def test_intermediate_output_ab7; assert_in_epsilon(451.4, worksheet.intermediate_output_ab7, 0.001); end
  def test_intermediate_output_ac7; assert_in_epsilon(448.2, worksheet.intermediate_output_ac7, 0.001); end
  def test_intermediate_output_ad7; assert_in_epsilon(457.8, worksheet.intermediate_output_ad7, 0.001); end
  def test_intermediate_output_ae7; assert_in_epsilon(459.4, worksheet.intermediate_output_ae7, 0.001); end
  def test_intermediate_output_af7; assert_in_epsilon(461.6, worksheet.intermediate_output_af7, 0.001); end
  def test_intermediate_output_ag7; assert_in_epsilon(456.7, worksheet.intermediate_output_ag7, 0.001); end
  def test_intermediate_output_ah7; assert_in_epsilon(474.2, worksheet.intermediate_output_ah7, 0.001); end
  def test_intermediate_output_ai7; assert_in_epsilon(479.8, worksheet.intermediate_output_ai7, 0.001); end
  def test_intermediate_output_aj7; assert_in_epsilon(477.1, worksheet.intermediate_output_aj7, 0.001); end
  def test_intermediate_output_ak7; assert_in_epsilon(481.5, worksheet.intermediate_output_ak7, 0.001); end
  def test_intermediate_output_al7; assert_in_epsilon(477.7, worksheet.intermediate_output_al7, 0.001); end
  def test_intermediate_output_am7; assert_in_epsilon(478, worksheet.intermediate_output_am7, 0.001); end
  def test_intermediate_output_an7; assert_in_epsilon(487.7, worksheet.intermediate_output_an7, 0.001); end
  def test_intermediate_output_ao7; assert_in_epsilon(486.4, worksheet.intermediate_output_ao7, 0.001); end
  def test_intermediate_output_ap7; assert_in_epsilon(491, worksheet.intermediate_output_ap7, 0.001); end
  def test_intermediate_output_aq7; assert_in_epsilon(494.4, worksheet.intermediate_output_aq7, 0.001); end
  def test_intermediate_output_ar7; assert_in_epsilon(497.1, worksheet.intermediate_output_ar7, 0.001); end
  def test_intermediate_output_as7; assert_in_epsilon(503, worksheet.intermediate_output_as7, 0.001); end
  def test_intermediate_output_at7; assert_in_epsilon(491, worksheet.intermediate_output_at7, 0.001); end
  def test_intermediate_output_au7; assert_in_epsilon(474.3, worksheet.intermediate_output_au7, 0.001); end
  def test_intermediate_output_av7; assert_in_epsilon(476.3, worksheet.intermediate_output_av7, 0.001); end
  def test_intermediate_output_aw7; assert_equal("Energy consumption in the United Kingdom, Transport Tables (http://www.decc.gov.uk/en/content/cms/statistics/publications/ecuk/ecuk.aspx). Ktoe are converted into TWh ", worksheet.intermediate_output_aw7); end
  def test_intermediate_output_ay7; assert_in_epsilon(490.85404977847907, worksheet.intermediate_output_ay7, 0.001); end
  def test_intermediate_output_az7; assert_in_epsilon(444.05739657200286, worksheet.intermediate_output_az7, 0.001); end
  def test_intermediate_output_ba7; assert_in_epsilon(391.90139459514484, worksheet.intermediate_output_ba7, 0.001); end
  def test_intermediate_output_bb7; assert_in_epsilon(326.6343515745874, worksheet.intermediate_output_bb7, 0.001); end
  def test_intermediate_output_bc7; assert_in_epsilon(235.80575185633296, worksheet.intermediate_output_bc7, 0.001); end
  def test_intermediate_output_bd7; assert_in_epsilon(162.93890022696309, worksheet.intermediate_output_bd7, 0.001); end
  def test_intermediate_output_be7; assert_in_epsilon(143.49978826725086, worksheet.intermediate_output_be7, 0.001); end
  def test_intermediate_output_bf7; assert_in_epsilon(125.81400184399723, worksheet.intermediate_output_bf7, 0.001); end
  def test_intermediate_output_bg7; assert_in_epsilon(106.73514124894554, worksheet.intermediate_output_bg7, 0.001); end
  def test_intermediate_output_bh7; assert_in_epsilon(90.35365259246782, worksheet.intermediate_output_bh7, 0.001); end
  def test_intermediate_output_c8; assert_equal("T.02", worksheet.intermediate_output_c8); end
  def test_intermediate_output_d8; assert_equal("Rail transport", worksheet.intermediate_output_d8); end
  def test_intermediate_output_f8; assert_in_epsilon(16.24699816643595, worksheet.intermediate_output_f8, 0.001); end
  def test_intermediate_output_h8; assert_in_epsilon(13.3, worksheet.intermediate_output_h8, 0.001); end
  def test_intermediate_output_i8; assert_in_epsilon(12.4, worksheet.intermediate_output_i8, 0.001); end
  def test_intermediate_output_j8; assert_in_epsilon(11.6, worksheet.intermediate_output_j8, 0.001); end
  def test_intermediate_output_k8; assert_in_epsilon(11.6, worksheet.intermediate_output_k8, 0.001); end
  def test_intermediate_output_l8; assert_in_epsilon(11, worksheet.intermediate_output_l8, 0.001); end
  def test_intermediate_output_m8; assert_in_epsilon(10.7, worksheet.intermediate_output_m8, 0.001); end
  def test_intermediate_output_n8; assert_in_epsilon(10.2, worksheet.intermediate_output_n8, 0.001); end
  def test_intermediate_output_o8; assert_in_epsilon(10.3, worksheet.intermediate_output_o8, 0.001); end
  def test_intermediate_output_p8; assert_in_epsilon(10.5, worksheet.intermediate_output_p8, 0.001); end
  def test_intermediate_output_q8; assert_in_epsilon(10.3, worksheet.intermediate_output_q8, 0.001); end
  def test_intermediate_output_r8; assert_in_epsilon(10.1, worksheet.intermediate_output_r8, 0.001); end
  def test_intermediate_output_s8; assert_in_epsilon(9.7, worksheet.intermediate_output_s8, 0.001); end
  def test_intermediate_output_t8; assert_in_epsilon(8.7, worksheet.intermediate_output_t8, 0.001); end
  def test_intermediate_output_u8; assert_in_epsilon(9.2, worksheet.intermediate_output_u8, 0.001); end
  def test_intermediate_output_v8; assert_in_epsilon(8.8, worksheet.intermediate_output_v8, 0.001); end
  def test_intermediate_output_w8; assert_in_epsilon(8.9, worksheet.intermediate_output_w8, 0.001); end
  def test_intermediate_output_x8; assert_in_epsilon(8.9, worksheet.intermediate_output_x8, 0.001); end
  def test_intermediate_output_y8; assert_in_epsilon(8.5, worksheet.intermediate_output_y8, 0.001); end
  def test_intermediate_output_z8; assert_in_epsilon(8.7, worksheet.intermediate_output_z8, 0.001); end
  def test_intermediate_output_aa8; assert_in_epsilon(8.1, worksheet.intermediate_output_aa8, 0.001); end
  def test_intermediate_output_ab8; assert_in_epsilon(9.3, worksheet.intermediate_output_ab8, 0.001); end
  def test_intermediate_output_ac8; assert_in_epsilon(9.4, worksheet.intermediate_output_ac8, 0.001); end
  def test_intermediate_output_ad8; assert_in_epsilon(9.7, worksheet.intermediate_output_ad8, 0.001); end
  def test_intermediate_output_ae8; assert_in_epsilon(10.8, worksheet.intermediate_output_ae8, 0.001); end
  def test_intermediate_output_af8; assert_in_epsilon(10.3, worksheet.intermediate_output_af8, 0.001); end
  def test_intermediate_output_ag8; assert_in_epsilon(10.7, worksheet.intermediate_output_ag8, 0.001); end
  def test_intermediate_output_ah8; assert_in_epsilon(11.1, worksheet.intermediate_output_ah8, 0.001); end
  def test_intermediate_output_ai8; assert_in_epsilon(10.3, worksheet.intermediate_output_ai8, 0.001); end
  def test_intermediate_output_aj8; assert_in_epsilon(11.1, worksheet.intermediate_output_aj8, 0.001); end
  def test_intermediate_output_ak8; assert_in_epsilon(11.3, worksheet.intermediate_output_ak8, 0.001); end
  def test_intermediate_output_al8; assert_in_epsilon(11.4, worksheet.intermediate_output_al8, 0.001); end
  def test_intermediate_output_am8; assert_in_epsilon(11.8, worksheet.intermediate_output_am8, 0.001); end
  def test_intermediate_output_an8; assert_in_epsilon(11.5, worksheet.intermediate_output_an8, 0.001); end
  def test_intermediate_output_ao8; assert_in_epsilon(11.4, worksheet.intermediate_output_ao8, 0.001); end
  def test_intermediate_output_ap8; assert_in_epsilon(12.2, worksheet.intermediate_output_ap8, 0.001); end
  def test_intermediate_output_aq8; assert_in_epsilon(11.9, worksheet.intermediate_output_aq8, 0.001); end
  def test_intermediate_output_ar8; assert_in_epsilon(11.4, worksheet.intermediate_output_ar8, 0.001); end
  def test_intermediate_output_as8; assert_in_epsilon(11.5, worksheet.intermediate_output_as8, 0.001); end
  def test_intermediate_output_at8; assert_in_epsilon(11.5, worksheet.intermediate_output_at8, 0.001); end
  def test_intermediate_output_au8; assert_in_epsilon(11.5, worksheet.intermediate_output_au8, 0.001); end
  def test_intermediate_output_av8; assert_in_epsilon(11.5, worksheet.intermediate_output_av8, 0.001); end
  def test_intermediate_output_aw8; assert_equal("Energy consumption in the United Kingdom, Transport Tables (http://www.decc.gov.uk/en/content/cms/statistics/publications/ecuk/ecuk.aspx). Ktoe are converted into TWh. Data in the Transport Tables pre-2004 includes energy used in platforms and has been deflated to broadly reflect only the energy used in trains. ", worksheet.intermediate_output_aw8); end
  def test_intermediate_output_ay8; assert_in_epsilon(15.852446803025652, worksheet.intermediate_output_ay8, 0.001); end
  def test_intermediate_output_az8; assert_in_epsilon(18.635917552258014, worksheet.intermediate_output_az8, 0.001); end
  def test_intermediate_output_ba8; assert_in_epsilon(19.737175406982946, worksheet.intermediate_output_ba8, 0.001); end
  def test_intermediate_output_bb8; assert_in_epsilon(19.551529010621252, worksheet.intermediate_output_bb8, 0.001); end
  def test_intermediate_output_bc8; assert_in_epsilon(19.545232966038846, worksheet.intermediate_output_bc8, 0.001); end
  def test_intermediate_output_bd8; assert_in_epsilon(18.824855374621464, worksheet.intermediate_output_bd8, 0.001); end
  def test_intermediate_output_be8; assert_in_epsilon(18.105105992897908, worksheet.intermediate_output_be8, 0.001); end
  def test_intermediate_output_bf8; assert_in_epsilon(17.222397379222713, worksheet.intermediate_output_bf8, 0.001); end
  def test_intermediate_output_bg8; assert_in_epsilon(16.23272585654513, worksheet.intermediate_output_bg8, 0.001); end
  def test_intermediate_output_bh8; assert_in_epsilon(15.180965558887394, worksheet.intermediate_output_bh8, 0.001); end
  def test_intermediate_output_c9; assert_equal("T.03", worksheet.intermediate_output_c9); end
  def test_intermediate_output_d9; assert_equal("Domestic aviation", worksheet.intermediate_output_d9); end
  def test_intermediate_output_f9; assert_in_epsilon(8.73469387755102, worksheet.intermediate_output_f9, 0.001); end
  def test_intermediate_output_h9; assert_in_epsilon(2.7, worksheet.intermediate_output_h9, 0.001); end
  def test_intermediate_output_i9; assert_in_epsilon(3, worksheet.intermediate_output_i9, 0.001); end
  def test_intermediate_output_j9; assert_in_epsilon(3.1, worksheet.intermediate_output_j9, 0.001); end
  def test_intermediate_output_k9; assert_in_epsilon(3.4, worksheet.intermediate_output_k9, 0.001); end
  def test_intermediate_output_l9; assert_in_epsilon(2.9, worksheet.intermediate_output_l9, 0.001); end
  def test_intermediate_output_m9; assert_in_epsilon(3, worksheet.intermediate_output_m9, 0.001); end
  def test_intermediate_output_n9; assert_in_epsilon(3.1, worksheet.intermediate_output_n9, 0.001); end
  def test_intermediate_output_o9; assert_in_epsilon(3.3, worksheet.intermediate_output_o9, 0.001); end
  def test_intermediate_output_p9; assert_in_epsilon(3.5, worksheet.intermediate_output_p9, 0.001); end
  def test_intermediate_output_q9; assert_in_epsilon(3.6, worksheet.intermediate_output_q9, 0.001); end
  def test_intermediate_output_r9; assert_in_epsilon(3.7, worksheet.intermediate_output_r9, 0.001); end
  def test_intermediate_output_s9; assert_in_epsilon(3.5, worksheet.intermediate_output_s9, 0.001); end
  def test_intermediate_output_t9; assert_in_epsilon(3.5, worksheet.intermediate_output_t9, 0.001); end
  def test_intermediate_output_u9; assert_in_epsilon(3.6, worksheet.intermediate_output_u9, 0.001); end
  def test_intermediate_output_v9; assert_in_epsilon(3.8, worksheet.intermediate_output_v9, 0.001); end
  def test_intermediate_output_w9; assert_in_epsilon(3.9, worksheet.intermediate_output_w9, 0.001); end
  def test_intermediate_output_x9; assert_in_epsilon(4.3, worksheet.intermediate_output_x9, 0.001); end
  def test_intermediate_output_y9; assert_in_epsilon(4.5, worksheet.intermediate_output_y9, 0.001); end
  def test_intermediate_output_z9; assert_in_epsilon(4.8, worksheet.intermediate_output_z9, 0.001); end
  def test_intermediate_output_aa9; assert_in_epsilon(5.1, worksheet.intermediate_output_aa9, 0.001); end
  def test_intermediate_output_ab9; assert_in_epsilon(5.1, worksheet.intermediate_output_ab9, 0.001); end
  def test_intermediate_output_ac9; assert_in_epsilon(4.8, worksheet.intermediate_output_ac9, 0.001); end
  def test_intermediate_output_ad9; assert_in_epsilon(5.2, worksheet.intermediate_output_ad9, 0.001); end
  def test_intermediate_output_ae9; assert_in_epsilon(5.5, worksheet.intermediate_output_ae9, 0.001); end
  def test_intermediate_output_af9; assert_in_epsilon(5.6, worksheet.intermediate_output_af9, 0.001); end
  def test_intermediate_output_ag9; assert_in_epsilon(5.9, worksheet.intermediate_output_ag9, 0.001); end
  def test_intermediate_output_ah9; assert_in_epsilon(6.2, worksheet.intermediate_output_ah9, 0.001); end
  def test_intermediate_output_ai9; assert_in_epsilon(6.5, worksheet.intermediate_output_ai9, 0.001); end
  def test_intermediate_output_aj9; assert_in_epsilon(7.1, worksheet.intermediate_output_aj9, 0.001); end
  def test_intermediate_output_ak9; assert_in_epsilon(7.7, worksheet.intermediate_output_ak9, 0.001); end
  def test_intermediate_output_al9; assert_in_epsilon(8.4, worksheet.intermediate_output_al9, 0.001); end
  def test_intermediate_output_am9; assert_in_epsilon(8.2, worksheet.intermediate_output_am9, 0.001); end
  def test_intermediate_output_an9; assert_in_epsilon(8.1, worksheet.intermediate_output_an9, 0.001); end
  def test_intermediate_output_ao9; assert_in_epsilon(8.3, worksheet.intermediate_output_ao9, 0.001); end
  def test_intermediate_output_ap9; assert_in_epsilon(9, worksheet.intermediate_output_ap9, 0.001); end
  def test_intermediate_output_aq9; assert_in_epsilon(9.7, worksheet.intermediate_output_aq9, 0.001); end
  def test_intermediate_output_ar9; assert_in_epsilon(9.8, worksheet.intermediate_output_ar9, 0.001); end
  def test_intermediate_output_as9; assert_in_epsilon(9.7, worksheet.intermediate_output_as9, 0.001); end
  def test_intermediate_output_at9; assert_in_epsilon(9.4, worksheet.intermediate_output_at9, 0.001); end
  def test_intermediate_output_au9; assert_in_epsilon(8.9, worksheet.intermediate_output_au9, 0.001); end
  def test_intermediate_output_av9; assert_in_epsilon(8.6, worksheet.intermediate_output_av9, 0.001); end
  def test_intermediate_output_aw9; assert_equal("Energy consumption in the United Kingdom, Transport Tables (http://www.decc.gov.uk/en/content/cms/statistics/publications/ecuk/ecuk.aspx). Ktoe are converted into TWh ", worksheet.intermediate_output_aw9); end
  def test_intermediate_output_ay9; assert_in_epsilon(9.019834608709552, worksheet.intermediate_output_ay9, 0.001); end
  def test_intermediate_output_az9; assert_in_epsilon(8.4601255326889, worksheet.intermediate_output_az9, 0.001); end
  def test_intermediate_output_ba9; assert_in_epsilon(7.569213924506803, worksheet.intermediate_output_ba9, 0.001); end
  def test_intermediate_output_bb9; assert_in_epsilon(6.730421134036203, worksheet.intermediate_output_bb9, 0.001); end
  def test_intermediate_output_bc9; assert_in_epsilon(5.9329174348258995, worksheet.intermediate_output_bc9, 0.001); end
  def test_intermediate_output_bd9; assert_in_epsilon(5.168912153603201, worksheet.intermediate_output_bd9, 0.001); end
  def test_intermediate_output_be9; assert_in_epsilon(4.44373056794585, worksheet.intermediate_output_be9, 0.001); end
  def test_intermediate_output_bf9; assert_in_epsilon(3.7683975653289035, worksheet.intermediate_output_bf9, 0.001); end
  def test_intermediate_output_bg9; assert_in_epsilon(3.146702306458619, worksheet.intermediate_output_bg9, 0.001); end
  def test_intermediate_output_bh9; assert_in_epsilon(2.577874210646388, worksheet.intermediate_output_bh9, 0.001); end
  def test_intermediate_output_c10; assert_equal("T.04", worksheet.intermediate_output_c10); end
  def test_intermediate_output_d10; assert_equal("National navigation", worksheet.intermediate_output_d10); end
  def test_intermediate_output_f10; assert_in_epsilon(18.81937240536579, worksheet.intermediate_output_f10, 0.001); end
  def test_intermediate_output_h10; assert_in_epsilon(15, worksheet.intermediate_output_h10, 0.001); end
  def test_intermediate_output_i10; assert_in_epsilon(13.3, worksheet.intermediate_output_i10, 0.001); end
  def test_intermediate_output_j10; assert_in_epsilon(11.5, worksheet.intermediate_output_j10, 0.001); end
  def test_intermediate_output_k10; assert_in_epsilon(12.8, worksheet.intermediate_output_k10, 0.001); end
  def test_intermediate_output_l10; assert_in_epsilon(14.5, worksheet.intermediate_output_l10, 0.001); end
  def test_intermediate_output_m10; assert_in_epsilon(15.2, worksheet.intermediate_output_m10, 0.001); end
  def test_intermediate_output_n10; assert_in_epsilon(15.4, worksheet.intermediate_output_n10, 0.001); end
  def test_intermediate_output_o10; assert_in_epsilon(15.4, worksheet.intermediate_output_o10, 0.001); end
  def test_intermediate_output_p10; assert_in_epsilon(15.2, worksheet.intermediate_output_p10, 0.001); end
  def test_intermediate_output_q10; assert_in_epsilon(15.9, worksheet.intermediate_output_q10, 0.001); end
  def test_intermediate_output_r10; assert_in_epsilon(14.7, worksheet.intermediate_output_r10, 0.001); end
  def test_intermediate_output_s10; assert_in_epsilon(12.8, worksheet.intermediate_output_s10, 0.001); end
  def test_intermediate_output_t10; assert_in_epsilon(13.8, worksheet.intermediate_output_t10, 0.001); end
  def test_intermediate_output_u10; assert_in_epsilon(14.1, worksheet.intermediate_output_u10, 0.001); end
  def test_intermediate_output_v10; assert_in_epsilon(15.4, worksheet.intermediate_output_v10, 0.001); end
  def test_intermediate_output_w10; assert_in_epsilon(14.6, worksheet.intermediate_output_w10, 0.001); end
  def test_intermediate_output_x10; assert_in_epsilon(13.4, worksheet.intermediate_output_x10, 0.001); end
  def test_intermediate_output_y10; assert_in_epsilon(12.8, worksheet.intermediate_output_y10, 0.001); end
  def test_intermediate_output_z10; assert_in_epsilon(13.5, worksheet.intermediate_output_z10, 0.001); end
  def test_intermediate_output_aa10; assert_in_epsilon(15.8, worksheet.intermediate_output_aa10, 0.001); end
  def test_intermediate_output_ab10; assert_in_epsilon(15.9, worksheet.intermediate_output_ab10, 0.001); end
  def test_intermediate_output_ac10; assert_in_epsilon(16.6, worksheet.intermediate_output_ac10, 0.001); end
  def test_intermediate_output_ad10; assert_in_epsilon(16, worksheet.intermediate_output_ad10, 0.001); end
  def test_intermediate_output_ae10; assert_in_epsilon(15.6, worksheet.intermediate_output_ae10, 0.001); end
  def test_intermediate_output_af10; assert_in_epsilon(14.4, worksheet.intermediate_output_af10, 0.001); end
  def test_intermediate_output_ag10; assert_in_epsilon(13.9, worksheet.intermediate_output_ag10, 0.001); end
  def test_intermediate_output_ah10; assert_in_epsilon(15.1, worksheet.intermediate_output_ah10, 0.001); end
  def test_intermediate_output_ai10; assert_in_epsilon(14.6, worksheet.intermediate_output_ai10, 0.001); end
  def test_intermediate_output_aj10; assert_in_epsilon(13.7, worksheet.intermediate_output_aj10, 0.001); end
  def test_intermediate_output_ak10; assert_in_epsilon(12.4, worksheet.intermediate_output_ak10, 0.001); end
  def test_intermediate_output_al10; assert_in_epsilon(12, worksheet.intermediate_output_al10, 0.001); end
  def test_intermediate_output_am10; assert_in_epsilon(9.8, worksheet.intermediate_output_am10, 0.001); end
  def test_intermediate_output_an10; assert_in_epsilon(8.2, worksheet.intermediate_output_an10, 0.001); end
  def test_intermediate_output_ao10; assert_in_epsilon(14.4, worksheet.intermediate_output_ao10, 0.001); end
  def test_intermediate_output_ap10; assert_in_epsilon(13.9, worksheet.intermediate_output_ap10, 0.001); end
  def test_intermediate_output_aq10; assert_in_epsilon(15.9, worksheet.intermediate_output_aq10, 0.001); end
  def test_intermediate_output_ar10; assert_in_epsilon(21, worksheet.intermediate_output_ar10, 0.001); end
  def test_intermediate_output_as10; assert_in_epsilon(18.7, worksheet.intermediate_output_as10, 0.001); end
  def test_intermediate_output_at10; assert_in_epsilon(20.4, worksheet.intermediate_output_at10, 0.001); end
  def test_intermediate_output_au10; assert_in_epsilon(18.9, worksheet.intermediate_output_au10, 0.001); end
  def test_intermediate_output_av10; assert_in_epsilon(17.1, worksheet.intermediate_output_av10, 0.001); end
  def test_intermediate_output_aw10; assert_equal("Energy consumption in the United Kingdom, Transport Tables (http://www.decc.gov.uk/en/content/cms/statistics/publications/ecuk/ecuk.aspx). Ktoe are converted into TWh ", worksheet.intermediate_output_aw10); end
  def test_intermediate_output_ay10; assert_in_epsilon(18.817339999999998, worksheet.intermediate_output_ay10, 0.001); end
  def test_intermediate_output_az10; assert_in_epsilon(27.144937170003814, worksheet.intermediate_output_az10, 0.001); end
  def test_intermediate_output_ba10; assert_in_epsilon(27.32305556984198, worksheet.intermediate_output_ba10, 0.001); end
  def test_intermediate_output_bb10; assert_in_epsilon(27.858606532706467, worksheet.intermediate_output_bb10, 0.001); end
  def test_intermediate_output_bc10; assert_in_epsilon(28.582641909901167, worksheet.intermediate_output_bc10, 0.001); end
  def test_intermediate_output_bd10; assert_in_epsilon(29.635401755478146, worksheet.intermediate_output_bd10, 0.001); end
  def test_intermediate_output_be10; assert_in_epsilon(30.699187307229483, worksheet.intermediate_output_be10, 0.001); end
  def test_intermediate_output_bf10; assert_in_epsilon(31.774954722510824, worksheet.intermediate_output_bf10, 0.001); end
  def test_intermediate_output_bg10; assert_in_epsilon(32.86371234516199, worksheet.intermediate_output_bg10, 0.001); end
  def test_intermediate_output_bh10; assert_in_epsilon(33.96652500925593, worksheet.intermediate_output_bh10, 0.001); end
  def test_intermediate_output_c11; assert_equal("T.05", worksheet.intermediate_output_c11); end
  def test_intermediate_output_d11; assert_equal("International aviation", worksheet.intermediate_output_d11); end
  def test_intermediate_output_f11; assert_in_epsilon(152.99167541479133, worksheet.intermediate_output_f11, 0.001); end
  def test_intermediate_output_h11; assert_in_epsilon(42.3, worksheet.intermediate_output_h11, 0.001); end
  def test_intermediate_output_i11; assert_in_epsilon(46.4, worksheet.intermediate_output_i11, 0.001); end
  def test_intermediate_output_j11; assert_in_epsilon(49.3, worksheet.intermediate_output_j11, 0.001); end
  def test_intermediate_output_k11; assert_in_epsilon(52.5, worksheet.intermediate_output_k11, 0.001); end
  def test_intermediate_output_l11; assert_in_epsilon(46.1, worksheet.intermediate_output_l11, 0.001); end
  def test_intermediate_output_m11; assert_in_epsilon(47.4, worksheet.intermediate_output_m11, 0.001); end
  def test_intermediate_output_n11; assert_in_epsilon(48.9, worksheet.intermediate_output_n11, 0.001); end
  def test_intermediate_output_o11; assert_in_epsilon(51.1, worksheet.intermediate_output_o11, 0.001); end
  def test_intermediate_output_p11; assert_in_epsilon(55.2, worksheet.intermediate_output_p11, 0.001); end
  def test_intermediate_output_q11; assert_in_epsilon(57.1, worksheet.intermediate_output_q11, 0.001); end
  def test_intermediate_output_r11; assert_in_epsilon(57.3, worksheet.intermediate_output_r11, 0.001); end
  def test_intermediate_output_s11; assert_in_epsilon(54.9, worksheet.intermediate_output_s11, 0.001); end
  def test_intermediate_output_t11; assert_in_epsilon(54.6, worksheet.intermediate_output_t11, 0.001); end
  def test_intermediate_output_u11; assert_in_epsilon(55.7, worksheet.intermediate_output_u11, 0.001); end
  def test_intermediate_output_v11; assert_in_epsilon(58.8, worksheet.intermediate_output_v11, 0.001); end
  def test_intermediate_output_w11; assert_in_epsilon(61, worksheet.intermediate_output_w11, 0.001); end
  def test_intermediate_output_x11; assert_in_epsilon(67, worksheet.intermediate_output_x11, 0.001); end
  def test_intermediate_output_y11; assert_in_epsilon(70.8, worksheet.intermediate_output_y11, 0.001); end
  def test_intermediate_output_z11; assert_in_epsilon(75.5, worksheet.intermediate_output_z11, 0.001); end
  def test_intermediate_output_aa11; assert_in_epsilon(79.9, worksheet.intermediate_output_aa11, 0.001); end
  def test_intermediate_output_ab11; assert_in_epsilon(80.2, worksheet.intermediate_output_ab11, 0.001); end
  def test_intermediate_output_ac11; assert_in_epsilon(75.1, worksheet.intermediate_output_ac11, 0.001); end
  def test_intermediate_output_ad11; assert_in_epsilon(81.3, worksheet.intermediate_output_ad11, 0.001); end
  def test_intermediate_output_ae11; assert_in_epsilon(86, worksheet.intermediate_output_ae11, 0.001); end
  def test_intermediate_output_af11; assert_in_epsilon(88.2, worksheet.intermediate_output_af11, 0.001); end
  def test_intermediate_output_ag11; assert_in_epsilon(92.8, worksheet.intermediate_output_ag11, 0.001); end
  def test_intermediate_output_ah11; assert_in_epsilon(97.5, worksheet.intermediate_output_ah11, 0.001); end
  def test_intermediate_output_ai11; assert_in_epsilon(101.9, worksheet.intermediate_output_ai11, 0.001); end
  def test_intermediate_output_aj11; assert_in_epsilon(111.9, worksheet.intermediate_output_aj11, 0.001); end
  def test_intermediate_output_ak11; assert_in_epsilon(120.4, worksheet.intermediate_output_ak11, 0.001); end
  def test_intermediate_output_al11; assert_in_epsilon(130.9, worksheet.intermediate_output_al11, 0.001); end
  def test_intermediate_output_am11; assert_in_epsilon(128.7, worksheet.intermediate_output_am11, 0.001); end
  def test_intermediate_output_an11; assert_in_epsilon(127.4, worksheet.intermediate_output_an11, 0.001); end
  def test_intermediate_output_ao11; assert_in_epsilon(130.5, worksheet.intermediate_output_ao11, 0.001); end
  def test_intermediate_output_ap11; assert_in_epsilon(141.1, worksheet.intermediate_output_ap11, 0.001); end
  def test_intermediate_output_aq11; assert_in_epsilon(151.5, worksheet.intermediate_output_aq11, 0.001); end
  def test_intermediate_output_ar11; assert_in_epsilon(153, worksheet.intermediate_output_ar11, 0.001); end
  def test_intermediate_output_as11; assert_in_epsilon(152, worksheet.intermediate_output_as11, 0.001); end
  def test_intermediate_output_at11; assert_in_epsilon(147.7, worksheet.intermediate_output_at11, 0.001); end
  def test_intermediate_output_au11; assert_in_epsilon(139.4, worksheet.intermediate_output_au11, 0.001); end
  def test_intermediate_output_av11; assert_in_epsilon(134.3, worksheet.intermediate_output_av11, 0.001); end
  def test_intermediate_output_aw11; assert_equal("Energy consumption in the United Kingdom, Transport Tables (http://www.decc.gov.uk/en/content/cms/statistics/publications/ecuk/ecuk.aspx). Ktoe are converted into TWh ", worksheet.intermediate_output_aw11); end
  def test_intermediate_output_ay11; assert_in_epsilon(152.8, worksheet.intermediate_output_ay11, 0.001); end
  def test_intermediate_output_az11; assert_in_epsilon(145.27906976744188, worksheet.intermediate_output_az11, 0.001); end
  def test_intermediate_output_ba11; assert_in_epsilon(132.74418604651166, worksheet.intermediate_output_ba11, 0.001); end
  def test_intermediate_output_bb11; assert_in_epsilon(120.20930232558142, worksheet.intermediate_output_bb11, 0.001); end
  def test_intermediate_output_bc11; assert_in_epsilon(107.67441860465118, worksheet.intermediate_output_bc11, 0.001); end
  def test_intermediate_output_bd11; assert_in_epsilon(95.13953488372094, worksheet.intermediate_output_bd11, 0.001); end
  def test_intermediate_output_be11; assert_in_epsilon(82.6046511627907, worksheet.intermediate_output_be11, 0.001); end
  def test_intermediate_output_bf11; assert_in_epsilon(70.06976744186046, worksheet.intermediate_output_bf11, 0.001); end
  def test_intermediate_output_bg11; assert_in_epsilon(57.534883720930225, worksheet.intermediate_output_bg11, 0.001); end
  def test_intermediate_output_bh11; assert_in_epsilon(45, worksheet.intermediate_output_bh11, 0.001); end
  def test_intermediate_output_c12; assert_equal("T.06", worksheet.intermediate_output_c12); end
  def test_intermediate_output_d12; assert_equal("International shipping", worksheet.intermediate_output_d12); end
  def test_intermediate_output_f12; assert_in_epsilon(29.222291428230907, worksheet.intermediate_output_f12, 0.001); end
  def test_intermediate_output_ab12; assert_in_epsilon(40.1, worksheet.intermediate_output_ab12, 0.001); end
  def test_intermediate_output_ac12; assert_in_epsilon(40.6, worksheet.intermediate_output_ac12, 0.001); end
  def test_intermediate_output_ad12; assert_in_epsilon(40, worksheet.intermediate_output_ad12, 0.001); end
  def test_intermediate_output_ae12; assert_in_epsilon(40.5, worksheet.intermediate_output_ae12, 0.001); end
  def test_intermediate_output_af12; assert_in_epsilon(40.7, worksheet.intermediate_output_af12, 0.001); end
  def test_intermediate_output_ag12; assert_in_epsilon(39.1, worksheet.intermediate_output_ag12, 0.001); end
  def test_intermediate_output_ah12; assert_in_epsilon(39.4, worksheet.intermediate_output_ah12, 0.001); end
  def test_intermediate_output_ai12; assert_in_epsilon(41.9, worksheet.intermediate_output_ai12, 0.001); end
  def test_intermediate_output_aj12; assert_in_epsilon(41.5, worksheet.intermediate_output_aj12, 0.001); end
  def test_intermediate_output_ak12; assert_in_epsilon(39.9, worksheet.intermediate_output_ak12, 0.001); end
  def test_intermediate_output_al12; assert_in_epsilon(43.4, worksheet.intermediate_output_al12, 0.001); end
  def test_intermediate_output_am12; assert_in_epsilon(45.2, worksheet.intermediate_output_am12, 0.001); end
  def test_intermediate_output_an12; assert_in_epsilon(40.7, worksheet.intermediate_output_an12, 0.001); end
  def test_intermediate_output_ao12; assert_in_epsilon(43.9, worksheet.intermediate_output_ao12, 0.001); end
  def test_intermediate_output_ap12; assert_in_epsilon(47.4, worksheet.intermediate_output_ap12, 0.001); end
  def test_intermediate_output_aq12; assert_in_epsilon(48.3, worksheet.intermediate_output_aq12, 0.001); end
  def test_intermediate_output_ar12; assert_in_epsilon(47, worksheet.intermediate_output_ar12, 0.001); end
  def test_intermediate_output_aw12; assert_equal("Committee on Climate Change historic emissions estimates (http://downloads.theccc.org.uk.s3.amazonaws.com/Shipping%20Review/Shipping%20Review%20Web%20Exhibits.xls, Figure B5), converted into TWh using factors in the 2050 Calculator.", worksheet.intermediate_output_aw12); end
  def test_intermediate_output_ay12; assert_in_epsilon(54.1581570872572, worksheet.intermediate_output_ay12, 0.001); end
  def test_intermediate_output_az12; assert_in_epsilon(57.28499215184298, worksheet.intermediate_output_az12, 0.001); end
  def test_intermediate_output_ba12; assert_in_epsilon(52.37642070782899, worksheet.intermediate_output_ba12, 0.001); end
  def test_intermediate_output_bb12; assert_in_epsilon(42.384644676983896, worksheet.intermediate_output_bb12, 0.001); end
  def test_intermediate_output_bc12; assert_in_epsilon(39.88547771236235, worksheet.intermediate_output_bc12, 0.001); end
  def test_intermediate_output_bd12; assert_in_epsilon(37.53367155646424, worksheet.intermediate_output_bd12, 0.001); end
  def test_intermediate_output_be12; assert_in_epsilon(35.32053723081991, worksheet.intermediate_output_be12, 0.001); end
  def test_intermediate_output_bf12; assert_in_epsilon(33.23789809363531, worksheet.intermediate_output_bf12, 0.001); end
  def test_intermediate_output_bg12; assert_in_epsilon(31.278059630386895, worksheet.intermediate_output_bg12, 0.001); end
  def test_intermediate_output_bh12; assert_in_epsilon(29.43378102568326, worksheet.intermediate_output_bh12, 0.001); end
  def test_intermediate_output_d13; assert_equal("Transport", worksheet.intermediate_output_d13); end
  def test_intermediate_output_f13; assert_in_epsilon(728.5205609631445, worksheet.intermediate_output_f13, 0.001); end
  def test_intermediate_output_h13; assert_in_epsilon(365.6, worksheet.intermediate_output_h13, 0.001); end
  def test_intermediate_output_i13; assert_in_epsilon(378.7, worksheet.intermediate_output_i13, 0.001); end
  def test_intermediate_output_j13; assert_in_epsilon(391.9, worksheet.intermediate_output_j13, 0.001); end
  def test_intermediate_output_k13; assert_in_epsilon(415.1, worksheet.intermediate_output_k13, 0.001); end
  def test_intermediate_output_l13; assert_in_epsilon(401.5, worksheet.intermediate_output_l13, 0.001); end
  def test_intermediate_output_m13; assert_in_epsilon(397.1, worksheet.intermediate_output_m13, 0.001); end
  def test_intermediate_output_n13; assert_in_epsilon(410.4, worksheet.intermediate_output_n13, 0.001); end
  def test_intermediate_output_o13; assert_in_epsilon(420.2, worksheet.intermediate_output_o13, 0.001); end
  def test_intermediate_output_p13; assert_in_epsilon(439.9, worksheet.intermediate_output_p13, 0.001); end
  def test_intermediate_output_q13; assert_in_epsilon(449.1, worksheet.intermediate_output_q13, 0.001); end
  def test_intermediate_output_r13; assert_in_epsilon(451.2, worksheet.intermediate_output_r13, 0.001); end
  def test_intermediate_output_s13; assert_in_epsilon(436.8, worksheet.intermediate_output_s13, 0.001); end
  def test_intermediate_output_t13; assert_in_epsilon(445.4, worksheet.intermediate_output_t13, 0.001); end
  def test_intermediate_output_u13; assert_in_epsilon(457.3, worksheet.intermediate_output_u13, 0.001); end
  def test_intermediate_output_v13; assert_in_epsilon(477.3, worksheet.intermediate_output_v13, 0.001); end
  def test_intermediate_output_w13; assert_in_epsilon(485.6, worksheet.intermediate_output_w13, 0.001); end
  def test_intermediate_output_x13; assert_in_epsilon(514.2, worksheet.intermediate_output_x13, 0.001); end
  def test_intermediate_output_y13; assert_in_epsilon(534.2, worksheet.intermediate_output_y13, 0.001); end
  def test_intermediate_output_z13; assert_in_epsilon(565.2, worksheet.intermediate_output_z13, 0.001); end
  def test_intermediate_output_aa13; assert_in_epsilon(589.6, worksheet.intermediate_output_aa13, 0.001); end
  def test_intermediate_output_ab13; assert_in_epsilon(603.5, worksheet.intermediate_output_ab13, 0.001); end
  def test_intermediate_output_ac13; assert_in_epsilon(595.8, worksheet.intermediate_output_ac13, 0.001); end
  def test_intermediate_output_ad13; assert_in_epsilon(611.8, worksheet.intermediate_output_ad13, 0.001); end
  def test_intermediate_output_ae13; assert_in_epsilon(619.6, worksheet.intermediate_output_ae13, 0.001); end
  def test_intermediate_output_af13; assert_in_epsilon(622.3, worksheet.intermediate_output_af13, 0.001); end
  def test_intermediate_output_ag13; assert_in_epsilon(622.1, worksheet.intermediate_output_ag13, 0.001); end
  def test_intermediate_output_ah13; assert_in_epsilon(646.4, worksheet.intermediate_output_ah13, 0.001); end
  def test_intermediate_output_ai13; assert_in_epsilon(655.2, worksheet.intermediate_output_ai13, 0.001); end
  def test_intermediate_output_aj13; assert_in_epsilon(663.3, worksheet.intermediate_output_aj13, 0.001); end
  def test_intermediate_output_ak13; assert_in_epsilon(666.7, worksheet.intermediate_output_ak13, 0.001); end
  def test_intermediate_output_al13; assert_in_epsilon(670.7, worksheet.intermediate_output_al13, 0.001); end
  def test_intermediate_output_am13; assert_in_epsilon(669.5, worksheet.intermediate_output_am13, 0.001); end
  def test_intermediate_output_an13; assert_in_epsilon(671.4, worksheet.intermediate_output_an13, 0.001); end
  def test_intermediate_output_ao13; assert_in_epsilon(677.4, worksheet.intermediate_output_ao13, 0.001); end
  def test_intermediate_output_ap13; assert_in_epsilon(693.1, worksheet.intermediate_output_ap13, 0.001); end
  def test_intermediate_output_aq13; assert_in_epsilon(708.6, worksheet.intermediate_output_aq13, 0.001); end
  def test_intermediate_output_ar13; assert_in_epsilon(721.2, worksheet.intermediate_output_ar13, 0.001); end
  def test_intermediate_output_as13; assert_in_epsilon(724.2, worksheet.intermediate_output_as13, 0.001); end
  def test_intermediate_output_at13; assert_in_epsilon(711.8, worksheet.intermediate_output_at13, 0.001); end
  def test_intermediate_output_au13; assert_in_epsilon(683.4, worksheet.intermediate_output_au13, 0.001); end
  def test_intermediate_output_av13; assert_in_epsilon(674, worksheet.intermediate_output_av13, 0.001); end
  def test_intermediate_output_aw13; assert_equal("Calculation (sum of subcategories)", worksheet.intermediate_output_aw13); end
  def test_intermediate_output_ay13; assert_in_epsilon(741.5018282774715, worksheet.intermediate_output_ay13, 0.001); end
  def test_intermediate_output_az13; assert_in_epsilon(700.8624387462385, worksheet.intermediate_output_az13, 0.001); end
  def test_intermediate_output_ba13; assert_in_epsilon(631.6514462508172, worksheet.intermediate_output_ba13, 0.001); end
  def test_intermediate_output_bb13; assert_in_epsilon(543.3688552545166, worksheet.intermediate_output_bb13, 0.001); end
  def test_intermediate_output_bc13; assert_in_epsilon(437.4264404841124, worksheet.intermediate_output_bc13, 0.001); end
  def test_intermediate_output_bd13; assert_in_epsilon(349.24127595085105, worksheet.intermediate_output_bd13, 0.001); end
  def test_intermediate_output_be13; assert_in_epsilon(314.6730005289347, worksheet.intermediate_output_be13, 0.001); end
  def test_intermediate_output_bf13; assert_in_epsilon(281.8874170465554, worksheet.intermediate_output_bf13, 0.001); end
  def test_intermediate_output_bg13; assert_in_epsilon(247.79122510842842, worksheet.intermediate_output_bg13, 0.001); end
  def test_intermediate_output_bh13; assert_in_epsilon(216.51279839694078, worksheet.intermediate_output_bh13, 0.001); end
  def test_intermediate_output_c14; assert_equal("I.01", worksheet.intermediate_output_c14); end
  def test_intermediate_output_d14; assert_equal("Industry", worksheet.intermediate_output_d14); end
  def test_intermediate_output_f14; assert_in_epsilon(443.27401323896316, worksheet.intermediate_output_f14, 0.001); end
  def test_intermediate_output_ak14; assert_in_epsilon(482.5, worksheet.intermediate_output_ak14, 0.001); end
  def test_intermediate_output_al14; assert_in_epsilon(521.7, worksheet.intermediate_output_al14, 0.001); end
  def test_intermediate_output_am14; assert_in_epsilon(508.2, worksheet.intermediate_output_am14, 0.001); end
  def test_intermediate_output_an14; assert_in_epsilon(481.5, worksheet.intermediate_output_an14, 0.001); end
  def test_intermediate_output_ao14; assert_in_epsilon(487.8, worksheet.intermediate_output_ao14, 0.001); end
  def test_intermediate_output_ap14; assert_in_epsilon(469.8, worksheet.intermediate_output_ap14, 0.001); end
  def test_intermediate_output_aq14; assert_in_epsilon(468.3, worksheet.intermediate_output_aq14, 0.001); end
  def test_intermediate_output_ar14; assert_in_epsilon(460.1, worksheet.intermediate_output_ar14, 0.001); end
  def test_intermediate_output_as14; assert_in_epsilon(449.7, worksheet.intermediate_output_as14, 0.001); end
  def test_intermediate_output_at14; assert_in_epsilon(444.7, worksheet.intermediate_output_at14, 0.001); end
  def test_intermediate_output_au14; assert_in_epsilon(388.9, worksheet.intermediate_output_au14, 0.001); end
  def test_intermediate_output_av14; assert_in_epsilon(400.8, worksheet.intermediate_output_av14, 0.001); end
  def test_intermediate_output_aw14; assert_equal("Digest of UK Energy Statistics (DUKES) data, numerous tables (separate note is available)", worksheet.intermediate_output_aw14); end
  def test_intermediate_output_ay14; assert_in_epsilon(484.94967152772296, worksheet.intermediate_output_ay14, 0.001); end
  def test_intermediate_output_az14; assert_in_epsilon(464.18709016109824, worksheet.intermediate_output_az14, 0.001); end
  def test_intermediate_output_ba14; assert_in_epsilon(438.908078860621, worksheet.intermediate_output_ba14, 0.001); end
  def test_intermediate_output_bb14; assert_in_epsilon(415.23203911335725, worksheet.intermediate_output_bb14, 0.001); end
  def test_intermediate_output_bc14; assert_in_epsilon(394.47839797526944, worksheet.intermediate_output_bc14, 0.001); end
  def test_intermediate_output_bd14; assert_in_epsilon(375.82248017143996, worksheet.intermediate_output_bd14, 0.001); end
  def test_intermediate_output_be14; assert_in_epsilon(359.74755829273045, worksheet.intermediate_output_be14, 0.001); end
  def test_intermediate_output_bf14; assert_in_epsilon(345.3571707928684, worksheet.intermediate_output_bf14, 0.001); end
  def test_intermediate_output_bg14; assert_in_epsilon(332.3733993030453, worksheet.intermediate_output_bg14, 0.001); end
  def test_intermediate_output_bh14; assert_in_epsilon(320.57414001926134, worksheet.intermediate_output_bh14, 0.001); end
  def test_intermediate_output_c15; assert_equal("H.01", worksheet.intermediate_output_c15); end
  def test_intermediate_output_d15; assert_equal("Heating & cooling", worksheet.intermediate_output_d15); end
  def test_intermediate_output_f15; assert_in_epsilon(544.7437698912538, worksheet.intermediate_output_f15, 0.001); end
  def test_intermediate_output_al15; assert_in_epsilon(616.2, worksheet.intermediate_output_al15, 0.001); end
  def test_intermediate_output_am15; assert_in_epsilon(629.3, worksheet.intermediate_output_am15, 0.001); end
  def test_intermediate_output_an15; assert_in_epsilon(592.7, worksheet.intermediate_output_an15, 0.001); end
  def test_intermediate_output_ao15; assert_in_epsilon(601.2, worksheet.intermediate_output_ao15, 0.001); end
  def test_intermediate_output_ap15; assert_in_epsilon(614.1, worksheet.intermediate_output_ap15, 0.001); end
  def test_intermediate_output_aq15; assert_in_epsilon(590.6, worksheet.intermediate_output_aq15, 0.001); end
  def test_intermediate_output_ar15; assert_in_epsilon(568.9, worksheet.intermediate_output_ar15, 0.001); end
  def test_intermediate_output_as15; assert_in_epsilon(546, worksheet.intermediate_output_as15, 0.001); end
  def test_intermediate_output_at15; assert_in_epsilon(548.9, worksheet.intermediate_output_at15, 0.001); end
  def test_intermediate_output_aw15; assert_equal("Energy consumption in the UK statistics (Domestic energy consumption by end use 1970 to 2009) and DUKES (Detailed service sector energy consumption by subsector and end use by fuel,  2001)", worksheet.intermediate_output_aw15); end
  def test_intermediate_output_ay15; assert_in_epsilon(498.63396951173206, worksheet.intermediate_output_ay15, 0.001); end
  def test_intermediate_output_az15; assert_in_epsilon(475.7998658645412, worksheet.intermediate_output_az15, 0.001); end
  def test_intermediate_output_ba15; assert_in_epsilon(429.28352068489494, worksheet.intermediate_output_ba15, 0.001); end
  def test_intermediate_output_bb15; assert_in_epsilon(395.19820572552857, worksheet.intermediate_output_bb15, 0.001); end
  def test_intermediate_output_bc15; assert_in_epsilon(364.3638645619128, worksheet.intermediate_output_bc15, 0.001); end
  def test_intermediate_output_bd15; assert_in_epsilon(335.95285602535546, worksheet.intermediate_output_bd15, 0.001); end
  def test_intermediate_output_be15; assert_in_epsilon(309.7487661527653, worksheet.intermediate_output_be15, 0.001); end
  def test_intermediate_output_bf15; assert_in_epsilon(285.87877349420444, worksheet.intermediate_output_bf15, 0.001); end
  def test_intermediate_output_bg15; assert_in_epsilon(264.2068010873533, worksheet.intermediate_output_bg15, 0.001); end
  def test_intermediate_output_bh15; assert_in_epsilon(246.12920593273415, worksheet.intermediate_output_bh15, 0.001); end
  def test_intermediate_output_c16; assert_equal("L.01", worksheet.intermediate_output_c16); end
  def test_intermediate_output_d16; assert_equal("Lighting & appliances", worksheet.intermediate_output_d16); end
  def test_intermediate_output_f16; assert_in_epsilon(183.9950104721941, worksheet.intermediate_output_f16, 0.001); end
  def test_intermediate_output_al16; assert_in_epsilon(173, worksheet.intermediate_output_al16, 0.001); end
  def test_intermediate_output_am16; assert_in_epsilon(172, worksheet.intermediate_output_am16, 0.001); end
  def test_intermediate_output_an16; assert_in_epsilon(177.3, worksheet.intermediate_output_an16, 0.001); end
  def test_intermediate_output_ao16; assert_in_epsilon(178.4, worksheet.intermediate_output_ao16, 0.001); end
  def test_intermediate_output_ap16; assert_in_epsilon(177.9, worksheet.intermediate_output_ap16, 0.001); end
  def test_intermediate_output_aq16; assert_in_epsilon(184.1, worksheet.intermediate_output_aq16, 0.001); end
  def test_intermediate_output_ar16; assert_in_epsilon(185.9, worksheet.intermediate_output_ar16, 0.001); end
  def test_intermediate_output_as16; assert_in_epsilon(185.5, worksheet.intermediate_output_as16, 0.001); end
  def test_intermediate_output_at16; assert_in_epsilon(180.4, worksheet.intermediate_output_at16, 0.001); end
  def test_intermediate_output_aw16; assert_equal("Energy consumption in the UK statistics (Domestic energy consumption by end use 1970 to 2009) and DUKES (Detailed service sector energy consumption by subsector and end use by fuel,  2001)", worksheet.intermediate_output_aw16); end
  def test_intermediate_output_ay16; assert_in_epsilon(176.4125971215263, worksheet.intermediate_output_ay16, 0.001); end
  def test_intermediate_output_az16; assert_in_epsilon(157.1671262681033, worksheet.intermediate_output_az16, 0.001); end
  def test_intermediate_output_ba16; assert_in_epsilon(147.3556056125261, worksheet.intermediate_output_ba16, 0.001); end
  def test_intermediate_output_bb16; assert_in_epsilon(138.93094894787552, worksheet.intermediate_output_bb16, 0.001); end
  def test_intermediate_output_bc16; assert_in_epsilon(131.7766027308427, worksheet.intermediate_output_bc16, 0.001); end
  def test_intermediate_output_bd16; assert_in_epsilon(125.60928238422764, worksheet.intermediate_output_bd16, 0.001); end
  def test_intermediate_output_be16; assert_in_epsilon(119.65781275889663, worksheet.intermediate_output_be16, 0.001); end
  def test_intermediate_output_bf16; assert_in_epsilon(114.27617520700629, worksheet.intermediate_output_bf16, 0.001); end
  def test_intermediate_output_bg16; assert_in_epsilon(109.5634916518301, worksheet.intermediate_output_bg16, 0.001); end
  def test_intermediate_output_bh16; assert_in_epsilon(105.46810564220725, worksheet.intermediate_output_bh16, 0.001); end
  def test_intermediate_output_c17; assert_equal("F.01", worksheet.intermediate_output_c17); end
  def test_intermediate_output_d17; assert_equal("Food consumption [UNUSED]", worksheet.intermediate_output_d17); end
  def test_intermediate_output_f17; assert_in_epsilon(59.09063200000001, worksheet.intermediate_output_f17, 0.001); end
  def test_intermediate_output_ay17; assert_in_delta(0, (worksheet.intermediate_output_ay17||0), 0.001); end
  def test_intermediate_output_az17; assert_in_delta(0, (worksheet.intermediate_output_az17||0), 0.001); end
  def test_intermediate_output_ba17; assert_in_delta(0, (worksheet.intermediate_output_ba17||0), 0.001); end
  def test_intermediate_output_bb17; assert_in_delta(0, (worksheet.intermediate_output_bb17||0), 0.001); end
  def test_intermediate_output_bc17; assert_in_delta(0, (worksheet.intermediate_output_bc17||0), 0.001); end
  def test_intermediate_output_bd17; assert_in_delta(0, (worksheet.intermediate_output_bd17||0), 0.001); end
  def test_intermediate_output_be17; assert_in_delta(0, (worksheet.intermediate_output_be17||0), 0.001); end
  def test_intermediate_output_bf17; assert_in_delta(0, (worksheet.intermediate_output_bf17||0), 0.001); end
  def test_intermediate_output_bg17; assert_in_delta(0, (worksheet.intermediate_output_bg17||0), 0.001); end
  def test_intermediate_output_bh17; assert_in_delta(0, (worksheet.intermediate_output_bh17||0), 0.001); end
  def test_intermediate_output_d18; assert_equal("Total", worksheet.intermediate_output_d18); end
  def test_intermediate_output_f18; assert_in_epsilon(1959.6239865655555, worksheet.intermediate_output_f18, 0.001); end
  def test_intermediate_output_al18; assert_in_epsilon(1981.6000000000001, worksheet.intermediate_output_al18, 0.001); end
  def test_intermediate_output_am18; assert_in_epsilon(1979, worksheet.intermediate_output_am18, 0.001); end
  def test_intermediate_output_an18; assert_in_epsilon(1922.9, worksheet.intermediate_output_an18, 0.001); end
  def test_intermediate_output_ao18; assert_in_epsilon(1944.8000000000002, worksheet.intermediate_output_ao18, 0.001); end
  def test_intermediate_output_ap18; assert_in_epsilon(1954.9, worksheet.intermediate_output_ap18, 0.001); end
  def test_intermediate_output_aq18; assert_in_epsilon(1951.6, worksheet.intermediate_output_aq18, 0.001); end
  def test_intermediate_output_ar18; assert_in_epsilon(1936.1000000000004, worksheet.intermediate_output_ar18, 0.001); end
  def test_intermediate_output_d20; assert_equal("Dummy for charting uses", worksheet.intermediate_output_d20); end
  def test_intermediate_output_ay20; assert_in_epsilon(677.7473574144788, worksheet.intermediate_output_ay20, 0.001); end
  def test_intermediate_output_az20; assert_in_epsilon(621.6229735197007, worksheet.intermediate_output_az20, 0.001); end
  def test_intermediate_output_ba20; assert_in_epsilon(544.4415651635065, worksheet.intermediate_output_ba20, 0.001); end
  def test_intermediate_output_bb20; assert_in_epsilon(414.25672447775355, worksheet.intermediate_output_bb20, 0.001); end
  def test_intermediate_output_bc20; assert_in_epsilon(258.44373978091835, worksheet.intermediate_output_bc20, 0.001); end
  def test_intermediate_output_bd20; assert_in_epsilon(189.74745309079253, worksheet.intermediate_output_bd20, 0.001); end
  def test_intermediate_output_be20; assert_in_epsilon(197.10644290996765, worksheet.intermediate_output_be20, 0.001); end
  def test_intermediate_output_bf20; assert_in_epsilon(230.12996069132578, worksheet.intermediate_output_bf20, 0.001); end
  def test_intermediate_output_bg20; assert_in_epsilon(269.370547628307, worksheet.intermediate_output_bg20, 0.001); end
  def test_intermediate_output_bh20; assert_in_epsilon(314.66094866089736, worksheet.intermediate_output_bh20, 0.001); end
  def test_intermediate_output_c22; assert_equal("Source", worksheet.intermediate_output_c22); end
  def test_intermediate_output_c23; assert_equal("N.01", worksheet.intermediate_output_c23); end
  def test_intermediate_output_d23; assert_equal("Nuclear fission", worksheet.intermediate_output_d23); end
  def test_intermediate_output_f23; assert_in_epsilon(163.24447683045062, worksheet.intermediate_output_f23, 0.001); end
  def test_intermediate_output_ah23; assert_in_epsilon(258, worksheet.intermediate_output_ah23, 0.001); end
  def test_intermediate_output_ai23; assert_in_epsilon(267.4, worksheet.intermediate_output_ai23, 0.001); end
  def test_intermediate_output_aj23; assert_in_epsilon(272.6, worksheet.intermediate_output_aj23, 0.001); end
  def test_intermediate_output_ak23; assert_in_epsilon(258.4, worksheet.intermediate_output_ak23, 0.001); end
  def test_intermediate_output_al23; assert_in_epsilon(228.4, worksheet.intermediate_output_al23, 0.001); end
  def test_intermediate_output_am23; assert_in_epsilon(241.5, worksheet.intermediate_output_am23, 0.001); end
  def test_intermediate_output_an23; assert_in_epsilon(233.8, worksheet.intermediate_output_an23, 0.001); end
  def test_intermediate_output_ao23; assert_in_epsilon(233.1, worksheet.intermediate_output_ao23, 0.001); end
  def test_intermediate_output_ap23; assert_in_epsilon(211.2, worksheet.intermediate_output_ap23, 0.001); end
  def test_intermediate_output_aq23; assert_in_epsilon(213.7, worksheet.intermediate_output_aq23, 0.001); end
  def test_intermediate_output_ar23; assert_in_epsilon(199.2, worksheet.intermediate_output_ar23, 0.001); end
  def test_intermediate_output_as23; assert_in_epsilon(163.2, worksheet.intermediate_output_as23, 0.001); end
  def test_intermediate_output_at23; assert_in_epsilon(138.5, worksheet.intermediate_output_at23, 0.001); end
  def test_intermediate_output_au23; assert_in_epsilon(177.1, worksheet.intermediate_output_au23, 0.001); end
  def test_intermediate_output_av23; assert_in_epsilon(162.2, worksheet.intermediate_output_av23, 0.001); end
  def test_intermediate_output_aw23; assert_equal("Dukes 5.6  Electricity fuel use, generation and supply, Major power producers, Fuel used, Nuclear", worksheet.intermediate_output_aw23); end
  def test_intermediate_output_ay23; assert_in_epsilon(163.91620313701554, worksheet.intermediate_output_ay23, 0.001); end
  def test_intermediate_output_c24; assert_equal("R.01", worksheet.intermediate_output_c24); end
  def test_intermediate_output_d24; assert_equal("Solar", worksheet.intermediate_output_d24); end
  def test_intermediate_output_f24; assert_in_delta(0.5360591477000001, worksheet.intermediate_output_f24, 0.001); end
  def test_intermediate_output_aj24; assert_in_delta(0, (worksheet.intermediate_output_aj24||0), 0.001); end
  def test_intermediate_output_ak24; assert_in_delta(0, (worksheet.intermediate_output_ak24||0), 0.001); end
  def test_intermediate_output_al24; assert_in_delta(0.1, worksheet.intermediate_output_al24, 0.001); end
  def test_intermediate_output_am24; assert_in_delta(0.2, worksheet.intermediate_output_am24, 0.001); end
  def test_intermediate_output_an24; assert_in_delta(0.2, worksheet.intermediate_output_an24, 0.001); end
  def test_intermediate_output_ao24; assert_in_delta(0.2, worksheet.intermediate_output_ao24, 0.001); end
  def test_intermediate_output_ap24; assert_in_delta(0.3, worksheet.intermediate_output_ap24, 0.001); end
  def test_intermediate_output_aq24; assert_in_delta(0.3, worksheet.intermediate_output_aq24, 0.001); end
  def test_intermediate_output_ar24; assert_in_delta(0.4, worksheet.intermediate_output_ar24, 0.001); end
  def test_intermediate_output_as24; assert_in_delta(0.5, worksheet.intermediate_output_as24, 0.001); end
  def test_intermediate_output_at24; assert_in_delta(0.7, worksheet.intermediate_output_at24, 0.001); end
  def test_intermediate_output_au24; assert_in_delta(0.8, worksheet.intermediate_output_au24, 0.001); end
  def test_intermediate_output_av24; assert_in_delta(1, worksheet.intermediate_output_av24, 0.001); end
  def test_intermediate_output_aw24; assert_equal("Dukes 7.1  Commodity balances Geothermal and active solar heat, Autogenerators & Domestic", worksheet.intermediate_output_aw24); end
  def test_intermediate_output_c25; assert_equal("R.02", worksheet.intermediate_output_c25); end
  def test_intermediate_output_d25; assert_equal("Wind", worksheet.intermediate_output_d25); end
  def test_intermediate_output_f25; assert_in_epsilon(6.978861884782586, worksheet.intermediate_output_f25, 0.001); end
  def test_intermediate_output_ah25; assert_in_delta(0, (worksheet.intermediate_output_ah25||0), 0.001); end
  def test_intermediate_output_ai25; assert_in_delta(0, (worksheet.intermediate_output_ai25||0), 0.001); end
  def test_intermediate_output_aj25; assert_in_delta(0.9, worksheet.intermediate_output_aj25, 0.001); end
  def test_intermediate_output_ak25; assert_in_delta(0.9, worksheet.intermediate_output_ak25, 0.001); end
  def test_intermediate_output_al25; assert_in_delta(0.9, worksheet.intermediate_output_al25, 0.001); end
  def test_intermediate_output_am25; assert_in_delta(1, worksheet.intermediate_output_am25, 0.001); end
  def test_intermediate_output_an25; assert_in_epsilon(1.3, worksheet.intermediate_output_an25, 0.001); end
  def test_intermediate_output_ao25; assert_in_epsilon(1.3, worksheet.intermediate_output_ao25, 0.001); end
  def test_intermediate_output_ap25; assert_in_epsilon(1.9, worksheet.intermediate_output_ap25, 0.001); end
  def test_intermediate_output_aq25; assert_in_epsilon(2.9, worksheet.intermediate_output_aq25, 0.001); end
  def test_intermediate_output_ar25; assert_in_epsilon(4.2, worksheet.intermediate_output_ar25, 0.001); end
  def test_intermediate_output_as25; assert_in_epsilon(5.3, worksheet.intermediate_output_as25, 0.001); end
  def test_intermediate_output_at25; assert_in_epsilon(7.1, worksheet.intermediate_output_at25, 0.001); end
  def test_intermediate_output_au25; assert_in_epsilon(9.3, worksheet.intermediate_output_au25, 0.001); end
  def test_intermediate_output_av25; assert_in_epsilon(10.2, worksheet.intermediate_output_av25, 0.001); end
  def test_intermediate_output_aw25; assert_equal("Dukes 5.6 Non-thermal sources, Other + 7.1 Wind, Autogenerators", worksheet.intermediate_output_aw25); end
  def test_intermediate_output_c26; assert_equal("R.03", worksheet.intermediate_output_c26); end
  def test_intermediate_output_d26; assert_equal("Tidal", worksheet.intermediate_output_d26); end
  def test_intermediate_output_f26; assert_in_delta(0, (worksheet.intermediate_output_f26||0), 0.001); end
  def test_intermediate_output_h26; assert_in_delta(0, (worksheet.intermediate_output_h26||0), 0.001); end
  def test_intermediate_output_i26; assert_in_delta(0, (worksheet.intermediate_output_i26||0), 0.001); end
  def test_intermediate_output_j26; assert_in_delta(0, (worksheet.intermediate_output_j26||0), 0.001); end
  def test_intermediate_output_k26; assert_in_delta(0, (worksheet.intermediate_output_k26||0), 0.001); end
  def test_intermediate_output_l26; assert_in_delta(0, (worksheet.intermediate_output_l26||0), 0.001); end
  def test_intermediate_output_m26; assert_in_delta(0, (worksheet.intermediate_output_m26||0), 0.001); end
  def test_intermediate_output_n26; assert_in_delta(0, (worksheet.intermediate_output_n26||0), 0.001); end
  def test_intermediate_output_o26; assert_in_delta(0, (worksheet.intermediate_output_o26||0), 0.001); end
  def test_intermediate_output_p26; assert_in_delta(0, (worksheet.intermediate_output_p26||0), 0.001); end
  def test_intermediate_output_q26; assert_in_delta(0, (worksheet.intermediate_output_q26||0), 0.001); end
  def test_intermediate_output_r26; assert_in_delta(0, (worksheet.intermediate_output_r26||0), 0.001); end
  def test_intermediate_output_s26; assert_in_delta(0, (worksheet.intermediate_output_s26||0), 0.001); end
  def test_intermediate_output_t26; assert_in_delta(0, (worksheet.intermediate_output_t26||0), 0.001); end
  def test_intermediate_output_u26; assert_in_delta(0, (worksheet.intermediate_output_u26||0), 0.001); end
  def test_intermediate_output_v26; assert_in_delta(0, (worksheet.intermediate_output_v26||0), 0.001); end
  def test_intermediate_output_w26; assert_in_delta(0, (worksheet.intermediate_output_w26||0), 0.001); end
  def test_intermediate_output_x26; assert_in_delta(0, (worksheet.intermediate_output_x26||0), 0.001); end
  def test_intermediate_output_y26; assert_in_delta(0, (worksheet.intermediate_output_y26||0), 0.001); end
  def test_intermediate_output_z26; assert_in_delta(0, (worksheet.intermediate_output_z26||0), 0.001); end
  def test_intermediate_output_aa26; assert_in_delta(0, (worksheet.intermediate_output_aa26||0), 0.001); end
  def test_intermediate_output_ab26; assert_in_delta(0, (worksheet.intermediate_output_ab26||0), 0.001); end
  def test_intermediate_output_ac26; assert_in_delta(0, (worksheet.intermediate_output_ac26||0), 0.001); end
  def test_intermediate_output_ad26; assert_in_delta(0, (worksheet.intermediate_output_ad26||0), 0.001); end
  def test_intermediate_output_ae26; assert_in_delta(0, (worksheet.intermediate_output_ae26||0), 0.001); end
  def test_intermediate_output_af26; assert_in_delta(0, (worksheet.intermediate_output_af26||0), 0.001); end
  def test_intermediate_output_ag26; assert_in_delta(0, (worksheet.intermediate_output_ag26||0), 0.001); end
  def test_intermediate_output_ah26; assert_in_delta(0, (worksheet.intermediate_output_ah26||0), 0.001); end
  def test_intermediate_output_ai26; assert_in_delta(0, (worksheet.intermediate_output_ai26||0), 0.001); end
  def test_intermediate_output_aj26; assert_in_delta(0, (worksheet.intermediate_output_aj26||0), 0.001); end
  def test_intermediate_output_ak26; assert_in_delta(0, (worksheet.intermediate_output_ak26||0), 0.001); end
  def test_intermediate_output_al26; assert_in_delta(0, (worksheet.intermediate_output_al26||0), 0.001); end
  def test_intermediate_output_am26; assert_in_delta(0, (worksheet.intermediate_output_am26||0), 0.001); end
  def test_intermediate_output_an26; assert_in_delta(0, (worksheet.intermediate_output_an26||0), 0.001); end
  def test_intermediate_output_ao26; assert_in_delta(0, (worksheet.intermediate_output_ao26||0), 0.001); end
  def test_intermediate_output_ap26; assert_in_delta(0, (worksheet.intermediate_output_ap26||0), 0.001); end
  def test_intermediate_output_aq26; assert_in_delta(0, (worksheet.intermediate_output_aq26||0), 0.001); end
  def test_intermediate_output_ar26; assert_in_delta(0, (worksheet.intermediate_output_ar26||0), 0.001); end
  def test_intermediate_output_as26; assert_in_delta(0, (worksheet.intermediate_output_as26||0), 0.001); end
  def test_intermediate_output_at26; assert_in_delta(0, (worksheet.intermediate_output_at26||0), 0.001); end
  def test_intermediate_output_au26; assert_in_delta(0, (worksheet.intermediate_output_au26||0), 0.001); end
  def test_intermediate_output_av26; assert_in_delta(0, (worksheet.intermediate_output_av26||0), 0.001); end
  def test_intermediate_output_aw26; assert_equal("New technology", worksheet.intermediate_output_aw26); end
  def test_intermediate_output_c27; assert_equal("R.04", worksheet.intermediate_output_c27); end
  def test_intermediate_output_d27; assert_equal("Wave", worksheet.intermediate_output_d27); end
  def test_intermediate_output_f27; assert_in_delta(0, (worksheet.intermediate_output_f27||0), 0.001); end
  def test_intermediate_output_h27; assert_in_delta(0, (worksheet.intermediate_output_h27||0), 0.001); end
  def test_intermediate_output_i27; assert_in_delta(0, (worksheet.intermediate_output_i27||0), 0.001); end
  def test_intermediate_output_j27; assert_in_delta(0, (worksheet.intermediate_output_j27||0), 0.001); end
  def test_intermediate_output_k27; assert_in_delta(0, (worksheet.intermediate_output_k27||0), 0.001); end
  def test_intermediate_output_l27; assert_in_delta(0, (worksheet.intermediate_output_l27||0), 0.001); end
  def test_intermediate_output_m27; assert_in_delta(0, (worksheet.intermediate_output_m27||0), 0.001); end
  def test_intermediate_output_n27; assert_in_delta(0, (worksheet.intermediate_output_n27||0), 0.001); end
  def test_intermediate_output_o27; assert_in_delta(0, (worksheet.intermediate_output_o27||0), 0.001); end
  def test_intermediate_output_p27; assert_in_delta(0, (worksheet.intermediate_output_p27||0), 0.001); end
  def test_intermediate_output_q27; assert_in_delta(0, (worksheet.intermediate_output_q27||0), 0.001); end
  def test_intermediate_output_r27; assert_in_delta(0, (worksheet.intermediate_output_r27||0), 0.001); end
  def test_intermediate_output_s27; assert_in_delta(0, (worksheet.intermediate_output_s27||0), 0.001); end
  def test_intermediate_output_t27; assert_in_delta(0, (worksheet.intermediate_output_t27||0), 0.001); end
  def test_intermediate_output_u27; assert_in_delta(0, (worksheet.intermediate_output_u27||0), 0.001); end
  def test_intermediate_output_v27; assert_in_delta(0, (worksheet.intermediate_output_v27||0), 0.001); end
  def test_intermediate_output_w27; assert_in_delta(0, (worksheet.intermediate_output_w27||0), 0.001); end
  def test_intermediate_output_x27; assert_in_delta(0, (worksheet.intermediate_output_x27||0), 0.001); end
  def test_intermediate_output_y27; assert_in_delta(0, (worksheet.intermediate_output_y27||0), 0.001); end
  def test_intermediate_output_z27; assert_in_delta(0, (worksheet.intermediate_output_z27||0), 0.001); end
  def test_intermediate_output_aa27; assert_in_delta(0, (worksheet.intermediate_output_aa27||0), 0.001); end
  def test_intermediate_output_ab27; assert_in_delta(0, (worksheet.intermediate_output_ab27||0), 0.001); end
  def test_intermediate_output_ac27; assert_in_delta(0, (worksheet.intermediate_output_ac27||0), 0.001); end
  def test_intermediate_output_ad27; assert_in_delta(0, (worksheet.intermediate_output_ad27||0), 0.001); end
  def test_intermediate_output_ae27; assert_in_delta(0, (worksheet.intermediate_output_ae27||0), 0.001); end
  def test_intermediate_output_af27; assert_in_delta(0, (worksheet.intermediate_output_af27||0), 0.001); end
  def test_intermediate_output_ag27; assert_in_delta(0, (worksheet.intermediate_output_ag27||0), 0.001); end
  def test_intermediate_output_ah27; assert_in_delta(0, (worksheet.intermediate_output_ah27||0), 0.001); end
  def test_intermediate_output_ai27; assert_in_delta(0, (worksheet.intermediate_output_ai27||0), 0.001); end
  def test_intermediate_output_aj27; assert_in_delta(0, (worksheet.intermediate_output_aj27||0), 0.001); end
  def test_intermediate_output_ak27; assert_in_delta(0, (worksheet.intermediate_output_ak27||0), 0.001); end
  def test_intermediate_output_al27; assert_in_delta(0, (worksheet.intermediate_output_al27||0), 0.001); end
  def test_intermediate_output_am27; assert_in_delta(0, (worksheet.intermediate_output_am27||0), 0.001); end
  def test_intermediate_output_an27; assert_in_delta(0, (worksheet.intermediate_output_an27||0), 0.001); end
  def test_intermediate_output_ao27; assert_in_delta(0, (worksheet.intermediate_output_ao27||0), 0.001); end
  def test_intermediate_output_ap27; assert_in_delta(0, (worksheet.intermediate_output_ap27||0), 0.001); end
  def test_intermediate_output_aq27; assert_in_delta(0, (worksheet.intermediate_output_aq27||0), 0.001); end
  def test_intermediate_output_ar27; assert_in_delta(0, (worksheet.intermediate_output_ar27||0), 0.001); end
  def test_intermediate_output_as27; assert_in_delta(0, (worksheet.intermediate_output_as27||0), 0.001); end
  def test_intermediate_output_at27; assert_in_delta(0, (worksheet.intermediate_output_at27||0), 0.001); end
  def test_intermediate_output_au27; assert_in_delta(0, (worksheet.intermediate_output_au27||0), 0.001); end
  def test_intermediate_output_av27; assert_in_delta(0, (worksheet.intermediate_output_av27||0), 0.001); end
  def test_intermediate_output_aw27; assert_equal("New technology", worksheet.intermediate_output_aw27); end
  def test_intermediate_output_c28; assert_equal("R.05", worksheet.intermediate_output_c28); end
  def test_intermediate_output_d28; assert_equal("Geothermal", worksheet.intermediate_output_d28); end
  def test_intermediate_output_f28; assert_in_delta(0, (worksheet.intermediate_output_f28||0), 0.001); end
  def test_intermediate_output_h28; assert_in_delta(0, (worksheet.intermediate_output_h28||0), 0.001); end
  def test_intermediate_output_i28; assert_in_delta(0, (worksheet.intermediate_output_i28||0), 0.001); end
  def test_intermediate_output_j28; assert_in_delta(0, (worksheet.intermediate_output_j28||0), 0.001); end
  def test_intermediate_output_k28; assert_in_delta(0, (worksheet.intermediate_output_k28||0), 0.001); end
  def test_intermediate_output_l28; assert_in_delta(0, (worksheet.intermediate_output_l28||0), 0.001); end
  def test_intermediate_output_m28; assert_in_delta(0, (worksheet.intermediate_output_m28||0), 0.001); end
  def test_intermediate_output_n28; assert_in_delta(0, (worksheet.intermediate_output_n28||0), 0.001); end
  def test_intermediate_output_o28; assert_in_delta(0, (worksheet.intermediate_output_o28||0), 0.001); end
  def test_intermediate_output_p28; assert_in_delta(0, (worksheet.intermediate_output_p28||0), 0.001); end
  def test_intermediate_output_q28; assert_in_delta(0, (worksheet.intermediate_output_q28||0), 0.001); end
  def test_intermediate_output_r28; assert_in_delta(0, (worksheet.intermediate_output_r28||0), 0.001); end
  def test_intermediate_output_s28; assert_in_delta(0, (worksheet.intermediate_output_s28||0), 0.001); end
  def test_intermediate_output_t28; assert_in_delta(0, (worksheet.intermediate_output_t28||0), 0.001); end
  def test_intermediate_output_u28; assert_in_delta(0, (worksheet.intermediate_output_u28||0), 0.001); end
  def test_intermediate_output_v28; assert_in_delta(0, (worksheet.intermediate_output_v28||0), 0.001); end
  def test_intermediate_output_w28; assert_in_delta(0, (worksheet.intermediate_output_w28||0), 0.001); end
  def test_intermediate_output_x28; assert_in_delta(0, (worksheet.intermediate_output_x28||0), 0.001); end
  def test_intermediate_output_y28; assert_in_delta(0, (worksheet.intermediate_output_y28||0), 0.001); end
  def test_intermediate_output_z28; assert_in_delta(0, (worksheet.intermediate_output_z28||0), 0.001); end
  def test_intermediate_output_aa28; assert_in_delta(0, (worksheet.intermediate_output_aa28||0), 0.001); end
  def test_intermediate_output_ab28; assert_in_delta(0, (worksheet.intermediate_output_ab28||0), 0.001); end
  def test_intermediate_output_ac28; assert_in_delta(0, (worksheet.intermediate_output_ac28||0), 0.001); end
  def test_intermediate_output_ad28; assert_in_delta(0, (worksheet.intermediate_output_ad28||0), 0.001); end
  def test_intermediate_output_ae28; assert_in_delta(0, (worksheet.intermediate_output_ae28||0), 0.001); end
  def test_intermediate_output_af28; assert_in_delta(0, (worksheet.intermediate_output_af28||0), 0.001); end
  def test_intermediate_output_ag28; assert_in_delta(0, (worksheet.intermediate_output_ag28||0), 0.001); end
  def test_intermediate_output_ah28; assert_in_delta(0, (worksheet.intermediate_output_ah28||0), 0.001); end
  def test_intermediate_output_ai28; assert_in_delta(0, (worksheet.intermediate_output_ai28||0), 0.001); end
  def test_intermediate_output_aj28; assert_in_delta(0, (worksheet.intermediate_output_aj28||0), 0.001); end
  def test_intermediate_output_ak28; assert_in_delta(0, (worksheet.intermediate_output_ak28||0), 0.001); end
  def test_intermediate_output_al28; assert_in_delta(0, (worksheet.intermediate_output_al28||0), 0.001); end
  def test_intermediate_output_am28; assert_in_delta(0, (worksheet.intermediate_output_am28||0), 0.001); end
  def test_intermediate_output_an28; assert_in_delta(0, (worksheet.intermediate_output_an28||0), 0.001); end
  def test_intermediate_output_ao28; assert_in_delta(0, (worksheet.intermediate_output_ao28||0), 0.001); end
  def test_intermediate_output_ap28; assert_in_delta(0, (worksheet.intermediate_output_ap28||0), 0.001); end
  def test_intermediate_output_aq28; assert_in_delta(0, (worksheet.intermediate_output_aq28||0), 0.001); end
  def test_intermediate_output_ar28; assert_in_delta(0, (worksheet.intermediate_output_ar28||0), 0.001); end
  def test_intermediate_output_as28; assert_in_delta(0, (worksheet.intermediate_output_as28||0), 0.001); end
  def test_intermediate_output_at28; assert_in_delta(0, (worksheet.intermediate_output_at28||0), 0.001); end
  def test_intermediate_output_au28; assert_in_delta(0, (worksheet.intermediate_output_au28||0), 0.001); end
  def test_intermediate_output_av28; assert_in_delta(0, (worksheet.intermediate_output_av28||0), 0.001); end
  def test_intermediate_output_aw28; assert_equal("New technology", worksheet.intermediate_output_aw28); end
  def test_intermediate_output_c29; assert_equal("R.06", worksheet.intermediate_output_c29); end
  def test_intermediate_output_d29; assert_equal("Hydro", worksheet.intermediate_output_d29); end
  def test_intermediate_output_f29; assert_in_epsilon(5.088394340000001, worksheet.intermediate_output_f29, 0.001); end
  def test_intermediate_output_ah29; assert_in_epsilon(2.8, worksheet.intermediate_output_ah29, 0.001); end
  def test_intermediate_output_ai29; assert_in_epsilon(3.3, worksheet.intermediate_output_ai29, 0.001); end
  def test_intermediate_output_aj29; assert_in_epsilon(5.1, worksheet.intermediate_output_aj29, 0.001); end
  def test_intermediate_output_ak29; assert_in_epsilon(5.3, worksheet.intermediate_output_ak29, 0.001); end
  def test_intermediate_output_al29; assert_in_epsilon(5.1, worksheet.intermediate_output_al29, 0.001); end
  def test_intermediate_output_am29; assert_in_epsilon(4.1, worksheet.intermediate_output_am29, 0.001); end
  def test_intermediate_output_an29; assert_in_epsilon(4.8, worksheet.intermediate_output_an29, 0.001); end
  def test_intermediate_output_ao29; assert_in_epsilon(3.2, worksheet.intermediate_output_ao29, 0.001); end
  def test_intermediate_output_ap29; assert_in_epsilon(4.8, worksheet.intermediate_output_ap29, 0.001); end
  def test_intermediate_output_aq29; assert_in_epsilon(4.9, worksheet.intermediate_output_aq29, 0.001); end
  def test_intermediate_output_ar29; assert_in_epsilon(4.6, worksheet.intermediate_output_ar29, 0.001); end
  def test_intermediate_output_as29; assert_in_epsilon(5.1, worksheet.intermediate_output_as29, 0.001); end
  def test_intermediate_output_at29; assert_in_epsilon(5.2, worksheet.intermediate_output_at29, 0.001); end
  def test_intermediate_output_au29; assert_in_epsilon(5.3, worksheet.intermediate_output_au29, 0.001); end
  def test_intermediate_output_av29; assert_in_epsilon(3.6, worksheet.intermediate_output_av29, 0.001); end
  def test_intermediate_output_aw29; assert_equal("Dukes 5.6 Hydro-natural flow, Fuel used + Dules 7.1 Hydro, Autogenerators", worksheet.intermediate_output_aw29); end
  def test_intermediate_output_c30; assert_equal("Y.02", worksheet.intermediate_output_c30); end
  def test_intermediate_output_d30; assert_equal("Electricity oversupply (imports)", worksheet.intermediate_output_d30); end
  def test_intermediate_output_f30; assert_in_epsilon(5.21452425, worksheet.intermediate_output_f30, 0.001); end
  def test_intermediate_output_h30; assert_in_delta(0.6, worksheet.intermediate_output_h30, 0.001); end
  def test_intermediate_output_i30; assert_in_delta(0.1, worksheet.intermediate_output_i30, 0.001); end
  def test_intermediate_output_j30; assert_in_delta(0.5, worksheet.intermediate_output_j30, 0.001); end
  def test_intermediate_output_k30; assert_in_delta(0.1, worksheet.intermediate_output_k30, 0.001); end
  def test_intermediate_output_l30; assert_in_delta(0.1, worksheet.intermediate_output_l30, 0.001); end
  def test_intermediate_output_m30; assert_in_delta(0.1, worksheet.intermediate_output_m30, 0.001); end
  def test_intermediate_output_n30; assert_in_delta(-0.1, worksheet.intermediate_output_n30, 0.001); end
  def test_intermediate_output_o30; assert_in_delta(0, (worksheet.intermediate_output_o30||0), 0.001); end
  def test_intermediate_output_p30; assert_in_delta(0.1, worksheet.intermediate_output_p30, 0.001); end
  def test_intermediate_output_q30; assert_in_delta(0, (worksheet.intermediate_output_q30||0), 0.001); end
  def test_intermediate_output_r30; assert_in_delta(0, (worksheet.intermediate_output_r30||0), 0.001); end
  def test_intermediate_output_s30; assert_in_delta(0, (worksheet.intermediate_output_s30||0), 0.001); end
  def test_intermediate_output_t30; assert_in_delta(0, (worksheet.intermediate_output_t30||0), 0.001); end
  def test_intermediate_output_u30; assert_in_delta(0, (worksheet.intermediate_output_u30||0), 0.001); end
  def test_intermediate_output_v30; assert_in_delta(0, (worksheet.intermediate_output_v30||0), 0.001); end
  def test_intermediate_output_w30; assert_in_delta(0, (worksheet.intermediate_output_w30||0), 0.001); end
  def test_intermediate_output_x30; assert_in_epsilon(4.3, worksheet.intermediate_output_x30, 0.001); end
  def test_intermediate_output_y30; assert_in_epsilon(11.6, worksheet.intermediate_output_y30, 0.001); end
  def test_intermediate_output_z30; assert_in_epsilon(12.1, worksheet.intermediate_output_z30, 0.001); end
  def test_intermediate_output_aa30; assert_in_epsilon(12.6, worksheet.intermediate_output_aa30, 0.001); end
  def test_intermediate_output_ab30; assert_in_epsilon(11.9, worksheet.intermediate_output_ab30, 0.001); end
  def test_intermediate_output_ac30; assert_in_epsilon(16.4, worksheet.intermediate_output_ac30, 0.001); end
  def test_intermediate_output_ad30; assert_in_epsilon(16.7, worksheet.intermediate_output_ad30, 0.001); end
  def test_intermediate_output_ae30; assert_in_epsilon(16.7, worksheet.intermediate_output_ae30, 0.001); end
  def test_intermediate_output_af30; assert_in_epsilon(16.9, worksheet.intermediate_output_af30, 0.001); end
  def test_intermediate_output_ag30; assert_in_epsilon(16.6, worksheet.intermediate_output_ag30, 0.001); end
  def test_intermediate_output_ah30; assert_in_epsilon(16.8, worksheet.intermediate_output_ah30, 0.001); end
  def test_intermediate_output_ai30; assert_in_epsilon(16.6, worksheet.intermediate_output_ai30, 0.001); end
  def test_intermediate_output_aj30; assert_in_epsilon(12.5, worksheet.intermediate_output_aj30, 0.001); end
  def test_intermediate_output_ak30; assert_in_epsilon(14.2, worksheet.intermediate_output_ak30, 0.001); end
  def test_intermediate_output_al30; assert_in_epsilon(14.2, worksheet.intermediate_output_al30, 0.001); end
  def test_intermediate_output_am30; assert_in_epsilon(10.4, worksheet.intermediate_output_am30, 0.001); end
  def test_intermediate_output_an30; assert_in_epsilon(8.4, worksheet.intermediate_output_an30, 0.001); end
  def test_intermediate_output_ao30; assert_in_epsilon(2.2, worksheet.intermediate_output_ao30, 0.001); end
  def test_intermediate_output_ap30; assert_in_epsilon(7.5, worksheet.intermediate_output_ap30, 0.001); end
  def test_intermediate_output_aq30; assert_in_epsilon(8.3, worksheet.intermediate_output_aq30, 0.001); end
  def test_intermediate_output_ar30; assert_in_epsilon(7.5, worksheet.intermediate_output_ar30, 0.001); end
  def test_intermediate_output_as30; assert_in_epsilon(5.2, worksheet.intermediate_output_as30, 0.001); end
  def test_intermediate_output_at30; assert_in_epsilon(11, worksheet.intermediate_output_at30, 0.001); end
  def test_intermediate_output_au30; assert_in_epsilon(2.9, worksheet.intermediate_output_au30, 0.001); end
  def test_intermediate_output_av30; assert_in_epsilon(2.7, worksheet.intermediate_output_av30, 0.001); end
  def test_intermediate_output_aw30; assert_equal("DUKES long-term trends  5.1.2, Net imports", worksheet.intermediate_output_aw30); end
  def test_intermediate_output_d31; assert_equal("Primary electricity, solar, marine, and net imports", worksheet.intermediate_output_d31); end
  def test_intermediate_output_f31; assert_in_epsilon(181.06231645293323, worksheet.intermediate_output_f31, 0.001); end
  def test_intermediate_output_aj31; assert_in_epsilon(291.1, worksheet.intermediate_output_aj31, 0.001); end
  def test_intermediate_output_ak31; assert_in_epsilon(278.8, worksheet.intermediate_output_ak31, 0.001); end
  def test_intermediate_output_al31; assert_in_epsilon(248.7, worksheet.intermediate_output_al31, 0.001); end
  def test_intermediate_output_am31; assert_in_epsilon(257.1, worksheet.intermediate_output_am31, 0.001); end
  def test_intermediate_output_an31; assert_in_epsilon(248.4, worksheet.intermediate_output_an31, 0.001); end
  def test_intermediate_output_ao31; assert_in_epsilon(240, worksheet.intermediate_output_ao31, 0.001); end
  def test_intermediate_output_ap31; assert_in_epsilon(225.8, worksheet.intermediate_output_ap31, 0.001); end
  def test_intermediate_output_aq31; assert_in_epsilon(230.2, worksheet.intermediate_output_aq31, 0.001); end
  def test_intermediate_output_ar31; assert_in_epsilon(216, worksheet.intermediate_output_ar31, 0.001); end
  def test_intermediate_output_as31; assert_in_epsilon(179.4, worksheet.intermediate_output_as31, 0.001); end
  def test_intermediate_output_at31; assert_in_epsilon(162.5, worksheet.intermediate_output_at31, 0.001); end
  def test_intermediate_output_au31; assert_in_epsilon(195.4, worksheet.intermediate_output_au31, 0.001); end
  def test_intermediate_output_av31; assert_in_epsilon(179.7, worksheet.intermediate_output_av31, 0.001); end
  def test_intermediate_output_ay31; assert_in_epsilon(174.0086692536062, worksheet.intermediate_output_ay31, 0.001); end
  def test_intermediate_output_az31; assert_in_epsilon(197.83611574725876, worksheet.intermediate_output_az31, 0.001); end
  def test_intermediate_output_ba31; assert_in_epsilon(229.09069239294476, worksheet.intermediate_output_ba31, 0.001); end
  def test_intermediate_output_bb31; assert_in_epsilon(269.06596324552385, worksheet.intermediate_output_bb31, 0.001); end
  def test_intermediate_output_bc31; assert_in_epsilon(338.0053224769676, worksheet.intermediate_output_bc31, 0.001); end
  def test_intermediate_output_bd31; assert_in_epsilon(419.50421278947533, worksheet.intermediate_output_bd31, 0.001); end
  def test_intermediate_output_be31; assert_in_epsilon(413.4086635930313, worksheet.intermediate_output_be31, 0.001); end
  def test_intermediate_output_bf31; assert_in_epsilon(434.92303636011354, worksheet.intermediate_output_bf31, 0.001); end
  def test_intermediate_output_bg31; assert_in_epsilon(459.77568239454314, worksheet.intermediate_output_bg31, 0.001); end
  def test_intermediate_output_bh31; assert_in_epsilon(485.4614716393906, worksheet.intermediate_output_bh31, 0.001); end
  def test_intermediate_output_c32; assert_equal("R.07", worksheet.intermediate_output_c32); end
  def test_intermediate_output_d32; assert_equal("Environmental heat", worksheet.intermediate_output_d32); end
  def test_intermediate_output_f32; assert_in_delta(0, (worksheet.intermediate_output_f32||0), 0.001); end
  def test_intermediate_output_h32; assert_in_delta(0, (worksheet.intermediate_output_h32||0), 0.001); end
  def test_intermediate_output_i32; assert_in_delta(0, (worksheet.intermediate_output_i32||0), 0.001); end
  def test_intermediate_output_j32; assert_in_delta(0, (worksheet.intermediate_output_j32||0), 0.001); end
  def test_intermediate_output_k32; assert_in_delta(0, (worksheet.intermediate_output_k32||0), 0.001); end
  def test_intermediate_output_l32; assert_in_delta(0, (worksheet.intermediate_output_l32||0), 0.001); end
  def test_intermediate_output_m32; assert_in_delta(0, (worksheet.intermediate_output_m32||0), 0.001); end
  def test_intermediate_output_n32; assert_in_delta(0, (worksheet.intermediate_output_n32||0), 0.001); end
  def test_intermediate_output_o32; assert_in_delta(0, (worksheet.intermediate_output_o32||0), 0.001); end
  def test_intermediate_output_p32; assert_in_delta(0, (worksheet.intermediate_output_p32||0), 0.001); end
  def test_intermediate_output_q32; assert_in_delta(0, (worksheet.intermediate_output_q32||0), 0.001); end
  def test_intermediate_output_r32; assert_in_delta(0, (worksheet.intermediate_output_r32||0), 0.001); end
  def test_intermediate_output_s32; assert_in_delta(0, (worksheet.intermediate_output_s32||0), 0.001); end
  def test_intermediate_output_t32; assert_in_delta(0, (worksheet.intermediate_output_t32||0), 0.001); end
  def test_intermediate_output_u32; assert_in_delta(0, (worksheet.intermediate_output_u32||0), 0.001); end
  def test_intermediate_output_v32; assert_in_delta(0, (worksheet.intermediate_output_v32||0), 0.001); end
  def test_intermediate_output_w32; assert_in_delta(0, (worksheet.intermediate_output_w32||0), 0.001); end
  def test_intermediate_output_x32; assert_in_delta(0, (worksheet.intermediate_output_x32||0), 0.001); end
  def test_intermediate_output_y32; assert_in_delta(0, (worksheet.intermediate_output_y32||0), 0.001); end
  def test_intermediate_output_z32; assert_in_delta(0, (worksheet.intermediate_output_z32||0), 0.001); end
  def test_intermediate_output_aa32; assert_in_delta(0, (worksheet.intermediate_output_aa32||0), 0.001); end
  def test_intermediate_output_ab32; assert_in_delta(0, (worksheet.intermediate_output_ab32||0), 0.001); end
  def test_intermediate_output_ac32; assert_in_delta(0, (worksheet.intermediate_output_ac32||0), 0.001); end
  def test_intermediate_output_ad32; assert_in_delta(0, (worksheet.intermediate_output_ad32||0), 0.001); end
  def test_intermediate_output_ae32; assert_in_delta(0, (worksheet.intermediate_output_ae32||0), 0.001); end
  def test_intermediate_output_af32; assert_in_delta(0, (worksheet.intermediate_output_af32||0), 0.001); end
  def test_intermediate_output_ag32; assert_in_delta(0, (worksheet.intermediate_output_ag32||0), 0.001); end
  def test_intermediate_output_ah32; assert_in_delta(0, (worksheet.intermediate_output_ah32||0), 0.001); end
  def test_intermediate_output_ai32; assert_in_delta(0, (worksheet.intermediate_output_ai32||0), 0.001); end
  def test_intermediate_output_aj32; assert_in_delta(0, (worksheet.intermediate_output_aj32||0), 0.001); end
  def test_intermediate_output_ak32; assert_in_delta(0, (worksheet.intermediate_output_ak32||0), 0.001); end
  def test_intermediate_output_al32; assert_in_delta(0, (worksheet.intermediate_output_al32||0), 0.001); end
  def test_intermediate_output_am32; assert_in_delta(0, (worksheet.intermediate_output_am32||0), 0.001); end
  def test_intermediate_output_an32; assert_in_delta(0, (worksheet.intermediate_output_an32||0), 0.001); end
  def test_intermediate_output_ao32; assert_in_delta(0, (worksheet.intermediate_output_ao32||0), 0.001); end
  def test_intermediate_output_ap32; assert_in_delta(0, (worksheet.intermediate_output_ap32||0), 0.001); end
  def test_intermediate_output_aq32; assert_in_delta(0, (worksheet.intermediate_output_aq32||0), 0.001); end
  def test_intermediate_output_ar32; assert_in_delta(0, (worksheet.intermediate_output_ar32||0), 0.001); end
  def test_intermediate_output_as32; assert_in_delta(0, (worksheet.intermediate_output_as32||0), 0.001); end
  def test_intermediate_output_at32; assert_in_delta(0, (worksheet.intermediate_output_at32||0), 0.001); end
  def test_intermediate_output_au32; assert_in_delta(0, (worksheet.intermediate_output_au32||0), 0.001); end
  def test_intermediate_output_av32; assert_in_delta(0, (worksheet.intermediate_output_av32||0), 0.001); end
  def test_intermediate_output_aw32; assert_equal("New technology", worksheet.intermediate_output_aw32); end
  def test_intermediate_output_c33; assert_equal("W.01", worksheet.intermediate_output_c33); end
  def test_intermediate_output_d33; assert_equal("Waste", worksheet.intermediate_output_d33); end
  def test_intermediate_output_f33; assert_in_epsilon(14.240524277899516, worksheet.intermediate_output_f33, 0.001); end
  def test_intermediate_output_aj33; assert_in_epsilon(8.1, worksheet.intermediate_output_aj33, 0.001); end
  def test_intermediate_output_ak33; assert_in_epsilon(8.7, worksheet.intermediate_output_ak33, 0.001); end
  def test_intermediate_output_al33; assert_in_epsilon(10.4, worksheet.intermediate_output_al33, 0.001); end
  def test_intermediate_output_am33; assert_in_epsilon(12.1, worksheet.intermediate_output_am33, 0.001); end
  def test_intermediate_output_an33; assert_in_epsilon(13.9, worksheet.intermediate_output_an33, 0.001); end
  def test_intermediate_output_ao33; assert_in_epsilon(16, worksheet.intermediate_output_ao33, 0.001); end
  def test_intermediate_output_ap33; assert_in_epsilon(11.9, worksheet.intermediate_output_ap33, 0.001); end
  def test_intermediate_output_aq33; assert_in_epsilon(11.9, worksheet.intermediate_output_aq33, 0.001); end
  def test_intermediate_output_ar33; assert_in_epsilon(12.7, worksheet.intermediate_output_ar33, 0.001); end
  def test_intermediate_output_as33; assert_in_epsilon(14.2, worksheet.intermediate_output_as33, 0.001); end
  def test_intermediate_output_at33; assert_in_epsilon(15.1, worksheet.intermediate_output_at33, 0.001); end
  def test_intermediate_output_au33; assert_in_epsilon(16.7, worksheet.intermediate_output_au33, 0.001); end
  def test_intermediate_output_av33; assert_in_epsilon(17.5, worksheet.intermediate_output_av33, 0.001); end
  def test_intermediate_output_aw33; assert_equal("Poultry litter, meat  and bone,  and farm waste:    Major power producers Autogenerators Industry-Unclassified + Waste(4) and tyres: Major power producers Autogenerators, Industry-Unclassified, Other-Domestic, Public administration & Commercial", worksheet.intermediate_output_aw33); end
  def test_intermediate_output_ay33; assert_in_epsilon(45.668310233470734, worksheet.intermediate_output_ay33, 0.001); end
  def test_intermediate_output_az33; assert_in_epsilon(45.77674088561254, worksheet.intermediate_output_az33, 0.001); end
  def test_intermediate_output_ba33; assert_in_epsilon(73.44596289445445, worksheet.intermediate_output_ba33, 0.001); end
  def test_intermediate_output_bb33; assert_in_epsilon(123.8047058890075, worksheet.intermediate_output_bb33, 0.001); end
  def test_intermediate_output_bc33; assert_in_epsilon(152.94679899007394, worksheet.intermediate_output_bc33, 0.001); end
  def test_intermediate_output_bd33; assert_in_epsilon(158.48568655283523, worksheet.intermediate_output_bd33, 0.001); end
  def test_intermediate_output_be33; assert_in_epsilon(156.98775277831476, worksheet.intermediate_output_be33, 0.001); end
  def test_intermediate_output_bf33; assert_in_epsilon(159.0114191423708, worksheet.intermediate_output_bf33, 0.001); end
  def test_intermediate_output_bg33; assert_in_epsilon(161.04561642646516, worksheet.intermediate_output_bg33, 0.001); end
  def test_intermediate_output_bh33; assert_in_epsilon(159.85742054003904, worksheet.intermediate_output_bh33, 0.001); end
  def test_intermediate_output_c34; assert_equal("A.01", worksheet.intermediate_output_c34); end
  def test_intermediate_output_d34; assert_equal("Agriculture", worksheet.intermediate_output_d34); end
  def test_intermediate_output_f34; assert_in_epsilon(58.005772267812624, worksheet.intermediate_output_f34, 0.001); end
  def test_intermediate_output_aj34; assert_in_epsilon(42.4, worksheet.intermediate_output_aj34, 0.001); end
  def test_intermediate_output_ak34; assert_in_epsilon(43.5, worksheet.intermediate_output_ak34, 0.001); end
  def test_intermediate_output_al34; assert_in_epsilon(44, worksheet.intermediate_output_al34, 0.001); end
  def test_intermediate_output_am34; assert_in_epsilon(45.2, worksheet.intermediate_output_am34, 0.001); end
  def test_intermediate_output_an34; assert_in_epsilon(46.4, worksheet.intermediate_output_an34, 0.001); end
  def test_intermediate_output_ao34; assert_in_epsilon(43.3, worksheet.intermediate_output_ao34, 0.001); end
  def test_intermediate_output_ap34; assert_in_epsilon(47.7, worksheet.intermediate_output_ap34, 0.001); end
  def test_intermediate_output_aq34; assert_in_epsilon(54.9, worksheet.intermediate_output_aq34, 0.001); end
  def test_intermediate_output_ar34; assert_in_epsilon(58.1, worksheet.intermediate_output_ar34, 0.001); end
  def test_intermediate_output_as34; assert_in_epsilon(58.7, worksheet.intermediate_output_as34, 0.001); end
  def test_intermediate_output_at34; assert_in_epsilon(58.4, worksheet.intermediate_output_at34, 0.001); end
  def test_intermediate_output_au34; assert_in_epsilon(61, worksheet.intermediate_output_au34, 0.001); end
  def test_intermediate_output_av34; assert_in_epsilon(66.2, worksheet.intermediate_output_av34, 0.001); end
  def test_intermediate_output_aw34; assert_equal("7.2 wood, production + Straw, SRC, and other plant-based biomass, Total supply + Liquid biofuels + (population * average daily calories * 365.5 * 0.6 / 0.9)", worksheet.intermediate_output_aw34); end
  def test_intermediate_output_ay34; assert_in_epsilon(4.881522222222221, worksheet.intermediate_output_ay34, 0.001); end
  def test_intermediate_output_az34; assert_in_epsilon(8.961145168485396, worksheet.intermediate_output_az34, 0.001); end
  def test_intermediate_output_ba34; assert_in_epsilon(31.957461626199763, worksheet.intermediate_output_ba34, 0.001); end
  def test_intermediate_output_bb34; assert_in_epsilon(57.9905879323263, worksheet.intermediate_output_bb34, 0.001); end
  def test_intermediate_output_bc34; assert_in_epsilon(87.74730983342336, worksheet.intermediate_output_bc34, 0.001); end
  def test_intermediate_output_bd34; assert_in_epsilon(139.23178209332372, worksheet.intermediate_output_bd34, 0.001); end
  def test_intermediate_output_be34; assert_in_epsilon(195.20900385955, worksheet.intermediate_output_be34, 0.001); end
  def test_intermediate_output_bf34; assert_in_epsilon(260.12621903874674, worksheet.intermediate_output_bf34, 0.001); end
  def test_intermediate_output_bg34; assert_in_epsilon(340.557362584436, worksheet.intermediate_output_bg34, 0.001); end
  def test_intermediate_output_bh34; assert_in_epsilon(444.004714052251, worksheet.intermediate_output_bh34, 0.001); end
  def test_intermediate_output_c35; assert_equal("Y.01", worksheet.intermediate_output_c35); end
  def test_intermediate_output_d35; assert_equal("Biomass oversupply (imports)", worksheet.intermediate_output_d35); end
  def test_intermediate_output_f35; assert_in_epsilon(26.262503111111116, worksheet.intermediate_output_f35, 0.001); end
  def test_intermediate_output_aj35; assert_in_epsilon(25.6, worksheet.intermediate_output_aj35, 0.001); end
  def test_intermediate_output_ak35; assert_in_epsilon(25.6, worksheet.intermediate_output_ak35, 0.001); end
  def test_intermediate_output_al35; assert_in_epsilon(25.7, worksheet.intermediate_output_al35, 0.001); end
  def test_intermediate_output_am35; assert_in_epsilon(25.8, worksheet.intermediate_output_am35, 0.001); end
  def test_intermediate_output_an35; assert_in_epsilon(25.9, worksheet.intermediate_output_an35, 0.001); end
  def test_intermediate_output_ao35; assert_in_epsilon(26, worksheet.intermediate_output_ao35, 0.001); end
  def test_intermediate_output_ap35; assert_in_epsilon(26.1, worksheet.intermediate_output_ap35, 0.001); end
  def test_intermediate_output_aq35; assert_in_epsilon(26.3, worksheet.intermediate_output_aq35, 0.001); end
  def test_intermediate_output_ar35; assert_in_epsilon(26.4, worksheet.intermediate_output_ar35, 0.001); end
  def test_intermediate_output_as35; assert_in_epsilon(26.6, worksheet.intermediate_output_as35, 0.001); end
  def test_intermediate_output_at35; assert_in_epsilon(26.8, worksheet.intermediate_output_at35, 0.001); end
  def test_intermediate_output_au35; assert_in_epsilon(27, worksheet.intermediate_output_au35, 0.001); end
  def test_intermediate_output_av35; assert_in_epsilon(27.1, worksheet.intermediate_output_av35, 0.001); end
  def test_intermediate_output_aw35; assert_equal("(population * average daily calories * 365.5 * 0.4 / 0.9)", worksheet.intermediate_output_aw35); end
  def test_intermediate_output_d36; assert_equal("Agriculture, waste, and biomatter imports", worksheet.intermediate_output_d36); end
  def test_intermediate_output_f36; assert_in_epsilon(98.50879965682326, worksheet.intermediate_output_f36, 0.001); end
  def test_intermediate_output_aj36; assert_in_epsilon(76.1, worksheet.intermediate_output_aj36, 0.001); end
  def test_intermediate_output_ak36; assert_in_epsilon(77.8, worksheet.intermediate_output_ak36, 0.001); end
  def test_intermediate_output_al36; assert_in_epsilon(80.2, worksheet.intermediate_output_al36, 0.001); end
  def test_intermediate_output_am36; assert_in_epsilon(83.2, worksheet.intermediate_output_am36, 0.001); end
  def test_intermediate_output_an36; assert_in_epsilon(86.2, worksheet.intermediate_output_an36, 0.001); end
  def test_intermediate_output_ao36; assert_in_epsilon(85.3, worksheet.intermediate_output_ao36, 0.001); end
  def test_intermediate_output_ap36; assert_in_epsilon(85.7, worksheet.intermediate_output_ap36, 0.001); end
  def test_intermediate_output_aq36; assert_in_epsilon(93, worksheet.intermediate_output_aq36, 0.001); end
  def test_intermediate_output_ar36; assert_in_epsilon(97.2, worksheet.intermediate_output_ar36, 0.001); end
  def test_intermediate_output_as36; assert_in_epsilon(99.5, worksheet.intermediate_output_as36, 0.001); end
  def test_intermediate_output_at36; assert_in_epsilon(100.3, worksheet.intermediate_output_at36, 0.001); end
  def test_intermediate_output_au36; assert_in_epsilon(104.6, worksheet.intermediate_output_au36, 0.001); end
  def test_intermediate_output_av36; assert_in_epsilon(110.8, worksheet.intermediate_output_av36, 0.001); end
  def test_intermediate_output_c37; assert_equal("Y.04", worksheet.intermediate_output_c37); end
  def test_intermediate_output_d37; assert_equal("Coal oversupply (imports)", worksheet.intermediate_output_d37); end
  def test_intermediate_output_f37; assert_in_epsilon(329.602732356217, worksheet.intermediate_output_f37, 0.001); end
  def test_intermediate_output_h37; assert_in_epsilon(-29.52857, worksheet.intermediate_output_h37, 0.001); end
  def test_intermediate_output_i37; assert_in_epsilon(9.75757, worksheet.intermediate_output_i37, 0.001); end
  def test_intermediate_output_j37; assert_in_epsilon(22.96925, worksheet.intermediate_output_j37, 0.001); end
  def test_intermediate_output_k37; assert_in_epsilon(-10.66471, worksheet.intermediate_output_k37, 0.001); end
  def test_intermediate_output_l37; assert_in_epsilon(1.95384, worksheet.intermediate_output_l37, 0.001); end
  def test_intermediate_output_m37; assert_in_epsilon(14.35142, worksheet.intermediate_output_m37, 0.001); end
  def test_intermediate_output_n37; assert_in_epsilon(5.86152, worksheet.intermediate_output_n37, 0.001); end
  def test_intermediate_output_o37; assert_in_delta(0.09304, worksheet.intermediate_output_o37, 0.001); end
  def test_intermediate_output_p37; assert_in_epsilon(-4.97764, worksheet.intermediate_output_p37, 0.001); end
  def test_intermediate_output_q37; assert_in_epsilon(13.30472, worksheet.intermediate_output_q37, 0.001); end
  def test_intermediate_output_r37; assert_in_epsilon(19.8873, worksheet.intermediate_output_r37, 0.001); end
  def test_intermediate_output_s37; assert_in_epsilon(-42.93796, worksheet.intermediate_output_s37, 0.001); end
  def test_intermediate_output_t37; assert_in_epsilon(-27.13279, worksheet.intermediate_output_t37, 0.001); end
  def test_intermediate_output_u37; assert_in_epsilon(-13.15353, worksheet.intermediate_output_u37, 0.001); end
  def test_intermediate_output_v37; assert_in_epsilon(73.40856, worksheet.intermediate_output_v37, 0.001); end
  def test_intermediate_output_w37; assert_in_epsilon(81.88683, worksheet.intermediate_output_w37, 0.001); end
  def test_intermediate_output_x37; assert_in_epsilon(60.23177, worksheet.intermediate_output_x37, 0.001); end
  def test_intermediate_output_y37; assert_in_epsilon(63.86033, worksheet.intermediate_output_y37, 0.001); end
  def test_intermediate_output_z37; assert_in_epsilon(89.26025, worksheet.intermediate_output_z37, 0.001); end
  def test_intermediate_output_aa37; assert_in_epsilon(82.59626, worksheet.intermediate_output_aa37, 0.001); end
  def test_intermediate_output_ab37; assert_in_epsilon(97.58733, worksheet.intermediate_output_ab37, 0.001); end
  def test_intermediate_output_ac37; assert_in_epsilon(139.17621, worksheet.intermediate_output_ac37, 0.001); end
  def test_intermediate_output_ad37; assert_in_epsilon(152.36463, worksheet.intermediate_output_ad37, 0.001); end
  def test_intermediate_output_ae37; assert_in_epsilon(141.29287, worksheet.intermediate_output_ae37, 0.001); end
  def test_intermediate_output_af37; assert_in_epsilon(113.29946, worksheet.intermediate_output_af37, 0.001); end
  def test_intermediate_output_ag37; assert_in_epsilon(124.74338, worksheet.intermediate_output_ag37, 0.001); end
  def test_intermediate_output_ah37; assert_in_epsilon(142.419426770673, worksheet.intermediate_output_ah37, 0.001); end
  def test_intermediate_output_ai37; assert_in_epsilon(155.127946717844, worksheet.intermediate_output_ai37, 0.001); end
  def test_intermediate_output_aj37; assert_in_epsilon(167.939798014946, worksheet.intermediate_output_aj37, 0.001); end
  def test_intermediate_output_ak37; assert_in_epsilon(154.269390475848, worksheet.intermediate_output_ak37, 0.001); end
  def test_intermediate_output_al37; assert_in_epsilon(177.54271957614, worksheet.intermediate_output_al37, 0.001); end
  def test_intermediate_output_am37; assert_in_epsilon(266.164196212801, worksheet.intermediate_output_am37, 0.001); end
  def test_intermediate_output_an37; assert_in_epsilon(213.157281152347, worksheet.intermediate_output_an37, 0.001); end
  def test_intermediate_output_ao37; assert_in_epsilon(242.680946975591, worksheet.intermediate_output_ao37, 0.001); end
  def test_intermediate_output_ap37; assert_in_epsilon(274.594113303141, worksheet.intermediate_output_ap37, 0.001); end
  def test_intermediate_output_aq37; assert_in_epsilon(333.178454490771, worksheet.intermediate_output_aq37, 0.001); end
  def test_intermediate_output_ar37; assert_in_epsilon(382.634191991217, worksheet.intermediate_output_ar37, 0.001); end
  def test_intermediate_output_as37; assert_in_epsilon(329.578033333439, worksheet.intermediate_output_as37, 0.001); end
  def test_intermediate_output_at37; assert_in_epsilon(329.254958699124, worksheet.intermediate_output_at37, 0.001); end
  def test_intermediate_output_au37; assert_in_epsilon(281.378070222345, worksheet.intermediate_output_au37, 0.001); end
  def test_intermediate_output_av37; assert_in_epsilon(192.811684484113, worksheet.intermediate_output_av37, 0.001); end
  def test_intermediate_output_aw37; assert_equal("Dukes long-term trends 1.1.2 coal imports - coal exports", worksheet.intermediate_output_aw37); end
  def test_intermediate_output_c38; assert_equal("Q.01", worksheet.intermediate_output_c38); end
  def test_intermediate_output_d38; assert_equal("Coal reserves", worksheet.intermediate_output_d38); end
  def test_intermediate_output_f38; assert_in_epsilon(145.79944495555736, worksheet.intermediate_output_f38, 0.001); end
  def test_intermediate_output_h38; assert_in_epsilon(1178.5, worksheet.intermediate_output_h38, 0.001); end
  def test_intermediate_output_i38; assert_in_epsilon(1013.3, worksheet.intermediate_output_i38, 0.001); end
  def test_intermediate_output_j38; assert_in_epsilon(873.6, worksheet.intermediate_output_j38, 0.001); end
  def test_intermediate_output_k38; assert_in_epsilon(978, worksheet.intermediate_output_k38, 0.001); end
  def test_intermediate_output_l38; assert_in_epsilon(854.4, worksheet.intermediate_output_l38, 0.001); end
  def test_intermediate_output_m38; assert_in_epsilon(845.3, worksheet.intermediate_output_m38, 0.001); end
  def test_intermediate_output_n38; assert_in_epsilon(865.2, worksheet.intermediate_output_n38, 0.001); end
  def test_intermediate_output_o38; assert_in_epsilon(876.5, worksheet.intermediate_output_o38, 0.001); end
  def test_intermediate_output_p38; assert_in_epsilon(861.9, worksheet.intermediate_output_p38, 0.001); end
  def test_intermediate_output_q38; assert_in_epsilon(902.8, worksheet.intermediate_output_q38, 0.001); end
  def test_intermediate_output_r38; assert_in_epsilon(834, worksheet.intermediate_output_r38, 0.001); end
  def test_intermediate_output_s38; assert_in_epsilon(883.8, worksheet.intermediate_output_s38, 0.001); end
  def test_intermediate_output_t38; assert_in_epsilon(818.9, worksheet.intermediate_output_t38, 0.001); end
  def test_intermediate_output_u38; assert_in_epsilon(808.1, worksheet.intermediate_output_u38, 0.001); end
  def test_intermediate_output_v38; assert_in_epsilon(495, worksheet.intermediate_output_v38, 0.001); end
  def test_intermediate_output_w38; assert_in_epsilon(674.9, worksheet.intermediate_output_w38, 0.001); end
  def test_intermediate_output_x38; assert_in_epsilon(740.9, worksheet.intermediate_output_x38, 0.001); end
  def test_intermediate_output_y38; assert_in_epsilon(774.4, worksheet.intermediate_output_y38, 0.001); end
  def test_intermediate_output_z38; assert_in_epsilon(718.2, worksheet.intermediate_output_z38, 0.001); end
  def test_intermediate_output_aa38; assert_in_epsilon(687.3, worksheet.intermediate_output_aa38, 0.001); end
  def test_intermediate_output_ab38; assert_in_epsilon(666.8, worksheet.intermediate_output_ab38, 0.001); end
  def test_intermediate_output_ac38; assert_in_epsilon(629.8, worksheet.intermediate_output_ac38, 0.001); end
  def test_intermediate_output_ad38; assert_in_epsilon(570.7, worksheet.intermediate_output_ad38, 0.001); end
  def test_intermediate_output_ae38; assert_in_epsilon(492.6, worksheet.intermediate_output_ae38, 0.001); end
  def test_intermediate_output_af38; assert_in_epsilon(474, worksheet.intermediate_output_af38, 0.001); end
  def test_intermediate_output_ag38; assert_in_epsilon(440.1, worksheet.intermediate_output_ag38, 0.001); end
  def test_intermediate_output_ah38; assert_in_epsilon(391.4, worksheet.intermediate_output_ah38, 0.001); end
  def test_intermediate_output_ai38; assert_in_epsilon(324.7, worksheet.intermediate_output_ai38, 0.001); end
  def test_intermediate_output_aj38; assert_in_epsilon(308.5, worksheet.intermediate_output_aj38, 0.001); end
  def test_intermediate_output_ak38; assert_in_epsilon(264.3, worksheet.intermediate_output_ak38, 0.001); end
  def test_intermediate_output_al38; assert_in_epsilon(270.7, worksheet.intermediate_output_al38, 0.001); end
  def test_intermediate_output_am38; assert_in_epsilon(208.1, worksheet.intermediate_output_am38, 0.001); end
  def test_intermediate_output_an38; assert_in_epsilon(225.3, worksheet.intermediate_output_an38, 0.001); end
  def test_intermediate_output_ao38; assert_in_epsilon(228.1, worksheet.intermediate_output_ao38, 0.001); end
  def test_intermediate_output_ap38; assert_in_epsilon(179.7, worksheet.intermediate_output_ap38, 0.001); end
  def test_intermediate_output_aq38; assert_in_epsilon(130.4, worksheet.intermediate_output_aq38, 0.001); end
  def test_intermediate_output_ar38; assert_in_epsilon(121.6, worksheet.intermediate_output_ar38, 0.001); end
  def test_intermediate_output_as38; assert_in_epsilon(146.8, worksheet.intermediate_output_as38, 0.001); end
  def test_intermediate_output_at38; assert_in_epsilon(110.4, worksheet.intermediate_output_at38, 0.001); end
  def test_intermediate_output_au38; assert_in_epsilon(79.3, worksheet.intermediate_output_au38, 0.001); end
  def test_intermediate_output_av38; assert_in_epsilon(185.3, worksheet.intermediate_output_av38, 0.001); end
  def test_intermediate_output_aw38; assert_equal("Dukes long-term trends 1.1.2 coal production - stock changes", worksheet.intermediate_output_aw38); end
  def test_intermediate_output_ay38; assert_in_epsilon(124.395701394218, worksheet.intermediate_output_ay38, 0.001); end
  def test_intermediate_output_az38; assert_in_epsilon(127.93, worksheet.intermediate_output_az38, 0.001); end
  def test_intermediate_output_ba38; assert_in_epsilon(127.93, worksheet.intermediate_output_ba38, 0.001); end
  def test_intermediate_output_bb38; assert_in_epsilon(127.93, worksheet.intermediate_output_bb38, 0.001); end
  def test_intermediate_output_bc38; assert_in_epsilon(127.93, worksheet.intermediate_output_bc38, 0.001); end
  def test_intermediate_output_bd38; assert_in_epsilon(63.965, worksheet.intermediate_output_bd38, 0.001); end
  def test_intermediate_output_be38; assert_in_epsilon(63.965, worksheet.intermediate_output_be38, 0.001); end
  def test_intermediate_output_bf38; assert_in_epsilon(63.965, worksheet.intermediate_output_bf38, 0.001); end
  def test_intermediate_output_bg38; assert_in_epsilon(63.965, worksheet.intermediate_output_bg38, 0.001); end
  def test_intermediate_output_bh38; assert_in_epsilon(63.965, worksheet.intermediate_output_bh38, 0.001); end
  def test_intermediate_output_d39; assert_equal("Coal", worksheet.intermediate_output_d39); end
  def test_intermediate_output_f39; assert_in_epsilon(475.4021773117744, worksheet.intermediate_output_f39, 0.001); end
  def test_intermediate_output_h39; assert_in_epsilon(1149, worksheet.intermediate_output_h39, 0.001); end
  def test_intermediate_output_i39; assert_in_epsilon(1023.1, worksheet.intermediate_output_i39, 0.001); end
  def test_intermediate_output_j39; assert_in_epsilon(896.5, worksheet.intermediate_output_j39, 0.001); end
  def test_intermediate_output_k39; assert_in_epsilon(967.3, worksheet.intermediate_output_k39, 0.001); end
  def test_intermediate_output_l39; assert_in_epsilon(856.4, worksheet.intermediate_output_l39, 0.001); end
  def test_intermediate_output_m39; assert_in_epsilon(859.7, worksheet.intermediate_output_m39, 0.001); end
  def test_intermediate_output_n39; assert_in_epsilon(871, worksheet.intermediate_output_n39, 0.001); end
  def test_intermediate_output_o39; assert_in_epsilon(876.6, worksheet.intermediate_output_o39, 0.001); end
  def test_intermediate_output_p39; assert_in_epsilon(856.9, worksheet.intermediate_output_p39, 0.001); end
  def test_intermediate_output_q39; assert_in_epsilon(916.1, worksheet.intermediate_output_q39, 0.001); end
  def test_intermediate_output_r39; assert_in_epsilon(853.9, worksheet.intermediate_output_r39, 0.001); end
  def test_intermediate_output_s39; assert_in_epsilon(840.9, worksheet.intermediate_output_s39, 0.001); end
  def test_intermediate_output_t39; assert_in_epsilon(791.7, worksheet.intermediate_output_t39, 0.001); end
  def test_intermediate_output_u39; assert_in_epsilon(795, worksheet.intermediate_output_u39, 0.001); end
  def test_intermediate_output_v39; assert_in_epsilon(568.4, worksheet.intermediate_output_v39, 0.001); end
  def test_intermediate_output_w39; assert_in_epsilon(756.8, worksheet.intermediate_output_w39, 0.001); end
  def test_intermediate_output_x39; assert_in_epsilon(801.1, worksheet.intermediate_output_x39, 0.001); end
  def test_intermediate_output_y39; assert_in_epsilon(838.2, worksheet.intermediate_output_y39, 0.001); end
  def test_intermediate_output_z39; assert_in_epsilon(807.5, worksheet.intermediate_output_z39, 0.001); end
  def test_intermediate_output_aa39; assert_in_epsilon(769.9, worksheet.intermediate_output_aa39, 0.001); end
  def test_intermediate_output_ab39; assert_in_epsilon(764.4, worksheet.intermediate_output_ab39, 0.001); end
  def test_intermediate_output_ac39; assert_in_epsilon(769, worksheet.intermediate_output_ac39, 0.001); end
  def test_intermediate_output_ad39; assert_in_epsilon(723.1, worksheet.intermediate_output_ad39, 0.001); end
  def test_intermediate_output_ae39; assert_in_epsilon(633.9, worksheet.intermediate_output_ae39, 0.001); end
  def test_intermediate_output_af39; assert_in_epsilon(587.3, worksheet.intermediate_output_af39, 0.001); end
  def test_intermediate_output_ag39; assert_in_epsilon(564.8, worksheet.intermediate_output_ag39, 0.001); end
  def test_intermediate_output_ah39; assert_in_epsilon(533.8, worksheet.intermediate_output_ah39, 0.001); end
  def test_intermediate_output_ai39; assert_in_epsilon(479.8, worksheet.intermediate_output_ai39, 0.001); end
  def test_intermediate_output_aj39; assert_in_epsilon(476.5, worksheet.intermediate_output_aj39, 0.001); end
  def test_intermediate_output_ak39; assert_in_epsilon(418.6, worksheet.intermediate_output_ak39, 0.001); end
  def test_intermediate_output_al39; assert_in_epsilon(448.2, worksheet.intermediate_output_al39, 0.001); end
  def test_intermediate_output_am39; assert_in_epsilon(474.2, worksheet.intermediate_output_am39, 0.001); end
  def test_intermediate_output_an39; assert_in_epsilon(438.4, worksheet.intermediate_output_an39, 0.001); end
  def test_intermediate_output_ao39; assert_in_epsilon(470.8, worksheet.intermediate_output_ao39, 0.001); end
  def test_intermediate_output_ap39; assert_in_epsilon(454.3, worksheet.intermediate_output_ap39, 0.001); end
  def test_intermediate_output_aq39; assert_in_epsilon(463.6, worksheet.intermediate_output_aq39, 0.001); end
  def test_intermediate_output_ar39; assert_in_epsilon(504.2, worksheet.intermediate_output_ar39, 0.001); end
  def test_intermediate_output_as39; assert_in_epsilon(476.4, worksheet.intermediate_output_as39, 0.001); end
  def test_intermediate_output_at39; assert_in_epsilon(439.7, worksheet.intermediate_output_at39, 0.001); end
  def test_intermediate_output_au39; assert_in_epsilon(360.7, worksheet.intermediate_output_au39, 0.001); end
  def test_intermediate_output_av39; assert_in_epsilon(378.1, worksheet.intermediate_output_av39, 0.001); end
  def test_intermediate_output_c40; assert_equal("Q.02", worksheet.intermediate_output_c40); end
  def test_intermediate_output_d40; assert_equal("Oil reserves", worksheet.intermediate_output_d40); end
  def test_intermediate_output_f40; assert_in_epsilon(887.460075730032, worksheet.intermediate_output_f40, 0.001); end
  def test_intermediate_output_aj40; assert_in_epsilon(1544.6, worksheet.intermediate_output_aj40, 0.001); end
  def test_intermediate_output_ak40; assert_in_epsilon(1613.5, worksheet.intermediate_output_ak40, 0.001); end
  def test_intermediate_output_al40; assert_in_epsilon(1489.1, worksheet.intermediate_output_al40, 0.001); end
  def test_intermediate_output_am40; assert_in_epsilon(1357.7, worksheet.intermediate_output_am40, 0.001); end
  def test_intermediate_output_an40; assert_in_epsilon(1371.6, worksheet.intermediate_output_an40, 0.001); end
  def test_intermediate_output_ao40; assert_in_epsilon(1221.6, worksheet.intermediate_output_ao40, 0.001); end
  def test_intermediate_output_ap40; assert_in_epsilon(1075.8, worksheet.intermediate_output_ap40, 0.001); end
  def test_intermediate_output_aq40; assert_in_epsilon(955.5, worksheet.intermediate_output_aq40, 0.001); end
  def test_intermediate_output_ar40; assert_in_epsilon(836.4, worksheet.intermediate_output_ar40, 0.001); end
  def test_intermediate_output_as40; assert_in_epsilon(896.7, worksheet.intermediate_output_as40, 0.001); end
  def test_intermediate_output_at40; assert_in_epsilon(817.1, worksheet.intermediate_output_at40, 0.001); end
  def test_intermediate_output_au40; assert_in_epsilon(785, worksheet.intermediate_output_au40, 0.001); end
  def test_intermediate_output_av40; assert_in_epsilon(712.9, worksheet.intermediate_output_av40, 0.001); end
  def test_intermediate_output_aw40; assert_equal("Dukes 1.1 Primary oils indigenous production + Stock change of Primary oils and Petroleum products minus non-energy use of petroleum products", worksheet.intermediate_output_aw40); end
  def test_intermediate_output_ay40; assert_in_epsilon(975.891208349798, worksheet.intermediate_output_ay40, 0.001); end
  def test_intermediate_output_az40; assert_in_epsilon(802.547952837212, worksheet.intermediate_output_az40, 0.001); end
  def test_intermediate_output_ba40; assert_in_epsilon(646.828843533316, worksheet.intermediate_output_ba40, 0.001); end
  def test_intermediate_output_bb40; assert_in_epsilon(501.788950072749, worksheet.intermediate_output_bb40, 0.001); end
  def test_intermediate_output_bc40; assert_in_epsilon(388.274724214433, worksheet.intermediate_output_bc40, 0.001); end
  def test_intermediate_output_bd40; assert_in_epsilon(300.439580110198, worksheet.intermediate_output_bd40, 0.001); end
  def test_intermediate_output_be40; assert_in_epsilon(232.474419959775, worksheet.intermediate_output_be40, 0.001); end
  def test_intermediate_output_bf40; assert_in_epsilon(179.884274621243, worksheet.intermediate_output_bf40, 0.001); end
  def test_intermediate_output_bg40; assert_in_epsilon(139.191022657933, worksheet.intermediate_output_bg40, 0.001); end
  def test_intermediate_output_bh40; assert_in_epsilon(107.703360003839, worksheet.intermediate_output_bh40, 0.001); end
  def test_intermediate_output_c41; assert_equal("Y.05", worksheet.intermediate_output_c41); end
  def test_intermediate_output_d41; assert_equal("Oil and petroleum products oversupply (imports)", worksheet.intermediate_output_d41); end
  def test_intermediate_output_f41; assert_in_epsilon(79.74397690520158, worksheet.intermediate_output_f41, 0.001); end
  def test_intermediate_output_aj41; assert_in_epsilon(-467.10732, worksheet.intermediate_output_aj41, 0.001); end
  def test_intermediate_output_ak41; assert_in_epsilon(-598.15416, worksheet.intermediate_output_ak41, 0.001); end
  def test_intermediate_output_al41; assert_in_epsilon(-491.289015345148, worksheet.intermediate_output_al41, 0.001); end
  def test_intermediate_output_am41; assert_in_epsilon(-425.923816553362, worksheet.intermediate_output_am41, 0.001); end
  def test_intermediate_output_an41; assert_in_epsilon(-385.362040231585, worksheet.intermediate_output_an41, 0.001); end
  def test_intermediate_output_ao41; assert_in_epsilon(-265.313047678547, worksheet.intermediate_output_ao41, 0.001); end
  def test_intermediate_output_ap41; assert_in_epsilon(-26.7418072519548, worksheet.intermediate_output_ap41, 0.001); end
  def test_intermediate_output_aq41; assert_in_epsilon(59.0560078145415, worksheet.intermediate_output_aq41, 0.001); end
  def test_intermediate_output_ar41; assert_in_epsilon(116.268946233383, worksheet.intermediate_output_ar41, 0.001); end
  def test_intermediate_output_as41; assert_in_epsilon(79.7439769052016, worksheet.intermediate_output_as41, 0.001); end
  def test_intermediate_output_at41; assert_in_epsilon(146.439372991402, worksheet.intermediate_output_at41, 0.001); end
  def test_intermediate_output_au41; assert_in_epsilon(115.647880946813, worksheet.intermediate_output_au41, 0.001); end
  def test_intermediate_output_av41; assert_in_epsilon(156.542161812907, worksheet.intermediate_output_av41, 0.001); end
  def test_intermediate_output_aw41; assert_equal("Dukes 1.1 Primary oils imports - exports", worksheet.intermediate_output_aw41); end
  def test_intermediate_output_c42; assert_equal("Y.03", worksheet.intermediate_output_c42); end
  def test_intermediate_output_d42; assert_equal("Petroleum products oversupply", worksheet.intermediate_output_d42); end
  def test_intermediate_output_f42; assert_in_epsilon(-60.58105389631571, worksheet.intermediate_output_f42, 0.001); end
  def test_intermediate_output_aj42; assert_in_epsilon(-163.241339341648, worksheet.intermediate_output_aj42, 0.001); end
  def test_intermediate_output_ak42; assert_in_epsilon(-97.7217594116977, worksheet.intermediate_output_ak42, 0.001); end
  def test_intermediate_output_al42; assert_in_epsilon(-79.8740410844506, worksheet.intermediate_output_al42, 0.001); end
  def test_intermediate_output_am42; assert_in_epsilon(-21.1951157472124, worksheet.intermediate_output_am42, 0.001); end
  def test_intermediate_output_an42; assert_in_epsilon(-107.866993934157, worksheet.intermediate_output_an42, 0.001); end
  def test_intermediate_output_ao42; assert_in_epsilon(-85.2019146830932, worksheet.intermediate_output_ao42, 0.001); end
  def test_intermediate_output_ap42; assert_in_epsilon(-150.348705930473, worksheet.intermediate_output_ap42, 0.001); end
  def test_intermediate_output_aq42; assert_in_epsilon(-89.7929713256813, worksheet.intermediate_output_aq42, 0.001); end
  def test_intermediate_output_ar42; assert_in_epsilon(-24.386184859023, worksheet.intermediate_output_ar42, 0.001); end
  def test_intermediate_output_as42; assert_in_epsilon(-60.1395092313204, worksheet.intermediate_output_as42, 0.001); end
  def test_intermediate_output_at42; assert_in_epsilon(-57.0637526378206, worksheet.intermediate_output_at42, 0.001); end
  def test_intermediate_output_au42; assert_in_epsilon(-41.3193555887575, worksheet.intermediate_output_au42, 0.001); end
  def test_intermediate_output_av42; assert_in_epsilon(-22.9801634653372, worksheet.intermediate_output_av42, 0.001); end
  def test_intermediate_output_aw42; assert_equal("Dukes 1.1 Petroleum products imports - exports", worksheet.intermediate_output_aw42); end
  def test_intermediate_output_ay42; assert_in_delta(0, (worksheet.intermediate_output_ay42||0), 0.001); end
  def test_intermediate_output_az42; assert_in_delta(0, (worksheet.intermediate_output_az42||0), 0.001); end
  def test_intermediate_output_ba42; assert_in_delta(0, (worksheet.intermediate_output_ba42||0), 0.001); end
  def test_intermediate_output_bb42; assert_in_delta(0, (worksheet.intermediate_output_bb42||0), 0.001); end
  def test_intermediate_output_bc42; assert_in_delta(0, (worksheet.intermediate_output_bc42||0), 0.001); end
  def test_intermediate_output_bd42; assert_in_delta(0, (worksheet.intermediate_output_bd42||0), 0.001); end
  def test_intermediate_output_be42; assert_in_delta(0, (worksheet.intermediate_output_be42||0), 0.001); end
  def test_intermediate_output_bf42; assert_in_delta(0, (worksheet.intermediate_output_bf42||0), 0.001); end
  def test_intermediate_output_bg42; assert_in_delta(0, (worksheet.intermediate_output_bg42||0), 0.001); end
  def test_intermediate_output_bh42; assert_in_delta(0, (worksheet.intermediate_output_bh42||0), 0.001); end
  def test_intermediate_output_d43; assert_equal("Oil and petroleum products", worksheet.intermediate_output_d43); end
  def test_intermediate_output_f43; assert_in_epsilon(906.622998738918, worksheet.intermediate_output_f43, 0.001); end
  def test_intermediate_output_aj43; assert_in_epsilon(914.3, worksheet.intermediate_output_aj43, 0.001); end
  def test_intermediate_output_ak43; assert_in_epsilon(917.6, worksheet.intermediate_output_ak43, 0.001); end
  def test_intermediate_output_al43; assert_in_epsilon(917.9, worksheet.intermediate_output_al43, 0.001); end
  def test_intermediate_output_am43; assert_in_epsilon(910.6, worksheet.intermediate_output_am43, 0.001); end
  def test_intermediate_output_an43; assert_in_epsilon(878.3, worksheet.intermediate_output_an43, 0.001); end
  def test_intermediate_output_ao43; assert_in_epsilon(871, worksheet.intermediate_output_ao43, 0.001); end
  def test_intermediate_output_ap43; assert_in_epsilon(898.7, worksheet.intermediate_output_ap43, 0.001); end
  def test_intermediate_output_aq43; assert_in_epsilon(924.8, worksheet.intermediate_output_aq43, 0.001); end
  def test_intermediate_output_ar43; assert_in_epsilon(928.3, worksheet.intermediate_output_ar43, 0.001); end
  def test_intermediate_output_as43; assert_in_epsilon(916.3, worksheet.intermediate_output_as43, 0.001); end
  def test_intermediate_output_at43; assert_in_epsilon(906.5, worksheet.intermediate_output_at43, 0.001); end
  def test_intermediate_output_au43; assert_in_epsilon(859.3, worksheet.intermediate_output_au43, 0.001); end
  def test_intermediate_output_av43; assert_in_epsilon(846.5, worksheet.intermediate_output_av43, 0.001); end
  def test_intermediate_output_aw43; assert_equal("Sum of above", worksheet.intermediate_output_aw43); end
  def test_intermediate_output_c44; assert_equal("Y.06", worksheet.intermediate_output_c44); end
  def test_intermediate_output_d44; assert_equal("Gas oversupply (imports)", worksheet.intermediate_output_d44); end
  def test_intermediate_output_f44; assert_in_epsilon(214.86865308275657, worksheet.intermediate_output_f44, 0.001); end
  def test_intermediate_output_h44; assert_in_epsilon(9.759, worksheet.intermediate_output_h44, 0.001); end
  def test_intermediate_output_i44; assert_in_epsilon(9.73, worksheet.intermediate_output_i44, 0.001); end
  def test_intermediate_output_j44; assert_in_epsilon(8.968, worksheet.intermediate_output_j44, 0.001); end
  def test_intermediate_output_k44; assert_in_epsilon(8.587, worksheet.intermediate_output_k44, 0.001); end
  def test_intermediate_output_l44; assert_in_epsilon(7.122, worksheet.intermediate_output_l44, 0.001); end
  def test_intermediate_output_m44; assert_in_epsilon(9.818, worksheet.intermediate_output_m44, 0.001); end
  def test_intermediate_output_n44; assert_in_epsilon(11.254, worksheet.intermediate_output_n44, 0.001); end
  def test_intermediate_output_o44; assert_in_epsilon(19.548, worksheet.intermediate_output_o44, 0.001); end
  def test_intermediate_output_p44; assert_in_epsilon(55.361, worksheet.intermediate_output_p44, 0.001); end
  def test_intermediate_output_q44; assert_in_epsilon(95.424, worksheet.intermediate_output_q44, 0.001); end
  def test_intermediate_output_r44; assert_in_epsilon(116.291, worksheet.intermediate_output_r44, 0.001); end
  def test_intermediate_output_s44; assert_in_epsilon(124.262, worksheet.intermediate_output_s44, 0.001); end
  def test_intermediate_output_t44; assert_in_epsilon(115.001, worksheet.intermediate_output_t44, 0.001); end
  def test_intermediate_output_u44; assert_in_epsilon(124.497, worksheet.intermediate_output_u44, 0.001); end
  def test_intermediate_output_v44; assert_in_epsilon(147.415, worksheet.intermediate_output_v44, 0.001); end
  def test_intermediate_output_w44; assert_in_epsilon(147.122, worksheet.intermediate_output_w44, 0.001); end
  def test_intermediate_output_x44; assert_in_epsilon(137.099, worksheet.intermediate_output_x44, 0.001); end
  def test_intermediate_output_y44; assert_in_epsilon(128.893, worksheet.intermediate_output_y44, 0.001); end
  def test_intermediate_output_z44; assert_in_epsilon(115.441, worksheet.intermediate_output_z44, 0.001); end
  def test_intermediate_output_aa44; assert_in_epsilon(113.77, worksheet.intermediate_output_aa44, 0.001); end
  def test_intermediate_output_ab44; assert_in_epsilon(79.833, worksheet.intermediate_output_ab44, 0.001); end
  def test_intermediate_output_ac44; assert_in_epsilon(72.007, worksheet.intermediate_output_ac44, 0.001); end
  def test_intermediate_output_ad44; assert_in_epsilon(60.635, worksheet.intermediate_output_ad44, 0.001); end
  def test_intermediate_output_ae44; assert_in_epsilon(41.704, worksheet.intermediate_output_ae44, 0.001); end
  def test_intermediate_output_af44; assert_in_epsilon(23.496, worksheet.intermediate_output_af44, 0.001); end
  def test_intermediate_output_ag44; assert_in_epsilon(8.225, worksheet.intermediate_output_ag44, 0.001); end
  def test_intermediate_output_ah44; assert_in_epsilon(4.601, worksheet.intermediate_output_ah44, 0.001); end
  def test_intermediate_output_ai44; assert_in_epsilon(-7.604, worksheet.intermediate_output_ai44, 0.001); end
  def test_intermediate_output_aj44; assert_in_epsilon(-21.022, worksheet.intermediate_output_aj44, 0.001); end
  def test_intermediate_output_ak44; assert_in_epsilon(-71.571, worksheet.intermediate_output_ak44, 0.001); end
  def test_intermediate_output_al44; assert_in_epsilon(-120.31, worksheet.intermediate_output_al44, 0.001); end
  def test_intermediate_output_am44; assert_in_epsilon(-107.866, worksheet.intermediate_output_am44, 0.001); end
  def test_intermediate_output_an44; assert_in_epsilon(-90.238, worksheet.intermediate_output_an44, 0.001); end
  def test_intermediate_output_ao44; assert_in_epsilon(-90.741, worksheet.intermediate_output_ao44, 0.001); end
  def test_intermediate_output_ap44; assert_in_epsilon(18.9210152317339, worksheet.intermediate_output_ap44, 0.001); end
  def test_intermediate_output_aq44; assert_in_epsilon(77.1469066294905, worksheet.intermediate_output_aq44, 0.001); end
  def test_intermediate_output_ar44; assert_in_epsilon(123.438611928566, worksheet.intermediate_output_ar44, 0.001); end
  def test_intermediate_output_as44; assert_in_epsilon(214.868653082757, worksheet.intermediate_output_as44, 0.001); end
  def test_intermediate_output_at44; assert_in_epsilon(284.384233699597, worksheet.intermediate_output_at44, 0.001); end
  def test_intermediate_output_au44; assert_in_epsilon(318.688961523769, worksheet.intermediate_output_au44, 0.001); end
  def test_intermediate_output_av44; assert_in_epsilon(413.098109925268, worksheet.intermediate_output_av44, 0.001); end
  def test_intermediate_output_aw44; assert_equal("Dukes long-term trends 4.1.1 Methane imports - exports", worksheet.intermediate_output_aw44); end
  def test_intermediate_output_c45; assert_equal("Q.03", worksheet.intermediate_output_c45); end
  def test_intermediate_output_d45; assert_equal("Gas reserves", worksheet.intermediate_output_d45); end
  def test_intermediate_output_f45; assert_in_epsilon(834.0611502141918, worksheet.intermediate_output_f45, 0.001); end
  def test_intermediate_output_aj45; assert_in_epsilon(1036.5, worksheet.intermediate_output_aj45, 0.001); end
  def test_intermediate_output_ak45; assert_in_epsilon(1147.5, worksheet.intermediate_output_ak45, 0.001); end
  def test_intermediate_output_al45; assert_in_epsilon(1235.3, worksheet.intermediate_output_al45, 0.001); end
  def test_intermediate_output_am45; assert_in_epsilon(1219.2, worksheet.intermediate_output_am45, 0.001); end
  def test_intermediate_output_an45; assert_in_epsilon(1187.3, worksheet.intermediate_output_an45, 0.001); end
  def test_intermediate_output_ao45; assert_in_epsilon(1191.4, worksheet.intermediate_output_ao45, 0.001); end
  def test_intermediate_output_ap45; assert_in_epsilon(1105, worksheet.intermediate_output_ap45, 0.001); end
  def test_intermediate_output_aq45; assert_in_epsilon(1019.4, worksheet.intermediate_output_aq45, 0.001); end
  def test_intermediate_output_ar45; assert_in_epsilon(916.2, worksheet.intermediate_output_ar45, 0.001); end
  def test_intermediate_output_as45; assert_in_epsilon(834.1, worksheet.intermediate_output_as45, 0.001); end
  def test_intermediate_output_at45; assert_in_epsilon(797.7, worksheet.intermediate_output_at45, 0.001); end
  def test_intermediate_output_au45; assert_in_epsilon(681.9, worksheet.intermediate_output_au45, 0.001); end
  def test_intermediate_output_av45; assert_in_epsilon(671.9, worksheet.intermediate_output_av45, 0.001); end
  def test_intermediate_output_aw45; assert_equal("Dukes 1.1 Natural gas indigenous production + Stock change of natural gas minus non-energy use of natural gas", worksheet.intermediate_output_aw45); end
  def test_intermediate_output_ay45; assert_in_epsilon(731, worksheet.intermediate_output_ay45, 0.001); end
  def test_intermediate_output_az45; assert_in_epsilon(645.772895884115, worksheet.intermediate_output_az45, 0.001); end
  def test_intermediate_output_ba45; assert_in_epsilon(495.88758312335, worksheet.intermediate_output_ba45, 0.001); end
  def test_intermediate_output_bb45; assert_in_epsilon(383.12064593856, worksheet.intermediate_output_bb45, 0.001); end
  def test_intermediate_output_bc45; assert_in_epsilon(296.451452589944, worksheet.intermediate_output_bc45, 0.001); end
  def test_intermediate_output_bd45; assert_in_epsilon(229.388482908284, worksheet.intermediate_output_bd45, 0.001); end
  def test_intermediate_output_be45; assert_in_epsilon(177.496435356475, worksheet.intermediate_output_be45, 0.001); end
  def test_intermediate_output_bf45; assert_in_epsilon(137.343358153041, worksheet.intermediate_output_bf45, 0.001); end
  def test_intermediate_output_bg45; assert_in_epsilon(106.273672431058, worksheet.intermediate_output_bg45, 0.001); end
  def test_intermediate_output_bh45; assert_in_epsilon(82.2325418852722, worksheet.intermediate_output_bh45, 0.001); end
  def test_intermediate_output_d46; assert_equal("Natural gas", worksheet.intermediate_output_d46); end
  def test_intermediate_output_f46; assert_in_epsilon(1048.9298032969484, worksheet.intermediate_output_f46, 0.001); end
  def test_intermediate_output_aj46; assert_in_epsilon(1015.5, worksheet.intermediate_output_aj46, 0.001); end
  def test_intermediate_output_ak46; assert_in_epsilon(1075.9, worksheet.intermediate_output_ak46, 0.001); end
  def test_intermediate_output_al46; assert_in_epsilon(1114.9, worksheet.intermediate_output_al46, 0.001); end
  def test_intermediate_output_am46; assert_in_epsilon(1111.4, worksheet.intermediate_output_am46, 0.001); end
  def test_intermediate_output_an46; assert_in_epsilon(1097, worksheet.intermediate_output_an46, 0.001); end
  def test_intermediate_output_ao46; assert_in_epsilon(1100.6, worksheet.intermediate_output_ao46, 0.001); end
  def test_intermediate_output_ap46; assert_in_epsilon(1123.9, worksheet.intermediate_output_ap46, 0.001); end
  def test_intermediate_output_aq46; assert_in_epsilon(1096.5, worksheet.intermediate_output_aq46, 0.001); end
  def test_intermediate_output_ar46; assert_in_epsilon(1039.6, worksheet.intermediate_output_ar46, 0.001); end
  def test_intermediate_output_as46; assert_in_epsilon(1048.9, worksheet.intermediate_output_as46, 0.001); end
  def test_intermediate_output_at46; assert_in_epsilon(1082.1, worksheet.intermediate_output_at46, 0.001); end
  def test_intermediate_output_au46; assert_in_epsilon(1000.6, worksheet.intermediate_output_au46, 0.001); end
  def test_intermediate_output_av46; assert_in_epsilon(1085, worksheet.intermediate_output_av46, 0.001); end
  def test_intermediate_output_aw46; assert_equal("Sum of above", worksheet.intermediate_output_aw46); end
  def test_intermediate_output_d47; assert_equal("Total Primary Supply", worksheet.intermediate_output_d47); end
  def test_intermediate_output_f47; assert_in_epsilon(2710.526095457397, worksheet.intermediate_output_f47, 0.001); end
  def test_intermediate_output_aj47; assert_in_epsilon(2773.5, worksheet.intermediate_output_aj47, 0.001); end
  def test_intermediate_output_ak47; assert_in_epsilon(2768.8, worksheet.intermediate_output_ak47, 0.001); end
  def test_intermediate_output_al47; assert_in_epsilon(2810, worksheet.intermediate_output_al47, 0.001); end
  def test_intermediate_output_am47; assert_in_epsilon(2836.5, worksheet.intermediate_output_am47, 0.001); end
  def test_intermediate_output_an47; assert_in_epsilon(2748.5, worksheet.intermediate_output_an47, 0.001); end
  def test_intermediate_output_ao47; assert_in_epsilon(2767.7, worksheet.intermediate_output_ao47, 0.001); end
  def test_intermediate_output_ap47; assert_in_epsilon(2788.5, worksheet.intermediate_output_ap47, 0.001); end
  def test_intermediate_output_aq47; assert_in_epsilon(2808.1, worksheet.intermediate_output_aq47, 0.001); end
  def test_intermediate_output_ar47; assert_in_epsilon(2785.4, worksheet.intermediate_output_ar47, 0.001); end
  def test_intermediate_output_as47; assert_in_epsilon(2720.5, worksheet.intermediate_output_as47, 0.001); end
  def test_intermediate_output_at47; assert_in_epsilon(2691, worksheet.intermediate_output_at47, 0.001); end
  def test_intermediate_output_au47; assert_in_epsilon(2520.5, worksheet.intermediate_output_au47, 0.001); end
  def test_intermediate_output_av47; assert_in_epsilon(2600.1, worksheet.intermediate_output_av47, 0.001); end
  def test_intermediate_output_aw47; assert_equal("Sum of above", worksheet.intermediate_output_aw47); end
  def test_intermediate_output_d49; assert_equal("Dummy for charting supply", worksheet.intermediate_output_d49); end
  def test_intermediate_output_ay49; assert_in_delta(0, (worksheet.intermediate_output_ay49||0), 0.001); end
  def test_intermediate_output_az49; assert_in_delta(0, (worksheet.intermediate_output_az49||0), 0.001); end
  def test_intermediate_output_ba49; assert_in_delta(0, (worksheet.intermediate_output_ba49||0), 0.001); end
  def test_intermediate_output_bb49; assert_in_delta(0, (worksheet.intermediate_output_bb49||0), 0.001); end
  def test_intermediate_output_bc49; assert_in_delta(0, (worksheet.intermediate_output_bc49||0), 0.001); end
  def test_intermediate_output_bd49; assert_in_delta(0, (worksheet.intermediate_output_bd49||0), 0.001); end
  def test_intermediate_output_be49; assert_in_delta(0, (worksheet.intermediate_output_be49||0), 0.001); end
  def test_intermediate_output_bf49; assert_in_delta(0, (worksheet.intermediate_output_bf49||0), 0.001); end
  def test_intermediate_output_bg49; assert_in_delta(0, (worksheet.intermediate_output_bg49||0), 0.001); end
  def test_intermediate_output_bh49; assert_in_delta(0, (worksheet.intermediate_output_bh49||0), 0.001); end
  def test_intermediate_output_c51; assert_equal("Conversion losses, distribution, and own use", worksheet.intermediate_output_c51); end
  def test_intermediate_output_c52; assert_equal("X.01", worksheet.intermediate_output_c52); end
  def test_intermediate_output_d52; assert_equal("Conversion losses", worksheet.intermediate_output_d52); end
  def test_intermediate_output_f52; assert_in_epsilon(561.4193024884444, worksheet.intermediate_output_f52, 0.001); end
  def test_intermediate_output_ay52; assert_in_epsilon(556.2679132568265, worksheet.intermediate_output_ay52, 0.001); end
  def test_intermediate_output_az52; assert_in_epsilon(508.83950907436724, worksheet.intermediate_output_az52, 0.001); end
  def test_intermediate_output_ba52; assert_in_epsilon(438.86898063555634, worksheet.intermediate_output_ba52, 0.001); end
  def test_intermediate_output_bb52; assert_in_epsilon(317.39667748988444, worksheet.intermediate_output_bb52, 0.001); end
  def test_intermediate_output_bc52; assert_in_epsilon(168.69548890313953, worksheet.intermediate_output_bc52, 0.001); end
  def test_intermediate_output_bd52; assert_in_epsilon(105.19399032538243, worksheet.intermediate_output_bd52, 0.001); end
  def test_intermediate_output_be52; assert_in_epsilon(116.43727800196098, worksheet.intermediate_output_be52, 0.001); end
  def test_intermediate_output_bf52; assert_in_epsilon(150.78177025923338, worksheet.intermediate_output_bf52, 0.001); end
  def test_intermediate_output_bg52; assert_in_epsilon(190.905385016675, worksheet.intermediate_output_bg52, 0.001); end
  def test_intermediate_output_bh52; assert_in_epsilon(236.7952105102262, worksheet.intermediate_output_bh52, 0.001); end
  def test_intermediate_output_c53; assert_equal("X.02", worksheet.intermediate_output_c53); end
  def test_intermediate_output_d53; assert_equal("Distribution losses and own use", worksheet.intermediate_output_d53); end
  def test_intermediate_output_f53; assert_in_epsilon(186.94703532055274, worksheet.intermediate_output_f53, 0.001); end
  def test_intermediate_output_ay53; assert_in_epsilon(121.4794441576521, worksheet.intermediate_output_ay53, 0.001); end
  def test_intermediate_output_az53; assert_in_epsilon(112.78346444533362, worksheet.intermediate_output_az53, 0.001); end
  def test_intermediate_output_ba53; assert_in_epsilon(105.57258452795028, worksheet.intermediate_output_ba53, 0.001); end
  def test_intermediate_output_bb53; assert_in_epsilon(96.86004698786937, worksheet.intermediate_output_bb53, 0.001); end
  def test_intermediate_output_bc53; assert_in_epsilon(89.74825087777864, worksheet.intermediate_output_bc53, 0.001); end
  def test_intermediate_output_bd53; assert_in_epsilon(84.55346276540992, worksheet.intermediate_output_bd53, 0.001); end
  def test_intermediate_output_be53; assert_in_epsilon(80.66916490800696, worksheet.intermediate_output_be53, 0.001); end
  def test_intermediate_output_bf53; assert_in_epsilon(79.34819043209228, worksheet.intermediate_output_bf53, 0.001); end
  def test_intermediate_output_bg53; assert_in_epsilon(78.46516261163194, worksheet.intermediate_output_bg53, 0.001); end
  def test_intermediate_output_bh53; assert_in_epsilon(77.86573815067113, worksheet.intermediate_output_bh53, 0.001); end
  def test_intermediate_output_d54; assert_equal("Supply net of losses", worksheet.intermediate_output_d54); end
  def test_intermediate_output_f54; assert_in_epsilon(1962.1597576483998, worksheet.intermediate_output_f54, 0.001); end
  def test_intermediate_output_ay54; assert_in_epsilon(1901.498066438453, worksheet.intermediate_output_ay54, 0.001); end
  def test_intermediate_output_az54; assert_in_epsilon(1798.0165210399814, worksheet.intermediate_output_az54, 0.001); end
  def test_intermediate_output_ba54; assert_in_epsilon(1647.198651408859, worksheet.intermediate_output_ba54, 0.001); end
  def test_intermediate_output_bb54; assert_in_epsilon(1492.7300490412777, worksheet.intermediate_output_bb54, 0.001); end
  def test_intermediate_output_bc54; assert_in_epsilon(1328.0453057521377, worksheet.intermediate_output_bc54, 0.001); end
  def test_intermediate_output_bd54; assert_in_epsilon(1186.6258945318743, worksheet.intermediate_output_bd54, 0.001); end
  def test_intermediate_output_be54; assert_in_epsilon(1103.827137733327, worksheet.intermediate_output_be54, 0.001); end
  def test_intermediate_output_bf54; assert_in_epsilon(1027.3995365406345, worksheet.intermediate_output_bf54, 0.001); end
  def test_intermediate_output_bg54; assert_in_epsilon(953.9349171506572, worksheet.intermediate_output_bg54, 0.001); end
  def test_intermediate_output_bh54; assert_in_epsilon(888.6842499911435, worksheet.intermediate_output_bh54, 0.001); end
  def test_intermediate_output_c56; assert_equal("Supply / demand not accounted for", worksheet.intermediate_output_c56); end
  def test_intermediate_output_c58; assert_equal("C.01", worksheet.intermediate_output_c58); end
  def test_intermediate_output_d58; assert_equal("Coal and fossil waste", worksheet.intermediate_output_d58); end
  def test_intermediate_output_f58; assert_in_delta(0.4668835385115244, worksheet.intermediate_output_f58, 0.001); end
  def test_intermediate_output_ay58; assert_in_delta(0, (worksheet.intermediate_output_ay58||0), 0.001); end
  def test_intermediate_output_az58; assert_in_delta(0, (worksheet.intermediate_output_az58||0), 0.001); end
  def test_intermediate_output_ba58; assert_in_delta(0, (worksheet.intermediate_output_ba58||0), 0.001); end
  def test_intermediate_output_bb58; assert_in_delta(0, (worksheet.intermediate_output_bb58||0), 0.001); end
  def test_intermediate_output_bc58; assert_in_delta(0, (worksheet.intermediate_output_bc58||0), 0.001); end
  def test_intermediate_output_bd58; assert_in_delta(0, (worksheet.intermediate_output_bd58||0), 0.001); end
  def test_intermediate_output_be58; assert_in_delta(0, (worksheet.intermediate_output_be58||0), 0.001); end
  def test_intermediate_output_bf58; assert_in_delta(0, (worksheet.intermediate_output_bf58||0), 0.001); end
  def test_intermediate_output_bg58; assert_in_delta(0, (worksheet.intermediate_output_bg58||0), 0.001); end
  def test_intermediate_output_bh58; assert_in_delta(0, (worksheet.intermediate_output_bh58||0), 0.001); end
  def test_intermediate_output_c59; assert_equal("C.02", worksheet.intermediate_output_c59); end
  def test_intermediate_output_d59; assert_equal("Oil and petroleum products", worksheet.intermediate_output_d59); end
  def test_intermediate_output_f59; assert_in_epsilon(35.99412042466514, worksheet.intermediate_output_f59, 0.001); end
  def test_intermediate_output_ay59; assert_in_delta(0, (worksheet.intermediate_output_ay59||0), 0.001); end
  def test_intermediate_output_az59; assert_in_delta(0, (worksheet.intermediate_output_az59||0), 0.001); end
  def test_intermediate_output_ba59; assert_in_delta(0, (worksheet.intermediate_output_ba59||0), 0.001); end
  def test_intermediate_output_bb59; assert_in_delta(0, (worksheet.intermediate_output_bb59||0), 0.001); end
  def test_intermediate_output_bc59; assert_in_delta(0, (worksheet.intermediate_output_bc59||0), 0.001); end
  def test_intermediate_output_bd59; assert_in_delta(0, (worksheet.intermediate_output_bd59||0), 0.001); end
  def test_intermediate_output_be59; assert_in_delta(0, (worksheet.intermediate_output_be59||0), 0.001); end
  def test_intermediate_output_bf59; assert_in_delta(0, (worksheet.intermediate_output_bf59||0), 0.001); end
  def test_intermediate_output_bg59; assert_in_delta(0, (worksheet.intermediate_output_bg59||0), 0.001); end
  def test_intermediate_output_bh59; assert_in_delta(0, (worksheet.intermediate_output_bh59||0), 0.001); end
  def test_intermediate_output_c60; assert_equal("C.03", worksheet.intermediate_output_c60); end
  def test_intermediate_output_d60; assert_equal("Natural gas", worksheet.intermediate_output_d60); end
  def test_intermediate_output_f60; assert_in_epsilon(-10.228142999999932, worksheet.intermediate_output_f60, 0.001); end
  def test_intermediate_output_ay60; assert_in_delta(0, (worksheet.intermediate_output_ay60||0), 0.001); end
  def test_intermediate_output_az60; assert_in_delta(0, (worksheet.intermediate_output_az60||0), 0.001); end
  def test_intermediate_output_ba60; assert_in_delta(0, (worksheet.intermediate_output_ba60||0), 0.001); end
  def test_intermediate_output_bb60; assert_in_delta(0, (worksheet.intermediate_output_bb60||0), 0.001); end
  def test_intermediate_output_bc60; assert_in_delta(0, (worksheet.intermediate_output_bc60||0), 0.001); end
  def test_intermediate_output_bd60; assert_in_delta(0, (worksheet.intermediate_output_bd60||0), 0.001); end
  def test_intermediate_output_be60; assert_in_delta(0, (worksheet.intermediate_output_be60||0), 0.001); end
  def test_intermediate_output_bf60; assert_in_delta(0, (worksheet.intermediate_output_bf60||0), 0.001); end
  def test_intermediate_output_bg60; assert_in_delta(0, (worksheet.intermediate_output_bg60||0), 0.001); end
  def test_intermediate_output_bh60; assert_in_delta(0, (worksheet.intermediate_output_bh60||0), 0.001); end
  def test_intermediate_output_c61; assert_equal("V.03", worksheet.intermediate_output_c61); end
  def test_intermediate_output_d61; assert_equal("Solid hydrocarbons", worksheet.intermediate_output_d61); end
  def test_intermediate_output_f61; assert_in_delta(0, (worksheet.intermediate_output_f61||0), 0.001); end
  def test_intermediate_output_ay61; assert_in_delta(0, (worksheet.intermediate_output_ay61||0), 0.001); end
  def test_intermediate_output_az61; assert_in_delta(0, (worksheet.intermediate_output_az61||0), 0.001); end
  def test_intermediate_output_ba61; assert_in_delta(0, (worksheet.intermediate_output_ba61||0), 0.001); end
  def test_intermediate_output_bb61; assert_in_delta(0, (worksheet.intermediate_output_bb61||0), 0.001); end
  def test_intermediate_output_bc61; assert_in_delta(0, (worksheet.intermediate_output_bc61||0), 0.001); end
  def test_intermediate_output_bd61; assert_in_delta(0, (worksheet.intermediate_output_bd61||0), 0.001); end
  def test_intermediate_output_be61; assert_in_delta(0, (worksheet.intermediate_output_be61||0), 0.001); end
  def test_intermediate_output_bf61; assert_in_delta(0, (worksheet.intermediate_output_bf61||0), 0.001); end
  def test_intermediate_output_bg61; assert_in_delta(0, (worksheet.intermediate_output_bg61||0), 0.001); end
  def test_intermediate_output_bh61; assert_in_delta(0, (worksheet.intermediate_output_bh61||0), 0.001); end
  def test_intermediate_output_c62; assert_equal("V.04", worksheet.intermediate_output_c62); end
  def test_intermediate_output_d62; assert_equal("Liquid hydrocarbons", worksheet.intermediate_output_d62); end
  def test_intermediate_output_f62; assert_in_epsilon(-40.98525046434433, worksheet.intermediate_output_f62, 0.001); end
  def test_intermediate_output_ay62; assert_in_delta(0, (worksheet.intermediate_output_ay62||0), 0.001); end
  def test_intermediate_output_az62; assert_in_delta(0, (worksheet.intermediate_output_az62||0), 0.001); end
  def test_intermediate_output_ba62; assert_in_delta(0, (worksheet.intermediate_output_ba62||0), 0.001); end
  def test_intermediate_output_bb62; assert_in_delta(0, (worksheet.intermediate_output_bb62||0), 0.001); end
  def test_intermediate_output_bc62; assert_in_delta(0, (worksheet.intermediate_output_bc62||0), 0.001); end
  def test_intermediate_output_bd62; assert_in_delta(0, (worksheet.intermediate_output_bd62||0), 0.001); end
  def test_intermediate_output_be62; assert_in_delta(0, (worksheet.intermediate_output_be62||0), 0.001); end
  def test_intermediate_output_bf62; assert_in_delta(0, (worksheet.intermediate_output_bf62||0), 0.001); end
  def test_intermediate_output_bg62; assert_in_delta(0, (worksheet.intermediate_output_bg62||0), 0.001); end
  def test_intermediate_output_bh62; assert_in_delta(0, (worksheet.intermediate_output_bh62||0), 0.001); end
  def test_intermediate_output_c63; assert_equal("V.05", worksheet.intermediate_output_c63); end
  def test_intermediate_output_d63; assert_equal("Gaseous hydrocarbons", worksheet.intermediate_output_d63); end
  def test_intermediate_output_f63; assert_in_epsilon(15.047768550745332, worksheet.intermediate_output_f63, 0.001); end
  def test_intermediate_output_ay63; assert_in_delta(0, (worksheet.intermediate_output_ay63||0), 0.001); end
  def test_intermediate_output_az63; assert_in_delta(0, (worksheet.intermediate_output_az63||0), 0.001); end
  def test_intermediate_output_ba63; assert_in_delta(0, (worksheet.intermediate_output_ba63||0), 0.001); end
  def test_intermediate_output_bb63; assert_in_delta(0, (worksheet.intermediate_output_bb63||0), 0.001); end
  def test_intermediate_output_bc63; assert_in_delta(0, (worksheet.intermediate_output_bc63||0), 0.001); end
  def test_intermediate_output_bd63; assert_in_delta(0, (worksheet.intermediate_output_bd63||0), 0.001); end
  def test_intermediate_output_be63; assert_in_delta(0, (worksheet.intermediate_output_be63||0), 0.001); end
  def test_intermediate_output_bf63; assert_in_delta(0, (worksheet.intermediate_output_bf63||0), 0.001); end
  def test_intermediate_output_bg63; assert_in_delta(0, (worksheet.intermediate_output_bg63||0), 0.001); end
  def test_intermediate_output_bh63; assert_in_delta(0, (worksheet.intermediate_output_bh63||0), 0.001); end
  def test_intermediate_output_c64; assert_equal("V.06", worksheet.intermediate_output_c64); end
  def test_intermediate_output_d64; assert_equal("Blast furnace gas", worksheet.intermediate_output_d64); end
  def test_intermediate_output_f64; assert_in_delta(-0.11045622230000071, worksheet.intermediate_output_f64, 0.001); end
  def test_intermediate_output_ay64; assert_in_delta(0, (worksheet.intermediate_output_ay64||0), 0.001); end
  def test_intermediate_output_az64; assert_in_delta(0, (worksheet.intermediate_output_az64||0), 0.001); end
  def test_intermediate_output_ba64; assert_in_delta(0, (worksheet.intermediate_output_ba64||0), 0.001); end
  def test_intermediate_output_bb64; assert_in_delta(0, (worksheet.intermediate_output_bb64||0), 0.001); end
  def test_intermediate_output_bc64; assert_in_delta(0, (worksheet.intermediate_output_bc64||0), 0.001); end
  def test_intermediate_output_bd64; assert_in_delta(0, (worksheet.intermediate_output_bd64||0), 0.001); end
  def test_intermediate_output_be64; assert_in_delta(0, (worksheet.intermediate_output_be64||0), 0.001); end
  def test_intermediate_output_bf64; assert_in_delta(0, (worksheet.intermediate_output_bf64||0), 0.001); end
  def test_intermediate_output_bg64; assert_in_delta(0, (worksheet.intermediate_output_bg64||0), 0.001); end
  def test_intermediate_output_bh64; assert_in_delta(0, (worksheet.intermediate_output_bh64||0), 0.001); end
  def test_intermediate_output_c65; assert_equal("V.08", worksheet.intermediate_output_c65); end
  def test_intermediate_output_d65; assert_equal("Edible biomass", worksheet.intermediate_output_d65); end
  def test_intermediate_output_f65; assert_in_delta(0, (worksheet.intermediate_output_f65||0), 0.001); end
  def test_intermediate_output_ay65; assert_in_delta(0, (worksheet.intermediate_output_ay65||0), 0.001); end
  def test_intermediate_output_az65; assert_in_delta(0, (worksheet.intermediate_output_az65||0), 0.001); end
  def test_intermediate_output_ba65; assert_in_delta(0, (worksheet.intermediate_output_ba65||0), 0.001); end
  def test_intermediate_output_bb65; assert_in_delta(0, (worksheet.intermediate_output_bb65||0), 0.001); end
  def test_intermediate_output_bc65; assert_in_delta(0, (worksheet.intermediate_output_bc65||0), 0.001); end
  def test_intermediate_output_bd65; assert_in_delta(0, (worksheet.intermediate_output_bd65||0), 0.001); end
  def test_intermediate_output_be65; assert_in_delta(0, (worksheet.intermediate_output_be65||0), 0.001); end
  def test_intermediate_output_bf65; assert_in_delta(0, (worksheet.intermediate_output_bf65||0), 0.001); end
  def test_intermediate_output_bg65; assert_in_delta(0, (worksheet.intermediate_output_bg65||0), 0.001); end
  def test_intermediate_output_bh65; assert_in_delta(0, (worksheet.intermediate_output_bh65||0), 0.001); end
  def test_intermediate_output_c66; assert_equal("V.07", worksheet.intermediate_output_c66); end
  def test_intermediate_output_d66; assert_equal("Heat transport", worksheet.intermediate_output_d66); end
  def test_intermediate_output_f66; assert_in_delta(0.0029616599999983118, worksheet.intermediate_output_f66, 0.001); end
  def test_intermediate_output_ay66; assert_in_delta(0, (worksheet.intermediate_output_ay66||0), 0.001); end
  def test_intermediate_output_az66; assert_in_delta(0, (worksheet.intermediate_output_az66||0), 0.001); end
  def test_intermediate_output_ba66; assert_in_delta(8.881784197001252e-16, worksheet.intermediate_output_ba66, 0.001); end
  def test_intermediate_output_bb66; assert_in_delta(1.7763568394002505e-15, worksheet.intermediate_output_bb66, 0.001); end
  def test_intermediate_output_bc66; assert_in_delta(0, (worksheet.intermediate_output_bc66||0), 0.001); end
  def test_intermediate_output_bd66; assert_in_delta(0, (worksheet.intermediate_output_bd66||0), 0.001); end
  def test_intermediate_output_be66; assert_in_delta(1.7763568394002505e-15, worksheet.intermediate_output_be66, 0.001); end
  def test_intermediate_output_bf66; assert_in_delta(-1.7763568394002505e-15, worksheet.intermediate_output_bf66, 0.001); end
  def test_intermediate_output_bg66; assert_in_delta(0, (worksheet.intermediate_output_bg66||0), 0.001); end
  def test_intermediate_output_bh66; assert_in_delta(0, (worksheet.intermediate_output_bh66||0), 0.001); end
  def test_intermediate_output_c67; assert_equal("V.09", worksheet.intermediate_output_c67); end
  def test_intermediate_output_d67; assert_equal("Dry biomass and waste", worksheet.intermediate_output_d67); end
  def test_intermediate_output_f67; assert_in_delta(-0.3409880345172063, worksheet.intermediate_output_f67, 0.001); end
  def test_intermediate_output_ay67; assert_in_delta(0, (worksheet.intermediate_output_ay67||0), 0.001); end
  def test_intermediate_output_az67; assert_in_delta(0, (worksheet.intermediate_output_az67||0), 0.001); end
  def test_intermediate_output_ba67; assert_in_delta(0, (worksheet.intermediate_output_ba67||0), 0.001); end
  def test_intermediate_output_bb67; assert_in_delta(0, (worksheet.intermediate_output_bb67||0), 0.001); end
  def test_intermediate_output_bc67; assert_in_delta(0, (worksheet.intermediate_output_bc67||0), 0.001); end
  def test_intermediate_output_bd67; assert_in_delta(0, (worksheet.intermediate_output_bd67||0), 0.001); end
  def test_intermediate_output_be67; assert_in_delta(0, (worksheet.intermediate_output_be67||0), 0.001); end
  def test_intermediate_output_bf67; assert_in_delta(0, (worksheet.intermediate_output_bf67||0), 0.001); end
  def test_intermediate_output_bg67; assert_in_delta(0, (worksheet.intermediate_output_bg67||0), 0.001); end
  def test_intermediate_output_bh67; assert_in_delta(0, (worksheet.intermediate_output_bh67||0), 0.001); end
  def test_intermediate_output_c68; assert_equal("V.10", worksheet.intermediate_output_c68); end
  def test_intermediate_output_d68; assert_equal("Wet biomass and waste", worksheet.intermediate_output_d68); end
  def test_intermediate_output_f68; assert_in_delta(0, (worksheet.intermediate_output_f68||0), 0.001); end
  def test_intermediate_output_ay68; assert_in_delta(0, (worksheet.intermediate_output_ay68||0), 0.001); end
  def test_intermediate_output_az68; assert_in_delta(0, (worksheet.intermediate_output_az68||0), 0.001); end
  def test_intermediate_output_ba68; assert_in_delta(0, (worksheet.intermediate_output_ba68||0), 0.001); end
  def test_intermediate_output_bb68; assert_in_delta(0, (worksheet.intermediate_output_bb68||0), 0.001); end
  def test_intermediate_output_bc68; assert_in_delta(0, (worksheet.intermediate_output_bc68||0), 0.001); end
  def test_intermediate_output_bd68; assert_in_delta(0, (worksheet.intermediate_output_bd68||0), 0.001); end
  def test_intermediate_output_be68; assert_in_delta(0, (worksheet.intermediate_output_be68||0), 0.001); end
  def test_intermediate_output_bf68; assert_in_delta(0, (worksheet.intermediate_output_bf68||0), 0.001); end
  def test_intermediate_output_bg68; assert_in_delta(0, (worksheet.intermediate_output_bg68||0), 0.001); end
  def test_intermediate_output_bh68; assert_in_delta(0, (worksheet.intermediate_output_bh68||0), 0.001); end
  def test_intermediate_output_c69; assert_equal("V.11", worksheet.intermediate_output_c69); end
  def test_intermediate_output_d69; assert_equal("Domestic solar thermal", worksheet.intermediate_output_d69); end
  def test_intermediate_output_f69; assert_in_delta(0, (worksheet.intermediate_output_f69||0), 0.001); end
  def test_intermediate_output_ay69; assert_in_delta(0, (worksheet.intermediate_output_ay69||0), 0.001); end
  def test_intermediate_output_az69; assert_in_delta(0, (worksheet.intermediate_output_az69||0), 0.001); end
  def test_intermediate_output_ba69; assert_in_delta(0, (worksheet.intermediate_output_ba69||0), 0.001); end
  def test_intermediate_output_bb69; assert_in_delta(0, (worksheet.intermediate_output_bb69||0), 0.001); end
  def test_intermediate_output_bc69; assert_in_delta(0, (worksheet.intermediate_output_bc69||0), 0.001); end
  def test_intermediate_output_bd69; assert_in_delta(0, (worksheet.intermediate_output_bd69||0), 0.001); end
  def test_intermediate_output_be69; assert_in_delta(0, (worksheet.intermediate_output_be69||0), 0.001); end
  def test_intermediate_output_bf69; assert_in_delta(0, (worksheet.intermediate_output_bf69||0), 0.001); end
  def test_intermediate_output_bg69; assert_in_delta(0, (worksheet.intermediate_output_bg69||0), 0.001); end
  def test_intermediate_output_bh69; assert_in_delta(0, (worksheet.intermediate_output_bh69||0), 0.001); end
  def test_intermediate_output_c70; assert_equal("V.12", worksheet.intermediate_output_c70); end
  def test_intermediate_output_d70; assert_equal("H2", worksheet.intermediate_output_d70); end
  def test_intermediate_output_f70; assert_in_delta(0, (worksheet.intermediate_output_f70||0), 0.001); end
  def test_intermediate_output_ay70; assert_in_delta(0, (worksheet.intermediate_output_ay70||0), 0.001); end
  def test_intermediate_output_az70; assert_in_delta(0, (worksheet.intermediate_output_az70||0), 0.001); end
  def test_intermediate_output_ba70; assert_in_delta(0, (worksheet.intermediate_output_ba70||0), 0.001); end
  def test_intermediate_output_bb70; assert_in_delta(0, (worksheet.intermediate_output_bb70||0), 0.001); end
  def test_intermediate_output_bc70; assert_in_delta(0, (worksheet.intermediate_output_bc70||0), 0.001); end
  def test_intermediate_output_bd70; assert_in_delta(0, (worksheet.intermediate_output_bd70||0), 0.001); end
  def test_intermediate_output_be70; assert_in_delta(0, (worksheet.intermediate_output_be70||0), 0.001); end
  def test_intermediate_output_bf70; assert_in_delta(0, (worksheet.intermediate_output_bf70||0), 0.001); end
  def test_intermediate_output_bg70; assert_in_delta(0, (worksheet.intermediate_output_bg70||0), 0.001); end
  def test_intermediate_output_bh70; assert_in_delta(0, (worksheet.intermediate_output_bh70||0), 0.001); end
  def test_intermediate_output_c71; assert_equal("V.13", worksheet.intermediate_output_c71); end
  def test_intermediate_output_d71; assert_equal("Energy crops (second generation)", worksheet.intermediate_output_d71); end
  def test_intermediate_output_f71; assert_in_delta(0, (worksheet.intermediate_output_f71||0), 0.001); end
  def test_intermediate_output_ay71; assert_in_delta(0, (worksheet.intermediate_output_ay71||0), 0.001); end
  def test_intermediate_output_az71; assert_in_delta(0, (worksheet.intermediate_output_az71||0), 0.001); end
  def test_intermediate_output_ba71; assert_in_delta(0, (worksheet.intermediate_output_ba71||0), 0.001); end
  def test_intermediate_output_bb71; assert_in_delta(0, (worksheet.intermediate_output_bb71||0), 0.001); end
  def test_intermediate_output_bc71; assert_in_delta(0, (worksheet.intermediate_output_bc71||0), 0.001); end
  def test_intermediate_output_bd71; assert_in_delta(0, (worksheet.intermediate_output_bd71||0), 0.001); end
  def test_intermediate_output_be71; assert_in_delta(0, (worksheet.intermediate_output_be71||0), 0.001); end
  def test_intermediate_output_bf71; assert_in_delta(0, (worksheet.intermediate_output_bf71||0), 0.001); end
  def test_intermediate_output_bg71; assert_in_delta(0, (worksheet.intermediate_output_bg71||0), 0.001); end
  def test_intermediate_output_bh71; assert_in_delta(0, (worksheet.intermediate_output_bh71||0), 0.001); end
  def test_intermediate_output_d72; assert_equal("Total unnaccounted supply / demand", worksheet.intermediate_output_d72); end
  def test_intermediate_output_f72; assert_in_delta(-0.15310354723947603, worksheet.intermediate_output_f72, 0.001); end
  def test_intermediate_output_ay72; assert_in_delta(0, (worksheet.intermediate_output_ay72||0), 0.001); end
  def test_intermediate_output_az72; assert_in_delta(0, (worksheet.intermediate_output_az72||0), 0.001); end
  def test_intermediate_output_ba72; assert_in_delta(8.881784197001252e-16, worksheet.intermediate_output_ba72, 0.001); end
  def test_intermediate_output_bb72; assert_in_delta(1.7763568394002505e-15, worksheet.intermediate_output_bb72, 0.001); end
  def test_intermediate_output_bc72; assert_in_delta(0, (worksheet.intermediate_output_bc72||0), 0.001); end
  def test_intermediate_output_bd72; assert_in_delta(0, (worksheet.intermediate_output_bd72||0), 0.001); end
  def test_intermediate_output_be72; assert_in_delta(1.7763568394002505e-15, worksheet.intermediate_output_be72, 0.001); end
  def test_intermediate_output_bf72; assert_in_delta(-1.7763568394002505e-15, worksheet.intermediate_output_bf72, 0.001); end
  def test_intermediate_output_bg72; assert_in_delta(0, (worksheet.intermediate_output_bg72||0), 0.001); end
  def test_intermediate_output_bh72; assert_in_delta(0, (worksheet.intermediate_output_bh72||0), 0.001); end
  def test_intermediate_output_d74; assert_equal("Supply, Demand, and Unaccounted supply", worksheet.intermediate_output_d74); end
  def test_intermediate_output_f74; assert_in_epsilon(-2.688874630083825, worksheet.intermediate_output_f74, 0.001); end
  def test_intermediate_output_ay74; assert_in_delta(0, (worksheet.intermediate_output_ay74||0), 0.001); end
  def test_intermediate_output_az74; assert_in_delta(0, (worksheet.intermediate_output_az74||0), 0.001); end
  def test_intermediate_output_ba74; assert_in_delta(2.282618538629322e-13, worksheet.intermediate_output_ba74, 0.001); end
  def test_intermediate_output_bb74; assert_in_delta(2.291500322826323e-13, worksheet.intermediate_output_bb74, 0.001); end
  def test_intermediate_output_bc74; assert_in_delta(-2.2737367544323206e-13, worksheet.intermediate_output_bc74, 0.001); end
  def test_intermediate_output_bd74; assert_in_delta(-2.2737367544323206e-13, worksheet.intermediate_output_bd74, 0.001); end
  def test_intermediate_output_be74; assert_in_delta(2.291500322826323e-13, worksheet.intermediate_output_be74, 0.001); end
  def test_intermediate_output_bf74; assert_in_delta(-1.7763568394002505e-15, worksheet.intermediate_output_bf74, 0.001); end
  def test_intermediate_output_bg74; assert_in_delta(-1.1368683772161603e-13, worksheet.intermediate_output_bg74, 0.001); end
  def test_intermediate_output_bh74; assert_in_delta(0, (worksheet.intermediate_output_bh74||0), 0.001); end
  def test_intermediate_output_b78; assert_equal("Electricity grid (net of distribution losses)", worksheet.intermediate_output_b78); end
  def test_intermediate_output_c80; assert_equal("V.01", worksheet.intermediate_output_c80); end
  def test_intermediate_output_d80; assert_equal("Electricity (delivered to end user)", worksheet.intermediate_output_d80); end
  def test_intermediate_output_f80; assert_in_epsilon(-352.03495223253594, worksheet.intermediate_output_f80, 0.001); end
  def test_intermediate_output_ay80; assert_in_epsilon(-354.61948947137034, worksheet.intermediate_output_ay80, 0.001); end
  def test_intermediate_output_az80; assert_in_epsilon(-334.47588775879456, worksheet.intermediate_output_az80, 0.001); end
  def test_intermediate_output_ba80; assert_in_epsilon(-325.9875567471857, worksheet.intermediate_output_ba80, 0.001); end
  def test_intermediate_output_bb80; assert_in_epsilon(-328.4035583784696, worksheet.intermediate_output_bb80, 0.001); end
  def test_intermediate_output_bc80; assert_in_epsilon(-342.4143059511237, worksheet.intermediate_output_bc80, 0.001); end
  def test_intermediate_output_bd80; assert_in_epsilon(-353.5373385420185, worksheet.intermediate_output_bd80, 0.001); end
  def test_intermediate_output_be80; assert_in_epsilon(-354.7039157450764, worksheet.intermediate_output_be80, 0.001); end
  def test_intermediate_output_bf80; assert_in_epsilon(-363.7700732773011, worksheet.intermediate_output_bf80, 0.001); end
  def test_intermediate_output_bg80; assert_in_epsilon(-374.36177263661165, worksheet.intermediate_output_bg80, 0.001); end
  def test_intermediate_output_bh80; assert_in_epsilon(-384.0027645378247, worksheet.intermediate_output_bh80, 0.001); end
  def test_intermediate_output_bi80; assert_equal("REFERENCED", worksheet.intermediate_output_bi80); end
  def test_intermediate_output_c81; assert_equal("V.02", worksheet.intermediate_output_c81); end
  def test_intermediate_output_d81; assert_equal("Electricity (supplied to grid)", worksheet.intermediate_output_d81); end
  def test_intermediate_output_f81; assert_in_epsilon(354.72382686261983, worksheet.intermediate_output_f81, 0.001); end
  def test_intermediate_output_ay81; assert_in_epsilon(354.61948947137034, worksheet.intermediate_output_ay81, 0.001); end
  def test_intermediate_output_az81; assert_in_epsilon(334.47588775879456, worksheet.intermediate_output_az81, 0.001); end
  def test_intermediate_output_ba81; assert_in_epsilon(325.9875567471857, worksheet.intermediate_output_ba81, 0.001); end
  def test_intermediate_output_bb81; assert_in_epsilon(328.4035583784696, worksheet.intermediate_output_bb81, 0.001); end
  def test_intermediate_output_bc81; assert_in_epsilon(342.4143059511237, worksheet.intermediate_output_bc81, 0.001); end
  def test_intermediate_output_bd81; assert_in_epsilon(353.5373385420185, worksheet.intermediate_output_bd81, 0.001); end
  def test_intermediate_output_be81; assert_in_epsilon(354.7039157450764, worksheet.intermediate_output_be81, 0.001); end
  def test_intermediate_output_bf81; assert_in_epsilon(363.7700732773011, worksheet.intermediate_output_bf81, 0.001); end
  def test_intermediate_output_bg81; assert_in_epsilon(374.36177263661165, worksheet.intermediate_output_bg81, 0.001); end
  def test_intermediate_output_bh81; assert_in_epsilon(384.0027645378247, worksheet.intermediate_output_bh81, 0.001); end
  def test_intermediate_output_d82; assert_equal("Total electricity grid", worksheet.intermediate_output_d82); end
  def test_intermediate_output_f82; assert_in_epsilon(2.6888746300838875, worksheet.intermediate_output_f82, 0.001); end
  def test_intermediate_output_ay82; assert_in_delta(0, (worksheet.intermediate_output_ay82||0), 0.001); end
  def test_intermediate_output_az82; assert_in_delta(0, (worksheet.intermediate_output_az82||0), 0.001); end
  def test_intermediate_output_ba82; assert_in_delta(0, (worksheet.intermediate_output_ba82||0), 0.001); end
  def test_intermediate_output_bb82; assert_in_delta(0, (worksheet.intermediate_output_bb82||0), 0.001); end
  def test_intermediate_output_bc82; assert_in_delta(0, (worksheet.intermediate_output_bc82||0), 0.001); end
  def test_intermediate_output_bd82; assert_in_delta(0, (worksheet.intermediate_output_bd82||0), 0.001); end
  def test_intermediate_output_be82; assert_in_delta(0, (worksheet.intermediate_output_be82||0), 0.001); end
  def test_intermediate_output_bf82; assert_in_delta(0, (worksheet.intermediate_output_bf82||0), 0.001); end
  def test_intermediate_output_bg82; assert_in_delta(0, (worksheet.intermediate_output_bg82||0), 0.001); end
  def test_intermediate_output_bh82; assert_in_delta(0, (worksheet.intermediate_output_bh82||0), 0.001); end
  def test_intermediate_output_c84; assert_equal("V.02", worksheet.intermediate_output_c84); end
  def test_intermediate_output_d84; assert_equal("Losses", worksheet.intermediate_output_d84); end
  def test_intermediate_output_ay84; assert_in_epsilon(-26.589307750714397, worksheet.intermediate_output_ay84, 0.001); end
  def test_intermediate_output_az84; assert_in_epsilon(-25.05020208850732, worksheet.intermediate_output_az84, 0.001); end
  def test_intermediate_output_ba84; assert_in_epsilon(-24.36323177211193, worksheet.intermediate_output_ba84, 0.001); end
  def test_intermediate_output_bb84; assert_in_epsilon(-24.490487276175884, worksheet.intermediate_output_bb84, 0.001); end
  def test_intermediate_output_bc84; assert_in_epsilon(-25.483906346931178, worksheet.intermediate_output_bc84, 0.001); end
  def test_intermediate_output_bd84; assert_in_epsilon(-26.25823140207956, worksheet.intermediate_output_bd84, 0.001); end
  def test_intermediate_output_be84; assert_in_epsilon(-26.284026840136335, worksheet.intermediate_output_be84, 0.001); end
  def test_intermediate_output_bf84; assert_in_epsilon(-26.90015798733407, worksheet.intermediate_output_bf84, 0.001); end
  def test_intermediate_output_bg84; assert_in_epsilon(-27.6286690774823, worksheet.intermediate_output_bg84, 0.001); end
  def test_intermediate_output_bh84; assert_in_epsilon(-28.28404639571056, worksheet.intermediate_output_bh84, 0.001); end
  def test_intermediate_output_d85; assert_equal("Demand (for charting)", worksheet.intermediate_output_d85); end
  def test_intermediate_output_ay85; assert_in_epsilon(381.20879722208474, worksheet.intermediate_output_ay85, 0.001); end
  def test_intermediate_output_az85; assert_in_epsilon(359.5260898473019, worksheet.intermediate_output_az85, 0.001); end
  def test_intermediate_output_ba85; assert_in_epsilon(350.3507885192976, worksheet.intermediate_output_ba85, 0.001); end
  def test_intermediate_output_bb85; assert_in_epsilon(352.8940456546455, worksheet.intermediate_output_bb85, 0.001); end
  def test_intermediate_output_bc85; assert_in_epsilon(367.8982122980549, worksheet.intermediate_output_bc85, 0.001); end
  def test_intermediate_output_bd85; assert_in_epsilon(379.7955699440981, worksheet.intermediate_output_bd85, 0.001); end
  def test_intermediate_output_be85; assert_in_epsilon(380.98794258521275, worksheet.intermediate_output_be85, 0.001); end
  def test_intermediate_output_bf85; assert_in_epsilon(390.67023126463516, worksheet.intermediate_output_bf85, 0.001); end
  def test_intermediate_output_bg85; assert_in_epsilon(401.99044171409395, worksheet.intermediate_output_bg85, 0.001); end
  def test_intermediate_output_bh85; assert_in_epsilon(412.28681093353526, worksheet.intermediate_output_bh85, 0.001); end
  def test_intermediate_output_d86; assert_equal("Dummy for charting", worksheet.intermediate_output_d86); end
  def test_intermediate_output_ay111; assert_in_epsilon(382.4678248130263, worksheet.intermediate_output_ay111, 0.001); end
  def test_intermediate_output_ay86; assert_in_epsilon(382.4678248130263, worksheet.intermediate_output_ay86, 0.001); end
  def test_intermediate_output_az111; assert_in_epsilon(360.6466499388573, worksheet.intermediate_output_az111, 0.001); end
  def test_intermediate_output_az86; assert_in_epsilon(360.6466499388573, worksheet.intermediate_output_az86, 0.001); end
  def test_intermediate_output_ba111; assert_in_epsilon(349.345689012392, worksheet.intermediate_output_ba111, 0.001); end
  def test_intermediate_output_ba86; assert_in_epsilon(349.345689012392, worksheet.intermediate_output_ba86, 0.001); end
  def test_intermediate_output_bb111; assert_in_epsilon(351.11755533170907, worksheet.intermediate_output_bb111, 0.001); end
  def test_intermediate_output_bb86; assert_in_epsilon(351.11755533170907, worksheet.intermediate_output_bb86, 0.001); end
  def test_intermediate_output_bc111; assert_in_epsilon(366.48425377549756, worksheet.intermediate_output_bc111, 0.001); end
  def test_intermediate_output_bc86; assert_in_epsilon(366.48425377549756, worksheet.intermediate_output_bc86, 0.001); end
  def test_intermediate_output_bd111; assert_in_epsilon(439.9235295431458, worksheet.intermediate_output_bd111, 0.001); end
  def test_intermediate_output_bd86; assert_in_epsilon(439.9235295431458, worksheet.intermediate_output_bd86, 0.001); end
  def test_intermediate_output_be111; assert_in_epsilon(539.2442874565091, worksheet.intermediate_output_be111, 0.001); end
  def test_intermediate_output_be86; assert_in_epsilon(539.2442874565091, worksheet.intermediate_output_be86, 0.001); end
  def test_intermediate_output_bf111; assert_in_epsilon(593.8031951798952, worksheet.intermediate_output_bf111, 0.001); end
  def test_intermediate_output_bf86; assert_in_epsilon(593.8031951798952, worksheet.intermediate_output_bf86, 0.001); end
  def test_intermediate_output_bg111; assert_in_epsilon(642.1349055895649, worksheet.intermediate_output_bg111, 0.001); end
  def test_intermediate_output_bg86; assert_in_epsilon(642.1349055895649, worksheet.intermediate_output_bg86, 0.001); end
  def test_intermediate_output_bh111; assert_in_epsilon(669.1219686938712, worksheet.intermediate_output_bh111, 0.001); end
  def test_intermediate_output_bh86; assert_in_epsilon(669.1219686938712, worksheet.intermediate_output_bh86, 0.001); end
  def test_intermediate_output_c89; assert_equal("Z.01", worksheet.intermediate_output_c89); end
  def test_intermediate_output_d89; assert_equal("Unallocated", worksheet.intermediate_output_d89); end
  def test_intermediate_output_f89; assert_in_delta(0, (worksheet.intermediate_output_f89||0), 0.001); end
  def test_intermediate_output_ay89; assert_in_delta(0, (worksheet.intermediate_output_ay89||0), 0.001); end
  def test_intermediate_output_az89; assert_in_delta(0, (worksheet.intermediate_output_az89||0), 0.001); end
  def test_intermediate_output_ba89; assert_in_delta(0, (worksheet.intermediate_output_ba89||0), 0.001); end
  def test_intermediate_output_bb89; assert_in_delta(6.821210263296962e-13, worksheet.intermediate_output_bb89, 0.001); end
  def test_intermediate_output_bc89; assert_in_delta(0, (worksheet.intermediate_output_bc89||0), 0.001); end
  def test_intermediate_output_bd89; assert_in_delta(0, (worksheet.intermediate_output_bd89||0), 0.001); end
  def test_intermediate_output_be89; assert_in_delta(0, (worksheet.intermediate_output_be89||0), 0.001); end
  def test_intermediate_output_bf89; assert_in_delta(0, (worksheet.intermediate_output_bf89||0), 0.001); end
  def test_intermediate_output_bg89; assert_in_delta(0, (worksheet.intermediate_output_bg89||0), 0.001); end
  def test_intermediate_output_bh89; assert_in_delta(0, (worksheet.intermediate_output_bh89||0), 0.001); end
  def test_intermediate_output_d91; assert_equal("Net balance (should be zero!)", worksheet.intermediate_output_d91); end
  def test_intermediate_output_f91; assert_in_delta(6.261657858885883e-14, worksheet.intermediate_output_f91, 0.001); end
  def test_intermediate_output_ay91; assert_in_delta(0, (worksheet.intermediate_output_ay91||0), 0.001); end
  def test_intermediate_output_az91; assert_in_delta(0, (worksheet.intermediate_output_az91||0), 0.001); end
  def test_intermediate_output_ba91; assert_in_delta(2.282618538629322e-13, worksheet.intermediate_output_ba91, 0.001); end
  def test_intermediate_output_bb91; assert_in_delta(9.112710586123285e-13, worksheet.intermediate_output_bb91, 0.001); end
  def test_intermediate_output_bc91; assert_in_delta(-2.2737367544323206e-13, worksheet.intermediate_output_bc91, 0.001); end
  def test_intermediate_output_bd91; assert_in_delta(-2.2737367544323206e-13, worksheet.intermediate_output_bd91, 0.001); end
  def test_intermediate_output_be91; assert_in_delta(2.291500322826323e-13, worksheet.intermediate_output_be91, 0.001); end
  def test_intermediate_output_bf91; assert_in_delta(-1.7763568394002505e-15, worksheet.intermediate_output_bf91, 0.001); end
  def test_intermediate_output_bg91; assert_in_delta(-1.1368683772161603e-13, worksheet.intermediate_output_bg91, 0.001); end
  def test_intermediate_output_bh91; assert_in_delta(0, (worksheet.intermediate_output_bh91||0), 0.001); end
  def test_intermediate_output_b93; assert_equal("Electricity Generation", worksheet.intermediate_output_b93); end
  def test_intermediate_output_c95; assert_equal("V.02", worksheet.intermediate_output_c95); end
  def test_intermediate_output_d95; assert_equal("TWh", worksheet.intermediate_output_d95); end
  def test_intermediate_output_ay95; assert_in_epsilon(2007, worksheet.intermediate_output_ay95, 0.001); end
  def test_intermediate_output_az95; assert_in_epsilon(2010, worksheet.intermediate_output_az95, 0.001); end
  def test_intermediate_output_ba95; assert_in_epsilon(2015, worksheet.intermediate_output_ba95, 0.001); end
  def test_intermediate_output_bb95; assert_in_epsilon(2020, worksheet.intermediate_output_bb95, 0.001); end
  def test_intermediate_output_bc95; assert_in_epsilon(2025, worksheet.intermediate_output_bc95, 0.001); end
  def test_intermediate_output_bd95; assert_in_epsilon(2030, worksheet.intermediate_output_bd95, 0.001); end
  def test_intermediate_output_be95; assert_in_epsilon(2035, worksheet.intermediate_output_be95, 0.001); end
  def test_intermediate_output_bf95; assert_in_epsilon(2040, worksheet.intermediate_output_bf95, 0.001); end
  def test_intermediate_output_bg95; assert_in_epsilon(2045, worksheet.intermediate_output_bg95, 0.001); end
  def test_intermediate_output_bh95; assert_in_epsilon(2050, worksheet.intermediate_output_bh95, 0.001); end
  def test_intermediate_output_c96; assert_equal("I.a", worksheet.intermediate_output_c96); end
  def test_intermediate_output_d96; assert_equal("Biomass/Coal power stations", worksheet.intermediate_output_d96); end
  def test_intermediate_output_f96; assert_in_epsilon(276.53401618322465, worksheet.intermediate_output_f96, 0.001); end
  def test_intermediate_output_ah96; assert_in_epsilon(221.2, worksheet.intermediate_output_ah96, 0.001); end
  def test_intermediate_output_ai96; assert_in_epsilon(214.6, worksheet.intermediate_output_ai96, 0.001); end
  def test_intermediate_output_aj96; assert_in_epsilon(221.2, worksheet.intermediate_output_aj96, 0.001); end
  def test_intermediate_output_ak96; assert_in_epsilon(226.3, worksheet.intermediate_output_ak96, 0.001); end
  def test_intermediate_output_al96; assert_in_epsilon(241.6, worksheet.intermediate_output_al96, 0.001); end
  def test_intermediate_output_am96; assert_in_epsilon(248.5, worksheet.intermediate_output_am96, 0.001); end
  def test_intermediate_output_an96; assert_in_epsilon(250.7, worksheet.intermediate_output_an96, 0.001); end
  def test_intermediate_output_ao96; assert_in_epsilon(258.7, worksheet.intermediate_output_ao96, 0.001); end
  def test_intermediate_output_ap96; assert_in_epsilon(262.6, worksheet.intermediate_output_ap96, 0.001); end
  def test_intermediate_output_aq96; assert_in_epsilon(264.2, worksheet.intermediate_output_aq96, 0.001); end
  def test_intermediate_output_ar96; assert_in_epsilon(267.6, worksheet.intermediate_output_ar96, 0.001); end
  def test_intermediate_output_as96; assert_in_epsilon(276.5, worksheet.intermediate_output_as96, 0.001); end
  def test_intermediate_output_at96; assert_in_epsilon(279.3, worksheet.intermediate_output_at96, 0.001); end
  def test_intermediate_output_au96; assert_in_epsilon(250.1, worksheet.intermediate_output_au96, 0.001); end
  def test_intermediate_output_av96; assert_in_epsilon(263.1, worksheet.intermediate_output_av96, 0.001); end
  def test_intermediate_output_aw96; assert_equal("Dukes 5.6 sum of generation - used on works for coal, oil gas and renewables", worksheet.intermediate_output_aw96); end
  def test_intermediate_output_ay96; assert_in_epsilon(314.9054626964356, worksheet.intermediate_output_ay96, 0.001); end
  def test_intermediate_output_az96; assert_in_epsilon(276.39632496769684, worksheet.intermediate_output_az96, 0.001); end
  def test_intermediate_output_ba96; assert_in_epsilon(222.9759161127978, worksheet.intermediate_output_ba96, 0.001); end
  def test_intermediate_output_bb96; assert_in_epsilon(144.2910516359634, worksheet.intermediate_output_bb96, 0.001); end
  def test_intermediate_output_bc96; assert_in_epsilon(61.58731876028554, worksheet.intermediate_output_bc96, 0.001); end
  def test_intermediate_output_bd96; assert_in_delta(0, (worksheet.intermediate_output_bd96||0), 0.001); end
  def test_intermediate_output_be96; assert_in_delta(0, (worksheet.intermediate_output_be96||0), 0.001); end
  def test_intermediate_output_bf96; assert_in_delta(0, (worksheet.intermediate_output_bf96||0), 0.001); end
  def test_intermediate_output_bg96; assert_in_delta(0, (worksheet.intermediate_output_bg96||0), 0.001); end
  def test_intermediate_output_bh96; assert_in_delta(0, (worksheet.intermediate_output_bh96||0), 0.001); end
  def test_intermediate_output_c97; assert_equal("IX.a", worksheet.intermediate_output_c97); end
  def test_intermediate_output_d97; assert_equal("Domestic space heating and hot water", worksheet.intermediate_output_d97); end
  def test_intermediate_output_f97; assert_in_delta(0, (worksheet.intermediate_output_f97||0), 0.001); end
  def test_intermediate_output_ay97; assert_in_delta(0, (worksheet.intermediate_output_ay97||0), 0.001); end
  def test_intermediate_output_az97; assert_in_delta(0, (worksheet.intermediate_output_az97||0), 0.001); end
  def test_intermediate_output_ba97; assert_in_delta(0, (worksheet.intermediate_output_ba97||0), 0.001); end
  def test_intermediate_output_bb97; assert_in_epsilon(7.15414848212871, worksheet.intermediate_output_bb97, 0.001); end
  def test_intermediate_output_bc97; assert_in_epsilon(12.308988434503775, worksheet.intermediate_output_bc97, 0.001); end
  def test_intermediate_output_bd97; assert_in_epsilon(15.608272761606527, worksheet.intermediate_output_bd97, 0.001); end
  def test_intermediate_output_be97; assert_in_epsilon(17.183269410097893, worksheet.intermediate_output_be97, 0.001); end
  def test_intermediate_output_bf97; assert_in_epsilon(17.186200331625585, worksheet.intermediate_output_bf97, 0.001); end
  def test_intermediate_output_bg97; assert_in_epsilon(15.744311798683661, worksheet.intermediate_output_bg97, 0.001); end
  def test_intermediate_output_bh97; assert_in_epsilon(12.950031280035507, worksheet.intermediate_output_bh97, 0.001); end
  def test_intermediate_output_c98; assert_equal("IX.c", worksheet.intermediate_output_c98); end
  def test_intermediate_output_d98; assert_equal("Commercial heating and cooling", worksheet.intermediate_output_d98); end
  def test_intermediate_output_f98; assert_in_delta(0, (worksheet.intermediate_output_f98||0), 0.001); end
  def test_intermediate_output_ay98; assert_in_delta(0, (worksheet.intermediate_output_ay98||0), 0.001); end
  def test_intermediate_output_az98; assert_in_delta(0, (worksheet.intermediate_output_az98||0), 0.001); end
  def test_intermediate_output_ba98; assert_in_delta(0, (worksheet.intermediate_output_ba98||0), 0.001); end
  def test_intermediate_output_bb98; assert_in_delta(0, (worksheet.intermediate_output_bb98||0), 0.001); end
  def test_intermediate_output_bc98; assert_in_delta(0, (worksheet.intermediate_output_bc98||0), 0.001); end
  def test_intermediate_output_bd98; assert_in_delta(0, (worksheet.intermediate_output_bd98||0), 0.001); end
  def test_intermediate_output_be98; assert_in_delta(0, (worksheet.intermediate_output_be98||0), 0.001); end
  def test_intermediate_output_bf98; assert_in_delta(0, (worksheet.intermediate_output_bf98||0), 0.001); end
  def test_intermediate_output_bg98; assert_in_delta(0, (worksheet.intermediate_output_bg98||0), 0.001); end
  def test_intermediate_output_bh98; assert_in_delta(0, (worksheet.intermediate_output_bh98||0), 0.001); end
  def test_intermediate_output_d99; assert_equal("Conventional", worksheet.intermediate_output_d99); end
  def test_intermediate_output_f99; assert_in_epsilon(276.53401618322465, worksheet.intermediate_output_f99, 0.001); end
  def test_intermediate_output_ah99; assert_in_epsilon(221.2, worksheet.intermediate_output_ah99, 0.001); end
  def test_intermediate_output_ai99; assert_in_epsilon(214.6, worksheet.intermediate_output_ai99, 0.001); end
  def test_intermediate_output_aj99; assert_in_epsilon(221.2, worksheet.intermediate_output_aj99, 0.001); end
  def test_intermediate_output_ak99; assert_in_epsilon(226.3, worksheet.intermediate_output_ak99, 0.001); end
  def test_intermediate_output_al99; assert_in_epsilon(241.6, worksheet.intermediate_output_al99, 0.001); end
  def test_intermediate_output_am99; assert_in_epsilon(248.5, worksheet.intermediate_output_am99, 0.001); end
  def test_intermediate_output_an99; assert_in_epsilon(250.7, worksheet.intermediate_output_an99, 0.001); end
  def test_intermediate_output_ao99; assert_in_epsilon(258.7, worksheet.intermediate_output_ao99, 0.001); end
  def test_intermediate_output_ap99; assert_in_epsilon(262.6, worksheet.intermediate_output_ap99, 0.001); end
  def test_intermediate_output_aq99; assert_in_epsilon(264.2, worksheet.intermediate_output_aq99, 0.001); end
  def test_intermediate_output_ar99; assert_in_epsilon(267.6, worksheet.intermediate_output_ar99, 0.001); end
  def test_intermediate_output_as99; assert_in_epsilon(276.5, worksheet.intermediate_output_as99, 0.001); end
  def test_intermediate_output_at99; assert_in_epsilon(279.3, worksheet.intermediate_output_at99, 0.001); end
  def test_intermediate_output_au99; assert_in_epsilon(250.1, worksheet.intermediate_output_au99, 0.001); end
  def test_intermediate_output_av99; assert_in_epsilon(263.1, worksheet.intermediate_output_av99, 0.001); end
  def test_intermediate_output_aw99; assert_equal("Sum of above", worksheet.intermediate_output_aw99); end
  def test_intermediate_output_ax99; assert_in_delta(0, (worksheet.intermediate_output_ax99||0), 0.001); end
  def test_intermediate_output_ay99; assert_in_epsilon(314.9054626964356, worksheet.intermediate_output_ay99, 0.001); end
  def test_intermediate_output_az99; assert_in_epsilon(276.39632496769684, worksheet.intermediate_output_az99, 0.001); end
  def test_intermediate_output_ba99; assert_in_epsilon(222.9759161127978, worksheet.intermediate_output_ba99, 0.001); end
  def test_intermediate_output_bb99; assert_in_epsilon(151.44520011809212, worksheet.intermediate_output_bb99, 0.001); end
  def test_intermediate_output_bc99; assert_in_epsilon(73.89630719478932, worksheet.intermediate_output_bc99, 0.001); end
  def test_intermediate_output_bd99; assert_in_epsilon(15.608272761606527, worksheet.intermediate_output_bd99, 0.001); end
  def test_intermediate_output_be99; assert_in_epsilon(17.183269410097893, worksheet.intermediate_output_be99, 0.001); end
  def test_intermediate_output_bf99; assert_in_epsilon(17.186200331625585, worksheet.intermediate_output_bf99, 0.001); end
  def test_intermediate_output_bg99; assert_in_epsilon(15.744311798683661, worksheet.intermediate_output_bg99, 0.001); end
  def test_intermediate_output_bh99; assert_in_epsilon(12.950031280035507, worksheet.intermediate_output_bh99, 0.001); end
  def test_intermediate_output_c100; assert_equal("I.b", worksheet.intermediate_output_c100); end
  def test_intermediate_output_d100; assert_equal("CCS Power", worksheet.intermediate_output_d100); end
  def test_intermediate_output_f100; assert_in_delta(0, (worksheet.intermediate_output_f100||0), 0.001); end
  def test_intermediate_output_ay100; assert_in_delta(0, (worksheet.intermediate_output_ay100||0), 0.001); end
  def test_intermediate_output_az100; assert_in_delta(0, (worksheet.intermediate_output_az100||0), 0.001); end
  def test_intermediate_output_ba100; assert_in_epsilon(5.079787425, worksheet.intermediate_output_ba100, 0.001); end
  def test_intermediate_output_bb100; assert_in_epsilon(10.834644510000002, worksheet.intermediate_output_bb100, 0.001); end
  def test_intermediate_output_bc100; assert_in_epsilon(10.876743225, worksheet.intermediate_output_bc100, 0.001); end
  def test_intermediate_output_bd100; assert_in_epsilon(10.928155815, worksheet.intermediate_output_bd100, 0.001); end
  def test_intermediate_output_be100; assert_in_epsilon(10.95013656, worksheet.intermediate_output_be100, 0.001); end
  def test_intermediate_output_bf100; assert_in_epsilon(10.972117305000001, worksheet.intermediate_output_bf100, 0.001); end
  def test_intermediate_output_bg100; assert_in_epsilon(11.003411924999998, worksheet.intermediate_output_bg100, 0.001); end
  def test_intermediate_output_bh100; assert_in_epsilon(11.03880465, worksheet.intermediate_output_bh100, 0.001); end
  def test_intermediate_output_c101; assert_equal("II.a", worksheet.intermediate_output_c101); end
  def test_intermediate_output_d101; assert_equal("Nuclear power", worksheet.intermediate_output_d101); end
  def test_intermediate_output_f101; assert_in_epsilon(57.248895000000005, worksheet.intermediate_output_f101, 0.001); end
  def test_intermediate_output_ah101; assert_in_epsilon(85.8, worksheet.intermediate_output_ah101, 0.001); end
  def test_intermediate_output_ai101; assert_in_epsilon(89.3, worksheet.intermediate_output_ai101, 0.001); end
  def test_intermediate_output_aj101; assert_in_epsilon(90.6, worksheet.intermediate_output_aj101, 0.001); end
  def test_intermediate_output_ak101; assert_in_epsilon(87.7, worksheet.intermediate_output_ak101, 0.001); end
  def test_intermediate_output_al101; assert_in_epsilon(78.3, worksheet.intermediate_output_al101, 0.001); end
  def test_intermediate_output_am101; assert_in_epsilon(83, worksheet.intermediate_output_am101, 0.001); end
  def test_intermediate_output_an101; assert_in_epsilon(81.1, worksheet.intermediate_output_an101, 0.001); end
  def test_intermediate_output_ao101; assert_in_epsilon(81.9, worksheet.intermediate_output_ao101, 0.001); end
  def test_intermediate_output_ap101; assert_in_epsilon(73.7, worksheet.intermediate_output_ap101, 0.001); end
  def test_intermediate_output_aq101; assert_in_epsilon(75.2, worksheet.intermediate_output_aq101, 0.001); end
  def test_intermediate_output_ar101; assert_in_epsilon(69.2, worksheet.intermediate_output_ar101, 0.001); end
  def test_intermediate_output_as101; assert_in_epsilon(57.2, worksheet.intermediate_output_as101, 0.001); end
  def test_intermediate_output_at101; assert_in_epsilon(47.7, worksheet.intermediate_output_at101, 0.001); end
  def test_intermediate_output_au101; assert_in_epsilon(62.8, worksheet.intermediate_output_au101, 0.001); end
  def test_intermediate_output_av101; assert_in_epsilon(56.5, worksheet.intermediate_output_av101, 0.001); end
  def test_intermediate_output_aw101; assert_equal("Dukes 5.6 Nuclear generation - used on works", worksheet.intermediate_output_aw101); end
  def test_intermediate_output_ay101; assert_in_epsilon(57.469896, worksheet.intermediate_output_ay101, 0.001); end
  def test_intermediate_output_az101; assert_in_epsilon(52.596, worksheet.intermediate_output_az101, 0.001); end
  def test_intermediate_output_ba101; assert_in_epsilon(44.18064, worksheet.intermediate_output_ba101, 0.001); end
  def test_intermediate_output_bb101; assert_in_epsilon(25.246080000000006, worksheet.intermediate_output_bb101, 0.001); end
  def test_intermediate_output_bc101; assert_in_epsilon(8.415360000000005, worksheet.intermediate_output_bc101, 0.001); end
  def test_intermediate_output_bd101; assert_in_epsilon(8.415360000000005, worksheet.intermediate_output_bd101, 0.001); end
  def test_intermediate_output_be101; assert_in_delta(0, (worksheet.intermediate_output_be101||0), 0.001); end
  def test_intermediate_output_bf101; assert_in_delta(0, (worksheet.intermediate_output_bf101||0), 0.001); end
  def test_intermediate_output_bg101; assert_in_delta(0, (worksheet.intermediate_output_bg101||0), 0.001); end
  def test_intermediate_output_bh101; assert_in_delta(0, (worksheet.intermediate_output_bh101||0), 0.001); end
  def test_intermediate_output_c102; assert_equal("III.a.1", worksheet.intermediate_output_c102); end
  def test_intermediate_output_d102; assert_equal("Onshore wind", worksheet.intermediate_output_d102); end
  def test_intermediate_output_f102; assert_in_epsilon(4.4912823, worksheet.intermediate_output_f102, 0.001); end
  def test_intermediate_output_ar102; assert_in_epsilon(3.6, worksheet.intermediate_output_ar102, 0.001); end
  def test_intermediate_output_as102; assert_in_epsilon(4.5, worksheet.intermediate_output_as102, 0.001); end
  def test_intermediate_output_at102; assert_in_epsilon(5.8, worksheet.intermediate_output_at102, 0.001); end
  def test_intermediate_output_au102; assert_in_epsilon(7.6, worksheet.intermediate_output_au102, 0.001); end
  def test_intermediate_output_av102; assert_in_epsilon(7.1, worksheet.intermediate_output_av102, 0.001); end
  def test_intermediate_output_aw102; assert_equal("Dukes 7.4 Generation Onshore wind", worksheet.intermediate_output_aw102); end
  def test_intermediate_output_ay102; assert_in_epsilon(4.9858220412000005, worksheet.intermediate_output_ay102, 0.001); end
  def test_intermediate_output_az102; assert_in_epsilon(10.317757319999997, worksheet.intermediate_output_az102, 0.001); end
  def test_intermediate_output_ba102; assert_in_epsilon(17.549707319999996, worksheet.intermediate_output_ba102, 0.001); end
  def test_intermediate_output_bb102; assert_in_epsilon(24.78165732, worksheet.intermediate_output_bb102, 0.001); end
  def test_intermediate_output_bc102; assert_in_epsilon(28.963039319999996, worksheet.intermediate_output_bc102, 0.001); end
  def test_intermediate_output_bd102; assert_in_epsilon(21.783685319999993, worksheet.intermediate_output_bd102, 0.001); end
  def test_intermediate_output_be102; assert_in_epsilon(14.551735319999997, worksheet.intermediate_output_be102, 0.001); end
  def test_intermediate_output_bf102; assert_in_epsilon(7.319785319999996, worksheet.intermediate_output_bf102, 0.001); end
  def test_intermediate_output_bg102; assert_in_delta(0.08783531999999616, worksheet.intermediate_output_bg102, 0.001); end
  def test_intermediate_output_bh102; assert_in_delta(0.08783531999999616, worksheet.intermediate_output_bh102, 0.001); end
  def test_intermediate_output_c103; assert_equal("III.a.2", worksheet.intermediate_output_c103); end
  def test_intermediate_output_d103; assert_equal("Offshore wind", worksheet.intermediate_output_d103); end
  def test_intermediate_output_f103; assert_in_delta(0.7825523999999999, worksheet.intermediate_output_f103, 0.001); end
  def test_intermediate_output_ar103; assert_in_delta(0.7, worksheet.intermediate_output_ar103, 0.001); end
  def test_intermediate_output_as103; assert_in_delta(0.8, worksheet.intermediate_output_as103, 0.001); end
  def test_intermediate_output_at103; assert_in_epsilon(1.3, worksheet.intermediate_output_at103, 0.001); end
  def test_intermediate_output_au103; assert_in_epsilon(1.7, worksheet.intermediate_output_au103, 0.001); end
  def test_intermediate_output_av103; assert_in_epsilon(3, worksheet.intermediate_output_av103, 0.001); end
  def test_intermediate_output_aw103; assert_equal("Dukes 7.4 Generation Offshore wind", worksheet.intermediate_output_aw103); end
  def test_intermediate_output_ay103; assert_in_delta(0.9769303763999999, worksheet.intermediate_output_ay103, 0.001); end
  def test_intermediate_output_az103; assert_in_epsilon(4.122912780000003, worksheet.intermediate_output_az103, 0.001); end
  def test_intermediate_output_ba103; assert_in_epsilon(22.040616780000004, worksheet.intermediate_output_ba103, 0.001); end
  def test_intermediate_output_bb103; assert_in_epsilon(79.735588596, worksheet.intermediate_output_bb103, 0.001); end
  def test_intermediate_output_bc103; assert_in_epsilon(159.30907632000003, worksheet.intermediate_output_bc103, 0.001); end
  def test_intermediate_output_bd103; assert_in_epsilon(260.99187120000005, worksheet.intermediate_output_bd103, 0.001); end
  def test_intermediate_output_be103; assert_in_epsilon(348.71148000000005, worksheet.intermediate_output_be103, 0.001); end
  def test_intermediate_output_bf103; assert_in_epsilon(378.69120000000004, worksheet.intermediate_output_bf103, 0.001); end
  def test_intermediate_output_bg103; assert_in_epsilon(394.46999999999997, worksheet.intermediate_output_bg103, 0.001); end
  def test_intermediate_output_bh103; assert_in_epsilon(394.46999999999997, worksheet.intermediate_output_bh103, 0.001); end
  def test_intermediate_output_c104; assert_equal("III.b", worksheet.intermediate_output_c104); end
  def test_intermediate_output_d104; assert_equal("Hydroelectric power stations", worksheet.intermediate_output_d104); end
  def test_intermediate_output_f104; assert_in_epsilon(4.1137551000000006, worksheet.intermediate_output_f104, 0.001); end
  def test_intermediate_output_ah104; assert_in_epsilon(2.8, worksheet.intermediate_output_ah104, 0.001); end
  def test_intermediate_output_ai104; assert_in_epsilon(3.3, worksheet.intermediate_output_ai104, 0.001); end
  def test_intermediate_output_aj104; assert_in_epsilon(4.2, worksheet.intermediate_output_aj104, 0.001); end
  def test_intermediate_output_ak104; assert_in_epsilon(4.4, worksheet.intermediate_output_ak104, 0.001); end
  def test_intermediate_output_al104; assert_in_epsilon(4.3, worksheet.intermediate_output_al104, 0.001); end
  def test_intermediate_output_am104; assert_in_epsilon(3.2, worksheet.intermediate_output_am104, 0.001); end
  def test_intermediate_output_an104; assert_in_epsilon(3.9, worksheet.intermediate_output_an104, 0.001); end
  def test_intermediate_output_ao104; assert_in_epsilon(2.6, worksheet.intermediate_output_ao104, 0.001); end
  def test_intermediate_output_ap104; assert_in_epsilon(3.9, worksheet.intermediate_output_ap104, 0.001); end
  def test_intermediate_output_aq104; assert_in_epsilon(3.8, worksheet.intermediate_output_aq104, 0.001); end
  def test_intermediate_output_ar104; assert_in_epsilon(3.7, worksheet.intermediate_output_ar104, 0.001); end
  def test_intermediate_output_as104; assert_in_epsilon(4.1, worksheet.intermediate_output_as104, 0.001); end
  def test_intermediate_output_at104; assert_in_epsilon(4.2, worksheet.intermediate_output_at104, 0.001); end
  def test_intermediate_output_au104; assert_in_epsilon(4.3, worksheet.intermediate_output_au104, 0.001); end
  def test_intermediate_output_av104; assert_in_epsilon(2.7, worksheet.intermediate_output_av104, 0.001); end
  def test_intermediate_output_aw104; assert_equal("Dukes 5.6 Hydro - natural flow generation - used on works", worksheet.intermediate_output_aw104); end
  def test_intermediate_output_ay104; assert_in_epsilon(4.114400994, worksheet.intermediate_output_ay104, 0.001); end
  def test_intermediate_output_az104; assert_in_epsilon(5.329728000000001, worksheet.intermediate_output_az104, 0.001); end
  def test_intermediate_output_ba104; assert_in_epsilon(5.662836, worksheet.intermediate_output_ba104, 0.001); end
  def test_intermediate_output_bb104; assert_in_epsilon(5.995944000000001, worksheet.intermediate_output_bb104, 0.001); end
  def test_intermediate_output_bc104; assert_in_epsilon(6.162498000000001, worksheet.intermediate_output_bc104, 0.001); end
  def test_intermediate_output_bd104; assert_in_epsilon(6.329052, worksheet.intermediate_output_bd104, 0.001); end
  def test_intermediate_output_be104; assert_in_epsilon(6.4956059999999995, worksheet.intermediate_output_be104, 0.001); end
  def test_intermediate_output_bf104; assert_in_epsilon(6.66216, worksheet.intermediate_output_bf104, 0.001); end
  def test_intermediate_output_bg104; assert_in_epsilon(6.828714, worksheet.intermediate_output_bg104, 0.001); end
  def test_intermediate_output_bh104; assert_in_epsilon(6.995268000000001, worksheet.intermediate_output_bh104, 0.001); end
  def test_intermediate_output_c105; assert_equal("III.c", worksheet.intermediate_output_c105); end
  def test_intermediate_output_d105; assert_equal("Tidal & Wave", worksheet.intermediate_output_d105); end
  def test_intermediate_output_f105; assert_in_delta(0, (worksheet.intermediate_output_f105||0), 0.001); end
  def test_intermediate_output_ay105; assert_in_delta(0, (worksheet.intermediate_output_ay105||0), 0.001); end
  def test_intermediate_output_az105; assert_in_delta(0.0050034246575342495, worksheet.intermediate_output_az105, 0.001); end
  def test_intermediate_output_ba105; assert_in_delta(0.11341095890410972, worksheet.intermediate_output_ba105, 0.001); end
  def test_intermediate_output_bb105; assert_in_delta(0.9248170027397259, worksheet.intermediate_output_bb105, 0.001); end
  def test_intermediate_output_bc105; assert_in_epsilon(1.8296029616438365, worksheet.intermediate_output_bc105, 0.001); end
  def test_intermediate_output_bd105; assert_in_epsilon(3.859070723287671, worksheet.intermediate_output_bd105, 0.001); end
  def test_intermediate_output_be105; assert_in_epsilon(9.571313873972606, worksheet.intermediate_output_be105, 0.001); end
  def test_intermediate_output_bf105; assert_in_epsilon(21.41830136164383, worksheet.intermediate_output_bf105, 0.001); end
  def test_intermediate_output_bg105; assert_in_epsilon(42.6745171150685, worksheet.intermediate_output_bg105, 0.001); end
  def test_intermediate_output_bh105; assert_in_epsilon(52.48122944383563, worksheet.intermediate_output_bh105, 0.001); end
  def test_intermediate_output_c106; assert_equal("III.d", worksheet.intermediate_output_c106); end
  def test_intermediate_output_d106; assert_equal("Geothermal electricity", worksheet.intermediate_output_d106); end
  def test_intermediate_output_f106; assert_in_delta(0, (worksheet.intermediate_output_f106||0), 0.001); end
  def test_intermediate_output_ay106; assert_in_delta(0, (worksheet.intermediate_output_ay106||0), 0.001); end
  def test_intermediate_output_az106; assert_in_delta(0, (worksheet.intermediate_output_az106||0), 0.001); end
  def test_intermediate_output_ba106; assert_in_delta(0.0911664, worksheet.intermediate_output_ba106, 0.001); end
  def test_intermediate_output_bb106; assert_in_delta(0.7293312, worksheet.intermediate_output_bb106, 0.001); end
  def test_intermediate_output_bc106; assert_in_epsilon(5.8346496, worksheet.intermediate_output_bc106, 0.001); end
  def test_intermediate_output_bd106; assert_in_epsilon(21.038400000000003, worksheet.intermediate_output_bd106, 0.001); end
  def test_intermediate_output_be106; assert_in_epsilon(21.038400000000003, worksheet.intermediate_output_be106, 0.001); end
  def test_intermediate_output_bf106; assert_in_epsilon(21.038400000000003, worksheet.intermediate_output_bf106, 0.001); end
  def test_intermediate_output_bg106; assert_in_epsilon(21.038400000000003, worksheet.intermediate_output_bg106, 0.001); end
  def test_intermediate_output_bh106; assert_in_epsilon(21.038400000000003, worksheet.intermediate_output_bh106, 0.001); end
  def test_intermediate_output_c107; assert_equal("III.e", worksheet.intermediate_output_c107); end
  def test_intermediate_output_d107; assert_equal("Tidal [UNUSED - See III.c]", worksheet.intermediate_output_d107); end
  def test_intermediate_output_f107; assert_in_delta(0, (worksheet.intermediate_output_f107||0), 0.001); end
  def test_intermediate_output_ay107; assert_in_delta(0, (worksheet.intermediate_output_ay107||0), 0.001); end
  def test_intermediate_output_az107; assert_in_delta(0, (worksheet.intermediate_output_az107||0), 0.001); end
  def test_intermediate_output_ba107; assert_in_delta(0, (worksheet.intermediate_output_ba107||0), 0.001); end
  def test_intermediate_output_bb107; assert_in_delta(0, (worksheet.intermediate_output_bb107||0), 0.001); end
  def test_intermediate_output_bc107; assert_in_delta(0, (worksheet.intermediate_output_bc107||0), 0.001); end
  def test_intermediate_output_bd107; assert_in_delta(0, (worksheet.intermediate_output_bd107||0), 0.001); end
  def test_intermediate_output_be107; assert_in_delta(0, (worksheet.intermediate_output_be107||0), 0.001); end
  def test_intermediate_output_bf107; assert_in_delta(0, (worksheet.intermediate_output_bf107||0), 0.001); end
  def test_intermediate_output_bg107; assert_in_delta(0, (worksheet.intermediate_output_bg107||0), 0.001); end
  def test_intermediate_output_bh107; assert_in_delta(0, (worksheet.intermediate_output_bh107||0), 0.001); end
  def test_intermediate_output_c108; assert_equal("IV.a", worksheet.intermediate_output_c108); end
  def test_intermediate_output_d108; assert_equal("Solar PV", worksheet.intermediate_output_d108); end
  def test_intermediate_output_f108; assert_in_delta(0, (worksheet.intermediate_output_f108||0), 0.001); end
  def test_intermediate_output_ay108; assert_in_delta(0.015312704990667746, worksheet.intermediate_output_ay108, 0.001); end
  def test_intermediate_output_az108; assert_in_epsilon(11.878923446502947, worksheet.intermediate_output_az108, 0.001); end
  def test_intermediate_output_ba108; assert_in_epsilon(31.65160801569008, worksheet.intermediate_output_ba108, 0.001); end
  def test_intermediate_output_bb108; assert_in_epsilon(51.42429258487721, worksheet.intermediate_output_bb108, 0.001); end
  def test_intermediate_output_bc108; assert_in_epsilon(71.19697715406434, worksheet.intermediate_output_bc108, 0.001); end
  def test_intermediate_output_bd108; assert_in_epsilon(90.96966172325146, worksheet.intermediate_output_bd108, 0.001); end
  def test_intermediate_output_be108; assert_in_epsilon(110.7423462924386, worksheet.intermediate_output_be108, 0.001); end
  def test_intermediate_output_bf108; assert_in_epsilon(130.51503086162572, worksheet.intermediate_output_bf108, 0.001); end
  def test_intermediate_output_bg108; assert_in_epsilon(150.28771543081285, worksheet.intermediate_output_bg108, 0.001); end
  def test_intermediate_output_bh108; assert_in_epsilon(170.06040000000002, worksheet.intermediate_output_bh108, 0.001); end
  def test_intermediate_output_d109; assert_equal("Non-thermal renewable generation", worksheet.intermediate_output_d109); end
  def test_intermediate_output_f109; assert_in_epsilon(9.3875898, worksheet.intermediate_output_f109, 0.001); end
  def test_intermediate_output_ar109; assert_in_epsilon(7.9, worksheet.intermediate_output_ar109, 0.001); end
  def test_intermediate_output_as109; assert_in_epsilon(9.4, worksheet.intermediate_output_as109, 0.001); end
  def test_intermediate_output_at109; assert_in_epsilon(11.3, worksheet.intermediate_output_at109, 0.001); end
  def test_intermediate_output_au109; assert_in_epsilon(13.6, worksheet.intermediate_output_au109, 0.001); end
  def test_intermediate_output_av109; assert_in_epsilon(12.9, worksheet.intermediate_output_av109, 0.001); end
  def test_intermediate_output_aw109; assert_equal("Sum of above", worksheet.intermediate_output_aw109); end
  def test_intermediate_output_ay109; assert_in_epsilon(10.09246611659067, worksheet.intermediate_output_ay109, 0.001); end
  def test_intermediate_output_az109; assert_in_epsilon(31.654324971160484, worksheet.intermediate_output_az109, 0.001); end
  def test_intermediate_output_ba109; assert_in_epsilon(77.10934547459419, worksheet.intermediate_output_ba109, 0.001); end
  def test_intermediate_output_bb109; assert_in_epsilon(163.59163070361694, worksheet.intermediate_output_bb109, 0.001); end
  def test_intermediate_output_bc109; assert_in_epsilon(273.29584335570826, worksheet.intermediate_output_bc109, 0.001); end
  def test_intermediate_output_bd109; assert_in_epsilon(404.97174096653924, worksheet.intermediate_output_bd109, 0.001); end
  def test_intermediate_output_be109; assert_in_epsilon(511.11088148641124, worksheet.intermediate_output_be109, 0.001); end
  def test_intermediate_output_bf109; assert_in_epsilon(565.6448775432696, worksheet.intermediate_output_bf109, 0.001); end
  def test_intermediate_output_bg109; assert_in_epsilon(615.3871818658813, worksheet.intermediate_output_bg109, 0.001); end
  def test_intermediate_output_bh109; assert_in_epsilon(645.1331327638356, worksheet.intermediate_output_bh109, 0.001); end
  def test_intermediate_output_c110; assert_equal("VII.a", worksheet.intermediate_output_c110); end
  def test_intermediate_output_d110; assert_equal("Electricity imports", worksheet.intermediate_output_d110); end
  def test_intermediate_output_f110; assert_in_epsilon(5.21452425, worksheet.intermediate_output_f110, 0.001); end
  def test_intermediate_output_h110; assert_in_delta(0.55, worksheet.intermediate_output_h110, 0.001); end
  def test_intermediate_output_i110; assert_in_delta(0.12, worksheet.intermediate_output_i110, 0.001); end
  def test_intermediate_output_j110; assert_in_delta(0.48, worksheet.intermediate_output_j110, 0.001); end
  def test_intermediate_output_k110; assert_in_delta(0.06, worksheet.intermediate_output_k110, 0.001); end
  def test_intermediate_output_l110; assert_in_delta(0.05, worksheet.intermediate_output_l110, 0.001); end
  def test_intermediate_output_m110; assert_in_delta(0.08, worksheet.intermediate_output_m110, 0.001); end
  def test_intermediate_output_n110; assert_in_delta(-0.1, worksheet.intermediate_output_n110, 0.001); end
  def test_intermediate_output_o110; assert_in_delta(0, (worksheet.intermediate_output_o110||0), 0.001); end
  def test_intermediate_output_p110; assert_in_delta(-0.08, worksheet.intermediate_output_p110, 0.001); end
  def test_intermediate_output_q110; assert_in_delta(0, (worksheet.intermediate_output_q110||0), 0.001); end
  def test_intermediate_output_r110; assert_in_delta(0, (worksheet.intermediate_output_r110||0), 0.001); end
  def test_intermediate_output_s110; assert_in_delta(0, (worksheet.intermediate_output_s110||0), 0.001); end
  def test_intermediate_output_t110; assert_in_delta(0, (worksheet.intermediate_output_t110||0), 0.001); end
  def test_intermediate_output_u110; assert_in_delta(0, (worksheet.intermediate_output_u110||0), 0.001); end
  def test_intermediate_output_v110; assert_in_delta(0, (worksheet.intermediate_output_v110||0), 0.001); end
  def test_intermediate_output_w110; assert_in_delta(0, (worksheet.intermediate_output_w110||0), 0.001); end
  def test_intermediate_output_x110; assert_in_epsilon(4.26, worksheet.intermediate_output_x110, 0.001); end
  def test_intermediate_output_y110; assert_in_epsilon(11.64, worksheet.intermediate_output_y110, 0.001); end
  def test_intermediate_output_z110; assert_in_epsilon(12.14, worksheet.intermediate_output_z110, 0.001); end
  def test_intermediate_output_aa110; assert_in_epsilon(12.63, worksheet.intermediate_output_aa110, 0.001); end
  def test_intermediate_output_ab110; assert_in_epsilon(11.91, worksheet.intermediate_output_ab110, 0.001); end
  def test_intermediate_output_ac110; assert_in_epsilon(16.41, worksheet.intermediate_output_ac110, 0.001); end
  def test_intermediate_output_ad110; assert_in_epsilon(16.69, worksheet.intermediate_output_ad110, 0.001); end
  def test_intermediate_output_ae110; assert_in_epsilon(16.72, worksheet.intermediate_output_ae110, 0.001); end
  def test_intermediate_output_af110; assert_in_epsilon(16.89, worksheet.intermediate_output_af110, 0.001); end
  def test_intermediate_output_ag110; assert_in_epsilon(16.61, worksheet.intermediate_output_ag110, 0.001); end
  def test_intermediate_output_ah110; assert_in_epsilon(16.755, worksheet.intermediate_output_ah110, 0.001); end
  def test_intermediate_output_ai110; assert_in_epsilon(16.574, worksheet.intermediate_output_ai110, 0.001); end
  def test_intermediate_output_aj110; assert_in_epsilon(12.468, worksheet.intermediate_output_aj110, 0.001); end
  def test_intermediate_output_ak110; assert_in_epsilon(14.244, worksheet.intermediate_output_ak110, 0.001); end
  def test_intermediate_output_al110; assert_in_epsilon(14.174, worksheet.intermediate_output_al110, 0.001); end
  def test_intermediate_output_am110; assert_in_epsilon(10.399, worksheet.intermediate_output_am110, 0.001); end
  def test_intermediate_output_an110; assert_in_epsilon(8.414, worksheet.intermediate_output_an110, 0.001); end
  def test_intermediate_output_ao110; assert_in_epsilon(2.16, worksheet.intermediate_output_ao110, 0.001); end
  def test_intermediate_output_ap110; assert_in_epsilon(7.49, worksheet.intermediate_output_ap110, 0.001); end
  def test_intermediate_output_aq110; assert_in_epsilon(8.321, worksheet.intermediate_output_aq110, 0.001); end
  def test_intermediate_output_ar110; assert_in_epsilon(7.517, worksheet.intermediate_output_ar110, 0.001); end
  def test_intermediate_output_as110; assert_in_epsilon(5.215, worksheet.intermediate_output_as110, 0.001); end
  def test_intermediate_output_at110; assert_in_epsilon(11.022, worksheet.intermediate_output_at110, 0.001); end
  def test_intermediate_output_au110; assert_in_epsilon(2.861, worksheet.intermediate_output_au110, 0.001); end
  def test_intermediate_output_av110; assert_in_epsilon(2.663, worksheet.intermediate_output_av110, 0.001); end
  def test_intermediate_output_aw110; assert_equal("Dukes Long-term trends 5.1.2 Net imports", worksheet.intermediate_output_aw110); end
  def test_intermediate_output_ay110; assert_in_delta(0, (worksheet.intermediate_output_ay110||0), 0.001); end
  def test_intermediate_output_az110; assert_in_delta(0, (worksheet.intermediate_output_az110||0), 0.001); end
  def test_intermediate_output_ba110; assert_in_delta(0, (worksheet.intermediate_output_ba110||0), 0.001); end
  def test_intermediate_output_bb110; assert_in_delta(0, (worksheet.intermediate_output_bb110||0), 0.001); end
  def test_intermediate_output_bc110; assert_in_delta(0, (worksheet.intermediate_output_bc110||0), 0.001); end
  def test_intermediate_output_bd110; assert_in_delta(0, (worksheet.intermediate_output_bd110||0), 0.001); end
  def test_intermediate_output_be110; assert_in_delta(0, (worksheet.intermediate_output_be110||0), 0.001); end
  def test_intermediate_output_bf110; assert_in_delta(0, (worksheet.intermediate_output_bf110||0), 0.001); end
  def test_intermediate_output_bg110; assert_in_delta(0, (worksheet.intermediate_output_bg110||0), 0.001); end
  def test_intermediate_output_bh110; assert_in_delta(0, (worksheet.intermediate_output_bh110||0), 0.001); end
  def test_intermediate_output_d111; assert_equal("Total", worksheet.intermediate_output_d111); end
  def test_intermediate_output_f111; assert_in_epsilon(348.38502523322467, worksheet.intermediate_output_f111, 0.001); end
  def test_intermediate_output_ar111; assert_in_epsilon(352.2, worksheet.intermediate_output_ar111, 0.001); end
  def test_intermediate_output_as111; assert_in_epsilon(348.4, worksheet.intermediate_output_as111, 0.001); end
  def test_intermediate_output_at111; assert_in_epsilon(349.3, worksheet.intermediate_output_at111, 0.001); end
  def test_intermediate_output_au111; assert_in_epsilon(329.3, worksheet.intermediate_output_au111, 0.001); end
  def test_intermediate_output_av111; assert_in_epsilon(335.1, worksheet.intermediate_output_av111, 0.001); end
  def test_intermediate_output_aw111; assert_equal("Sum of above", worksheet.intermediate_output_aw111); end
  def test_intermediate_output_d113; assert_equal("Electricity exports", worksheet.intermediate_output_d113); end
  def test_intermediate_output_f113; assert_in_delta(0, (worksheet.intermediate_output_f113||0), 0.001); end
  def test_intermediate_output_ax113; assert_in_delta(0, (worksheet.intermediate_output_ax113||0), 0.001); end
  def test_intermediate_output_bi113; assert_equal("REFERENCED", worksheet.intermediate_output_bi113); end
  def test_intermediate_output_d114; assert_equal("Electricity used in UK, before losses and district heating heat demand", worksheet.intermediate_output_d114); end
  def test_intermediate_output_f114; assert_in_epsilon(348.38502523322467, worksheet.intermediate_output_f114, 0.001); end
  def test_intermediate_output_ax114; assert_in_delta(0, (worksheet.intermediate_output_ax114||0), 0.001); end
  def test_intermediate_output_ay30; assert_in_delta(0, (worksheet.intermediate_output_ay30||0), 0.001); end
  def test_intermediate_output_ay113; assert_in_delta(0, (worksheet.intermediate_output_ay113||0), 0.001); end
  def test_intermediate_output_ay114; assert_in_epsilon(382.4678248130263, worksheet.intermediate_output_ay114, 0.001); end
  def test_intermediate_output_az30; assert_in_delta(-5.684341886080802e-14, worksheet.intermediate_output_az30, 0.001); end
  def test_intermediate_output_az113; assert_in_delta(-5.684341886080802e-14, worksheet.intermediate_output_az113, 0.001); end
  def test_intermediate_output_az114; assert_in_epsilon(360.64664993885725, worksheet.intermediate_output_az114, 0.001); end
  def test_intermediate_output_ba30; assert_in_delta(-5.684341886080802e-14, worksheet.intermediate_output_ba30, 0.001); end
  def test_intermediate_output_ba113; assert_in_delta(-5.684341886080802e-14, worksheet.intermediate_output_ba113, 0.001); end
  def test_intermediate_output_ba114; assert_in_epsilon(349.3456890123919, worksheet.intermediate_output_ba114, 0.001); end
  def test_intermediate_output_bb30; assert_in_delta(-1.1368683772161603e-13, worksheet.intermediate_output_bb30, 0.001); end
  def test_intermediate_output_bb113; assert_in_delta(-1.1368683772161603e-13, worksheet.intermediate_output_bb113, 0.001); end
  def test_intermediate_output_bb114; assert_in_epsilon(351.11755533170896, worksheet.intermediate_output_bb114, 0.001); end
  def test_intermediate_output_bc30; assert_in_delta(0, (worksheet.intermediate_output_bc30||0), 0.001); end
  def test_intermediate_output_bc113; assert_in_delta(0, (worksheet.intermediate_output_bc113||0), 0.001); end
  def test_intermediate_output_bc114; assert_in_epsilon(366.48425377549756, worksheet.intermediate_output_bc114, 0.001); end
  def test_intermediate_output_bd30; assert_in_epsilon(-61.31989736235556, worksheet.intermediate_output_bd30, 0.001); end
  def test_intermediate_output_bd113; assert_in_epsilon(-61.31989736235556, worksheet.intermediate_output_bd113, 0.001); end
  def test_intermediate_output_bd114; assert_in_epsilon(378.6036321807902, worksheet.intermediate_output_bd114, 0.001); end
  def test_intermediate_output_be30; assert_in_epsilon(-159.35662394926544, worksheet.intermediate_output_be30, 0.001); end
  def test_intermediate_output_be113; assert_in_epsilon(-159.35662394926544, worksheet.intermediate_output_be113, 0.001); end
  def test_intermediate_output_be114; assert_in_epsilon(379.8876635072437, worksheet.intermediate_output_be114, 0.001); end
  def test_intermediate_output_bf30; assert_in_epsilon(-204.2603610038699, worksheet.intermediate_output_bf30, 0.001); end
  def test_intermediate_output_bf113; assert_in_epsilon(-204.2603610038699, worksheet.intermediate_output_bf113, 0.001); end
  def test_intermediate_output_bf114; assert_in_epsilon(389.5428341760253, worksheet.intermediate_output_bf114, 0.001); end
  def test_intermediate_output_bg30; assert_in_epsilon(-241.40848518096965, worksheet.intermediate_output_bg30, 0.001); end
  def test_intermediate_output_bg113; assert_in_epsilon(-241.40848518096965, worksheet.intermediate_output_bg113, 0.001); end
  def test_intermediate_output_bg114; assert_in_epsilon(400.7264204085953, worksheet.intermediate_output_bg114, 0.001); end
  def test_intermediate_output_bh30; assert_in_epsilon(-258.07251876236813, worksheet.intermediate_output_bh30, 0.001); end
  def test_intermediate_output_bh113; assert_in_epsilon(-258.07251876236813, worksheet.intermediate_output_bh113, 0.001); end
  def test_intermediate_output_bh114; assert_in_epsilon(411.04944993150303, worksheet.intermediate_output_bh114, 0.001); end
  def test_intermediate_output_d116; assert_equal("GW installed capacity", worksheet.intermediate_output_d116); end
  def test_intermediate_output_ay116; assert_in_epsilon(2007, worksheet.intermediate_output_ay116, 0.001); end
  def test_intermediate_output_az116; assert_in_epsilon(2010, worksheet.intermediate_output_az116, 0.001); end
  def test_intermediate_output_ba116; assert_in_epsilon(2015, worksheet.intermediate_output_ba116, 0.001); end
  def test_intermediate_output_bb116; assert_in_epsilon(2020, worksheet.intermediate_output_bb116, 0.001); end
  def test_intermediate_output_bc116; assert_in_epsilon(2025, worksheet.intermediate_output_bc116, 0.001); end
  def test_intermediate_output_bd116; assert_in_epsilon(2030, worksheet.intermediate_output_bd116, 0.001); end
  def test_intermediate_output_be116; assert_in_epsilon(2035, worksheet.intermediate_output_be116, 0.001); end
  def test_intermediate_output_bf116; assert_in_epsilon(2040, worksheet.intermediate_output_bf116, 0.001); end
  def test_intermediate_output_bg116; assert_in_epsilon(2045, worksheet.intermediate_output_bg116, 0.001); end
  def test_intermediate_output_bh116; assert_in_epsilon(2050, worksheet.intermediate_output_bh116, 0.001); end
  def test_intermediate_output_c117; assert_equal("I.a", worksheet.intermediate_output_c117); end
  def test_intermediate_output_d117; assert_equal("Unabated thermal generation ", worksheet.intermediate_output_d117); end
  def test_intermediate_output_ar117; assert_in_epsilon(63.6, worksheet.intermediate_output_ar117, 0.001); end
  def test_intermediate_output_as117; assert_in_epsilon(63.6, worksheet.intermediate_output_as117, 0.001); end
  def test_intermediate_output_at117; assert_in_epsilon(63.7, worksheet.intermediate_output_at117, 0.001); end
  def test_intermediate_output_au117; assert_in_epsilon(64.5, worksheet.intermediate_output_au117, 0.001); end
  def test_intermediate_output_av117; assert_in_epsilon(69.3, worksheet.intermediate_output_av117, 0.001); end
  def test_intermediate_output_aw117; assert_equal("Dukes 5.7 Conventional steam stations + Combined cycle gas turbine stations", worksheet.intermediate_output_aw117); end
  def test_intermediate_output_ay117; assert_in_epsilon(62.5885469204904, worksheet.intermediate_output_ay117, 0.001); end
  def test_intermediate_output_az117; assert_in_epsilon(56.22576279628827, worksheet.intermediate_output_az117, 0.001); end
  def test_intermediate_output_ba117; assert_in_epsilon(42.95920901286723, worksheet.intermediate_output_ba117, 0.001); end
  def test_intermediate_output_bb117; assert_in_epsilon(29.697820281416192, worksheet.intermediate_output_bb117, 0.001); end
  def test_intermediate_output_bc117; assert_in_epsilon(14.008297233074657, worksheet.intermediate_output_bc117, 0.001); end
  def test_intermediate_output_bd117; assert_in_delta(0, (worksheet.intermediate_output_bd117||0), 0.001); end
  def test_intermediate_output_be117; assert_in_delta(0, (worksheet.intermediate_output_be117||0), 0.001); end
  def test_intermediate_output_bf117; assert_in_delta(0, (worksheet.intermediate_output_bf117||0), 0.001); end
  def test_intermediate_output_bg117; assert_in_delta(0, (worksheet.intermediate_output_bg117||0), 0.001); end
  def test_intermediate_output_bh117; assert_in_delta(0, (worksheet.intermediate_output_bh117||0), 0.001); end
  def test_intermediate_output_c118; assert_equal("I.a.Liquid", worksheet.intermediate_output_c118); end
  def test_intermediate_output_d118; assert_equal("Oil / Biofuel", worksheet.intermediate_output_d118); end
  def test_intermediate_output_aw118; assert_equal("no bio in Dukes", worksheet.intermediate_output_aw118); end
  def test_intermediate_output_ay118; assert_in_epsilon(4.1, worksheet.intermediate_output_ay118, 0.001); end
  def test_intermediate_output_az118; assert_in_epsilon(4.0568, worksheet.intermediate_output_az118, 0.001); end
  def test_intermediate_output_ba118; assert_in_delta(0, (worksheet.intermediate_output_ba118||0), 0.001); end
  def test_intermediate_output_bb118; assert_in_delta(0, (worksheet.intermediate_output_bb118||0), 0.001); end
  def test_intermediate_output_bc118; assert_in_delta(0, (worksheet.intermediate_output_bc118||0), 0.001); end
  def test_intermediate_output_bd118; assert_in_delta(0, (worksheet.intermediate_output_bd118||0), 0.001); end
  def test_intermediate_output_be118; assert_in_delta(0, (worksheet.intermediate_output_be118||0), 0.001); end
  def test_intermediate_output_bf118; assert_in_delta(0, (worksheet.intermediate_output_bf118||0), 0.001); end
  def test_intermediate_output_bg118; assert_in_delta(0, (worksheet.intermediate_output_bg118||0), 0.001); end
  def test_intermediate_output_bh118; assert_in_delta(0, (worksheet.intermediate_output_bh118||0), 0.001); end
  def test_intermediate_output_c119; assert_equal("I.a.Solid", worksheet.intermediate_output_c119); end
  def test_intermediate_output_d119; assert_equal("Coal / Biomass", worksheet.intermediate_output_d119); end
  def test_intermediate_output_ay119; assert_in_epsilon(28.137999999999998, worksheet.intermediate_output_ay119, 0.001); end
  def test_intermediate_output_az119; assert_in_epsilon(28.137999999999998, worksheet.intermediate_output_az119, 0.001); end
  def test_intermediate_output_ba119; assert_in_epsilon(23.422, worksheet.intermediate_output_ba119, 0.001); end
  def test_intermediate_output_bb119; assert_in_epsilon(17.055000000000003, worksheet.intermediate_output_bb119, 0.001); end
  def test_intermediate_output_bc119; assert_in_epsilon(8.612, worksheet.intermediate_output_bc119, 0.001); end
  def test_intermediate_output_bd119; assert_in_delta(0, (worksheet.intermediate_output_bd119||0), 0.001); end
  def test_intermediate_output_be119; assert_in_delta(0, (worksheet.intermediate_output_be119||0), 0.001); end
  def test_intermediate_output_bf119; assert_in_delta(0, (worksheet.intermediate_output_bf119||0), 0.001); end
  def test_intermediate_output_bg119; assert_in_delta(0, (worksheet.intermediate_output_bg119||0), 0.001); end
  def test_intermediate_output_bh119; assert_in_delta(0, (worksheet.intermediate_output_bh119||0), 0.001); end
  def test_intermediate_output_c120; assert_equal("I.a.Gas", worksheet.intermediate_output_c120); end
  def test_intermediate_output_d120; assert_equal("Gas / Biogas", worksheet.intermediate_output_d120); end
  def test_intermediate_output_ay120; assert_in_epsilon(30.350546920490398, worksheet.intermediate_output_ay120, 0.001); end
  def test_intermediate_output_az120; assert_in_epsilon(24.03096279628827, worksheet.intermediate_output_az120, 0.001); end
  def test_intermediate_output_ba120; assert_in_epsilon(19.537209012867226, worksheet.intermediate_output_ba120, 0.001); end
  def test_intermediate_output_bb120; assert_in_epsilon(12.642820281416189, worksheet.intermediate_output_bb120, 0.001); end
  def test_intermediate_output_bc120; assert_in_epsilon(5.396297233074658, worksheet.intermediate_output_bc120, 0.001); end
  def test_intermediate_output_bd120; assert_in_delta(0, (worksheet.intermediate_output_bd120||0), 0.001); end
  def test_intermediate_output_be120; assert_in_delta(0, (worksheet.intermediate_output_be120||0), 0.001); end
  def test_intermediate_output_bf120; assert_in_delta(0, (worksheet.intermediate_output_bf120||0), 0.001); end
  def test_intermediate_output_bg120; assert_in_delta(0, (worksheet.intermediate_output_bg120||0), 0.001); end
  def test_intermediate_output_bh120; assert_in_delta(0, (worksheet.intermediate_output_bh120||0), 0.001); end
  def test_intermediate_output_c121; assert_equal("I.b", worksheet.intermediate_output_c121); end
  def test_intermediate_output_d121; assert_equal("CCS Power", worksheet.intermediate_output_d121); end
  def test_intermediate_output_ay121; assert_in_delta(0, (worksheet.intermediate_output_ay121||0), 0.001); end
  def test_intermediate_output_az121; assert_in_delta(0, (worksheet.intermediate_output_az121||0), 0.001); end
  def test_intermediate_output_ba121; assert_in_delta(0.8500000000000001, worksheet.intermediate_output_ba121, 0.001); end
  def test_intermediate_output_bb121; assert_in_epsilon(1.7000000000000002, worksheet.intermediate_output_bb121, 0.001); end
  def test_intermediate_output_bc121; assert_in_epsilon(1.7, worksheet.intermediate_output_bc121, 0.001); end
  def test_intermediate_output_bd121; assert_in_epsilon(1.7, worksheet.intermediate_output_bd121, 0.001); end
  def test_intermediate_output_be121; assert_in_epsilon(1.7, worksheet.intermediate_output_be121, 0.001); end
  def test_intermediate_output_bf121; assert_in_epsilon(1.7, worksheet.intermediate_output_bf121, 0.001); end
  def test_intermediate_output_bg121; assert_in_epsilon(1.7, worksheet.intermediate_output_bg121, 0.001); end
  def test_intermediate_output_bh121; assert_in_epsilon(1.7, worksheet.intermediate_output_bh121, 0.001); end
  def test_intermediate_output_c122; assert_equal("II.a", worksheet.intermediate_output_c122); end
  def test_intermediate_output_d122; assert_equal("Nuclear power", worksheet.intermediate_output_d122); end
  def test_intermediate_output_ar122; assert_in_epsilon(11, worksheet.intermediate_output_ar122, 0.001); end
  def test_intermediate_output_as122; assert_in_epsilon(11, worksheet.intermediate_output_as122, 0.001); end
  def test_intermediate_output_at122; assert_in_epsilon(11, worksheet.intermediate_output_at122, 0.001); end
  def test_intermediate_output_au122; assert_in_epsilon(10.9, worksheet.intermediate_output_au122, 0.001); end
  def test_intermediate_output_av122; assert_in_epsilon(10.9, worksheet.intermediate_output_av122, 0.001); end
  def test_intermediate_output_aw122; assert_equal("Dukes  5.7 Nuclear stations", worksheet.intermediate_output_aw122); end
  def test_intermediate_output_ay122; assert_in_epsilon(11, worksheet.intermediate_output_ay122, 0.001); end
  def test_intermediate_output_az122; assert_in_epsilon(10, worksheet.intermediate_output_az122, 0.001); end
  def test_intermediate_output_ba122; assert_in_epsilon(7.2, worksheet.intermediate_output_ba122, 0.001); end
  def test_intermediate_output_bb122; assert_in_epsilon(3.6000000000000005, worksheet.intermediate_output_bb122, 0.001); end
  def test_intermediate_output_bc122; assert_in_epsilon(1.2000000000000006, worksheet.intermediate_output_bc122, 0.001); end
  def test_intermediate_output_bd122; assert_in_epsilon(1.2000000000000006, worksheet.intermediate_output_bd122, 0.001); end
  def test_intermediate_output_be122; assert_in_delta(0, (worksheet.intermediate_output_be122||0), 0.001); end
  def test_intermediate_output_bf122; assert_in_delta(0, (worksheet.intermediate_output_bf122||0), 0.001); end
  def test_intermediate_output_bg122; assert_in_delta(0, (worksheet.intermediate_output_bg122||0), 0.001); end
  def test_intermediate_output_bh122; assert_in_delta(0, (worksheet.intermediate_output_bh122||0), 0.001); end
  def test_intermediate_output_c123; assert_equal("III.a.1", worksheet.intermediate_output_c123); end
  def test_intermediate_output_d123; assert_equal("Onshore wind", worksheet.intermediate_output_d123); end
  def test_intermediate_output_aw123; assert_equal("Wind not split in Dukes", worksheet.intermediate_output_aw123); end
  def test_intermediate_output_ay123; assert_in_epsilon(2.0834, worksheet.intermediate_output_ay123, 0.001); end
  def test_intermediate_output_az123; assert_in_epsilon(3.923399999999999, worksheet.intermediate_output_az123, 0.001); end
  def test_intermediate_output_ba123; assert_in_epsilon(6.673399999999999, worksheet.intermediate_output_ba123, 0.001); end
  def test_intermediate_output_bb123; assert_in_epsilon(9.423399999999999, worksheet.intermediate_output_bb123, 0.001); end
  def test_intermediate_output_bc123; assert_in_epsilon(11.013399999999999, worksheet.intermediate_output_bc123, 0.001); end
  def test_intermediate_output_bd123; assert_in_epsilon(8.283399999999999, worksheet.intermediate_output_bd123, 0.001); end
  def test_intermediate_output_be123; assert_in_epsilon(5.5333999999999985, worksheet.intermediate_output_be123, 0.001); end
  def test_intermediate_output_bf123; assert_in_epsilon(2.7833999999999985, worksheet.intermediate_output_bf123, 0.001); end
  def test_intermediate_output_bg123; assert_in_delta(0.03339999999999854, worksheet.intermediate_output_bg123, 0.001); end
  def test_intermediate_output_bh123; assert_in_delta(0.03339999999999854, worksheet.intermediate_output_bh123, 0.001); end
  def test_intermediate_output_c124; assert_equal("III.a.2", worksheet.intermediate_output_c124); end
  def test_intermediate_output_d124; assert_equal("Offshore wind", worksheet.intermediate_output_d124); end
  def test_intermediate_output_ay124; assert_in_delta(0.3938, worksheet.intermediate_output_ay124, 0.001); end
  def test_intermediate_output_az124; assert_in_epsilon(1.343800000000001, worksheet.intermediate_output_az124, 0.001); end
  def test_intermediate_output_ba124; assert_in_epsilon(7.183800000000001, worksheet.intermediate_output_ba124, 0.001); end
  def test_intermediate_output_bb124; assert_in_epsilon(24.5838, worksheet.intermediate_output_bb124, 0.001); end
  def test_intermediate_output_bc124; assert_in_epsilon(45.433800000000005, worksheet.intermediate_output_bc124, 0.001); end
  def test_intermediate_output_bd124; assert_in_epsilon(69.24000000000001, worksheet.intermediate_output_bd124, 0.001); end
  def test_intermediate_output_be124; assert_in_epsilon(88.4, worksheet.intermediate_output_be124, 0.001); end
  def test_intermediate_output_bf124; assert_in_epsilon(96, worksheet.intermediate_output_bf124, 0.001); end
  def test_intermediate_output_bg124; assert_in_epsilon(100, worksheet.intermediate_output_bg124, 0.001); end
  def test_intermediate_output_bh124; assert_in_epsilon(100, worksheet.intermediate_output_bh124, 0.001); end
  def test_intermediate_output_c125; assert_equal("III.b", worksheet.intermediate_output_c125); end
  def test_intermediate_output_d125; assert_equal("Hydroelectric power stations", worksheet.intermediate_output_d125); end
  def test_intermediate_output_ar125; assert_in_epsilon(1.4, worksheet.intermediate_output_ar125, 0.001); end
  def test_intermediate_output_as125; assert_in_epsilon(1.4, worksheet.intermediate_output_as125, 0.001); end
  def test_intermediate_output_at125; assert_in_epsilon(1.5, worksheet.intermediate_output_at125, 0.001); end
  def test_intermediate_output_au125; assert_in_epsilon(1.5, worksheet.intermediate_output_au125, 0.001); end
  def test_intermediate_output_av125; assert_in_epsilon(1.5, worksheet.intermediate_output_av125, 0.001); end
  def test_intermediate_output_aw125; assert_equal("Dukes  5.7 Hydro-electric stations: Natural flow", worksheet.intermediate_output_aw125); end
  def test_intermediate_output_ay125; assert_in_epsilon(1.293, worksheet.intermediate_output_ay125, 0.001); end
  def test_intermediate_output_az125; assert_in_epsilon(1.6, worksheet.intermediate_output_az125, 0.001); end
  def test_intermediate_output_ba125; assert_in_epsilon(1.7, worksheet.intermediate_output_ba125, 0.001); end
  def test_intermediate_output_bb125; assert_in_epsilon(1.8, worksheet.intermediate_output_bb125, 0.001); end
  def test_intermediate_output_bc125; assert_in_epsilon(1.85, worksheet.intermediate_output_bc125, 0.001); end
  def test_intermediate_output_bd125; assert_in_epsilon(1.9, worksheet.intermediate_output_bd125, 0.001); end
  def test_intermediate_output_be125; assert_in_epsilon(1.95, worksheet.intermediate_output_be125, 0.001); end
  def test_intermediate_output_bf125; assert_in_epsilon(2, worksheet.intermediate_output_bf125, 0.001); end
  def test_intermediate_output_bg125; assert_in_epsilon(2.05, worksheet.intermediate_output_bg125, 0.001); end
  def test_intermediate_output_bh125; assert_in_epsilon(2.1, worksheet.intermediate_output_bh125, 0.001); end
  def test_intermediate_output_c126; assert_equal("III.c.Wave", worksheet.intermediate_output_c126); end
  def test_intermediate_output_d126; assert_equal("Wave", worksheet.intermediate_output_d126); end
  def test_intermediate_output_ay126; assert_in_delta(0, (worksheet.intermediate_output_ay126||0), 0.001); end
  def test_intermediate_output_az126; assert_in_delta(0, (worksheet.intermediate_output_az126||0), 0.001); end
  def test_intermediate_output_ba126; assert_in_delta(0.015220700152207, worksheet.intermediate_output_ba126, 0.001); end
  def test_intermediate_output_bb126; assert_in_delta(0.0803314730255369, worksheet.intermediate_output_bb126, 0.001); end
  def test_intermediate_output_bc126; assert_in_delta(0.200828682563842, worksheet.intermediate_output_bc126, 0.001); end
  def test_intermediate_output_bd126; assert_in_delta(0.401657365127685, worksheet.intermediate_output_bd126, 0.001); end
  def test_intermediate_output_be126; assert_in_epsilon(1.60662946051074, worksheet.intermediate_output_be126, 0.001); end
  def test_intermediate_output_bf126; assert_in_epsilon(3.61491628614916, worksheet.intermediate_output_bf126, 0.001); end
  def test_intermediate_output_bg126; assert_in_epsilon(7.71182141045155, worksheet.intermediate_output_bg126, 0.001); end
  def test_intermediate_output_bh126; assert_in_epsilon(9.63977676306443, worksheet.intermediate_output_bh126, 0.001); end
  def test_intermediate_output_c127; assert_equal("III.c.TidalStream", worksheet.intermediate_output_c127); end
  def test_intermediate_output_d127; assert_equal("Tidal Stream", worksheet.intermediate_output_d127); end
  def test_intermediate_output_ay127; assert_in_delta(0, (worksheet.intermediate_output_ay127||0), 0.001); end
  def test_intermediate_output_az127; assert_in_delta(0.00158548959918823, worksheet.intermediate_output_az127, 0.001); end
  def test_intermediate_output_ba127; assert_in_delta(0.0264248266531372, worksheet.intermediate_output_ba127, 0.001); end
  def test_intermediate_output_bb127; assert_in_delta(0.0528496533062743, worksheet.intermediate_output_bb127, 0.001); end
  def test_intermediate_output_bc127; assert_in_delta(0.264248266531372, worksheet.intermediate_output_bc127, 0.001); end
  def test_intermediate_output_bd127; assert_in_delta(0.528496533062743, worksheet.intermediate_output_bd127, 0.001); end
  def test_intermediate_output_be127; assert_in_epsilon(1.58548959918823, worksheet.intermediate_output_be127, 0.001); end
  def test_intermediate_output_bf127; assert_in_epsilon(3.43522746490783, worksheet.intermediate_output_bf127, 0.001); end
  def test_intermediate_output_bg127; assert_in_epsilon(7.6103500761035, worksheet.intermediate_output_bg127, 0.001); end
  def test_intermediate_output_bh127; assert_in_epsilon(9.51293759512938, worksheet.intermediate_output_bh127, 0.001); end
  def test_intermediate_output_c128; assert_equal("III.c.TidalRange", worksheet.intermediate_output_c128); end
  def test_intermediate_output_d128; assert_equal("Tidal Range", worksheet.intermediate_output_d128); end
  def test_intermediate_output_ay128; assert_in_delta(0, (worksheet.intermediate_output_ay128||0), 0.001); end
  def test_intermediate_output_az128; assert_in_delta(0, (worksheet.intermediate_output_az128||0), 0.001); end
  def test_intermediate_output_ba128; assert_in_delta(0, (worksheet.intermediate_output_ba128||0), 0.001); end
  def test_intermediate_output_bb128; assert_in_delta(0.3, worksheet.intermediate_output_bb128, 0.001); end
  def test_intermediate_output_bc128; assert_in_delta(0.3, worksheet.intermediate_output_bc128, 0.001); end
  def test_intermediate_output_bd128; assert_in_delta(0.7, worksheet.intermediate_output_bd128, 0.001); end
  def test_intermediate_output_be128; assert_in_delta(0.7, worksheet.intermediate_output_be128, 0.001); end
  def test_intermediate_output_bf128; assert_in_epsilon(1.725, worksheet.intermediate_output_bf128, 0.001); end
  def test_intermediate_output_bg128; assert_in_epsilon(1.725, worksheet.intermediate_output_bg128, 0.001); end
  def test_intermediate_output_bh128; assert_in_epsilon(1.725, worksheet.intermediate_output_bh128, 0.001); end
  def test_intermediate_output_c129; assert_equal("III.d", worksheet.intermediate_output_c129); end
  def test_intermediate_output_d129; assert_equal("Geothermal electricity", worksheet.intermediate_output_d129); end
  def test_intermediate_output_aw129; assert_equal("Other renewables not split in Dukes", worksheet.intermediate_output_aw129); end
  def test_intermediate_output_ay129; assert_in_delta(0, (worksheet.intermediate_output_ay129||0), 0.001); end
  def test_intermediate_output_az129; assert_in_delta(0, (worksheet.intermediate_output_az129||0), 0.001); end
  def test_intermediate_output_ba129; assert_in_delta(0.013, worksheet.intermediate_output_ba129, 0.001); end
  def test_intermediate_output_bb129; assert_in_delta(0.104, worksheet.intermediate_output_bb129, 0.001); end
  def test_intermediate_output_bc129; assert_in_delta(0.832, worksheet.intermediate_output_bc129, 0.001); end
  def test_intermediate_output_bd129; assert_in_epsilon(3, worksheet.intermediate_output_bd129, 0.001); end
  def test_intermediate_output_be129; assert_in_epsilon(3, worksheet.intermediate_output_be129, 0.001); end
  def test_intermediate_output_bf129; assert_in_epsilon(3, worksheet.intermediate_output_bf129, 0.001); end
  def test_intermediate_output_bg129; assert_in_epsilon(3, worksheet.intermediate_output_bg129, 0.001); end
  def test_intermediate_output_bh129; assert_in_epsilon(3, worksheet.intermediate_output_bh129, 0.001); end
  def test_intermediate_output_c130; assert_equal("IV.a", worksheet.intermediate_output_c130); end
  def test_intermediate_output_d130; assert_equal("Solar PV", worksheet.intermediate_output_d130); end
  def test_intermediate_output_ay130; assert_in_delta(0.0180085487164181, worksheet.intermediate_output_ay130, 0.001); end
  def test_intermediate_output_az130; assert_in_epsilon(13.970240510433877, worksheet.intermediate_output_az130, 0.001); end
  def test_intermediate_output_ba130; assert_in_epsilon(37.22396044662964, worksheet.intermediate_output_ba130, 0.001); end
  def test_intermediate_output_bb130; assert_in_epsilon(60.477680382825405, worksheet.intermediate_output_bb130, 0.001); end
  def test_intermediate_output_bc130; assert_in_epsilon(83.73140031902116, worksheet.intermediate_output_bc130, 0.001); end
  def test_intermediate_output_bd130; assert_in_epsilon(106.98512025521693, worksheet.intermediate_output_bd130, 0.001); end
  def test_intermediate_output_be130; assert_in_epsilon(130.2388401914127, worksheet.intermediate_output_be130, 0.001); end
  def test_intermediate_output_bf130; assert_in_epsilon(153.49256012760844, worksheet.intermediate_output_bf130, 0.001); end
  def test_intermediate_output_bg130; assert_in_epsilon(176.7462800638042, worksheet.intermediate_output_bg130, 0.001); end
  def test_intermediate_output_bh130; assert_in_epsilon(200, worksheet.intermediate_output_bh130, 0.001); end
  def test_intermediate_output_c131; assert_equal("VII.c", worksheet.intermediate_output_c131); end
  def test_intermediate_output_d131; assert_equal("Standby / peaking gas", worksheet.intermediate_output_d131); end
  def test_intermediate_output_ay131; assert_in_delta(0, (worksheet.intermediate_output_ay131||0), 0.001); end
  def test_intermediate_output_az131; assert_in_delta(0, (worksheet.intermediate_output_az131||0), 0.001); end
  def test_intermediate_output_ba131; assert_in_delta(0, (worksheet.intermediate_output_ba131||0), 0.001); end
  def test_intermediate_output_bb131; assert_in_epsilon(3.5689130393179114, worksheet.intermediate_output_bb131, 0.001); end
  def test_intermediate_output_bc131; assert_in_epsilon(10.58976032855675, worksheet.intermediate_output_bc131, 0.001); end
  def test_intermediate_output_bd131; assert_in_epsilon(7.624903041794366, worksheet.intermediate_output_bd131, 0.001); end
  def test_intermediate_output_be131; assert_in_delta(0.5011287945865025, worksheet.intermediate_output_be131, 0.001); end
  def test_intermediate_output_bf131; assert_in_delta(0, (worksheet.intermediate_output_bf131||0), 0.001); end
  def test_intermediate_output_bg131; assert_in_delta(0, (worksheet.intermediate_output_bg131||0), 0.001); end
  def test_intermediate_output_bh131; assert_in_delta(0, (worksheet.intermediate_output_bh131||0), 0.001); end
  def test_intermediate_output_d132; assert_equal("Total generation", worksheet.intermediate_output_d132); end
  def test_intermediate_output_ar132; assert_in_epsilon(74.996, worksheet.intermediate_output_ar132, 0.001); end
  def test_intermediate_output_as132; assert_in_epsilon(75.97856007, worksheet.intermediate_output_as132, 0.001); end
  def test_intermediate_output_at132; assert_in_epsilon(76.78237735, worksheet.intermediate_output_at132, 0.001); end
  def test_intermediate_output_au132; assert_in_epsilon(77.67526559, worksheet.intermediate_output_au132, 0.001); end
  def test_intermediate_output_av132; assert_in_epsilon(83.19678575, worksheet.intermediate_output_av132, 0.001); end
  def test_intermediate_output_b135; assert_equal("Emissions", worksheet.intermediate_output_b135); end
  def test_intermediate_output_c137; assert_equal("Emissions as % of base year, adjusted so that 2007 matches actuals", worksheet.intermediate_output_c137); end
  def test_intermediate_output_d138; assert_equal("IPCC Sector", worksheet.intermediate_output_d138); end
  def test_intermediate_output_f138; assert_equal("2007 Actuals, GHG Inv.", worksheet.intermediate_output_f138); end
  def test_intermediate_output_ay138; assert_in_epsilon(2007, worksheet.intermediate_output_ay138, 0.001); end
  def test_intermediate_output_az138; assert_in_epsilon(2010, worksheet.intermediate_output_az138, 0.001); end
  def test_intermediate_output_ba138; assert_in_epsilon(2015, worksheet.intermediate_output_ba138, 0.001); end
  def test_intermediate_output_bb138; assert_in_epsilon(2020, worksheet.intermediate_output_bb138, 0.001); end
  def test_intermediate_output_bc138; assert_in_epsilon(2025, worksheet.intermediate_output_bc138, 0.001); end
  def test_intermediate_output_bd138; assert_in_epsilon(2030, worksheet.intermediate_output_bd138, 0.001); end
  def test_intermediate_output_be138; assert_in_epsilon(2035, worksheet.intermediate_output_be138, 0.001); end
  def test_intermediate_output_bf138; assert_in_epsilon(2040, worksheet.intermediate_output_bf138, 0.001); end
  def test_intermediate_output_bg138; assert_in_epsilon(2045, worksheet.intermediate_output_bg138, 0.001); end
  def test_intermediate_output_bh138; assert_in_epsilon(2050, worksheet.intermediate_output_bh138, 0.001); end
  def test_intermediate_output_c139; assert_equal("1A", worksheet.intermediate_output_c139); end
  def test_intermediate_output_d139; assert_equal("Fuel Combustion", worksheet.intermediate_output_d139); end
  def test_intermediate_output_c140; assert_equal("1B", worksheet.intermediate_output_c140); end
  def test_intermediate_output_d140; assert_equal("Fugitive Emissions from Fuels", worksheet.intermediate_output_d140); end
  def test_intermediate_output_c141; assert_in_delta(1, worksheet.intermediate_output_c141, 0.001); end
  def test_intermediate_output_d141; assert_equal("Fuel Combustion", worksheet.intermediate_output_d141); end
  def test_intermediate_output_f141; assert_in_delta(0.6828579138027161, worksheet.intermediate_output_f141, 0.001); end
  def test_intermediate_output_ab141; assert_in_delta(0.7806685062595154, worksheet.intermediate_output_ab141, 0.001); end
  def test_intermediate_output_ac141; assert_in_delta(0.7930303272365209, worksheet.intermediate_output_ac141, 0.001); end
  def test_intermediate_output_ad141; assert_in_delta(0.7722947449612156, worksheet.intermediate_output_ad141, 0.001); end
  def test_intermediate_output_ae141; assert_in_delta(0.7521930383535008, worksheet.intermediate_output_ae141, 0.001); end
  def test_intermediate_output_af141; assert_in_delta(0.7357869578903378, worksheet.intermediate_output_af141, 0.001); end
  def test_intermediate_output_ag141; assert_in_delta(0.7261890501248855, worksheet.intermediate_output_ag141, 0.001); end
  def test_intermediate_output_ah141; assert_in_delta(0.7518487395897508, worksheet.intermediate_output_ah141, 0.001); end
  def test_intermediate_output_ai141; assert_in_delta(0.7201784237664568, worksheet.intermediate_output_ai141, 0.001); end
  def test_intermediate_output_aj141; assert_in_delta(0.7224617851605658, worksheet.intermediate_output_aj141, 0.001); end
  def test_intermediate_output_ak141; assert_in_delta(0.7081467896293895, worksheet.intermediate_output_ak141, 0.001); end
  def test_intermediate_output_al141; assert_in_delta(0.716552142368414, worksheet.intermediate_output_al141, 0.001); end
  def test_intermediate_output_am141; assert_in_delta(0.7327821540998919, worksheet.intermediate_output_am141, 0.001); end
  def test_intermediate_output_an141; assert_in_delta(0.7115375614693166, worksheet.intermediate_output_an141, 0.001); end
  def test_intermediate_output_ao141; assert_in_delta(0.7193475894079996, worksheet.intermediate_output_ao141, 0.001); end
  def test_intermediate_output_ap141; assert_in_delta(0.7205408426019051, worksheet.intermediate_output_ap141, 0.001); end
  def test_intermediate_output_aq141; assert_in_delta(0.7143203096191257, worksheet.intermediate_output_aq141, 0.001); end
  def test_intermediate_output_ar141; assert_in_delta(0.7122366422020238, worksheet.intermediate_output_ar141, 0.001); end
  def test_intermediate_output_as141; assert_in_delta(0.7004394214256808, worksheet.intermediate_output_as141, 0.001); end
  def test_intermediate_output_at141; assert_in_delta(0.684907687910888, worksheet.intermediate_output_at141, 0.001); end
  def test_intermediate_output_au141; assert_in_delta(0.6244815767662123, worksheet.intermediate_output_au141, 0.001); end
  def test_intermediate_output_av141; assert_in_delta(0.6459379834014715, worksheet.intermediate_output_av141, 0.001); end
  def test_intermediate_output_aw141; assert_equal("Calculated from below", worksheet.intermediate_output_aw141); end
  def test_intermediate_output_ay182; assert_in_epsilon(527.5720323391492, worksheet.intermediate_output_ay182, 0.001); end
  def test_intermediate_output_ay183; assert_in_epsilon(27.891312059948405, worksheet.intermediate_output_ay183, 0.001); end
  def test_intermediate_output_ay184; assert_in_delta(0, (worksheet.intermediate_output_ay184||0), 0.001); end
  def test_intermediate_output_ay185; assert_in_epsilon(43.3067326, worksheet.intermediate_output_ay185, 0.001); end
  def test_intermediate_output_ay186; assert_in_epsilon(-1.824795399999999, worksheet.intermediate_output_ay186, 0.001); end
  def test_intermediate_output_ay187; assert_in_epsilon(22.87266786921778, worksheet.intermediate_output_ay187, 0.001); end
  def test_intermediate_output_ay188; assert_in_delta(0, (worksheet.intermediate_output_ay188||0), 0.001); end
  def test_intermediate_output_ay189; assert_in_epsilon(52.73485512445805, worksheet.intermediate_output_ay189, 0.001); end
  def test_intermediate_output_ay190; assert_in_epsilon(-10.021493683731482, worksheet.intermediate_output_ay190, 0.001); end
  def test_intermediate_output_ay191; assert_in_delta(0, (worksheet.intermediate_output_ay191||0), 0.001); end
  def test_intermediate_output_ay192; assert_in_epsilon(662.5313109090421, worksheet.intermediate_output_ay192, 0.001); end
  def test_intermediate_output_ay155; assert_in_epsilon(1.0278140229679735, worksheet.intermediate_output_ay155, 0.001); end
  def test_intermediate_output_ay141; assert_in_delta(0.6781582189745614, worksheet.intermediate_output_ay141, 0.001); end
  def test_intermediate_output_az182; assert_in_epsilon(482.43087074845477, worksheet.intermediate_output_az182, 0.001); end
  def test_intermediate_output_az141; assert_in_delta(0.620132304274237, worksheet.intermediate_output_az141, 0.001); end
  def test_intermediate_output_ba182; assert_in_epsilon(418.5893797287682, worksheet.intermediate_output_ba182, 0.001); end
  def test_intermediate_output_ba141; assert_in_delta(0.5380683789849617, worksheet.intermediate_output_ba141, 0.001); end
  def test_intermediate_output_bb182; assert_in_epsilon(338.60204413158965, worksheet.intermediate_output_bb182, 0.001); end
  def test_intermediate_output_bb141; assert_in_delta(0.4352500608709484, worksheet.intermediate_output_bb141, 0.001); end
  def test_intermediate_output_bc182; assert_in_epsilon(243.817163553409, worksheet.intermediate_output_bc182, 0.001); end
  def test_intermediate_output_bc141; assert_in_delta(0.31341049800857573, worksheet.intermediate_output_bc141, 0.001); end
  def test_intermediate_output_bd182; assert_in_epsilon(166.82477924243256, worksheet.intermediate_output_bd182, 0.001); end
  def test_intermediate_output_bd141; assert_in_delta(0.2144419875145023, worksheet.intermediate_output_bd141, 0.001); end
  def test_intermediate_output_be182; assert_in_epsilon(147.34161605647336, worksheet.intermediate_output_be182, 0.001); end
  def test_intermediate_output_be141; assert_in_delta(0.189397696998194, worksheet.intermediate_output_be141, 0.001); end
  def test_intermediate_output_bf182; assert_in_epsilon(127.99906240968772, worksheet.intermediate_output_bf182, 0.001); end
  def test_intermediate_output_bf141; assert_in_delta(0.1645341505486893, worksheet.intermediate_output_bf141, 0.001); end
  def test_intermediate_output_bg182; assert_in_epsilon(108.37140764643343, worksheet.intermediate_output_bg182, 0.001); end
  def test_intermediate_output_bg141; assert_in_delta(0.1393041258677385, worksheet.intermediate_output_bg141, 0.001); end
  def test_intermediate_output_bh182; assert_in_epsilon(90.13191573357825, worksheet.intermediate_output_bh182, 0.001); end
  def test_intermediate_output_bh141; assert_in_delta(0.11585849078397574, worksheet.intermediate_output_bh141, 0.001); end
  def test_intermediate_output_c142; assert_in_epsilon(2, worksheet.intermediate_output_c142, 0.001); end
  def test_intermediate_output_d142; assert_equal("Industrial Processes", worksheet.intermediate_output_d142); end
  def test_intermediate_output_f142; assert_in_delta(0.034882184192791134, worksheet.intermediate_output_f142, 0.001); end
  def test_intermediate_output_ab142; assert_in_delta(0.06934348280753405, worksheet.intermediate_output_ab142, 0.001); end
  def test_intermediate_output_ac142; assert_in_delta(0.06720152766763343, worksheet.intermediate_output_ac142, 0.001); end
  def test_intermediate_output_ad142; assert_in_delta(0.0603087404525551, worksheet.intermediate_output_ad142, 0.001); end
  def test_intermediate_output_ae142; assert_in_delta(0.05606951265410359, worksheet.intermediate_output_ae142, 0.001); end
  def test_intermediate_output_af142; assert_in_delta(0.059165018025826376, worksheet.intermediate_output_af142, 0.001); end
  def test_intermediate_output_ag142; assert_in_delta(0.059469343411300474, worksheet.intermediate_output_ag142, 0.001); end
  def test_intermediate_output_ah142; assert_in_delta(0.06173370674717705, worksheet.intermediate_output_ah142, 0.001); end
  def test_intermediate_output_ai142; assert_in_delta(0.06468354007919712, worksheet.intermediate_output_ai142, 0.001); end
  def test_intermediate_output_aj142; assert_in_delta(0.06269330586412453, worksheet.intermediate_output_aj142, 0.001); end
  def test_intermediate_output_ak142; assert_in_delta(0.041484572634347024, worksheet.intermediate_output_ak142, 0.001); end
  def test_intermediate_output_al142; assert_in_delta(0.04056607560811837, worksheet.intermediate_output_al142, 0.001); end
  def test_intermediate_output_am142; assert_in_delta(0.03853728872195278, worksheet.intermediate_output_am142, 0.001); end
  def test_intermediate_output_an142; assert_in_delta(0.03608416208929206, worksheet.intermediate_output_an142, 0.001); end
  def test_intermediate_output_ao142; assert_in_delta(0.03845260377410687, worksheet.intermediate_output_ao142, 0.001); end
  def test_intermediate_output_ap142; assert_in_delta(0.03879236532069573, worksheet.intermediate_output_ap142, 0.001); end
  def test_intermediate_output_aq142; assert_in_delta(0.03921145541134658, worksheet.intermediate_output_aq142, 0.001); end
  def test_intermediate_output_ar142; assert_in_delta(0.0383255885918455, worksheet.intermediate_output_ar142, 0.001); end
  def test_intermediate_output_as142; assert_in_delta(0.04048870022214414, worksheet.intermediate_output_as142, 0.001); end
  def test_intermediate_output_at142; assert_in_delta(0.03944535219725577, worksheet.intermediate_output_at142, 0.001); end
  def test_intermediate_output_au142; assert_in_delta(0.03262814293515601, worksheet.intermediate_output_au142, 0.001); end
  def test_intermediate_output_av142; assert_in_delta(0.0343352023525444, worksheet.intermediate_output_av142, 0.001); end
  def test_intermediate_output_aw142; assert_equal("Calculated from below", worksheet.intermediate_output_aw142); end
  def test_intermediate_output_ay142; assert_in_delta(0.035852398065102514, worksheet.intermediate_output_ay142, 0.001); end
  def test_intermediate_output_az183; assert_in_epsilon(26.368712655422293, worksheet.intermediate_output_az183, 0.001); end
  def test_intermediate_output_az142; assert_in_delta(0.03389519935650726, worksheet.intermediate_output_az142, 0.001); end
  def test_intermediate_output_ba183; assert_in_epsilon(24.100761831475033, worksheet.intermediate_output_ba183, 0.001); end
  def test_intermediate_output_ba142; assert_in_delta(0.03097990173416999, worksheet.intermediate_output_ba142, 0.001); end
  def test_intermediate_output_bb183; assert_in_epsilon(22.12487912953283, worksheet.intermediate_output_bb183, 0.001); end
  def test_intermediate_output_bb142; assert_in_delta(0.02844003795839202, worksheet.intermediate_output_bb142, 0.001); end
  def test_intermediate_output_bc183; assert_in_epsilon(20.396617482615238, worksheet.intermediate_output_bc183, 0.001); end
  def test_intermediate_output_bc142; assert_in_delta(0.026218474326220112, worksheet.intermediate_output_bc142, 0.001); end
  def test_intermediate_output_bd183; assert_in_epsilon(18.87866632556195, worksheet.intermediate_output_bd183, 0.001); end
  def test_intermediate_output_bd142; assert_in_delta(0.02426725062584042, worksheet.intermediate_output_bd142, 0.001); end
  def test_intermediate_output_be183; assert_in_epsilon(17.53968609236886, worksheet.intermediate_output_be183, 0.001); end
  def test_intermediate_output_be142; assert_in_delta(0.022546081961614037, worksheet.intermediate_output_be142, 0.001); end
  def test_intermediate_output_bf183; assert_in_epsilon(16.353334153505703, worksheet.intermediate_output_bf183, 0.001); end
  def test_intermediate_output_bf142; assert_in_delta(0.021021106662280385, worksheet.intermediate_output_bf142, 0.001); end
  def test_intermediate_output_bg183; assert_in_epsilon(15.297450683231187, worksheet.intermediate_output_bg183, 0.001); end
  def test_intermediate_output_bg142; assert_in_delta(0.01966383976837171, worksheet.intermediate_output_bg142, 0.001); end
  def test_intermediate_output_bh183; assert_in_epsilon(14.353378137344789, worksheet.intermediate_output_bh183, 0.001); end
  def test_intermediate_output_bh142; assert_in_delta(0.018450298266820833, worksheet.intermediate_output_bh142, 0.001); end
  def test_intermediate_output_c143; assert_in_epsilon(3, worksheet.intermediate_output_c143, 0.001); end
  def test_intermediate_output_d143; assert_equal("Solvent and Other Product Use", worksheet.intermediate_output_d143); end
  def test_intermediate_output_f143; assert_in_delta(0, (worksheet.intermediate_output_f143||0), 0.001); end
  def test_intermediate_output_ab143; assert_in_delta(0, (worksheet.intermediate_output_ab143||0), 0.001); end
  def test_intermediate_output_ac143; assert_in_delta(0, (worksheet.intermediate_output_ac143||0), 0.001); end
  def test_intermediate_output_ad143; assert_in_delta(0, (worksheet.intermediate_output_ad143||0), 0.001); end
  def test_intermediate_output_ae143; assert_in_delta(0, (worksheet.intermediate_output_ae143||0), 0.001); end
  def test_intermediate_output_af143; assert_in_delta(0, (worksheet.intermediate_output_af143||0), 0.001); end
  def test_intermediate_output_ag143; assert_in_delta(0, (worksheet.intermediate_output_ag143||0), 0.001); end
  def test_intermediate_output_ah143; assert_in_delta(0, (worksheet.intermediate_output_ah143||0), 0.001); end
  def test_intermediate_output_ai143; assert_in_delta(0, (worksheet.intermediate_output_ai143||0), 0.001); end
  def test_intermediate_output_aj143; assert_in_delta(0, (worksheet.intermediate_output_aj143||0), 0.001); end
  def test_intermediate_output_ak143; assert_in_delta(0, (worksheet.intermediate_output_ak143||0), 0.001); end
  def test_intermediate_output_al143; assert_in_delta(0, (worksheet.intermediate_output_al143||0), 0.001); end
  def test_intermediate_output_am143; assert_in_delta(0, (worksheet.intermediate_output_am143||0), 0.001); end
  def test_intermediate_output_an143; assert_in_delta(0, (worksheet.intermediate_output_an143||0), 0.001); end
  def test_intermediate_output_ao143; assert_in_delta(0, (worksheet.intermediate_output_ao143||0), 0.001); end
  def test_intermediate_output_ap143; assert_in_delta(0, (worksheet.intermediate_output_ap143||0), 0.001); end
  def test_intermediate_output_aq143; assert_in_delta(0, (worksheet.intermediate_output_aq143||0), 0.001); end
  def test_intermediate_output_ar143; assert_in_delta(0, (worksheet.intermediate_output_ar143||0), 0.001); end
  def test_intermediate_output_as143; assert_in_delta(0, (worksheet.intermediate_output_as143||0), 0.001); end
  def test_intermediate_output_at143; assert_in_delta(0, (worksheet.intermediate_output_at143||0), 0.001); end
  def test_intermediate_output_au143; assert_in_delta(0, (worksheet.intermediate_output_au143||0), 0.001); end
  def test_intermediate_output_av143; assert_in_delta(0, (worksheet.intermediate_output_av143||0), 0.001); end
  def test_intermediate_output_aw143; assert_equal("Calculated from below", worksheet.intermediate_output_aw143); end
  def test_intermediate_output_ay143; assert_in_delta(0, (worksheet.intermediate_output_ay143||0), 0.001); end
  def test_intermediate_output_az184; assert_in_delta(0, (worksheet.intermediate_output_az184||0), 0.001); end
  def test_intermediate_output_az143; assert_in_delta(0, (worksheet.intermediate_output_az143||0), 0.001); end
  def test_intermediate_output_ba184; assert_in_delta(0, (worksheet.intermediate_output_ba184||0), 0.001); end
  def test_intermediate_output_ba143; assert_in_delta(0, (worksheet.intermediate_output_ba143||0), 0.001); end
  def test_intermediate_output_bb184; assert_in_delta(0, (worksheet.intermediate_output_bb184||0), 0.001); end
  def test_intermediate_output_bb143; assert_in_delta(0, (worksheet.intermediate_output_bb143||0), 0.001); end
  def test_intermediate_output_bc184; assert_in_delta(0, (worksheet.intermediate_output_bc184||0), 0.001); end
  def test_intermediate_output_bc143; assert_in_delta(0, (worksheet.intermediate_output_bc143||0), 0.001); end
  def test_intermediate_output_bd184; assert_in_delta(0, (worksheet.intermediate_output_bd184||0), 0.001); end
  def test_intermediate_output_bd143; assert_in_delta(0, (worksheet.intermediate_output_bd143||0), 0.001); end
  def test_intermediate_output_be184; assert_in_delta(0, (worksheet.intermediate_output_be184||0), 0.001); end
  def test_intermediate_output_be143; assert_in_delta(0, (worksheet.intermediate_output_be143||0), 0.001); end
  def test_intermediate_output_bf184; assert_in_delta(0, (worksheet.intermediate_output_bf184||0), 0.001); end
  def test_intermediate_output_bf143; assert_in_delta(0, (worksheet.intermediate_output_bf143||0), 0.001); end
  def test_intermediate_output_bg184; assert_in_delta(0, (worksheet.intermediate_output_bg184||0), 0.001); end
  def test_intermediate_output_bg143; assert_in_delta(0, (worksheet.intermediate_output_bg143||0), 0.001); end
  def test_intermediate_output_bh184; assert_in_delta(0, (worksheet.intermediate_output_bh184||0), 0.001); end
  def test_intermediate_output_bh143; assert_in_delta(0, (worksheet.intermediate_output_bh143||0), 0.001); end
  def test_intermediate_output_c144; assert_in_epsilon(4, worksheet.intermediate_output_c144, 0.001); end
  def test_intermediate_output_d144; assert_equal("Agriculture", worksheet.intermediate_output_d144); end
  def test_intermediate_output_f144; assert_in_delta(0.05435207327207761, worksheet.intermediate_output_f144, 0.001); end
  def test_intermediate_output_ab144; assert_in_delta(0.07363727056288454, worksheet.intermediate_output_ab144, 0.001); end
  def test_intermediate_output_ac144; assert_in_delta(0.07331066421106627, worksheet.intermediate_output_ac144, 0.001); end
  def test_intermediate_output_ad144; assert_in_delta(0.07307789942306385, worksheet.intermediate_output_ad144, 0.001); end
  def test_intermediate_output_ae144; assert_in_delta(0.07216238312548899, worksheet.intermediate_output_ae144, 0.001); end
  def test_intermediate_output_af144; assert_in_delta(0.07233251461154927, worksheet.intermediate_output_af144, 0.001); end
  def test_intermediate_output_ag144; assert_in_delta(0.07179511657717852, worksheet.intermediate_output_ag144, 0.001); end
  def test_intermediate_output_ah144; assert_in_delta(0.072276188394338, worksheet.intermediate_output_ah144, 0.001); end
  def test_intermediate_output_ai144; assert_in_delta(0.07197048507620002, worksheet.intermediate_output_ai144, 0.001); end
  def test_intermediate_output_aj144; assert_in_delta(0.07115585924578635, worksheet.intermediate_output_aj144, 0.001); end
  def test_intermediate_output_ak144; assert_in_delta(0.07029313970856307, worksheet.intermediate_output_ak144, 0.001); end
  def test_intermediate_output_al144; assert_in_delta(0.0677359702849104, worksheet.intermediate_output_al144, 0.001); end
  def test_intermediate_output_am144; assert_in_delta(0.06415176285396793, worksheet.intermediate_output_am144, 0.001); end
  def test_intermediate_output_an144; assert_in_delta(0.0641319859166509, worksheet.intermediate_output_an144, 0.001); end
  def test_intermediate_output_ao144; assert_in_delta(0.06357803599583314, worksheet.intermediate_output_ao144, 0.001); end
  def test_intermediate_output_ap144; assert_in_delta(0.06391878307434748, worksheet.intermediate_output_ap144, 0.001); end
  def test_intermediate_output_aq144; assert_in_delta(0.06429309279604421, worksheet.intermediate_output_aq144, 0.001); end
  def test_intermediate_output_ar144; assert_in_delta(0.0622039307081389, worksheet.intermediate_output_ar144, 0.001); end
  def test_intermediate_output_as144; assert_in_delta(0.060375061599688654, worksheet.intermediate_output_as144, 0.001); end
  def test_intermediate_output_at144; assert_in_delta(0.059536708630004403, worksheet.intermediate_output_at144, 0.001); end
  def test_intermediate_output_au144; assert_in_delta(0.05866275452204509, worksheet.intermediate_output_au144, 0.001); end
  def test_intermediate_output_av144; assert_in_delta(0.059166189388632114, worksheet.intermediate_output_av144, 0.001); end
  def test_intermediate_output_aw144; assert_equal("Calculated from below", worksheet.intermediate_output_aw144); end
  def test_intermediate_output_ay144; assert_in_delta(0.05566788011754167, worksheet.intermediate_output_ay144, 0.001); end
  def test_intermediate_output_az185; assert_in_epsilon(42.29381231077704, worksheet.intermediate_output_az185, 0.001); end
  def test_intermediate_output_az144; assert_in_delta(0.05436583949143613, worksheet.intermediate_output_az144, 0.001); end
  def test_intermediate_output_ba185; assert_in_epsilon(39.45575261734926, worksheet.intermediate_output_ba185, 0.001); end
  def test_intermediate_output_ba144; assert_in_delta(0.050717705418625365, worksheet.intermediate_output_ba144, 0.001); end
  def test_intermediate_output_bb185; assert_in_epsilon(36.69761667161368, worksheet.intermediate_output_bb185, 0.001); end
  def test_intermediate_output_bb144; assert_in_delta(0.04717230792597105, worksheet.intermediate_output_bb144, 0.001); end
  def test_intermediate_output_bc185; assert_in_epsilon(36.35140660244726, worksheet.intermediate_output_bc185, 0.001); end
  def test_intermediate_output_bc144; assert_in_delta(0.04672727826271167, worksheet.intermediate_output_bc144, 0.001); end
  def test_intermediate_output_bd185; assert_in_epsilon(36.01036528191107, worksheet.intermediate_output_bd185, 0.001); end
  def test_intermediate_output_bd144; assert_in_delta(0.0462888926767546, worksheet.intermediate_output_bd144, 0.001); end
  def test_intermediate_output_be185; assert_in_epsilon(35.674403297396495, worksheet.intermediate_output_be185, 0.001); end
  def test_intermediate_output_be144; assert_in_delta(0.045857036234229806, worksheet.intermediate_output_be144, 0.001); end
  def test_intermediate_output_bf185; assert_in_epsilon(35.343432833520865, worksheet.intermediate_output_bf185, 0.001); end
  def test_intermediate_output_bf144; assert_in_delta(0.0454315960543933, worksheet.intermediate_output_bf144, 0.001); end
  def test_intermediate_output_bg185; assert_in_epsilon(35.01736764340552, worksheet.intermediate_output_bg185, 0.001); end
  def test_intermediate_output_bg144; assert_in_delta(0.045012461272707076, worksheet.intermediate_output_bg144, 0.001); end
  def test_intermediate_output_bh185; assert_in_epsilon(34.6961230204712, worksheet.intermediate_output_bh185, 0.001); end
  def test_intermediate_output_bh144; assert_in_delta(0.04459952300458401, worksheet.intermediate_output_bh144, 0.001); end
  def test_intermediate_output_c145; assert_in_epsilon(5, worksheet.intermediate_output_c145, 0.001); end
  def test_intermediate_output_d145; assert_equal("LULUCF", worksheet.intermediate_output_d145); end
  def test_intermediate_output_f145; assert_in_delta(-0.002225951062639978, worksheet.intermediate_output_f145, 0.001); end
  def test_intermediate_output_ab145; assert_in_delta(0.004985445821672126, worksheet.intermediate_output_ab145, 0.001); end
  def test_intermediate_output_ac145; assert_in_delta(0.00495418767811816, worksheet.intermediate_output_ac145, 0.001); end
  def test_intermediate_output_ad145; assert_in_delta(0.004281499361400791, worksheet.intermediate_output_ad145, 0.001); end
  def test_intermediate_output_ae145; assert_in_delta(0.00285139785334176, worksheet.intermediate_output_ae145, 0.001); end
  def test_intermediate_output_af145; assert_in_delta(0.00262950507244757, worksheet.intermediate_output_af145, 0.001); end
  def test_intermediate_output_ag145; assert_in_delta(0.003157327882574611, worksheet.intermediate_output_ag145, 0.001); end
  def test_intermediate_output_ah145; assert_in_delta(0.0027934494919249478, worksheet.intermediate_output_ah145, 0.001); end
  def test_intermediate_output_ai145; assert_in_delta(0.002458870903568768, worksheet.intermediate_output_ai145, 0.001); end
  def test_intermediate_output_aj145; assert_in_delta(0.0015886960591720714, worksheet.intermediate_output_aj145, 0.001); end
  def test_intermediate_output_ak145; assert_in_delta(0.0013600700980916927, worksheet.intermediate_output_ak145, 0.001); end
  def test_intermediate_output_al145; assert_in_delta(0.000483125457190964, worksheet.intermediate_output_al145, 0.001); end
  def test_intermediate_output_am145; assert_in_delta(-0.00014623827590729024, worksheet.intermediate_output_am145, 0.001); end
  def test_intermediate_output_an145; assert_in_delta(-0.0011968507170436733, worksheet.intermediate_output_an145, 0.001); end
  def test_intermediate_output_ao145; assert_in_delta(-0.0016478975384083344, worksheet.intermediate_output_ao145, 0.001); end
  def test_intermediate_output_ap145; assert_in_delta(-0.0030195909710430914, worksheet.intermediate_output_ap145, 0.001); end
  def test_intermediate_output_aq145; assert_in_delta(-0.0037712994763044764, worksheet.intermediate_output_aq145, 0.001); end
  def test_intermediate_output_ar145; assert_in_delta(-0.003965991265793217, worksheet.intermediate_output_ar145, 0.001); end
  def test_intermediate_output_as145; assert_in_delta(-0.004461209073727321, worksheet.intermediate_output_as145, 0.001); end
  def test_intermediate_output_at145; assert_in_delta(-0.004971900711434677, worksheet.intermediate_output_at145, 0.001); end
  def test_intermediate_output_au145; assert_in_delta(-0.0053886085866594515, worksheet.intermediate_output_au145, 0.001); end
  def test_intermediate_output_av145; assert_in_delta(-0.004920632053361023, worksheet.intermediate_output_av145, 0.001); end
  def test_intermediate_output_aw145; assert_equal("Calculated from below", worksheet.intermediate_output_aw145); end
  def test_intermediate_output_ay145; assert_in_delta(-0.0023456512525316087, worksheet.intermediate_output_ay145, 0.001); end
  def test_intermediate_output_az186; assert_in_epsilon(2.685792057600377, worksheet.intermediate_output_az186, 0.001); end
  def test_intermediate_output_az145; assert_in_delta(0.0034524043100666374, worksheet.intermediate_output_az145, 0.001); end
  def test_intermediate_output_ba186; assert_in_epsilon(5.464901095502293, worksheet.intermediate_output_ba186, 0.001); end
  def test_intermediate_output_ba145; assert_in_delta(0.0070247612963219444, worksheet.intermediate_output_ba145, 0.001); end
  def test_intermediate_output_bb186; assert_in_epsilon(7.475576965471847, worksheet.intermediate_output_bb186, 0.001); end
  def test_intermediate_output_bb145; assert_in_delta(0.009609349339907087, worksheet.intermediate_output_bb145, 0.001); end
  def test_intermediate_output_bc186; assert_in_epsilon(8.594077319309696, worksheet.intermediate_output_bc186, 0.001); end
  def test_intermediate_output_bc145; assert_in_delta(0.011047106008921484, worksheet.intermediate_output_bc145, 0.001); end
  def test_intermediate_output_bd186; assert_in_epsilon(7.5283379343751875, worksheet.intermediate_output_bd186, 0.001); end
  def test_intermediate_output_bd145; assert_in_delta(0.009677170002318282, worksheet.intermediate_output_bd145, 0.001); end
  def test_intermediate_output_be186; assert_in_epsilon(5.812680464276858, worksheet.intermediate_output_be186, 0.001); end
  def test_intermediate_output_be145; assert_in_delta(0.007471808188247861, worksheet.intermediate_output_be145, 0.001); end
  def test_intermediate_output_bf186; assert_in_epsilon(2.7719875464120802, worksheet.intermediate_output_bf186, 0.001); end
  def test_intermediate_output_bf145; assert_in_delta(0.003563202789881824, worksheet.intermediate_output_bf145, 0.001); end
  def test_intermediate_output_bg186; assert_in_delta(-0.5470886426277637, worksheet.intermediate_output_bg186, 0.001); end
  def test_intermediate_output_bg145; assert_in_delta(-0.000703245503482545, worksheet.intermediate_output_bg145, 0.001); end
  def test_intermediate_output_bh186; assert_in_epsilon(-3.161689517582234, worksheet.intermediate_output_bh186, 0.001); end
  def test_intermediate_output_bh145; assert_in_delta(-0.004064138356022175, worksheet.intermediate_output_bh145, 0.001); end
  def test_intermediate_output_c146; assert_in_epsilon(6, worksheet.intermediate_output_c146, 0.001); end
  def test_intermediate_output_d146; assert_equal("Waste", worksheet.intermediate_output_d146); end
  def test_intermediate_output_f146; assert_in_delta(0.028590076266100505, worksheet.intermediate_output_f146, 0.001); end
  def test_intermediate_output_ab146; assert_in_delta(0.05891518004264519, worksheet.intermediate_output_ab146, 0.001); end
  def test_intermediate_output_ac146; assert_in_delta(0.057763754767127445, worksheet.intermediate_output_ac146, 0.001); end
  def test_intermediate_output_ad146; assert_in_delta(0.05609391726220595, worksheet.intermediate_output_ad146, 0.001); end
  def test_intermediate_output_ae146; assert_in_delta(0.05429662701085268, worksheet.intermediate_output_ae146, 0.001); end
  def test_intermediate_output_af146; assert_in_delta(0.05272999945602901, worksheet.intermediate_output_af146, 0.001); end
  def test_intermediate_output_ag146; assert_in_delta(0.051327979005276206, worksheet.intermediate_output_ag146, 0.001); end
  def test_intermediate_output_ah146; assert_in_delta(0.05000188792374703, worksheet.intermediate_output_ah146, 0.001); end
  def test_intermediate_output_ai146; assert_in_delta(0.046033251120786184, worksheet.intermediate_output_ai146, 0.001); end
  def test_intermediate_output_aj146; assert_in_delta(0.04341790055683726, worksheet.intermediate_output_aj146, 0.001); end
  def test_intermediate_output_ak146; assert_in_delta(0.03992567829435675, worksheet.intermediate_output_ak146, 0.001); end
  def test_intermediate_output_al146; assert_in_delta(0.0376787538212672, worksheet.intermediate_output_al146, 0.001); end
  def test_intermediate_output_am146; assert_in_delta(0.03329698385723431, worksheet.intermediate_output_am146, 0.001); end
  def test_intermediate_output_an146; assert_in_delta(0.030624818715528856, worksheet.intermediate_output_an146, 0.001); end
  def test_intermediate_output_ao146; assert_in_delta(0.026967867591497052, worksheet.intermediate_output_ao146, 0.001); end
  def test_intermediate_output_ap146; assert_in_delta(0.02502124716611989, worksheet.intermediate_output_ap146, 0.001); end
  def test_intermediate_output_aq146; assert_in_delta(0.024379250511532797, worksheet.intermediate_output_aq146, 0.001); end
  def test_intermediate_output_ar146; assert_in_delta(0.02387176955842731, worksheet.intermediate_output_ar146, 0.001); end
  def test_intermediate_output_as146; assert_in_delta(0.023398858470177794, worksheet.intermediate_output_as146, 0.001); end
  def test_intermediate_output_at146; assert_in_delta(0.022682335876657248, worksheet.intermediate_output_at146, 0.001); end
  def test_intermediate_output_au146; assert_in_delta(0.02202450339058717, worksheet.intermediate_output_au146, 0.001); end
  def test_intermediate_output_av146; assert_in_delta(0.02127352929813492, worksheet.intermediate_output_av146, 0.001); end
  def test_intermediate_output_aw146; assert_equal("Calculated from below", worksheet.intermediate_output_aw146); end
  def test_intermediate_output_ay146; assert_in_delta(0.029401269882733255, worksheet.intermediate_output_ay146, 0.001); end
  def test_intermediate_output_az187; assert_in_epsilon(15.21267066552306, worksheet.intermediate_output_az187, 0.001); end
  def test_intermediate_output_az146; assert_in_delta(0.01955486078106896, worksheet.intermediate_output_az146, 0.001); end
  def test_intermediate_output_ba187; assert_in_epsilon(12.969805414772946, worksheet.intermediate_output_ba187, 0.001); end
  def test_intermediate_output_ba146; assert_in_delta(0.016671808968969023, worksheet.intermediate_output_ba146, 0.001); end
  def test_intermediate_output_bb187; assert_in_epsilon(10.72882425342694, worksheet.intermediate_output_bb187, 0.001); end
  def test_intermediate_output_bb146; assert_in_delta(0.013791179026559587, worksheet.intermediate_output_bb146, 0.001); end
  def test_intermediate_output_bc187; assert_in_epsilon(8.62229908940291, worksheet.intermediate_output_bc187, 0.001); end
  def test_intermediate_output_bc146; assert_in_delta(0.011083383188471484, worksheet.intermediate_output_bc146, 0.001); end
  def test_intermediate_output_bd187; assert_in_epsilon(6.762914714481023, worksheet.intermediate_output_bd187, 0.001); end
  def test_intermediate_output_bd146; assert_in_delta(0.00869327014457997, worksheet.intermediate_output_bd146, 0.001); end
  def test_intermediate_output_be187; assert_in_epsilon(5.723830856814635, worksheet.intermediate_output_be187, 0.001); end
  def test_intermediate_output_be146; assert_in_delta(0.007357598018148405, worksheet.intermediate_output_be146, 0.001); end
  def test_intermediate_output_bf187; assert_in_epsilon(4.788626675722327, worksheet.intermediate_output_bf187, 0.001); end
  def test_intermediate_output_bf146; assert_in_delta(0.006155456200631783, worksheet.intermediate_output_bf146, 0.001); end
  def test_intermediate_output_bg187; assert_in_epsilon(4.000303181877479, worksheet.intermediate_output_bg187, 0.001); end
  def test_intermediate_output_bg146; assert_in_delta(0.00514211958725734, worksheet.intermediate_output_bg146, 0.001); end
  def test_intermediate_output_bh187; assert_in_epsilon(3.277950237496105, worksheet.intermediate_output_bh187, 0.001); end
  def test_intermediate_output_bh146; assert_in_delta(0.0042135836600196526, worksheet.intermediate_output_bh146, 0.001); end
  def test_intermediate_output_c147; assert_in_epsilon(7, worksheet.intermediate_output_c147, 0.001); end
  def test_intermediate_output_d147; assert_equal("Other", worksheet.intermediate_output_d147); end
  def test_intermediate_output_f147; assert_in_delta(0, (worksheet.intermediate_output_f147||0), 0.001); end
  def test_intermediate_output_ab147; assert_in_delta(0, (worksheet.intermediate_output_ab147||0), 0.001); end
  def test_intermediate_output_ac147; assert_in_delta(0, (worksheet.intermediate_output_ac147||0), 0.001); end
  def test_intermediate_output_ad147; assert_in_delta(0, (worksheet.intermediate_output_ad147||0), 0.001); end
  def test_intermediate_output_ae147; assert_in_delta(0, (worksheet.intermediate_output_ae147||0), 0.001); end
  def test_intermediate_output_af147; assert_in_delta(0, (worksheet.intermediate_output_af147||0), 0.001); end
  def test_intermediate_output_ag147; assert_in_delta(0, (worksheet.intermediate_output_ag147||0), 0.001); end
  def test_intermediate_output_ah147; assert_in_delta(0, (worksheet.intermediate_output_ah147||0), 0.001); end
  def test_intermediate_output_ai147; assert_in_delta(0, (worksheet.intermediate_output_ai147||0), 0.001); end
  def test_intermediate_output_aj147; assert_in_delta(0, (worksheet.intermediate_output_aj147||0), 0.001); end
  def test_intermediate_output_ak147; assert_in_delta(0, (worksheet.intermediate_output_ak147||0), 0.001); end
  def test_intermediate_output_al147; assert_in_delta(0, (worksheet.intermediate_output_al147||0), 0.001); end
  def test_intermediate_output_am147; assert_in_delta(0, (worksheet.intermediate_output_am147||0), 0.001); end
  def test_intermediate_output_an147; assert_in_delta(0, (worksheet.intermediate_output_an147||0), 0.001); end
  def test_intermediate_output_ao147; assert_in_delta(0, (worksheet.intermediate_output_ao147||0), 0.001); end
  def test_intermediate_output_ap147; assert_in_delta(0, (worksheet.intermediate_output_ap147||0), 0.001); end
  def test_intermediate_output_aq147; assert_in_delta(0, (worksheet.intermediate_output_aq147||0), 0.001); end
  def test_intermediate_output_ar147; assert_in_delta(0, (worksheet.intermediate_output_ar147||0), 0.001); end
  def test_intermediate_output_as147; assert_in_delta(0, (worksheet.intermediate_output_as147||0), 0.001); end
  def test_intermediate_output_at147; assert_in_delta(0, (worksheet.intermediate_output_at147||0), 0.001); end
  def test_intermediate_output_au147; assert_in_delta(0, (worksheet.intermediate_output_au147||0), 0.001); end
  def test_intermediate_output_av147; assert_in_delta(0, (worksheet.intermediate_output_av147||0), 0.001); end
  def test_intermediate_output_aw147; assert_equal("Calculated from below", worksheet.intermediate_output_aw147); end
  def test_intermediate_output_ay147; assert_in_delta(0, (worksheet.intermediate_output_ay147||0), 0.001); end
  def test_intermediate_output_az188; assert_in_delta(0, (worksheet.intermediate_output_az188||0), 0.001); end
  def test_intermediate_output_az147; assert_in_delta(0, (worksheet.intermediate_output_az147||0), 0.001); end
  def test_intermediate_output_ba188; assert_in_delta(0, (worksheet.intermediate_output_ba188||0), 0.001); end
  def test_intermediate_output_ba147; assert_in_delta(0, (worksheet.intermediate_output_ba147||0), 0.001); end
  def test_intermediate_output_bb188; assert_in_delta(0, (worksheet.intermediate_output_bb188||0), 0.001); end
  def test_intermediate_output_bb147; assert_in_delta(0, (worksheet.intermediate_output_bb147||0), 0.001); end
  def test_intermediate_output_bc188; assert_in_delta(0, (worksheet.intermediate_output_bc188||0), 0.001); end
  def test_intermediate_output_bc147; assert_in_delta(0, (worksheet.intermediate_output_bc147||0), 0.001); end
  def test_intermediate_output_bd188; assert_in_delta(0, (worksheet.intermediate_output_bd188||0), 0.001); end
  def test_intermediate_output_bd147; assert_in_delta(0, (worksheet.intermediate_output_bd147||0), 0.001); end
  def test_intermediate_output_be188; assert_in_delta(0, (worksheet.intermediate_output_be188||0), 0.001); end
  def test_intermediate_output_be147; assert_in_delta(0, (worksheet.intermediate_output_be147||0), 0.001); end
  def test_intermediate_output_bf188; assert_in_delta(0, (worksheet.intermediate_output_bf188||0), 0.001); end
  def test_intermediate_output_bf147; assert_in_delta(0, (worksheet.intermediate_output_bf147||0), 0.001); end
  def test_intermediate_output_bg188; assert_in_delta(0, (worksheet.intermediate_output_bg188||0), 0.001); end
  def test_intermediate_output_bg147; assert_in_delta(0, (worksheet.intermediate_output_bg147||0), 0.001); end
  def test_intermediate_output_bh188; assert_in_delta(0, (worksheet.intermediate_output_bh188||0), 0.001); end
  def test_intermediate_output_bh147; assert_in_delta(0, (worksheet.intermediate_output_bh147||0), 0.001); end
  def test_intermediate_output_c148; assert_equal("X1", worksheet.intermediate_output_c148); end
  def test_intermediate_output_d148; assert_equal("Int'l Aviation & Shipping", worksheet.intermediate_output_d148); end
  def test_intermediate_output_f148; assert_in_delta(0.05318296088087667, worksheet.intermediate_output_f148, 0.001); end
  def test_intermediate_output_ab148; assert_in_delta(0.03173742313345184, worksheet.intermediate_output_ab148, 0.001); end
  def test_intermediate_output_ac148; assert_in_delta(0.03140183401460409, worksheet.intermediate_output_ac148, 0.001); end
  def test_intermediate_output_ad148; assert_in_delta(0.03370064471080534, worksheet.intermediate_output_ad148, 0.001); end
  def test_intermediate_output_ae148; assert_in_delta(0.035080277576749426, worksheet.intermediate_output_ae148, 0.001); end
  def test_intermediate_output_af148; assert_in_delta(0.03498646073499493, worksheet.intermediate_output_af148, 0.001); end
  def test_intermediate_output_ag148; assert_in_delta(0.036854721398015496, worksheet.intermediate_output_ag148, 0.001); end
  def test_intermediate_output_ah148; assert_in_delta(0.03959594009006914, worksheet.intermediate_output_ah148, 0.001); end
  def test_intermediate_output_ai148; assert_in_delta(0.04234839076242477, worksheet.intermediate_output_ai148, 0.001); end
  def test_intermediate_output_aj148; assert_in_delta(0.0462610577268, worksheet.intermediate_output_aj148, 0.001); end
  def test_intermediate_output_ak148; assert_in_delta(0.04546698600105988, worksheet.intermediate_output_ak148, 0.001); end
  def test_intermediate_output_al148; assert_in_delta(0.04815362041282952, worksheet.intermediate_output_al148, 0.001); end
  def test_intermediate_output_am148; assert_in_delta(0.04740754468098375, worksheet.intermediate_output_am148, 0.001); end
  def test_intermediate_output_an148; assert_in_delta(0.044704417121659366, worksheet.intermediate_output_an148, 0.001); end
  def test_intermediate_output_ao148; assert_in_delta(0.046951156639025673, worksheet.intermediate_output_ao148, 0.001); end
  def test_intermediate_output_ap148; assert_in_delta(0.05175599910334371, worksheet.intermediate_output_ap148, 0.001); end
  def test_intermediate_output_aq148; assert_in_delta(0.055831139470604634, worksheet.intermediate_output_aq148, 0.001); end
  def test_intermediate_output_ar148; assert_in_delta(0.059483094928962726, worksheet.intermediate_output_ar148, 0.001); end
  def test_intermediate_output_as148; assert_in_delta(0.05866967429705353, worksheet.intermediate_output_as148, 0.001); end
  def test_intermediate_output_at148; assert_in_delta(0.05902984569716286, worksheet.intermediate_output_at148, 0.001); end
  def test_intermediate_output_au148; assert_in_delta(0.05599899555126166, worksheet.intermediate_output_au148, 0.001); end
  def test_intermediate_output_av148; assert_in_delta(0.05241726883681514, worksheet.intermediate_output_av148, 0.001); end
  def test_intermediate_output_aw148; assert_equal("Calculated from below", worksheet.intermediate_output_aw148); end
  def test_intermediate_output_ay148; assert_in_delta(0.0677870949119874, worksheet.intermediate_output_ay148, 0.001); end
  def test_intermediate_output_az189; assert_in_epsilon(51.61519898068786, worksheet.intermediate_output_az189, 0.001); end
  def test_intermediate_output_az148; assert_in_delta(0.0663478525530691, worksheet.intermediate_output_az148, 0.001); end
  def test_intermediate_output_ba189; assert_in_epsilon(47.17044505583785, worksheet.intermediate_output_ba189, 0.001); end
  def test_intermediate_output_ba148; assert_in_delta(0.060634421550876075, worksheet.intermediate_output_ba148, 0.001); end
  def test_intermediate_output_bb189; assert_in_epsilon(41.43044352525321, worksheet.intermediate_output_bb189, 0.001); end
  def test_intermediate_output_bb148; assert_in_delta(0.05325603722365275, worksheet.intermediate_output_bb148, 0.001); end
  def test_intermediate_output_bc189; assert_in_epsilon(37.599628175935685, worksheet.intermediate_output_bc189, 0.001); end
  def test_intermediate_output_bc148; assert_in_delta(0.04833178279910522, worksheet.intermediate_output_bc148, 0.001); end
  def test_intermediate_output_bd189; assert_in_epsilon(33.806361725431444, worksheet.intermediate_output_bd189, 0.001); end
  def test_intermediate_output_bd148; assert_in_delta(0.043455794948187035, worksheet.intermediate_output_bd148, 0.001); end
  def test_intermediate_output_be189; assert_in_epsilon(30.048430141555308, worksheet.intermediate_output_be189, 0.001); end
  def test_intermediate_output_be148; assert_in_delta(0.03862522768204467, worksheet.intermediate_output_be148, 0.001); end
  def test_intermediate_output_bf189; assert_in_epsilon(26.323749940251936, worksheet.intermediate_output_bf189, 0.001); end
  def test_intermediate_output_bf148; assert_in_delta(0.03383740282262923, worksheet.intermediate_output_bf148, 0.001); end
  def test_intermediate_output_bg189; assert_in_epsilon(22.63036048795963, worksheet.intermediate_output_bg189, 0.001); end
  def test_intermediate_output_bg148; assert_in_delta(0.0290898001079049, worksheet.intermediate_output_bg148, 0.001); end
  def test_intermediate_output_bh189; assert_in_epsilon(18.966416757857413, worksheet.intermediate_output_bh189, 0.001); end
  def test_intermediate_output_bh148; assert_in_delta(0.024380047880493753, worksheet.intermediate_output_bh148, 0.001); end
  def test_intermediate_output_c149; assert_equal("X2", worksheet.intermediate_output_c149); end
  def test_intermediate_output_d149; assert_equal("Bioenergy credit", worksheet.intermediate_output_d149); end
  def test_intermediate_output_ab149; assert_in_delta(0, (worksheet.intermediate_output_ab149||0), 0.001); end
  def test_intermediate_output_ac149; assert_in_delta(0, (worksheet.intermediate_output_ac149||0), 0.001); end
  def test_intermediate_output_ad149; assert_in_delta(0, (worksheet.intermediate_output_ad149||0), 0.001); end
  def test_intermediate_output_ae149; assert_in_delta(0, (worksheet.intermediate_output_ae149||0), 0.001); end
  def test_intermediate_output_af149; assert_in_delta(0, (worksheet.intermediate_output_af149||0), 0.001); end
  def test_intermediate_output_ag149; assert_in_delta(0, (worksheet.intermediate_output_ag149||0), 0.001); end
  def test_intermediate_output_ah149; assert_in_delta(0, (worksheet.intermediate_output_ah149||0), 0.001); end
  def test_intermediate_output_ai149; assert_in_delta(0, (worksheet.intermediate_output_ai149||0), 0.001); end
  def test_intermediate_output_aj149; assert_in_delta(0, (worksheet.intermediate_output_aj149||0), 0.001); end
  def test_intermediate_output_ak149; assert_in_delta(0, (worksheet.intermediate_output_ak149||0), 0.001); end
  def test_intermediate_output_al149; assert_in_delta(0, (worksheet.intermediate_output_al149||0), 0.001); end
  def test_intermediate_output_am149; assert_in_delta(0, (worksheet.intermediate_output_am149||0), 0.001); end
  def test_intermediate_output_an149; assert_in_delta(0, (worksheet.intermediate_output_an149||0), 0.001); end
  def test_intermediate_output_ao149; assert_in_delta(0, (worksheet.intermediate_output_ao149||0), 0.001); end
  def test_intermediate_output_ap149; assert_in_delta(0, (worksheet.intermediate_output_ap149||0), 0.001); end
  def test_intermediate_output_aq149; assert_in_delta(0, (worksheet.intermediate_output_aq149||0), 0.001); end
  def test_intermediate_output_ar149; assert_in_delta(0, (worksheet.intermediate_output_ar149||0), 0.001); end
  def test_intermediate_output_as149; assert_in_delta(0, (worksheet.intermediate_output_as149||0), 0.001); end
  def test_intermediate_output_at149; assert_in_delta(0, (worksheet.intermediate_output_at149||0), 0.001); end
  def test_intermediate_output_au149; assert_in_delta(0, (worksheet.intermediate_output_au149||0), 0.001); end
  def test_intermediate_output_av149; assert_in_delta(0, (worksheet.intermediate_output_av149||0), 0.001); end
  def test_intermediate_output_aw149; assert_equal("Calculated from below", worksheet.intermediate_output_aw149); end
  def test_intermediate_output_ay149; assert_in_delta(-0.01288195334747247, worksheet.intermediate_output_ay149, 0.001); end
  def test_intermediate_output_az190; assert_in_epsilon(-10.394982968343585, worksheet.intermediate_output_az190, 0.001); end
  def test_intermediate_output_az149; assert_in_delta(-0.013362048599936126, worksheet.intermediate_output_az149, 0.001); end
  def test_intermediate_output_ba190; assert_in_epsilon(-16.88637658177198, worksheet.intermediate_output_ba190, 0.001); end
  def test_intermediate_output_ba149; assert_in_delta(-0.021706296705786242, worksheet.intermediate_output_ba149, 0.001); end
  def test_intermediate_output_bb190; assert_in_epsilon(-30.022779685867846, worksheet.intermediate_output_bb190, 0.001); end
  def test_intermediate_output_bb149; assert_in_delta(-0.038592255753514326, worksheet.intermediate_output_bb149, 0.001); end
  def test_intermediate_output_bc190; assert_in_epsilon(-44.86995985734363, worksheet.intermediate_output_bc190, 0.001); end
  def test_intermediate_output_bc149; assert_in_delta(-0.057677303187207256, worksheet.intermediate_output_bc149, 0.001); end
  def test_intermediate_output_bd190; assert_in_epsilon(-52.44861382468615, worksheet.intermediate_output_bd190, 0.001); end
  def test_intermediate_output_bd149; assert_in_delta(-0.0674191510519052, worksheet.intermediate_output_bd149, 0.001); end
  def test_intermediate_output_be190; assert_in_epsilon(-58.46290902572321, worksheet.intermediate_output_be190, 0.001); end
  def test_intermediate_output_be149; assert_in_delta(-0.07515012136858149, worksheet.intermediate_output_be149, 0.001); end
  def test_intermediate_output_bf190; assert_in_epsilon(-66.61479887760416, worksheet.intermediate_output_bf190, 0.001); end
  def test_intermediate_output_bf149; assert_in_delta(-0.08562882525043272, worksheet.intermediate_output_bf149, 0.001); end
  def test_intermediate_output_bg190; assert_in_epsilon(-76.88238463928339, worksheet.intermediate_output_bg190, 0.001); end
  def test_intermediate_output_bg149; assert_in_delta(-0.09882711334473557, worksheet.intermediate_output_bg149, 0.001); end
  def test_intermediate_output_bh190; assert_in_epsilon(-82.6340093565, worksheet.intermediate_output_bh190, 0.001); end
  def test_intermediate_output_bh149; assert_in_delta(-0.10622043849342397, worksheet.intermediate_output_bh149, 0.001); end
  def test_intermediate_output_c150; assert_equal("X3", worksheet.intermediate_output_c150); end
  def test_intermediate_output_d150; assert_equal("Carbon capture", worksheet.intermediate_output_d150); end
  def test_intermediate_output_ab150; assert_in_delta(0, (worksheet.intermediate_output_ab150||0), 0.001); end
  def test_intermediate_output_ac150; assert_in_delta(0, (worksheet.intermediate_output_ac150||0), 0.001); end
  def test_intermediate_output_ad150; assert_in_delta(0, (worksheet.intermediate_output_ad150||0), 0.001); end
  def test_intermediate_output_ae150; assert_in_delta(0, (worksheet.intermediate_output_ae150||0), 0.001); end
  def test_intermediate_output_af150; assert_in_delta(0, (worksheet.intermediate_output_af150||0), 0.001); end
  def test_intermediate_output_ag150; assert_in_delta(0, (worksheet.intermediate_output_ag150||0), 0.001); end
  def test_intermediate_output_ah150; assert_in_delta(0, (worksheet.intermediate_output_ah150||0), 0.001); end
  def test_intermediate_output_ai150; assert_in_delta(0, (worksheet.intermediate_output_ai150||0), 0.001); end
  def test_intermediate_output_aj150; assert_in_delta(0, (worksheet.intermediate_output_aj150||0), 0.001); end
  def test_intermediate_output_ak150; assert_in_delta(0, (worksheet.intermediate_output_ak150||0), 0.001); end
  def test_intermediate_output_al150; assert_in_delta(0, (worksheet.intermediate_output_al150||0), 0.001); end
  def test_intermediate_output_am150; assert_in_delta(0, (worksheet.intermediate_output_am150||0), 0.001); end
  def test_intermediate_output_an150; assert_in_delta(0, (worksheet.intermediate_output_an150||0), 0.001); end
  def test_intermediate_output_ao150; assert_in_delta(0, (worksheet.intermediate_output_ao150||0), 0.001); end
  def test_intermediate_output_ap150; assert_in_delta(0, (worksheet.intermediate_output_ap150||0), 0.001); end
  def test_intermediate_output_aq150; assert_in_delta(0, (worksheet.intermediate_output_aq150||0), 0.001); end
  def test_intermediate_output_ar150; assert_in_delta(0, (worksheet.intermediate_output_ar150||0), 0.001); end
  def test_intermediate_output_as150; assert_in_delta(0, (worksheet.intermediate_output_as150||0), 0.001); end
  def test_intermediate_output_at150; assert_in_delta(0, (worksheet.intermediate_output_at150||0), 0.001); end
  def test_intermediate_output_au150; assert_in_delta(0, (worksheet.intermediate_output_au150||0), 0.001); end
  def test_intermediate_output_av150; assert_in_delta(0, (worksheet.intermediate_output_av150||0), 0.001); end
  def test_intermediate_output_aw150; assert_equal("Calculated from below", worksheet.intermediate_output_aw150); end
  def test_intermediate_output_ay150; assert_in_delta(0, (worksheet.intermediate_output_ay150||0), 0.001); end
  def test_intermediate_output_az191; assert_in_delta(0, (worksheet.intermediate_output_az191||0), 0.001); end
  def test_intermediate_output_az150; assert_in_delta(0, (worksheet.intermediate_output_az150||0), 0.001); end
  def test_intermediate_output_ba191; assert_in_epsilon(-2.8350150827586207, worksheet.intermediate_output_ba191, 0.001); end
  def test_intermediate_output_ba150; assert_in_delta(-0.0036442204314076874, worksheet.intermediate_output_ba150, 0.001); end
  def test_intermediate_output_bb191; assert_in_epsilon(-7.003482952966135, worksheet.intermediate_output_bb191, 0.001); end
  def test_intermediate_output_bb150; assert_in_delta(-0.009002504368823373, worksheet.intermediate_output_bb150, 0.001); end
  def test_intermediate_output_bc191; assert_in_epsilon(-7.104800515537072, worksheet.intermediate_output_bc191, 0.001); end
  def test_intermediate_output_bc150; assert_in_delta(-0.009132741253214886, worksheet.intermediate_output_bc150, 0.001); end
  def test_intermediate_output_bd191; assert_in_epsilon(-7.39210280525591, worksheet.intermediate_output_bd191, 0.001); end
  def test_intermediate_output_bd150; assert_in_delta(-0.009502048944221885, worksheet.intermediate_output_bd150, 0.001); end
  def test_intermediate_output_be191; assert_in_epsilon(-7.999624633515107, worksheet.intermediate_output_be191, 0.001); end
  def test_intermediate_output_be150; assert_in_delta(-0.010282977226590679, worksheet.intermediate_output_be150, 0.001); end
  def test_intermediate_output_bf191; assert_in_epsilon(-9.207497617412239, worksheet.intermediate_output_bf191, 0.001); end
  def test_intermediate_output_bf150; assert_in_delta(-0.011835616375931696, worksheet.intermediate_output_bf150, 0.001); end
  def test_intermediate_output_bg191; assert_in_epsilon(-11.16690179190548, worksheet.intermediate_output_bg191, 0.001); end
  def test_intermediate_output_bg150; assert_in_delta(-0.01435429811752077, worksheet.intermediate_output_bg150, 0.001); end
  def test_intermediate_output_bh191; assert_in_epsilon(-14.594072500462186, worksheet.intermediate_output_bh191, 0.001); end
  def test_intermediate_output_bh150; assert_in_delta(-0.018759694615761442, worksheet.intermediate_output_bh150, 0.001); end
  def test_intermediate_output_d151; assert_equal("Total", worksheet.intermediate_output_d151); end
  def test_intermediate_output_f151; assert_in_delta(0.851639257351922, worksheet.intermediate_output_f151, 0.001); end
  def test_intermediate_output_ab151; assert_in_epsilon(1.019287308627703, worksheet.intermediate_output_ab151, 0.001); end
  def test_intermediate_output_ac151; assert_in_epsilon(1.0276622955750703, worksheet.intermediate_output_ac151, 0.001); end
  def test_intermediate_output_ad151; assert_in_delta(0.9997574461712466, worksheet.intermediate_output_ad151, 0.001); end
  def test_intermediate_output_ae151; assert_in_delta(0.9726532365740373, worksheet.intermediate_output_ae151, 0.001); end
  def test_intermediate_output_af151; assert_in_delta(0.9576304557911849, worksheet.intermediate_output_af151, 0.001); end
  def test_intermediate_output_ag151; assert_in_delta(0.9487935383992309, worksheet.intermediate_output_ag151, 0.001); end
  def test_intermediate_output_ah151; assert_in_delta(0.9782499122370071, worksheet.intermediate_output_ah151, 0.001); end
  def test_intermediate_output_ai151; assert_in_delta(0.9476729617086337, worksheet.intermediate_output_ai151, 0.001); end
  def test_intermediate_output_aj151; assert_in_delta(0.947578604613286, worksheet.intermediate_output_aj151, 0.001); end
  def test_intermediate_output_ak151; assert_in_delta(0.906677236365808, worksheet.intermediate_output_ak151, 0.001); end
  def test_intermediate_output_al151; assert_in_delta(0.9111696879527305, worksheet.intermediate_output_al151, 0.001); end
  def test_intermediate_output_am151; assert_in_delta(0.9160294959381233, worksheet.intermediate_output_am151, 0.001); end
  def test_intermediate_output_an151; assert_in_delta(0.8858860945954042, worksheet.intermediate_output_an151, 0.001); end
  def test_intermediate_output_ao151; assert_in_delta(0.893649355870054, worksheet.intermediate_output_ao151, 0.001); end
  def test_intermediate_output_ap151; assert_in_delta(0.8970096462953688, worksheet.intermediate_output_ap151, 0.001); end
  def test_intermediate_output_aq151; assert_in_delta(0.8942639483323495, worksheet.intermediate_output_aq151, 0.001); end
  def test_intermediate_output_ar151; assert_in_delta(0.892155034723605, worksheet.intermediate_output_ar151, 0.001); end
  def test_intermediate_output_as151; assert_in_delta(0.8789105069410176, worksheet.intermediate_output_as151, 0.001); end
  def test_intermediate_output_at151; assert_in_delta(0.8606300296005335, worksheet.intermediate_output_at151, 0.001); end
  def test_intermediate_output_au151; assert_in_delta(0.7884073645786027, worksheet.intermediate_output_au151, 0.001); end
  def test_intermediate_output_av151; assert_in_delta(0.8082095412242372, worksheet.intermediate_output_av151, 0.001); end
  def test_intermediate_output_aw151; assert_equal("Calculated from below", worksheet.intermediate_output_aw151); end
  def test_intermediate_output_az151; assert_in_delta(0.784386412166449, worksheet.intermediate_output_az151, 0.001); end
  def test_intermediate_output_ba151; assert_in_delta(0.6787464608167302, worksheet.intermediate_output_ba151, 0.001); end
  def test_intermediate_output_bb151; assert_in_delta(0.5399242122230933, worksheet.intermediate_output_bb151, 0.001); end
  def test_intermediate_output_bc151; assert_in_delta(0.3900084781535835, worksheet.intermediate_output_bc151, 0.001); end
  def test_intermediate_output_bd151; assert_in_delta(0.2699031659160555, worksheet.intermediate_output_bd151, 0.001); end
  def test_intermediate_output_be151; assert_in_delta(0.22582235048730664, worksheet.intermediate_output_be151, 0.001); end
  def test_intermediate_output_bf151; assert_in_delta(0.1770784734521414, worksheet.intermediate_output_bf151, 0.001); end
  def test_intermediate_output_bg151; assert_in_delta(0.12432768963824063, worksheet.intermediate_output_bg151, 0.001); end
  def test_intermediate_output_c153; assert_equal("Excluding international bunkers", worksheet.intermediate_output_c153); end
  def test_intermediate_output_f153; assert_in_delta(0.8215417518529308, worksheet.intermediate_output_f153, 0.001); end
  def test_intermediate_output_ay153; assert_in_delta(0.8065153741923863, worksheet.intermediate_output_ay153, 0.001); end
  def test_intermediate_output_az153; assert_in_delta(0.7387989283445054, worksheet.intermediate_output_az153, 0.001); end
  def test_intermediate_output_ba153; assert_in_delta(0.6359832715005359, worksheet.intermediate_output_ba153, 0.001); end
  def test_intermediate_output_bb153; assert_in_delta(0.5007390220694536, worksheet.intermediate_output_bb153, 0.001); end
  def test_intermediate_output_bc153; assert_in_delta(0.3515554603419892, worksheet.intermediate_output_bc153, 0.001); end
  def test_intermediate_output_bd153; assert_in_delta(0.23299455545614745, worksheet.intermediate_output_bd153, 0.001); end
  def test_intermediate_output_be153; assert_in_delta(0.1926094801819126, worksheet.intermediate_output_be153, 0.001); end
  def test_intermediate_output_bf153; assert_in_delta(0.1473825438190733, worksheet.intermediate_output_bf153, 0.001); end
  def test_intermediate_output_bg153; assert_in_delta(0.09799146547323297, worksheet.intermediate_output_bg153, 0.001); end
  def test_intermediate_output_bh153; assert_in_delta(0.05564114950173588, worksheet.intermediate_output_bh153, 0.001); end
  def test_intermediate_output_e155; assert_equal("Adjustment factor:", worksheet.intermediate_output_e155); end
  def test_intermediate_output_bg155; assert_equal("% reduction 1990-2050", worksheet.intermediate_output_bg155); end
  def test_intermediate_output_bh151; assert_in_delta(0.07845767213068638, worksheet.intermediate_output_bh151, 0.001); end
  def test_intermediate_output_bh155; assert_in_delta(0.9215423278693136, worksheet.intermediate_output_bh155, 0.001); end
  def test_intermediate_output_c157; assert_equal("Emissions by sector", worksheet.intermediate_output_c157); end
  def test_intermediate_output_f157; assert_equal("Sector", worksheet.intermediate_output_f157); end
  def test_intermediate_output_ay157; assert_in_epsilon(2007, worksheet.intermediate_output_ay157, 0.001); end
  def test_intermediate_output_az157; assert_in_epsilon(2010, worksheet.intermediate_output_az157, 0.001); end
  def test_intermediate_output_ba157; assert_in_epsilon(2015, worksheet.intermediate_output_ba157, 0.001); end
  def test_intermediate_output_bb157; assert_in_epsilon(2020, worksheet.intermediate_output_bb157, 0.001); end
  def test_intermediate_output_bc157; assert_in_epsilon(2025, worksheet.intermediate_output_bc157, 0.001); end
  def test_intermediate_output_bd157; assert_in_epsilon(2030, worksheet.intermediate_output_bd157, 0.001); end
  def test_intermediate_output_be157; assert_in_epsilon(2035, worksheet.intermediate_output_be157, 0.001); end
  def test_intermediate_output_bf157; assert_in_epsilon(2040, worksheet.intermediate_output_bf157, 0.001); end
  def test_intermediate_output_bg157; assert_in_epsilon(2045, worksheet.intermediate_output_bg157, 0.001); end
  def test_intermediate_output_bh157; assert_in_epsilon(2050, worksheet.intermediate_output_bh157, 0.001); end
  def test_intermediate_output_c158; assert_equal("I", worksheet.intermediate_output_c158); end
  def test_intermediate_output_f158; assert_equal("Hydrocarbon fuel power generation", worksheet.intermediate_output_f158); end
  def test_intermediate_output_c159; assert_equal("II", worksheet.intermediate_output_c159); end
  def test_intermediate_output_f159; assert_equal("Nuclear power generation", worksheet.intermediate_output_f159); end
  def test_intermediate_output_ay159; assert_in_delta(0, (worksheet.intermediate_output_ay159||0), 0.001); end
  def test_intermediate_output_az159; assert_in_delta(0, (worksheet.intermediate_output_az159||0), 0.001); end
  def test_intermediate_output_ba159; assert_in_delta(0, (worksheet.intermediate_output_ba159||0), 0.001); end
  def test_intermediate_output_bb159; assert_in_delta(0, (worksheet.intermediate_output_bb159||0), 0.001); end
  def test_intermediate_output_bc159; assert_in_delta(0, (worksheet.intermediate_output_bc159||0), 0.001); end
  def test_intermediate_output_bd159; assert_in_delta(0, (worksheet.intermediate_output_bd159||0), 0.001); end
  def test_intermediate_output_be159; assert_in_delta(0, (worksheet.intermediate_output_be159||0), 0.001); end
  def test_intermediate_output_bf159; assert_in_delta(0, (worksheet.intermediate_output_bf159||0), 0.001); end
  def test_intermediate_output_bg159; assert_in_delta(0, (worksheet.intermediate_output_bg159||0), 0.001); end
  def test_intermediate_output_bh159; assert_in_delta(0, (worksheet.intermediate_output_bh159||0), 0.001); end
  def test_intermediate_output_c160; assert_equal("III", worksheet.intermediate_output_c160); end
  def test_intermediate_output_f160; assert_equal("National renewable power generation", worksheet.intermediate_output_f160); end
  def test_intermediate_output_ay160; assert_in_delta(0, (worksheet.intermediate_output_ay160||0), 0.001); end
  def test_intermediate_output_az160; assert_in_delta(0, (worksheet.intermediate_output_az160||0), 0.001); end
  def test_intermediate_output_ba160; assert_in_delta(0, (worksheet.intermediate_output_ba160||0), 0.001); end
  def test_intermediate_output_bb160; assert_in_delta(0, (worksheet.intermediate_output_bb160||0), 0.001); end
  def test_intermediate_output_bc160; assert_in_delta(0, (worksheet.intermediate_output_bc160||0), 0.001); end
  def test_intermediate_output_bd160; assert_in_delta(0, (worksheet.intermediate_output_bd160||0), 0.001); end
  def test_intermediate_output_be160; assert_in_delta(0, (worksheet.intermediate_output_be160||0), 0.001); end
  def test_intermediate_output_bf160; assert_in_delta(0, (worksheet.intermediate_output_bf160||0), 0.001); end
  def test_intermediate_output_bg160; assert_in_delta(0, (worksheet.intermediate_output_bg160||0), 0.001); end
  def test_intermediate_output_bh160; assert_in_delta(0, (worksheet.intermediate_output_bh160||0), 0.001); end
  def test_intermediate_output_c161; assert_equal("IV", worksheet.intermediate_output_c161); end
  def test_intermediate_output_f161; assert_equal("Distributed renewable power generation", worksheet.intermediate_output_f161); end
  def test_intermediate_output_ay161; assert_in_delta(0, (worksheet.intermediate_output_ay161||0), 0.001); end
  def test_intermediate_output_az161; assert_in_delta(0, (worksheet.intermediate_output_az161||0), 0.001); end
  def test_intermediate_output_ba161; assert_in_delta(0, (worksheet.intermediate_output_ba161||0), 0.001); end
  def test_intermediate_output_bb161; assert_in_delta(0, (worksheet.intermediate_output_bb161||0), 0.001); end
  def test_intermediate_output_bc161; assert_in_delta(0, (worksheet.intermediate_output_bc161||0), 0.001); end
  def test_intermediate_output_bd161; assert_in_delta(0, (worksheet.intermediate_output_bd161||0), 0.001); end
  def test_intermediate_output_be161; assert_in_delta(0, (worksheet.intermediate_output_be161||0), 0.001); end
  def test_intermediate_output_bf161; assert_in_delta(0, (worksheet.intermediate_output_bf161||0), 0.001); end
  def test_intermediate_output_bg161; assert_in_delta(0, (worksheet.intermediate_output_bg161||0), 0.001); end
  def test_intermediate_output_bh161; assert_in_delta(0, (worksheet.intermediate_output_bh161||0), 0.001); end
  def test_intermediate_output_c162; assert_equal("V", worksheet.intermediate_output_c162); end
  def test_intermediate_output_f162; assert_equal("Bioenergy", worksheet.intermediate_output_f162); end
  def test_intermediate_output_ay162; assert_in_epsilon(-10.021493683731482, worksheet.intermediate_output_ay162, 0.001); end
  def test_intermediate_output_az162; assert_in_epsilon(-10.394982968343585, worksheet.intermediate_output_az162, 0.001); end
  def test_intermediate_output_ba162; assert_in_epsilon(-16.88637658177198, worksheet.intermediate_output_ba162, 0.001); end
  def test_intermediate_output_bb162; assert_in_epsilon(-30.022779685867846, worksheet.intermediate_output_bb162, 0.001); end
  def test_intermediate_output_bc162; assert_in_epsilon(-44.86995985734363, worksheet.intermediate_output_bc162, 0.001); end
  def test_intermediate_output_bd162; assert_in_epsilon(-52.44861382468615, worksheet.intermediate_output_bd162, 0.001); end
  def test_intermediate_output_be162; assert_in_epsilon(-58.46290902572321, worksheet.intermediate_output_be162, 0.001); end
  def test_intermediate_output_bf162; assert_in_epsilon(-66.61479887760416, worksheet.intermediate_output_bf162, 0.001); end
  def test_intermediate_output_bg162; assert_in_epsilon(-76.88238463928339, worksheet.intermediate_output_bg162, 0.001); end
  def test_intermediate_output_bh162; assert_in_epsilon(-82.6340093565, worksheet.intermediate_output_bh162, 0.001); end
  def test_intermediate_output_c163; assert_equal("VI", worksheet.intermediate_output_c163); end
  def test_intermediate_output_f163; assert_equal("Agriculture and waste", worksheet.intermediate_output_f163); end
  def test_intermediate_output_ay163; assert_in_epsilon(65.85811374101542, worksheet.intermediate_output_ay163, 0.001); end
  def test_intermediate_output_az163; assert_in_epsilon(61.726314350302, worksheet.intermediate_output_az163, 0.001); end
  def test_intermediate_output_ba163; assert_in_epsilon(59.44267852973656, worksheet.intermediate_output_ba163, 0.001); end
  def test_intermediate_output_bb163; assert_in_epsilon(56.47249484135519, worksheet.intermediate_output_bb163, 0.001); end
  def test_intermediate_output_bc163; assert_in_epsilon(55.15659403052635, worksheet.intermediate_output_bc163, 0.001); end
  def test_intermediate_output_bd163; assert_in_epsilon(51.93742977694505, worksheet.intermediate_output_bd163, 0.001); end
  def test_intermediate_output_be163; assert_in_epsilon(48.88975256592226, worksheet.intermediate_output_be163, 0.001); end
  def test_intermediate_output_bf163; assert_in_epsilon(44.62598486281131, worksheet.intermediate_output_bf163, 0.001); end
  def test_intermediate_output_bg163; assert_in_epsilon(40.23569270987971, worksheet.intermediate_output_bg163, 0.001); end
  def test_intermediate_output_bh163; assert_in_epsilon(36.62073896084191, worksheet.intermediate_output_bh163, 0.001); end
  def test_intermediate_output_c164; assert_equal("VII", worksheet.intermediate_output_c164); end
  def test_intermediate_output_f164; assert_equal("Electricity distribution, storage, and balancing", worksheet.intermediate_output_f164); end
  def test_intermediate_output_ay164; assert_in_delta(0, (worksheet.intermediate_output_ay164||0), 0.001); end
  def test_intermediate_output_az164; assert_in_delta(0, (worksheet.intermediate_output_az164||0), 0.001); end
  def test_intermediate_output_ba164; assert_in_delta(0, (worksheet.intermediate_output_ba164||0), 0.001); end
  def test_intermediate_output_bb164; assert_in_delta(0.1978236166961614, worksheet.intermediate_output_bb164, 0.001); end
  def test_intermediate_output_bc164; assert_in_delta(0.5869867562088327, worksheet.intermediate_output_bc164, 0.001); end
  def test_intermediate_output_bd164; assert_in_delta(0.42264574117323006, worksheet.intermediate_output_bd164, 0.001); end
  def test_intermediate_output_be164; assert_in_delta(0.027777395941997036, worksheet.intermediate_output_be164, 0.001); end
  def test_intermediate_output_bf164; assert_in_delta(0, (worksheet.intermediate_output_bf164||0), 0.001); end
  def test_intermediate_output_bg164; assert_in_delta(0, (worksheet.intermediate_output_bg164||0), 0.001); end
  def test_intermediate_output_bh164; assert_in_delta(0, (worksheet.intermediate_output_bh164||0), 0.001); end
  def test_intermediate_output_c165; assert_equal("VIII", worksheet.intermediate_output_c165); end
  def test_intermediate_output_f165; assert_equal("H2 Production", worksheet.intermediate_output_f165); end
  def test_intermediate_output_ay165; assert_in_delta(0, (worksheet.intermediate_output_ay165||0), 0.001); end
  def test_intermediate_output_az165; assert_in_delta(0, (worksheet.intermediate_output_az165||0), 0.001); end
  def test_intermediate_output_ba165; assert_in_delta(0, (worksheet.intermediate_output_ba165||0), 0.001); end
  def test_intermediate_output_bb165; assert_in_delta(0, (worksheet.intermediate_output_bb165||0), 0.001); end
  def test_intermediate_output_bc165; assert_in_delta(0, (worksheet.intermediate_output_bc165||0), 0.001); end
  def test_intermediate_output_bd165; assert_in_delta(0, (worksheet.intermediate_output_bd165||0), 0.001); end
  def test_intermediate_output_be165; assert_in_delta(0, (worksheet.intermediate_output_be165||0), 0.001); end
  def test_intermediate_output_bf165; assert_in_delta(0, (worksheet.intermediate_output_bf165||0), 0.001); end
  def test_intermediate_output_bg165; assert_in_delta(0, (worksheet.intermediate_output_bg165||0), 0.001); end
  def test_intermediate_output_bh165; assert_in_delta(0, (worksheet.intermediate_output_bh165||0), 0.001); end
  def test_intermediate_output_c166; assert_equal("IX", worksheet.intermediate_output_c166); end
  def test_intermediate_output_f166; assert_equal("Heating", worksheet.intermediate_output_f166); end
  def test_intermediate_output_ay166; assert_in_epsilon(84.46444733080013, worksheet.intermediate_output_ay166, 0.001); end
  def test_intermediate_output_az166; assert_in_epsilon(79.98115594279352, worksheet.intermediate_output_az166, 0.001); end
  def test_intermediate_output_ba166; assert_in_epsilon(70.75401598873458, worksheet.intermediate_output_ba166, 0.001); end
  def test_intermediate_output_bb166; assert_in_epsilon(62.57083404394584, worksheet.intermediate_output_bb166, 0.001); end
  def test_intermediate_output_bc166; assert_in_epsilon(54.551505065965195, worksheet.intermediate_output_bc166, 0.001); end
  def test_intermediate_output_bd166; assert_in_epsilon(46.580421006102796, worksheet.intermediate_output_bd166, 0.001); end
  def test_intermediate_output_be166; assert_in_epsilon(38.64498985052447, worksheet.intermediate_output_be166, 0.001); end
  def test_intermediate_output_bf166; assert_in_epsilon(30.782467649746472, worksheet.intermediate_output_bf166, 0.001); end
  def test_intermediate_output_bg166; assert_in_epsilon(22.981473466412883, worksheet.intermediate_output_bg166, 0.001); end
  def test_intermediate_output_bh166; assert_in_epsilon(15.201429962307152, worksheet.intermediate_output_bh166, 0.001); end
  def test_intermediate_output_c167; assert_equal("X", worksheet.intermediate_output_c167); end
  def test_intermediate_output_f167; assert_equal("Lighting and appliances", worksheet.intermediate_output_f167); end
  def test_intermediate_output_ay167; assert_in_epsilon(3.1419939090704254, worksheet.intermediate_output_ay167, 0.001); end
  def test_intermediate_output_az167; assert_in_epsilon(2.985864672099191, worksheet.intermediate_output_az167, 0.001); end
  def test_intermediate_output_ba167; assert_in_epsilon(2.698303476875676, worksheet.intermediate_output_ba167, 0.001); end
  def test_intermediate_output_bb167; assert_in_epsilon(2.4313721953666896, worksheet.intermediate_output_bb167, 0.001); end
  def test_intermediate_output_bc167; assert_in_epsilon(2.1851202345495215, worksheet.intermediate_output_bc167, 0.001); end
  def test_intermediate_output_bd167; assert_in_epsilon(1.955592681511028, worksheet.intermediate_output_bd167, 0.001); end
  def test_intermediate_output_be167; assert_in_epsilon(1.726106993834986, worksheet.intermediate_output_be167, 0.001); end
  def test_intermediate_output_bf167; assert_in_epsilon(1.505028253071514, worksheet.intermediate_output_bf167, 0.001); end
  def test_intermediate_output_bg167; assert_in_epsilon(1.295559295836741, worksheet.intermediate_output_bg167, 0.001); end
  def test_intermediate_output_bh167; assert_in_epsilon(1.0973530246034526, worksheet.intermediate_output_bh167, 0.001); end
  def test_intermediate_output_c168; assert_equal("XI", worksheet.intermediate_output_c168); end
  def test_intermediate_output_f168; assert_equal("Industry", worksheet.intermediate_output_f168); end
  def test_intermediate_output_ay168; assert_in_epsilon(93.41484291354766, worksheet.intermediate_output_ay168, 0.001); end
  def test_intermediate_output_az168; assert_in_epsilon(88.5848480602058, worksheet.intermediate_output_az168, 0.001); end
  def test_intermediate_output_ba168; assert_in_epsilon(81.10652830701918, worksheet.intermediate_output_ba168, 0.001); end
  def test_intermediate_output_bb168; assert_in_epsilon(73.94574900451792, worksheet.intermediate_output_bb168, 0.001); end
  def test_intermediate_output_bc168; assert_in_epsilon(67.43778847065525, worksheet.intermediate_output_bc168, 0.001); end
  def test_intermediate_output_bd168; assert_in_epsilon(61.25582933282064, worksheet.intermediate_output_bd168, 0.001); end
  def test_intermediate_output_be168; assert_in_epsilon(55.210211472534404, worksheet.intermediate_output_be168, 0.001); end
  def test_intermediate_output_bf168; assert_in_epsilon(47.60004084568557, worksheet.intermediate_output_bf168, 0.001); end
  def test_intermediate_output_bg168; assert_in_epsilon(39.58804063858803, worksheet.intermediate_output_bg168, 0.001); end
  def test_intermediate_output_bh168; assert_in_epsilon(30.527564438683015, worksheet.intermediate_output_bh168, 0.001); end
  def test_intermediate_output_c169; assert_equal("XII", worksheet.intermediate_output_c169); end
  def test_intermediate_output_f169; assert_equal("Transport", worksheet.intermediate_output_f169); end
  def test_intermediate_output_ay169; assert_in_epsilon(186.72938294460735, worksheet.intermediate_output_ay169, 0.001); end
  def test_intermediate_output_az169; assert_in_epsilon(176.43398297536388, worksheet.intermediate_output_az169, 0.001); end
  def test_intermediate_output_ba169; assert_in_epsilon(158.43414524291305, worksheet.intermediate_output_ba169, 0.001); end
  def test_intermediate_output_bb169; assert_in_epsilon(135.51330730975303, worksheet.intermediate_output_bb169, 0.001); end
  def test_intermediate_output_bc169; assert_in_epsilon(105.26127705600203, worksheet.intermediate_output_bc169, 0.001); end
  def test_intermediate_output_bd169; assert_in_epsilon(80.22227868198101, worksheet.intermediate_output_bd169, 0.001); end
  def test_intermediate_output_be169; assert_in_epsilon(71.41104344248885, worksheet.intermediate_output_be169, 0.001); end
  def test_intermediate_output_bf169; assert_in_epsilon(63.08334676506028, worksheet.intermediate_output_bf169, 0.001); end
  def test_intermediate_output_bg169; assert_in_epsilon(53.92314991621783, worksheet.intermediate_output_bg169, 0.001); end
  def test_intermediate_output_bh169; assert_in_epsilon(45.57158369447035, worksheet.intermediate_output_bh169, 0.001); end
  def test_intermediate_output_c170; assert_equal("XIII", worksheet.intermediate_output_c170); end
  def test_intermediate_output_f170; assert_equal("Food consumption [UNUSED]", worksheet.intermediate_output_f170); end
  def test_intermediate_output_ay170; assert_in_delta(0, (worksheet.intermediate_output_ay170||0), 0.001); end
  def test_intermediate_output_az170; assert_in_delta(0, (worksheet.intermediate_output_az170||0), 0.001); end
  def test_intermediate_output_ba170; assert_in_delta(0, (worksheet.intermediate_output_ba170||0), 0.001); end
  def test_intermediate_output_bb170; assert_in_delta(0, (worksheet.intermediate_output_bb170||0), 0.001); end
  def test_intermediate_output_bc170; assert_in_delta(0, (worksheet.intermediate_output_bc170||0), 0.001); end
  def test_intermediate_output_bd170; assert_in_delta(0, (worksheet.intermediate_output_bd170||0), 0.001); end
  def test_intermediate_output_be170; assert_in_delta(0, (worksheet.intermediate_output_be170||0), 0.001); end
  def test_intermediate_output_bf170; assert_in_delta(0, (worksheet.intermediate_output_bf170||0), 0.001); end
  def test_intermediate_output_bg170; assert_in_delta(0, (worksheet.intermediate_output_bg170||0), 0.001); end
  def test_intermediate_output_bh170; assert_in_delta(0, (worksheet.intermediate_output_bh170||0), 0.001); end
  def test_intermediate_output_c171; assert_equal("XIV", worksheet.intermediate_output_c171); end
  def test_intermediate_output_f171; assert_equal("Geosequestration", worksheet.intermediate_output_f171); end
  def test_intermediate_output_ay171; assert_in_delta(0, (worksheet.intermediate_output_ay171||0), 0.001); end
  def test_intermediate_output_az171; assert_in_delta(0, (worksheet.intermediate_output_az171||0), 0.001); end
  def test_intermediate_output_ba171; assert_in_delta(0, (worksheet.intermediate_output_ba171||0), 0.001); end
  def test_intermediate_output_bb171; assert_in_delta(0, (worksheet.intermediate_output_bb171||0), 0.001); end
  def test_intermediate_output_bc171; assert_in_delta(0, (worksheet.intermediate_output_bc171||0), 0.001); end
  def test_intermediate_output_bd171; assert_in_delta(0, (worksheet.intermediate_output_bd171||0), 0.001); end
  def test_intermediate_output_be171; assert_in_delta(0, (worksheet.intermediate_output_be171||0), 0.001); end
  def test_intermediate_output_bf171; assert_in_delta(0, (worksheet.intermediate_output_bf171||0), 0.001); end
  def test_intermediate_output_bg171; assert_in_delta(0, (worksheet.intermediate_output_bg171||0), 0.001); end
  def test_intermediate_output_bh171; assert_in_delta(0, (worksheet.intermediate_output_bh171||0), 0.001); end
  def test_intermediate_output_c172; assert_equal("XV", worksheet.intermediate_output_c172); end
  def test_intermediate_output_f172; assert_equal("Fossil fuel production", worksheet.intermediate_output_f172); end
  def test_intermediate_output_ay172; assert_in_epsilon(34.39920743834843, worksheet.intermediate_output_ay172, 0.001); end
  def test_intermediate_output_az172; assert_in_epsilon(30.602465905393835, worksheet.intermediate_output_az172, 0.001); end
  def test_intermediate_output_ba172; assert_in_epsilon(27.16607969346755, worksheet.intermediate_output_ba172, 0.001); end
  def test_intermediate_output_bb172; assert_in_epsilon(23.96536083310943, worksheet.intermediate_output_bb172, 0.001); end
  def test_intermediate_output_bc172; assert_in_epsilon(21.46034573033397, worksheet.intermediate_output_bc172, 0.001); end
  def test_intermediate_output_bd172; assert_in_epsilon(18.16434836936553, worksheet.intermediate_output_bd172, 0.001); end
  def test_intermediate_output_be172; assert_in_epsilon(16.664503293983817, worksheet.intermediate_output_be172, 0.001); end
  def test_intermediate_output_bf172; assert_in_epsilon(15.503951765450198, worksheet.intermediate_output_bf172, 0.001); end
  def test_intermediate_output_bg172; assert_in_epsilon(14.605939115684409, worksheet.intermediate_output_bg172, 0.001); end
  def test_intermediate_output_bh172; assert_in_epsilon(13.91107404566177, worksheet.intermediate_output_bh172, 0.001); end
  def test_intermediate_output_c173; assert_equal("XVI", worksheet.intermediate_output_c173); end
  def test_intermediate_output_f173; assert_equal("Transfers", worksheet.intermediate_output_f173); end
  def test_intermediate_output_ay173; assert_in_epsilon(4.370651364088464, worksheet.intermediate_output_ay173, 0.001); end
  def test_intermediate_output_az173; assert_in_epsilon(3.9884096343935354, worksheet.intermediate_output_az173, 0.001); end
  def test_intermediate_output_ba173; assert_in_epsilon(3.40289483579648, worksheet.intermediate_output_ba173, 0.001); end
  def test_intermediate_output_bb173; assert_in_epsilon(2.527011482125629, worksheet.intermediate_output_bb173, 0.001); end
  def test_intermediate_output_bc173; assert_in_epsilon(1.7307113189612158, worksheet.intermediate_output_bc173, 0.001); end
  def test_intermediate_output_bd173; assert_in_epsilon(1.0930748982266616, worksheet.intermediate_output_bd173, 0.001); end
  def test_intermediate_output_be173; assert_in_delta(0.7948502006267149, worksheet.intermediate_output_be173, 0.001); end
  def test_intermediate_output_bf173; assert_in_delta(0.5017339496671661, worksheet.intermediate_output_bf173, 0.001); end
  def test_intermediate_output_bg173; assert_in_delta(0.2181314992790577, worksheet.intermediate_output_bg173, 0.001); end
  def test_intermediate_output_bh173; assert_in_delta(0, (worksheet.intermediate_output_bh173||0), 0.001); end
  def test_intermediate_output_c174; assert_equal("XVII", worksheet.intermediate_output_c174); end
  def test_intermediate_output_f174; assert_equal("District heating", worksheet.intermediate_output_f174); end
  def test_intermediate_output_ay174; assert_in_delta(0, (worksheet.intermediate_output_ay174||0), 0.001); end
  def test_intermediate_output_az174; assert_in_delta(0, (worksheet.intermediate_output_az174||0), 0.001); end
  def test_intermediate_output_ba174; assert_in_delta(0, (worksheet.intermediate_output_ba174||0), 0.001); end
  def test_intermediate_output_bb174; assert_in_delta(0, (worksheet.intermediate_output_bb174||0), 0.001); end
  def test_intermediate_output_bc174; assert_in_delta(0, (worksheet.intermediate_output_bc174||0), 0.001); end
  def test_intermediate_output_bd174; assert_in_delta(0, (worksheet.intermediate_output_bd174||0), 0.001); end
  def test_intermediate_output_be174; assert_in_delta(0, (worksheet.intermediate_output_be174||0), 0.001); end
  def test_intermediate_output_bf174; assert_in_delta(0, (worksheet.intermediate_output_bf174||0), 0.001); end
  def test_intermediate_output_bg174; assert_in_delta(0, (worksheet.intermediate_output_bg174||0), 0.001); end
  def test_intermediate_output_bh174; assert_in_delta(0, (worksheet.intermediate_output_bh174||0), 0.001); end
  def test_intermediate_output_f175; assert_equal("Total", worksheet.intermediate_output_f175); end
  def test_intermediate_output_ba158; assert_in_epsilon(141.91138458640393, worksheet.intermediate_output_ba158, 0.001); end
  def test_intermediate_output_ba175; assert_in_epsilon(528.029654079175, worksheet.intermediate_output_ba175, 0.001); end
  def test_intermediate_output_bb158; assert_in_epsilon(92.43194839705217, worksheet.intermediate_output_bb158, 0.001); end
  def test_intermediate_output_bb175; assert_in_epsilon(420.03312203805416, worksheet.intermediate_output_bb175, 0.001); end
  def test_intermediate_output_bc158; assert_in_epsilon(39.90606304438031, worksheet.intermediate_output_bc158, 0.001); end
  def test_intermediate_output_bc175; assert_in_epsilon(303.406431850239, worksheet.intermediate_output_bc175, 0.001); end
  def test_intermediate_output_bd158; assert_in_delta(0.7877019308113997, worksheet.intermediate_output_bd158, 0.001); end
  def test_intermediate_output_bd175; assert_in_epsilon(209.9707085942512, worksheet.intermediate_output_bd175, 0.001); end
  def test_intermediate_output_be158; assert_in_delta(0.7717870595129526, worksheet.intermediate_output_be158, 0.001); end
  def test_intermediate_output_be175; assert_in_epsilon(175.67811324964723, worksheet.intermediate_output_be175, 0.001); end
  def test_intermediate_output_bf158; assert_in_delta(0.7701418501958948, worksheet.intermediate_output_bf158, 0.001); end
  def test_intermediate_output_bf175; assert_in_epsilon(137.75789706408426, worksheet.intermediate_output_bf175, 0.001); end
  def test_intermediate_output_bg158; assert_in_delta(0.754912566475336, worksheet.intermediate_output_bg158, 0.001); end
  def test_intermediate_output_bg175; assert_in_epsilon(96.72051456909061, worksheet.intermediate_output_bg175, 0.001); end
  def test_intermediate_output_bh158; assert_in_delta(0.7402777421356674, worksheet.intermediate_output_bh158, 0.001); end
  def test_intermediate_output_bh175; assert_in_epsilon(61.03601251220332, worksheet.intermediate_output_bh175, 0.001); end
  def test_intermediate_output_f176; assert_equal("Emissions in the time period (up to and including year above)", worksheet.intermediate_output_f176); end
  def test_intermediate_output_ba176; assert_in_epsilon(2804.5131111377686, worksheet.intermediate_output_ba176, 0.001); end
  def test_intermediate_output_bb176; assert_in_epsilon(2316.158674272512, worksheet.intermediate_output_bb176, 0.001); end
  def test_intermediate_output_bc176; assert_in_epsilon(1750.2855396268253, worksheet.intermediate_output_bc176, 0.001); end
  def test_intermediate_output_bd176; assert_in_epsilon(1236.7249894832316, worksheet.intermediate_output_bd176, 0.001); end
  def test_intermediate_output_be176; assert_in_epsilon(946.9757569374441, worksheet.intermediate_output_be176, 0.001); end
  def test_intermediate_output_bf176; assert_in_epsilon(764.6299176915472, worksheet.intermediate_output_bf176, 0.001); end
  def test_intermediate_output_bg176; assert_in_epsilon(565.6773378354403, worksheet.intermediate_output_bg176, 0.001); end
  def test_intermediate_output_bh176; assert_in_epsilon(376.5490666747912, worksheet.intermediate_output_bh176, 0.001); end
  def test_intermediate_output_bi176; assert_equal("REFERENCED - All costs", worksheet.intermediate_output_bi176); end
  def test_intermediate_output_c177; assert_equal("Modelled emissions", worksheet.intermediate_output_c177); end
  def test_intermediate_output_f177; assert_equal("Cumulative emissions", worksheet.intermediate_output_f177); end
  def test_intermediate_output_ay158; assert_in_epsilon(200.17416495129552, worksheet.intermediate_output_ay158, 0.001); end
  def test_intermediate_output_ay175; assert_in_epsilon(662.5313109090418, worksheet.intermediate_output_ay175, 0.001); end
  def test_intermediate_output_az158; assert_in_epsilon(176.3040158779136, worksheet.intermediate_output_az158, 0.001); end
  def test_intermediate_output_az175; assert_in_epsilon(610.2120744501217, worksheet.intermediate_output_az175, 0.001); end
  def test_intermediate_output_az176; assert_in_epsilon(2493.1675342594067, worksheet.intermediate_output_az176, 0.001); end
  def test_intermediate_output_az177; assert_in_epsilon(2493.1675342594067, worksheet.intermediate_output_az177, 0.001); end
  def test_intermediate_output_ba177; assert_in_epsilon(5297.680645397175, worksheet.intermediate_output_ba177, 0.001); end
  def test_intermediate_output_bb177; assert_in_epsilon(7613.839319669687, worksheet.intermediate_output_bb177, 0.001); end
  def test_intermediate_output_bc177; assert_in_epsilon(9364.124859296513, worksheet.intermediate_output_bc177, 0.001); end
  def test_intermediate_output_bd177; assert_in_epsilon(10600.849848779744, worksheet.intermediate_output_bd177, 0.001); end
  def test_intermediate_output_be177; assert_in_epsilon(11547.825605717187, worksheet.intermediate_output_be177, 0.001); end
  def test_intermediate_output_bf177; assert_in_epsilon(12312.455523408735, worksheet.intermediate_output_bf177, 0.001); end
  def test_intermediate_output_bg177; assert_in_epsilon(12878.132861244176, worksheet.intermediate_output_bg177, 0.001); end
  def test_intermediate_output_bh177; assert_in_epsilon(13254.681927918968, worksheet.intermediate_output_bh177, 0.001); end
  def test_intermediate_output_d179; assert_equal("IPCC Sector", worksheet.intermediate_output_d179); end
  def test_intermediate_output_f179; assert_equal("Actuals, GHG Inv.", worksheet.intermediate_output_f179); end
  def test_intermediate_output_ab179; assert_in_epsilon(1990, worksheet.intermediate_output_ab179, 0.001); end
  def test_intermediate_output_ac179; assert_in_epsilon(1991, worksheet.intermediate_output_ac179, 0.001); end
  def test_intermediate_output_ad179; assert_in_epsilon(1992, worksheet.intermediate_output_ad179, 0.001); end
  def test_intermediate_output_ae179; assert_in_epsilon(1993, worksheet.intermediate_output_ae179, 0.001); end
  def test_intermediate_output_af179; assert_in_epsilon(1994, worksheet.intermediate_output_af179, 0.001); end
  def test_intermediate_output_ag179; assert_in_epsilon(1995, worksheet.intermediate_output_ag179, 0.001); end
  def test_intermediate_output_ah179; assert_in_epsilon(1996, worksheet.intermediate_output_ah179, 0.001); end
  def test_intermediate_output_ai179; assert_in_epsilon(1997, worksheet.intermediate_output_ai179, 0.001); end
  def test_intermediate_output_aj179; assert_in_epsilon(1998, worksheet.intermediate_output_aj179, 0.001); end
  def test_intermediate_output_ak179; assert_in_epsilon(1999, worksheet.intermediate_output_ak179, 0.001); end
  def test_intermediate_output_al179; assert_in_epsilon(2000, worksheet.intermediate_output_al179, 0.001); end
  def test_intermediate_output_am179; assert_in_epsilon(2001, worksheet.intermediate_output_am179, 0.001); end
  def test_intermediate_output_an179; assert_in_epsilon(2002, worksheet.intermediate_output_an179, 0.001); end
  def test_intermediate_output_ao179; assert_in_epsilon(2003, worksheet.intermediate_output_ao179, 0.001); end
  def test_intermediate_output_ap179; assert_in_epsilon(2004, worksheet.intermediate_output_ap179, 0.001); end
  def test_intermediate_output_aq179; assert_in_epsilon(2005, worksheet.intermediate_output_aq179, 0.001); end
  def test_intermediate_output_ar179; assert_in_epsilon(2006, worksheet.intermediate_output_ar179, 0.001); end
  def test_intermediate_output_as179; assert_in_epsilon(2007, worksheet.intermediate_output_as179, 0.001); end
  def test_intermediate_output_at179; assert_in_epsilon(2008, worksheet.intermediate_output_at179, 0.001); end
  def test_intermediate_output_au179; assert_in_epsilon(2009, worksheet.intermediate_output_au179, 0.001); end
  def test_intermediate_output_av179; assert_in_epsilon(2010, worksheet.intermediate_output_av179, 0.001); end
  def test_intermediate_output_bh179; assert_equal("Mt CO2e", worksheet.intermediate_output_bh179); end
  def test_intermediate_output_c180; assert_equal("1A", worksheet.intermediate_output_c180); end
  def test_intermediate_output_d180; assert_equal("Fuel Combustion", worksheet.intermediate_output_d180); end
  def test_intermediate_output_f180; assert_in_epsilon(532.6387375112939, worksheet.intermediate_output_f180, 0.001); end
  def test_intermediate_output_ab180; assert_in_epsilon(574.3209547083816, worksheet.intermediate_output_ab180, 0.001); end
  def test_intermediate_output_ac180; assert_in_epsilon(584.0743742824582, worksheet.intermediate_output_ac180, 0.001); end
  def test_intermediate_output_ad180; assert_in_epsilon(567.775629804286, worksheet.intermediate_output_ad180, 0.001); end
  def test_intermediate_output_ae180; assert_in_epsilon(553.3375369132328, worksheet.intermediate_output_ae180, 0.001); end
  def test_intermediate_output_af180; assert_in_epsilon(546.2326953595707, worksheet.intermediate_output_af180, 0.001); end
  def test_intermediate_output_ag180; assert_in_epsilon(536.0203388339339, worksheet.intermediate_output_ag180, 0.001); end
  def test_intermediate_output_ah180; assert_in_epsilon(556.6263616262188, worksheet.intermediate_output_ah180, 0.001); end
  def test_intermediate_output_ai180; assert_in_epsilon(534.7489129925543, worksheet.intermediate_output_ai180, 0.001); end
  def test_intermediate_output_aj180; assert_in_epsilon(538.7547344689547, worksheet.intermediate_output_aj180, 0.001); end
  def test_intermediate_output_ak180; assert_in_epsilon(530.6656631394994, worksheet.intermediate_output_ak180, 0.001); end
  def test_intermediate_output_al180; assert_in_epsilon(539.0004989586873, worksheet.intermediate_output_al180, 0.001); end
  def test_intermediate_output_am180; assert_in_epsilon(552.1914120311419, worksheet.intermediate_output_am180, 0.001); end
  def test_intermediate_output_an180; assert_in_epsilon(536.2169387908792, worksheet.intermediate_output_an180, 0.001); end
  def test_intermediate_output_ao180; assert_in_epsilon(545.6418260281304, worksheet.intermediate_output_ao180, 0.001); end
  def test_intermediate_output_ap180; assert_in_epsilon(546.9152625041492, worksheet.intermediate_output_ap180, 0.001); end
  def test_intermediate_output_aq180; assert_in_epsilon(542.8024086774741, worksheet.intermediate_output_aq180, 0.001); end
  def test_intermediate_output_ar180; assert_in_epsilon(542.6566863260153, worksheet.intermediate_output_ar180, 0.001); end
  def test_intermediate_output_as180; assert_in_epsilon(534.0257455298923, worksheet.intermediate_output_as180, 0.001); end
  def test_intermediate_output_at180; assert_in_epsilon(522.9479251564137, worksheet.intermediate_output_at180, 0.001); end
  def test_intermediate_output_au180; assert_in_epsilon(475.60178758150977, worksheet.intermediate_output_au180, 0.001); end
  def test_intermediate_output_av180; assert_in_epsilon(492.7502706136072, worksheet.intermediate_output_av180, 0.001); end
  def test_intermediate_output_aw180; assert_equal("UNFCCC Inventory Submissions 2012 [GBR-2012-2010-v1.2.xls] Summary2 'SUMMARY REPORT FOR CO2 EQUIVALENT EMISSIONS' - http://unfccc.int/national_reports/annex_i_ghg_inventories/national_inventories_submissions/items/6598.php", worksheet.intermediate_output_aw180); end
  def test_intermediate_output_ay180; assert_in_epsilon(515.4693860277856, worksheet.intermediate_output_ay180, 0.001); end
  def test_intermediate_output_az180; assert_in_epsilon(471.53986331242146, worksheet.intermediate_output_az180, 0.001); end
  def test_intermediate_output_ba180; assert_in_epsilon(409.0963466943476, worksheet.intermediate_output_ba180, 0.001); end
  def test_intermediate_output_bb180; assert_in_epsilon(330.74163557779053, worksheet.intermediate_output_bb180, 0.001); end
  def test_intermediate_output_bc180; assert_in_epsilon(237.34531210085814, worksheet.intermediate_output_bc180, 0.001); end
  def test_intermediate_output_bd180; assert_in_epsilon(162.80650576569883, worksheet.intermediate_output_bd180, 0.001); end
  def test_intermediate_output_be180; assert_in_epsilon(143.9761733836906, worksheet.intermediate_output_be180, 0.001); end
  def test_intermediate_output_bf180; assert_in_epsilon(125.20112343328002, worksheet.intermediate_output_bf180, 0.001); end
  def test_intermediate_output_bg180; assert_in_epsilon(106.06938689516566, worksheet.intermediate_output_bg180, 0.001); end
  def test_intermediate_output_bh180; assert_in_epsilon(88.21231238082306, worksheet.intermediate_output_bh180, 0.001); end
  def test_intermediate_output_c181; assert_equal("1B", worksheet.intermediate_output_c181); end
  def test_intermediate_output_d181; assert_equal("Fugitive Emissions from Fuels", worksheet.intermediate_output_d181); end
  def test_intermediate_output_f181; assert_in_epsilon(13.3650064404099, worksheet.intermediate_output_f181, 0.001); end
  def test_intermediate_output_ab181; assert_in_epsilon(35.28336958104466, worksheet.intermediate_output_ab181, 0.001); end
  def test_intermediate_output_ac181; assert_in_epsilon(35.182983866091305, worksheet.intermediate_output_ac181, 0.001); end
  def test_intermediate_output_ad181; assert_in_epsilon(35.289835728726885, worksheet.intermediate_output_ad181, 0.001); end
  def test_intermediate_output_ae181; assert_in_epsilon(34.03101350740516, worksheet.intermediate_output_ae181, 0.001); end
  def test_intermediate_output_af181; assert_in_epsilon(28.32476108866633, worksheet.intermediate_output_af181, 0.001); end
  def test_intermediate_output_ag181; assert_in_epsilon(31.042353791967415, worksheet.intermediate_output_ag181, 0.001); end
  def test_intermediate_output_ah181; assert_in_epsilon(30.473334583513346, worksheet.intermediate_output_ah181, 0.001); end
  def test_intermediate_output_ai181; assert_in_epsilon(27.620233281205483, worksheet.intermediate_output_ai181, 0.001); end
  def test_intermediate_output_aj181; assert_in_epsilon(25.397431061510737, worksheet.intermediate_output_aj181, 0.001); end
  def test_intermediate_output_ak181; assert_in_epsilon(22.308283841071088, worksheet.intermediate_output_ak181, 0.001); end
  def test_intermediate_output_al181; assert_in_epsilon(20.536975736659553, worksheet.intermediate_output_al181, 0.001); end
  def test_intermediate_output_am181; assert_in_epsilon(20.019669009851356, worksheet.intermediate_output_am181, 0.001); end
  def test_intermediate_output_an181; assert_in_epsilon(19.40477630089951, worksheet.intermediate_output_an181, 0.001); end
  def test_intermediate_output_ao181; assert_in_epsilon(16.07854267407026, worksheet.intermediate_output_ao181, 0.001); end
  def test_intermediate_output_ap181; assert_in_epsilon(15.736887486965456, worksheet.intermediate_output_ap181, 0.001); end
  def test_intermediate_output_aq181; assert_in_epsilon(14.992284178784804, worksheet.intermediate_output_aq181, 0.001); end
  def test_intermediate_output_ar181; assert_in_epsilon(13.51092325781543, worksheet.intermediate_output_ar181, 0.001); end
  def test_intermediate_output_as181; assert_in_epsilon(12.929712235090694, worksheet.intermediate_output_as181, 0.001); end
  def test_intermediate_output_at181; assert_in_epsilon(11.879194090477329, worksheet.intermediate_output_at181, 0.001); end
  def test_intermediate_output_au181; assert_in_epsilon(12.040107260360204, worksheet.intermediate_output_au181, 0.001); end
  def test_intermediate_output_av181; assert_in_epsilon(11.646390385331518, worksheet.intermediate_output_av181, 0.001); end
  def test_intermediate_output_aw181; assert_equal("UNFCCC Inventory Submissions 2012 [GBR-2012-2010-v1.2.xls] Summary2 'SUMMARY REPORT FOR CO2 EQUIVALENT EMISSIONS' - http://unfccc.int/national_reports/annex_i_ghg_inventories/national_inventories_submissions/items/6598.php", worksheet.intermediate_output_aw181); end
  def test_intermediate_output_ay181; assert_in_epsilon(12.10264631136367, worksheet.intermediate_output_ay181, 0.001); end
  def test_intermediate_output_az181; assert_in_epsilon(10.891007436033295, worksheet.intermediate_output_az181, 0.001); end
  def test_intermediate_output_ba181; assert_in_epsilon(9.49303303442067, worksheet.intermediate_output_ba181, 0.001); end
  def test_intermediate_output_bb181; assert_in_epsilon(7.860408553799099, worksheet.intermediate_output_bb181, 0.001); end
  def test_intermediate_output_bc181; assert_in_epsilon(6.471851452550854, worksheet.intermediate_output_bc181, 0.001); end
  def test_intermediate_output_bd181; assert_in_epsilon(4.018273476733729, worksheet.intermediate_output_bd181, 0.001); end
  def test_intermediate_output_be181; assert_in_epsilon(3.3654426727827707, worksheet.intermediate_output_be181, 0.001); end
  def test_intermediate_output_bf181; assert_in_epsilon(2.7979389764077105, worksheet.intermediate_output_bf181, 0.001); end
  def test_intermediate_output_bg181; assert_in_epsilon(2.3020207512677606, worksheet.intermediate_output_bg181, 0.001); end
  def test_intermediate_output_bh181; assert_in_epsilon(1.9196033527551826, worksheet.intermediate_output_bh181, 0.001); end
  def test_intermediate_output_c182; assert_in_delta(1, worksheet.intermediate_output_c182, 0.001); end
  def test_intermediate_output_d182; assert_equal("Fuel Combustion", worksheet.intermediate_output_d182); end
  def test_intermediate_output_f182; assert_in_epsilon(546.0037439517039, worksheet.intermediate_output_f182, 0.001); end
  def test_intermediate_output_ab182; assert_in_epsilon(609.6043242894262, worksheet.intermediate_output_ab182, 0.001); end
  def test_intermediate_output_ac182; assert_in_epsilon(619.2573581485495, worksheet.intermediate_output_ac182, 0.001); end
  def test_intermediate_output_ad182; assert_in_epsilon(603.065465533013, worksheet.intermediate_output_ad182, 0.001); end
  def test_intermediate_output_ae182; assert_in_epsilon(587.368550420638, worksheet.intermediate_output_ae182, 0.001); end
  def test_intermediate_output_af182; assert_in_epsilon(574.5574564482371, worksheet.intermediate_output_af182, 0.001); end
  def test_intermediate_output_ag182; assert_in_epsilon(567.0626926259013, worksheet.intermediate_output_ag182, 0.001); end
  def test_intermediate_output_ah182; assert_in_epsilon(587.0996962097321, worksheet.intermediate_output_ah182, 0.001); end
  def test_intermediate_output_ai182; assert_in_epsilon(562.3691462737597, worksheet.intermediate_output_ai182, 0.001); end
  def test_intermediate_output_aj182; assert_in_epsilon(564.1521655304655, worksheet.intermediate_output_aj182, 0.001); end
  def test_intermediate_output_ak182; assert_in_epsilon(552.9739469805704, worksheet.intermediate_output_ak182, 0.001); end
  def test_intermediate_output_al182; assert_in_epsilon(559.5374746953468, worksheet.intermediate_output_al182, 0.001); end
  def test_intermediate_output_am182; assert_in_epsilon(572.2110810409933, worksheet.intermediate_output_am182, 0.001); end
  def test_intermediate_output_an182; assert_in_epsilon(555.6217150917786, worksheet.intermediate_output_an182, 0.001); end
  def test_intermediate_output_ao182; assert_in_epsilon(561.7203687022006, worksheet.intermediate_output_ao182, 0.001); end
  def test_intermediate_output_ap182; assert_in_epsilon(562.6521499911145, worksheet.intermediate_output_ap182, 0.001); end
  def test_intermediate_output_aq182; assert_in_epsilon(557.794692856259, worksheet.intermediate_output_aq182, 0.001); end
  def test_intermediate_output_ar182; assert_in_epsilon(556.1676095838308, worksheet.intermediate_output_ar182, 0.001); end
  def test_intermediate_output_as182; assert_in_epsilon(546.9554577649831, worksheet.intermediate_output_as182, 0.001); end
  def test_intermediate_output_at182; assert_in_epsilon(534.827119246891, worksheet.intermediate_output_at182, 0.001); end
  def test_intermediate_output_au182; assert_in_epsilon(487.64189484186994, worksheet.intermediate_output_au182, 0.001); end
  def test_intermediate_output_av182; assert_in_epsilon(504.39666099893867, worksheet.intermediate_output_av182, 0.001); end
  def test_intermediate_output_aw182; assert_equal("UNFCCC Inventory Submissions 2012 [GBR-2012-2010-v1.2.xls] Summary2 'SUMMARY REPORT FOR CO2 EQUIVALENT EMISSIONS' - http://unfccc.int/national_reports/annex_i_ghg_inventories/national_inventories_submissions/items/6598.php", worksheet.intermediate_output_aw182); end
  def test_intermediate_output_c183; assert_in_epsilon(2, worksheet.intermediate_output_c183, 0.001); end
  def test_intermediate_output_d183; assert_equal("Industrial Processes", worksheet.intermediate_output_d183); end
  def test_intermediate_output_f183; assert_in_epsilon(27.8913120599484, worksheet.intermediate_output_f183, 0.001); end
  def test_intermediate_output_ab183; assert_in_epsilon(54.14857476869939, worksheet.intermediate_output_ab183, 0.001); end
  def test_intermediate_output_ac183; assert_in_epsilon(52.4759760853303, worksheet.intermediate_output_ac183, 0.001); end
  def test_intermediate_output_ad183; assert_in_epsilon(47.09357259520948, worksheet.intermediate_output_ad183, 0.001); end
  def test_intermediate_output_ae183; assert_in_epsilon(43.78326664990354, worksheet.intermediate_output_ae183, 0.001); end
  def test_intermediate_output_af183; assert_in_epsilon(46.200468631708674, worksheet.intermediate_output_af183, 0.001); end
  def test_intermediate_output_ag183; assert_in_epsilon(46.43810864086563, worksheet.intermediate_output_ag183, 0.001); end
  def test_intermediate_output_ah183; assert_in_epsilon(48.20629279360756, worksheet.intermediate_output_ah183, 0.001); end
  def test_intermediate_output_ai183; assert_in_epsilon(50.50974315789668, worksheet.intermediate_output_ai183, 0.001); end
  def test_intermediate_output_aj183; assert_in_epsilon(48.95561951370075, worksheet.intermediate_output_aj183, 0.001); end
  def test_intermediate_output_ak183; assert_in_epsilon(32.39425526510215, worksheet.intermediate_output_ak183, 0.001); end
  def test_intermediate_output_al183; assert_in_epsilon(31.67702412980407, worksheet.intermediate_output_al183, 0.001); end
  def test_intermediate_output_am183; assert_in_epsilon(30.092795678224793, worksheet.intermediate_output_am183, 0.001); end
  def test_intermediate_output_an183; assert_in_epsilon(28.177211033386556, worksheet.intermediate_output_an183, 0.001); end
  def test_intermediate_output_ao183; assert_in_epsilon(30.02666734078687, worksheet.intermediate_output_ao183, 0.001); end
  def test_intermediate_output_ap183; assert_in_epsilon(30.291978553378527, worksheet.intermediate_output_ap183, 0.001); end
  def test_intermediate_output_aq183; assert_in_epsilon(30.61923542294498, worksheet.intermediate_output_aq183, 0.001); end
  def test_intermediate_output_ar183; assert_in_epsilon(29.927484392152323, worksheet.intermediate_output_ar183, 0.001); end
  def test_intermediate_output_as183; assert_in_epsilon(31.616603644661854, worksheet.intermediate_output_as183, 0.001); end
  def test_intermediate_output_at183; assert_in_epsilon(30.80187951705711, worksheet.intermediate_output_at183, 0.001); end
  def test_intermediate_output_au183; assert_in_epsilon(25.47849294203823, worksheet.intermediate_output_au183, 0.001); end
  def test_intermediate_output_av183; assert_in_epsilon(26.811492537019994, worksheet.intermediate_output_av183, 0.001); end
  def test_intermediate_output_aw183; assert_equal("UNFCCC Inventory Submissions 2012 [GBR-2012-2010-v1.2.xls] Summary2 'SUMMARY REPORT FOR CO2 EQUIVALENT EMISSIONS' - http://unfccc.int/national_reports/annex_i_ghg_inventories/national_inventories_submissions/items/6598.php", worksheet.intermediate_output_aw183); end
  def test_intermediate_output_c184; assert_in_epsilon(3, worksheet.intermediate_output_c184, 0.001); end
  def test_intermediate_output_d184; assert_equal("Solvent and Other Product Use", worksheet.intermediate_output_d184); end
  def test_intermediate_output_f184; assert_in_delta(0, (worksheet.intermediate_output_f184||0), 0.001); end
  def test_intermediate_output_ab184; assert_equal("NE,NO", worksheet.intermediate_output_ab184); end
  def test_intermediate_output_ac184; assert_equal("NE,NO", worksheet.intermediate_output_ac184); end
  def test_intermediate_output_ad184; assert_equal("NE,NO", worksheet.intermediate_output_ad184); end
  def test_intermediate_output_ae184; assert_equal("NE,NO", worksheet.intermediate_output_ae184); end
  def test_intermediate_output_af184; assert_equal("NE,NO", worksheet.intermediate_output_af184); end
  def test_intermediate_output_ag184; assert_equal("NE,NO", worksheet.intermediate_output_ag184); end
  def test_intermediate_output_ah184; assert_equal("NE,NO", worksheet.intermediate_output_ah184); end
  def test_intermediate_output_ai184; assert_equal("NE,NO", worksheet.intermediate_output_ai184); end
  def test_intermediate_output_aj184; assert_equal("NE,NO", worksheet.intermediate_output_aj184); end
  def test_intermediate_output_ak184; assert_equal("NE,NO", worksheet.intermediate_output_ak184); end
  def test_intermediate_output_al184; assert_equal("NE,NO", worksheet.intermediate_output_al184); end
  def test_intermediate_output_am184; assert_equal("NE,NO", worksheet.intermediate_output_am184); end
  def test_intermediate_output_an184; assert_equal("NE,NO", worksheet.intermediate_output_an184); end
  def test_intermediate_output_ao184; assert_equal("NE,NO", worksheet.intermediate_output_ao184); end
  def test_intermediate_output_ap184; assert_equal("NE,NO", worksheet.intermediate_output_ap184); end
  def test_intermediate_output_aq184; assert_equal("NE,NO", worksheet.intermediate_output_aq184); end
  def test_intermediate_output_ar184; assert_equal("NE,NO", worksheet.intermediate_output_ar184); end
  def test_intermediate_output_as184; assert_equal("NE,NO", worksheet.intermediate_output_as184); end
  def test_intermediate_output_at184; assert_equal("NE,NO", worksheet.intermediate_output_at184); end
  def test_intermediate_output_au184; assert_equal("NE,NO", worksheet.intermediate_output_au184); end
  def test_intermediate_output_av184; assert_equal("NE,NO", worksheet.intermediate_output_av184); end
  def test_intermediate_output_aw184; assert_equal("UNFCCC Inventory Submissions 2012 [GBR-2012-2010-v1.2.xls] Summary2 'SUMMARY REPORT FOR CO2 EQUIVALENT EMISSIONS' - http://unfccc.int/national_reports/annex_i_ghg_inventories/national_inventories_submissions/items/6598.php", worksheet.intermediate_output_aw184); end
  def test_intermediate_output_c185; assert_in_epsilon(4, worksheet.intermediate_output_c185, 0.001); end
  def test_intermediate_output_d185; assert_equal("Agriculture", worksheet.intermediate_output_d185); end
  def test_intermediate_output_f185; assert_in_epsilon(43.4591660991799, worksheet.intermediate_output_f185, 0.001); end
  def test_intermediate_output_ab185; assert_in_epsilon(57.50148520668305, worksheet.intermediate_output_ab185, 0.001); end
  def test_intermediate_output_ac185; assert_in_epsilon(57.24644655351287, worksheet.intermediate_output_ac185, 0.001); end
  def test_intermediate_output_ad185; assert_in_epsilon(57.06468640798265, worksheet.intermediate_output_ad185, 0.001); end
  def test_intermediate_output_ae185; assert_in_epsilon(56.34978284842551, worksheet.intermediate_output_ae185, 0.001); end
  def test_intermediate_output_af185; assert_in_epsilon(56.48263422998958, worksheet.intermediate_output_af185, 0.001); end
  def test_intermediate_output_ag185; assert_in_epsilon(56.062993674503744, worksheet.intermediate_output_ag185, 0.001); end
  def test_intermediate_output_ah185; assert_in_epsilon(56.43865050923289, worksheet.intermediate_output_ah185, 0.001); end
  def test_intermediate_output_ai185; assert_in_epsilon(56.199934507252166, worksheet.intermediate_output_ai185, 0.001); end
  def test_intermediate_output_aj185; assert_in_epsilon(55.56381376596924, worksheet.intermediate_output_aj185, 0.001); end
  def test_intermediate_output_ak185; assert_in_epsilon(54.89013786342752, worksheet.intermediate_output_ak185, 0.001); end
  def test_intermediate_output_al185; assert_in_epsilon(52.89330883023328, worksheet.intermediate_output_al185, 0.001); end
  def test_intermediate_output_am185; assert_in_epsilon(50.09449175034138, worksheet.intermediate_output_am185, 0.001); end
  def test_intermediate_output_an185; assert_in_epsilon(50.07904843936754, worksheet.intermediate_output_an185, 0.001); end
  def test_intermediate_output_ao185; assert_in_epsilon(49.64648293369818, worksheet.intermediate_output_ao185, 0.001); end
  def test_intermediate_output_ap185; assert_in_epsilon(49.91256372328529, worksheet.intermediate_output_ap185, 0.001); end
  def test_intermediate_output_aq185; assert_in_epsilon(50.204852733460946, worksheet.intermediate_output_aq185, 0.001); end
  def test_intermediate_output_ar185; assert_in_epsilon(48.57347881134549, worksheet.intermediate_output_ar185, 0.001); end
  def test_intermediate_output_as185; assert_in_epsilon(47.14536110436577, worksheet.intermediate_output_as185, 0.001); end
  def test_intermediate_output_at185; assert_in_epsilon(46.49071243914793, worksheet.intermediate_output_at185, 0.001); end
  def test_intermediate_output_au185; assert_in_epsilon(45.80826374399665, worksheet.intermediate_output_au185, 0.001); end
  def test_intermediate_output_av185; assert_in_epsilon(46.20138331934621, worksheet.intermediate_output_av185, 0.001); end
  def test_intermediate_output_aw185; assert_equal("UNFCCC Inventory Submissions 2012 [GBR-2012-2010-v1.2.xls] Summary2 'SUMMARY REPORT FOR CO2 EQUIVALENT EMISSIONS' - http://unfccc.int/national_reports/annex_i_ghg_inventories/national_inventories_submissions/items/6598.php", worksheet.intermediate_output_aw185); end
  def test_intermediate_output_c186; assert_in_epsilon(5, worksheet.intermediate_output_c186, 0.001); end
  def test_intermediate_output_d186; assert_equal("LULUCF", worksheet.intermediate_output_d186); end
  def test_intermediate_output_f186; assert_in_epsilon(-1.7798396847837301, worksheet.intermediate_output_f186, 0.001); end
  def test_intermediate_output_ab186; assert_in_epsilon(3.893008757281268, worksheet.intermediate_output_ab186, 0.001); end
  def test_intermediate_output_ac186; assert_in_epsilon(3.8686000622628693, worksheet.intermediate_output_ac186, 0.001); end
  def test_intermediate_output_ad186; assert_in_epsilon(3.343314741436101, worksheet.intermediate_output_ad186, 0.001); end
  def test_intermediate_output_ae186; assert_in_epsilon(2.2265845845315693, worksheet.intermediate_output_ae186, 0.001); end
  def test_intermediate_output_af186; assert_in_epsilon(2.0533141148288525, worksheet.intermediate_output_af186, 0.001); end
  def test_intermediate_output_ag186; assert_in_epsilon(2.4654776194817205, worksheet.intermediate_output_ag186, 0.001); end
  def test_intermediate_output_ah186; assert_in_epsilon(2.1813341723246857, worksheet.intermediate_output_ah186, 0.001); end
  def test_intermediate_output_ai186; assert_in_epsilon(1.920070200944781, worksheet.intermediate_output_ai186, 0.001); end
  def test_intermediate_output_aj186; assert_in_epsilon(1.2405726372813575, worksheet.intermediate_output_aj186, 0.001); end
  def test_intermediate_output_ak186; assert_in_epsilon(1.0620443971872269, worksheet.intermediate_output_ak186, 0.001); end
  def test_intermediate_output_al186; assert_in_delta(0.37726047037436505, worksheet.intermediate_output_al186, 0.001); end
  def test_intermediate_output_am186; assert_in_delta(-0.11419377707044237, worksheet.intermediate_output_am186, 0.001); end
  def test_intermediate_output_an186; assert_in_delta(-0.9345905038933172, worksheet.intermediate_output_an186, 0.001); end
  def test_intermediate_output_ao186; assert_in_epsilon(-1.2868015775516333, worksheet.intermediate_output_ao186, 0.001); end
  def test_intermediate_output_ap186; assert_in_epsilon(-2.35792234318885, worksheet.intermediate_output_ap186, 0.001); end
  def test_intermediate_output_aq186; assert_in_epsilon(-2.9449125339525444, worksheet.intermediate_output_aq186, 0.001); end
  def test_intermediate_output_ar186; assert_in_epsilon(-3.09694243630463, worksheet.intermediate_output_ar186, 0.001); end
  def test_intermediate_output_as186; assert_in_epsilon(-3.483645518036744, worksheet.intermediate_output_as186, 0.001); end
  def test_intermediate_output_at186; assert_in_epsilon(-3.882431722717277, worksheet.intermediate_output_at186, 0.001); end
  def test_intermediate_output_au186; assert_in_epsilon(-4.20782838040957, worksheet.intermediate_output_au186, 0.001); end
  def test_intermediate_output_av186; assert_in_epsilon(-3.8423973221854, worksheet.intermediate_output_av186, 0.001); end
  def test_intermediate_output_aw186; assert_equal("UNFCCC Inventory Submissions 2012 [GBR-2012-2010-v1.2.xls] Summary2 'SUMMARY REPORT FOR CO2 EQUIVALENT EMISSIONS' - http://unfccc.int/national_reports/annex_i_ghg_inventories/national_inventories_submissions/items/6598.php", worksheet.intermediate_output_aw186); end
  def test_intermediate_output_c187; assert_in_epsilon(6, worksheet.intermediate_output_c187, 0.001); end
  def test_intermediate_output_d187; assert_equal("Waste", worksheet.intermediate_output_d187); end
  def test_intermediate_output_f187; assert_in_epsilon(22.8602295816192, worksheet.intermediate_output_f187, 0.001); end
  def test_intermediate_output_ab187; assert_in_epsilon(46.005376459169604, worksheet.intermediate_output_ab187, 0.001); end
  def test_intermediate_output_ac187; assert_in_epsilon(45.10625753555002, worksheet.intermediate_output_ac187, 0.001); end
  def test_intermediate_output_ad187; assert_in_epsilon(43.802323592142784, worksheet.intermediate_output_ad187, 0.001); end
  def test_intermediate_output_ae187; assert_in_epsilon(42.39886501728903, worksheet.intermediate_output_ae187, 0.001); end
  def test_intermediate_output_af187; assert_in_epsilon(41.17552511781319, worksheet.intermediate_output_af187, 0.001); end
  def test_intermediate_output_ag187; assert_in_epsilon(40.080722749499124, worksheet.intermediate_output_ag187, 0.001); end
  def test_intermediate_output_ah187; assert_in_epsilon(39.045211708359346, worksheet.intermediate_output_ah187, 0.001); end
  def test_intermediate_output_ai187; assert_in_epsilon(35.94620343888157, worksheet.intermediate_output_ai187, 0.001); end
  def test_intermediate_output_aj187; assert_in_epsilon(33.90394222233129, worksheet.intermediate_output_aj187, 0.001); end
  def test_intermediate_output_ak187; assert_in_epsilon(31.176954037822373, worksheet.intermediate_output_ak187, 0.001); end
  def test_intermediate_output_al187; assert_in_epsilon(29.422387452691304, worksheet.intermediate_output_al187, 0.001); end
  def test_intermediate_output_am187; assert_in_epsilon(26.000773929539882, worksheet.intermediate_output_am187, 0.001); end
  def test_intermediate_output_an187; assert_in_epsilon(23.914147643814456, worksheet.intermediate_output_an187, 0.001); end
  def test_intermediate_output_ao187; assert_in_epsilon(21.05852685080172, worksheet.intermediate_output_ao187, 0.001); end
  def test_intermediate_output_ap187; assert_in_epsilon(19.538460113710165, worksheet.intermediate_output_ap187, 0.001); end
  def test_intermediate_output_aq187; assert_in_epsilon(19.03714113686196, worksheet.intermediate_output_aq187, 0.001); end
  def test_intermediate_output_ar187; assert_in_epsilon(18.640862074715724, worksheet.intermediate_output_ar187, 0.001); end
  def test_intermediate_output_as187; assert_in_epsilon(18.27157774713009, worksheet.intermediate_output_as187, 0.001); end
  def test_intermediate_output_at187; assert_in_epsilon(17.712063346383925, worksheet.intermediate_output_at187, 0.001); end
  def test_intermediate_output_au187; assert_in_epsilon(17.198378568592883, worksheet.intermediate_output_au187, 0.001); end
  def test_intermediate_output_av187; assert_in_epsilon(16.61196186224757, worksheet.intermediate_output_av187, 0.001); end
  def test_intermediate_output_aw187; assert_equal("UNFCCC Inventory Submissions 2012 [GBR-2012-2010-v1.2.xls] Summary2 'SUMMARY REPORT FOR CO2 EQUIVALENT EMISSIONS' - http://unfccc.int/national_reports/annex_i_ghg_inventories/national_inventories_submissions/items/6598.php", worksheet.intermediate_output_aw187); end
  def test_intermediate_output_c188; assert_in_epsilon(7, worksheet.intermediate_output_c188, 0.001); end
  def test_intermediate_output_d188; assert_equal("Other", worksheet.intermediate_output_d188); end
  def test_intermediate_output_ab188; assert_equal("NA", worksheet.intermediate_output_ab188); end
  def test_intermediate_output_ac188; assert_equal("NA", worksheet.intermediate_output_ac188); end
  def test_intermediate_output_ad188; assert_equal("NA", worksheet.intermediate_output_ad188); end
  def test_intermediate_output_ae188; assert_equal("NA", worksheet.intermediate_output_ae188); end
  def test_intermediate_output_af188; assert_equal("NA", worksheet.intermediate_output_af188); end
  def test_intermediate_output_ag188; assert_equal("NA", worksheet.intermediate_output_ag188); end
  def test_intermediate_output_ah188; assert_equal("NA", worksheet.intermediate_output_ah188); end
  def test_intermediate_output_ai188; assert_equal("NA", worksheet.intermediate_output_ai188); end
  def test_intermediate_output_aj188; assert_equal("NA", worksheet.intermediate_output_aj188); end
  def test_intermediate_output_ak188; assert_equal("NA", worksheet.intermediate_output_ak188); end
  def test_intermediate_output_al188; assert_equal("NA", worksheet.intermediate_output_al188); end
  def test_intermediate_output_am188; assert_equal("NA", worksheet.intermediate_output_am188); end
  def test_intermediate_output_an188; assert_equal("NA", worksheet.intermediate_output_an188); end
  def test_intermediate_output_ao188; assert_equal("NA", worksheet.intermediate_output_ao188); end
  def test_intermediate_output_ap188; assert_equal("NA", worksheet.intermediate_output_ap188); end
  def test_intermediate_output_aq188; assert_equal("NA", worksheet.intermediate_output_aq188); end
  def test_intermediate_output_ar188; assert_equal("NA", worksheet.intermediate_output_ar188); end
  def test_intermediate_output_as188; assert_equal("NA", worksheet.intermediate_output_as188); end
  def test_intermediate_output_at188; assert_equal("NA", worksheet.intermediate_output_at188); end
  def test_intermediate_output_au188; assert_equal("NA", worksheet.intermediate_output_au188); end
  def test_intermediate_output_av188; assert_equal("NA", worksheet.intermediate_output_av188); end
  def test_intermediate_output_aw188; assert_equal("UNFCCC Inventory Submissions 2012 [GBR-2012-2010-v1.2.xls] Summary2 'SUMMARY REPORT FOR CO2 EQUIVALENT EMISSIONS' - http://unfccc.int/national_reports/annex_i_ghg_inventories/national_inventories_submissions/items/6598.php", worksheet.intermediate_output_aw188); end
  def test_intermediate_output_c189; assert_equal("X1", worksheet.intermediate_output_c189); end
  def test_intermediate_output_d189; assert_equal("Int'l Aviation & Shipping", worksheet.intermediate_output_d189); end
  def test_intermediate_output_f189; assert_in_epsilon(42.52436, worksheet.intermediate_output_f189, 0.001); end
  def test_intermediate_output_ab189; assert_equal(:ref, worksheet.intermediate_output_ab189); end
  def test_intermediate_output_ac189; assert_equal(:ref, worksheet.intermediate_output_ac189); end
  def test_intermediate_output_ad189; assert_equal(:ref, worksheet.intermediate_output_ad189); end
  def test_intermediate_output_ae189; assert_equal(:ref, worksheet.intermediate_output_ae189); end
  def test_intermediate_output_af189; assert_equal(:ref, worksheet.intermediate_output_af189); end
  def test_intermediate_output_ag189; assert_equal(:ref, worksheet.intermediate_output_ag189); end
  def test_intermediate_output_ah189; assert_equal(:ref, worksheet.intermediate_output_ah189); end
  def test_intermediate_output_ai189; assert_equal(:ref, worksheet.intermediate_output_ai189); end
  def test_intermediate_output_aj189; assert_equal(:ref, worksheet.intermediate_output_aj189); end
  def test_intermediate_output_ak189; assert_equal(:ref, worksheet.intermediate_output_ak189); end
  def test_intermediate_output_al189; assert_equal(:ref, worksheet.intermediate_output_al189); end
  def test_intermediate_output_am189; assert_equal(:ref, worksheet.intermediate_output_am189); end
  def test_intermediate_output_an189; assert_equal(:ref, worksheet.intermediate_output_an189); end
  def test_intermediate_output_ao189; assert_equal(:ref, worksheet.intermediate_output_ao189); end
  def test_intermediate_output_ap189; assert_equal(:ref, worksheet.intermediate_output_ap189); end
  def test_intermediate_output_aq189; assert_equal(:ref, worksheet.intermediate_output_aq189); end
  def test_intermediate_output_ar189; assert_equal(:ref, worksheet.intermediate_output_ar189); end
  def test_intermediate_output_aw189; assert_equal("Calculation", worksheet.intermediate_output_aw189); end
  def test_intermediate_output_c190; assert_equal("X2", worksheet.intermediate_output_c190); end
  def test_intermediate_output_d190; assert_equal("Bioenergy credit", worksheet.intermediate_output_d190); end
  def test_intermediate_output_ab190; assert_in_delta(0, (worksheet.intermediate_output_ab190||0), 0.001); end
  def test_intermediate_output_ac190; assert_in_delta(0, (worksheet.intermediate_output_ac190||0), 0.001); end
  def test_intermediate_output_ad190; assert_in_delta(0, (worksheet.intermediate_output_ad190||0), 0.001); end
  def test_intermediate_output_ae190; assert_in_delta(0, (worksheet.intermediate_output_ae190||0), 0.001); end
  def test_intermediate_output_af190; assert_in_delta(0, (worksheet.intermediate_output_af190||0), 0.001); end
  def test_intermediate_output_ag190; assert_in_delta(0, (worksheet.intermediate_output_ag190||0), 0.001); end
  def test_intermediate_output_ah190; assert_in_delta(0, (worksheet.intermediate_output_ah190||0), 0.001); end
  def test_intermediate_output_ai190; assert_in_delta(0, (worksheet.intermediate_output_ai190||0), 0.001); end
  def test_intermediate_output_aj190; assert_in_delta(0, (worksheet.intermediate_output_aj190||0), 0.001); end
  def test_intermediate_output_ak190; assert_in_delta(0, (worksheet.intermediate_output_ak190||0), 0.001); end
  def test_intermediate_output_al190; assert_in_delta(0, (worksheet.intermediate_output_al190||0), 0.001); end
  def test_intermediate_output_am190; assert_in_delta(0, (worksheet.intermediate_output_am190||0), 0.001); end
  def test_intermediate_output_an190; assert_in_delta(0, (worksheet.intermediate_output_an190||0), 0.001); end
  def test_intermediate_output_ao190; assert_in_delta(0, (worksheet.intermediate_output_ao190||0), 0.001); end
  def test_intermediate_output_ap190; assert_in_delta(0, (worksheet.intermediate_output_ap190||0), 0.001); end
  def test_intermediate_output_aq190; assert_in_delta(0, (worksheet.intermediate_output_aq190||0), 0.001); end
  def test_intermediate_output_ar190; assert_in_delta(0, (worksheet.intermediate_output_ar190||0), 0.001); end
  def test_intermediate_output_as190; assert_in_delta(0, (worksheet.intermediate_output_as190||0), 0.001); end
  def test_intermediate_output_at190; assert_in_delta(0, (worksheet.intermediate_output_at190||0), 0.001); end
  def test_intermediate_output_au190; assert_in_delta(0, (worksheet.intermediate_output_au190||0), 0.001); end
  def test_intermediate_output_av190; assert_in_delta(0, (worksheet.intermediate_output_av190||0), 0.001); end
  def test_intermediate_output_aw190; assert_equal("UNFCCC Inventory Submissions 2012 [GBR-2012-2010-v1.2.xls] Summary2 'SUMMARY REPORT FOR CO2 EQUIVALENT EMISSIONS' - http://unfccc.int/national_reports/annex_i_ghg_inventories/national_inventories_submissions/items/6598.php", worksheet.intermediate_output_aw190); end
  def test_intermediate_output_c191; assert_equal("X3", worksheet.intermediate_output_c191); end
  def test_intermediate_output_d191; assert_equal("Carbon capture", worksheet.intermediate_output_d191); end
  def test_intermediate_output_ab191; assert_in_delta(0, (worksheet.intermediate_output_ab191||0), 0.001); end
  def test_intermediate_output_ac191; assert_in_delta(0, (worksheet.intermediate_output_ac191||0), 0.001); end
  def test_intermediate_output_ad191; assert_in_delta(0, (worksheet.intermediate_output_ad191||0), 0.001); end
  def test_intermediate_output_ae191; assert_in_delta(0, (worksheet.intermediate_output_ae191||0), 0.001); end
  def test_intermediate_output_af191; assert_in_delta(0, (worksheet.intermediate_output_af191||0), 0.001); end
  def test_intermediate_output_ag191; assert_in_delta(0, (worksheet.intermediate_output_ag191||0), 0.001); end
  def test_intermediate_output_ah191; assert_in_delta(0, (worksheet.intermediate_output_ah191||0), 0.001); end
  def test_intermediate_output_ai191; assert_in_delta(0, (worksheet.intermediate_output_ai191||0), 0.001); end
  def test_intermediate_output_aj191; assert_in_delta(0, (worksheet.intermediate_output_aj191||0), 0.001); end
  def test_intermediate_output_ak191; assert_in_delta(0, (worksheet.intermediate_output_ak191||0), 0.001); end
  def test_intermediate_output_al191; assert_in_delta(0, (worksheet.intermediate_output_al191||0), 0.001); end
  def test_intermediate_output_am191; assert_in_delta(0, (worksheet.intermediate_output_am191||0), 0.001); end
  def test_intermediate_output_an191; assert_in_delta(0, (worksheet.intermediate_output_an191||0), 0.001); end
  def test_intermediate_output_ao191; assert_in_delta(0, (worksheet.intermediate_output_ao191||0), 0.001); end
  def test_intermediate_output_ap191; assert_in_delta(0, (worksheet.intermediate_output_ap191||0), 0.001); end
  def test_intermediate_output_aq191; assert_in_delta(0, (worksheet.intermediate_output_aq191||0), 0.001); end
  def test_intermediate_output_ar191; assert_in_delta(0, (worksheet.intermediate_output_ar191||0), 0.001); end
  def test_intermediate_output_as191; assert_in_delta(0, (worksheet.intermediate_output_as191||0), 0.001); end
  def test_intermediate_output_at191; assert_in_delta(0, (worksheet.intermediate_output_at191||0), 0.001); end
  def test_intermediate_output_au191; assert_in_delta(0, (worksheet.intermediate_output_au191||0), 0.001); end
  def test_intermediate_output_av191; assert_in_delta(0, (worksheet.intermediate_output_av191||0), 0.001); end
  def test_intermediate_output_aw191; assert_equal("UNFCCC Inventory Submissions 2012 [GBR-2012-2010-v1.2.xls] Summary2 'SUMMARY REPORT FOR CO2 EQUIVALENT EMISSIONS' - http://unfccc.int/national_reports/annex_i_ghg_inventories/national_inventories_submissions/items/6598.php", worksheet.intermediate_output_aw191); end
  def test_intermediate_output_d192; assert_equal("Total", worksheet.intermediate_output_d192); end
  def test_intermediate_output_f192; assert_in_epsilon(680.9589720076677, worksheet.intermediate_output_f192, 0.001); end
  def test_intermediate_output_ab192; assert_in_epsilon(795.9357218212427, worksheet.intermediate_output_ab192, 0.001); end
  def test_intermediate_output_ac192; assert_in_epsilon(802.4755376560646, worksheet.intermediate_output_ac192, 0.001); end
  def test_intermediate_output_ad192; assert_in_epsilon(780.6853453672503, worksheet.intermediate_output_ad192, 0.001); end
  def test_intermediate_output_ae192; assert_in_epsilon(759.520352486888, worksheet.intermediate_output_ae192, 0.001); end
  def test_intermediate_output_af192; assert_in_epsilon(747.789442305871, worksheet.intermediate_output_af192, 0.001); end
  def test_intermediate_output_ag192; assert_in_epsilon(740.8889166508336, worksheet.intermediate_output_ag192, 0.001); end
  def test_intermediate_output_ah192; assert_in_epsilon(763.8906551933961, worksheet.intermediate_output_ah192, 0.001); end
  def test_intermediate_output_ai192; assert_in_epsilon(740.013886608237, worksheet.intermediate_output_ai192, 0.001); end
  def test_intermediate_output_aj192; assert_in_epsilon(739.9402055350414, worksheet.intermediate_output_aj192, 0.001); end
  def test_intermediate_output_ak192; assert_in_epsilon(708.0013598494589, worksheet.intermediate_output_ak192, 0.001); end
  def test_intermediate_output_al192; assert_in_epsilon(711.5094018571616, worksheet.intermediate_output_al192, 0.001); end
  def test_intermediate_output_am192; assert_in_epsilon(715.304303200507, worksheet.intermediate_output_am192, 0.001); end
  def test_intermediate_output_an192; assert_in_epsilon(691.7660822271035, worksheet.intermediate_output_an192, 0.001); end
  def test_intermediate_output_ao192; assert_in_epsilon(697.8282169304625, worksheet.intermediate_output_ao192, 0.001); end
  def test_intermediate_output_ap192; assert_in_epsilon(700.4521828746699, worksheet.intermediate_output_ap192, 0.001); end
  def test_intermediate_output_aq192; assert_in_epsilon(698.3081366655189, worksheet.intermediate_output_aq192, 0.001); end
  def test_intermediate_output_ar192; assert_in_epsilon(696.6613392795155, worksheet.intermediate_output_ar192, 0.001); end
  def test_intermediate_output_az192; assert_in_epsilon(610.2120744501218, worksheet.intermediate_output_az192, 0.001); end
  def test_intermediate_output_ba192; assert_in_epsilon(528.029654079175, worksheet.intermediate_output_ba192, 0.001); end
  def test_intermediate_output_bb192; assert_in_epsilon(420.0331220380542, worksheet.intermediate_output_bb192, 0.001); end
  def test_intermediate_output_bc192; assert_in_epsilon(303.406431850239, worksheet.intermediate_output_bc192, 0.001); end
  def test_intermediate_output_bd192; assert_in_epsilon(209.97070859425114, worksheet.intermediate_output_bd192, 0.001); end
  def test_intermediate_output_be192; assert_in_epsilon(175.67811324964723, worksheet.intermediate_output_be192, 0.001); end
  def test_intermediate_output_bf192; assert_in_epsilon(137.75789706408423, worksheet.intermediate_output_bf192, 0.001); end
  def test_intermediate_output_bg192; assert_in_epsilon(96.72051456909061, worksheet.intermediate_output_bg192, 0.001); end
  def test_intermediate_output_bh192; assert_in_epsilon(61.03601251220333, worksheet.intermediate_output_bh192, 0.001); end
  def test_intermediate_output_bi192; assert_equal("REFERENCED - All costs", worksheet.intermediate_output_bi192); end
  def test_intermediate_output_c194; assert_equal("Excluding international bunkers", worksheet.intermediate_output_c194); end
  def test_intermediate_output_f194; assert_in_epsilon(638.4346120076677, worksheet.intermediate_output_f194, 0.001); end
  def test_intermediate_output_ay194; assert_in_epsilon(609.796455784584, worksheet.intermediate_output_ay194, 0.001); end
  def test_intermediate_output_az194; assert_in_epsilon(558.5968754694339, worksheet.intermediate_output_az194, 0.001); end
  def test_intermediate_output_ba194; assert_in_epsilon(480.85920902333714, worksheet.intermediate_output_ba194, 0.001); end
  def test_intermediate_output_bb194; assert_in_epsilon(378.602678512801, worksheet.intermediate_output_bb194, 0.001); end
  def test_intermediate_output_bc194; assert_in_epsilon(265.80680367430335, worksheet.intermediate_output_bc194, 0.001); end
  def test_intermediate_output_bd194; assert_in_epsilon(176.16434686881968, worksheet.intermediate_output_bd194, 0.001); end
  def test_intermediate_output_be194; assert_in_epsilon(145.6296831080919, worksheet.intermediate_output_be194, 0.001); end
  def test_intermediate_output_bf194; assert_in_epsilon(111.4341471238323, worksheet.intermediate_output_bf194, 0.001); end
  def test_intermediate_output_bg194; assert_in_epsilon(74.09015408113098, worksheet.intermediate_output_bg194, 0.001); end
  def test_intermediate_output_bh194; assert_in_epsilon(42.06959575434591, worksheet.intermediate_output_bh194, 0.001); end
  def test_intermediate_output_bi194; assert_equal("REFERENCED - All costs", worksheet.intermediate_output_bi194); end
  def test_intermediate_output_c197; assert_equal("Please note: emissions by sector need to account for bio-energy, which is accounted for seperately (in V). ", worksheet.intermediate_output_c197); end
  def test_intermediate_output_c198; assert_equal("Cumulative emissions are estimates based on a linear trajectory between the 5 year time periods", worksheet.intermediate_output_c198); end
  def test_intermediate_output_c201; assert_equal("Targets", worksheet.intermediate_output_c201); end
  def test_intermediate_output_ay201; assert_equal("2050 target", worksheet.intermediate_output_ay201); end
  def test_intermediate_output_az201; assert_equal("2020 target ", worksheet.intermediate_output_az201); end
  def test_intermediate_output_bb201; assert_equal("2050 target", worksheet.intermediate_output_bb201); end
  def test_intermediate_output_bc201; assert_equal("2020 target", worksheet.intermediate_output_bc201); end
  def test_intermediate_output_be201; assert_equal("Actuals, as % of 2007, modelled", worksheet.intermediate_output_be201); end
  def test_intermediate_output_f202; assert_equal("Base year (1990)", worksheet.intermediate_output_f202); end
  def test_intermediate_output_ay202; assert_equal("(20% of base)", worksheet.intermediate_output_ay202); end
  def test_intermediate_output_az202; assert_equal("(66% of base)", worksheet.intermediate_output_az202); end
  def test_intermediate_output_bb202; assert_equal("% of 2007", worksheet.intermediate_output_bb202); end
  def test_intermediate_output_bc202; assert_equal("% of 2007", worksheet.intermediate_output_bc202); end
  def test_intermediate_output_bf202; assert_in_epsilon(2020, worksheet.intermediate_output_bf202, 0.001); end
  def test_intermediate_output_bg202; assert_in_epsilon(2030, worksheet.intermediate_output_bg202, 0.001); end
  def test_intermediate_output_bh202; assert_in_epsilon(2050, worksheet.intermediate_output_bh202, 0.001); end
  def test_intermediate_output_d203; assert_equal("Kyoto agreed sectors", worksheet.intermediate_output_d203); end
  def test_intermediate_output_f203; assert_in_epsilon(777.11767, worksheet.intermediate_output_f203, 0.001); end
  def test_intermediate_output_ay203; assert_in_epsilon(155.42353400000002, worksheet.intermediate_output_ay203, 0.001); end
  def test_intermediate_output_az203; assert_in_epsilon(512.8976622, worksheet.intermediate_output_az203, 0.001); end
  def test_intermediate_output_d204; assert_equal("International bunkers (CO2 only)", worksheet.intermediate_output_d204); end
  def test_intermediate_output_f204; assert_in_epsilon(22.4685, worksheet.intermediate_output_f204, 0.001); end
  def test_intermediate_output_ay151; assert_in_delta(0.8516392573519223, worksheet.intermediate_output_ay151, 0.001); end
  def test_intermediate_output_bb204; assert_in_epsilon(159.91723400000004, worksheet.intermediate_output_bb204, 0.001); end
  def test_intermediate_output_bc204; assert_in_epsilon(527.7268722000001, worksheet.intermediate_output_bc204, 0.001); end
  def test_intermediate_output_d205; assert_equal("Total", worksheet.intermediate_output_d205); end
  def test_intermediate_output_f205; assert_in_epsilon(799.5861699999999, worksheet.intermediate_output_f205, 0.001); end
  def test_intermediate_output_ay205; assert_in_epsilon(159.917234, worksheet.intermediate_output_ay205, 0.001); end
  def test_intermediate_output_az205; assert_in_epsilon(527.7268722, worksheet.intermediate_output_az205, 0.001); end
  def test_intermediate_output_bb205; assert_in_epsilon(187.77578959575553, worksheet.intermediate_output_bb205, 0.001); end
  def test_intermediate_output_bc205; assert_in_epsilon(619.6601056659932, worksheet.intermediate_output_bc205, 0.001); end
  def test_intermediate_output_bf205; assert_in_delta(0.6339822965675956, worksheet.intermediate_output_bf205, 0.001); end
  def test_intermediate_output_bg205; assert_in_delta(0.316921940347477, worksheet.intermediate_output_bg205, 0.001); end
  def test_intermediate_output_bh205; assert_in_delta(0.09212547619592104, worksheet.intermediate_output_bh205, 0.001); end
  def test_intermediate_output_d206; assert_equal("Target, for chart", worksheet.intermediate_output_d206); end
  def test_intermediate_output_ay206; assert_in_delta(0.2, worksheet.intermediate_output_ay206, 0.001); end
  def test_intermediate_output_az206; assert_in_delta(0.2, worksheet.intermediate_output_az206, 0.001); end
  def test_intermediate_output_ba206; assert_in_delta(0.2, worksheet.intermediate_output_ba206, 0.001); end
  def test_intermediate_output_bb206; assert_in_delta(0.2, worksheet.intermediate_output_bb206, 0.001); end
  def test_intermediate_output_bc206; assert_in_delta(0.2, worksheet.intermediate_output_bc206, 0.001); end
  def test_intermediate_output_bd206; assert_in_delta(0.2, worksheet.intermediate_output_bd206, 0.001); end
  def test_intermediate_output_be206; assert_in_delta(0.2, worksheet.intermediate_output_be206, 0.001); end
  def test_intermediate_output_bf206; assert_in_delta(0.2, worksheet.intermediate_output_bf206, 0.001); end
  def test_intermediate_output_bg206; assert_in_delta(0.2, worksheet.intermediate_output_bg206, 0.001); end
  def test_intermediate_output_bh206; assert_in_delta(0.2, worksheet.intermediate_output_bh206, 0.001); end
  def test_intermediate_output_d207; assert_equal("Dummy, for chart", worksheet.intermediate_output_d207); end
  def test_intermediate_output_ay207; assert_in_delta(0, (worksheet.intermediate_output_ay207||0), 0.001); end
  def test_intermediate_output_az207; assert_in_delta(0, (worksheet.intermediate_output_az207||0), 0.001); end
  def test_intermediate_output_ba207; assert_in_delta(0, (worksheet.intermediate_output_ba207||0), 0.001); end
  def test_intermediate_output_bb207; assert_in_delta(0, (worksheet.intermediate_output_bb207||0), 0.001); end
  def test_intermediate_output_bc207; assert_in_delta(0, (worksheet.intermediate_output_bc207||0), 0.001); end
  def test_intermediate_output_bd207; assert_in_delta(0, (worksheet.intermediate_output_bd207||0), 0.001); end
  def test_intermediate_output_be207; assert_in_delta(0, (worksheet.intermediate_output_be207||0), 0.001); end
  def test_intermediate_output_bf207; assert_in_delta(0, (worksheet.intermediate_output_bf207||0), 0.001); end
  def test_intermediate_output_bg207; assert_in_delta(0, (worksheet.intermediate_output_bg207||0), 0.001); end
  def test_intermediate_output_bh207; assert_in_delta(0, (worksheet.intermediate_output_bh207||0), 0.001); end
  def test_intermediate_output_b210; assert_equal("Bio-energy - Production and Use", worksheet.intermediate_output_b210); end
  def test_intermediate_output_b212; assert_equal("Production", worksheet.intermediate_output_b212); end
  def test_intermediate_output_c214; assert_equal("Domestic", worksheet.intermediate_output_c214); end
  def test_intermediate_output_ay214; assert_equal("2007", worksheet.intermediate_output_ay214); end
  def test_intermediate_output_az214; assert_equal("2010", worksheet.intermediate_output_az214); end
  def test_intermediate_output_ba214; assert_equal("2015", worksheet.intermediate_output_ba214); end
  def test_intermediate_output_bb214; assert_equal("2020", worksheet.intermediate_output_bb214); end
  def test_intermediate_output_bc214; assert_equal("2025", worksheet.intermediate_output_bc214); end
  def test_intermediate_output_bd214; assert_equal("2030", worksheet.intermediate_output_bd214); end
  def test_intermediate_output_be214; assert_equal("2035", worksheet.intermediate_output_be214); end
  def test_intermediate_output_bf214; assert_equal("2040", worksheet.intermediate_output_bf214); end
  def test_intermediate_output_bg214; assert_equal("2045", worksheet.intermediate_output_bg214); end
  def test_intermediate_output_bh214; assert_equal("2050", worksheet.intermediate_output_bh214); end
  def test_intermediate_output_c215; assert_equal("V.a", worksheet.intermediate_output_c215); end
  def test_intermediate_output_d215; assert_equal("V.03", worksheet.intermediate_output_d215); end
  def test_intermediate_output_e215; assert_equal("Solid hydrocarbons", worksheet.intermediate_output_e215); end
  def test_intermediate_output_aj215; assert_in_epsilon(11.2811, worksheet.intermediate_output_aj215, 0.001); end
  def test_intermediate_output_ak215; assert_in_epsilon(11.5128859, worksheet.intermediate_output_ak215, 0.001); end
  def test_intermediate_output_al215; assert_in_epsilon(9.9829594, worksheet.intermediate_output_al215, 0.001); end
  def test_intermediate_output_am215; assert_in_epsilon(10.7253023, worksheet.intermediate_output_am215, 0.001); end
  def test_intermediate_output_an215; assert_in_epsilon(11.7831671, worksheet.intermediate_output_an215, 0.001); end
  def test_intermediate_output_ao215; assert_in_epsilon(11.9234249, worksheet.intermediate_output_ao215, 0.001); end
  def test_intermediate_output_ap215; assert_in_epsilon(8.2292717, worksheet.intermediate_output_ap215, 0.001); end
  def test_intermediate_output_aq215; assert_in_epsilon(13.56519449, worksheet.intermediate_output_aq215, 0.001); end
  def test_intermediate_output_ar215; assert_in_epsilon(13.10799238, worksheet.intermediate_output_ar215, 0.001); end
  def test_intermediate_output_as215; assert_in_epsilon(14.11044992, worksheet.intermediate_output_as215, 0.001); end
  def test_intermediate_output_at215; assert_in_epsilon(15.68101481, worksheet.intermediate_output_at215, 0.001); end
  def test_intermediate_output_au215; assert_in_epsilon(18.7866056, worksheet.intermediate_output_au215, 0.001); end
  def test_intermediate_output_av215; assert_in_epsilon(19.95985165, worksheet.intermediate_output_av215, 0.001); end
  def test_intermediate_output_aw215; assert_equal("DUKES - Commodity balances, production of wood waste, wood, poultry litter, meal and bone, and farm waste, and straw, SRC, and other plant-based biomass ", worksheet.intermediate_output_aw215); end
  def test_intermediate_output_ay215; assert_in_epsilon(13.727592565398165, worksheet.intermediate_output_ay215, 0.001); end
  def test_intermediate_output_az215; assert_in_epsilon(15.666654024480422, worksheet.intermediate_output_az215, 0.001); end
  def test_intermediate_output_ba215; assert_in_epsilon(21.72441274713806, worksheet.intermediate_output_ba215, 0.001); end
  def test_intermediate_output_bb215; assert_in_epsilon(48.67670173562362, worksheet.intermediate_output_bb215, 0.001); end
  def test_intermediate_output_bc215; assert_in_epsilon(79.87850719005912, worksheet.intermediate_output_bc215, 0.001); end
  def test_intermediate_output_bd215; assert_in_epsilon(86.33176238794582, worksheet.intermediate_output_bd215, 0.001); end
  def test_intermediate_output_be215; assert_in_epsilon(85.87268151607167, worksheet.intermediate_output_be215, 0.001); end
  def test_intermediate_output_bf215; assert_in_epsilon(88.94674493799685, worksheet.intermediate_output_bf215, 0.001); end
  def test_intermediate_output_bg215; assert_in_epsilon(92.28897262592666, worksheet.intermediate_output_bg215, 0.001); end
  def test_intermediate_output_bh215; assert_in_epsilon(92.71595780889996, worksheet.intermediate_output_bh215, 0.001); end
  def test_intermediate_output_c216; assert_equal("V.a", worksheet.intermediate_output_c216); end
  def test_intermediate_output_d216; assert_equal("V.04", worksheet.intermediate_output_d216); end
  def test_intermediate_output_e216; assert_equal("Liquid hydrocarbons", worksheet.intermediate_output_e216); end
  def test_intermediate_output_aj216; assert_in_delta(0, (worksheet.intermediate_output_aj216||0), 0.001); end
  def test_intermediate_output_ak216; assert_in_delta(0, (worksheet.intermediate_output_ak216||0), 0.001); end
  def test_intermediate_output_al216; assert_in_delta(0, (worksheet.intermediate_output_al216||0), 0.001); end
  def test_intermediate_output_am216; assert_in_delta(0, (worksheet.intermediate_output_am216||0), 0.001); end
  def test_intermediate_output_an216; assert_in_delta(0, (worksheet.intermediate_output_an216||0), 0.001); end
  def test_intermediate_output_ao216; assert_in_delta(0, (worksheet.intermediate_output_ao216||0), 0.001); end
  def test_intermediate_output_ap216; assert_in_delta(0, (worksheet.intermediate_output_ap216||0), 0.001); end
  def test_intermediate_output_aq216; assert_in_delta(0.09313615, worksheet.intermediate_output_aq216, 0.001); end
  def test_intermediate_output_ar216; assert_in_epsilon(2.691796244, worksheet.intermediate_output_ar216, 0.001); end
  def test_intermediate_output_as216; assert_in_epsilon(4.599912358, worksheet.intermediate_output_as216, 0.001); end
  def test_intermediate_output_at216; assert_in_epsilon(3.516727083, worksheet.intermediate_output_at216, 0.001); end
  def test_intermediate_output_au216; assert_in_epsilon(2.629156279, worksheet.intermediate_output_au216, 0.001); end
  def test_intermediate_output_av216; assert_in_epsilon(3.539047787, worksheet.intermediate_output_av216, 0.001); end
  def test_intermediate_output_aw216; assert_equal("DUKES - Commodity balances, production of liquid biofuels", worksheet.intermediate_output_aw216); end
  def test_intermediate_output_ay216; assert_in_epsilon(1.562605222222222, worksheet.intermediate_output_ay216, 0.001); end
  def test_intermediate_output_az216; assert_in_epsilon(3.2432338019911118, worksheet.intermediate_output_az216, 0.001); end
  def test_intermediate_output_ba216; assert_in_epsilon(11.747705012706284, worksheet.intermediate_output_ba216, 0.001); end
  def test_intermediate_output_bb216; assert_in_epsilon(21.37339779693295, worksheet.intermediate_output_bb216, 0.001); end
  def test_intermediate_output_bc216; assert_in_epsilon(39.1200701882094, worksheet.intermediate_output_bc216, 0.001); end
  def test_intermediate_output_bd216; assert_in_epsilon(61.57707846258055, worksheet.intermediate_output_bd216, 0.001); end
  def test_intermediate_output_be216; assert_in_epsilon(85.88019074506646, worksheet.intermediate_output_be216, 0.001); end
  def test_intermediate_output_bf216; assert_in_epsilon(113.3306303503899, worksheet.intermediate_output_bf216, 0.001); end
  def test_intermediate_output_bg216; assert_in_epsilon(144.26162946713941, worksheet.intermediate_output_bg216, 0.001); end
  def test_intermediate_output_bh216; assert_in_epsilon(179.03885813693358, worksheet.intermediate_output_bh216, 0.001); end
  def test_intermediate_output_c217; assert_equal("V.a", worksheet.intermediate_output_c217); end
  def test_intermediate_output_d217; assert_equal("V.05", worksheet.intermediate_output_d217); end
  def test_intermediate_output_e217; assert_equal("Gaseous hydrocarbons", worksheet.intermediate_output_e217); end
  def test_intermediate_output_aj217; assert_in_epsilon(4.679912, worksheet.intermediate_output_aj217, 0.001); end
  def test_intermediate_output_ak217; assert_in_epsilon(6.65236, worksheet.intermediate_output_ak217, 0.001); end
  def test_intermediate_output_al217; assert_in_epsilon(8.5030419, worksheet.intermediate_output_al217, 0.001); end
  def test_intermediate_output_am217; assert_in_epsilon(9.7205866, worksheet.intermediate_output_am217, 0.001); end
  def test_intermediate_output_an217; assert_in_epsilon(10.375123, worksheet.intermediate_output_an217, 0.001); end
  def test_intermediate_output_ao217; assert_in_epsilon(12.654603, worksheet.intermediate_output_ao217, 0.001); end
  def test_intermediate_output_ap217; assert_in_epsilon(17.4844257, worksheet.intermediate_output_ap217, 0.001); end
  def test_intermediate_output_aq217; assert_in_epsilon(18.91593462, worksheet.intermediate_output_aq217, 0.001); end
  def test_intermediate_output_ar217; assert_in_epsilon(19.24482717, worksheet.intermediate_output_ar217, 0.001); end
  def test_intermediate_output_as217; assert_in_epsilon(20.29461125, worksheet.intermediate_output_as217, 0.001); end
  def test_intermediate_output_at217; assert_in_epsilon(20.91263605, worksheet.intermediate_output_at217, 0.001); end
  def test_intermediate_output_au217; assert_in_epsilon(21.92331406, worksheet.intermediate_output_au217, 0.001); end
  def test_intermediate_output_av217; assert_in_epsilon(22.89564828, worksheet.intermediate_output_av217, 0.001); end
  def test_intermediate_output_aw217; assert_equal("DUKES - Commodity balances, production of sewage gas and landfill gas", worksheet.intermediate_output_aw217); end
  def test_intermediate_output_ay217; assert_in_epsilon(22.003982326267895, worksheet.intermediate_output_ay217, 0.001); end
  def test_intermediate_output_az217; assert_in_epsilon(19.01793396955904, worksheet.intermediate_output_az217, 0.001); end
  def test_intermediate_output_ba217; assert_in_epsilon(33.45776700031678, worksheet.intermediate_output_ba217, 0.001); end
  def test_intermediate_output_bb217; assert_in_epsilon(47.51275641919732, worksheet.intermediate_output_bb217, 0.001); end
  def test_intermediate_output_bc217; assert_in_epsilon(52.71818656690877, worksheet.intermediate_output_bc217, 0.001); end
  def test_intermediate_output_bd217; assert_in_epsilon(53.447765106522894, worksheet.intermediate_output_bd217, 0.001); end
  def test_intermediate_output_be217; assert_in_epsilon(54.73774984805112, worksheet.intermediate_output_be217, 0.001); end
  def test_intermediate_output_bf217; assert_in_epsilon(57.45466055503756, worksheet.intermediate_output_bf217, 0.001); end
  def test_intermediate_output_bg217; assert_in_epsilon(66.49201385991722, worksheet.intermediate_output_bg217, 0.001); end
  def test_intermediate_output_bh217; assert_in_epsilon(87.63458037791042, worksheet.intermediate_output_bh217, 0.001); end
  def test_intermediate_output_c219; assert_equal("Imports", worksheet.intermediate_output_c219); end
  def test_intermediate_output_c220; assert_equal("V.b", worksheet.intermediate_output_c220); end
  def test_intermediate_output_d220; assert_equal("V.03", worksheet.intermediate_output_d220); end
  def test_intermediate_output_e220; assert_equal("Solid hydrocarbons", worksheet.intermediate_output_e220); end
  def test_intermediate_output_aj220; assert_in_delta(0, (worksheet.intermediate_output_aj220||0), 0.001); end
  def test_intermediate_output_ak220; assert_in_delta(0, (worksheet.intermediate_output_ak220||0), 0.001); end
  def test_intermediate_output_al220; assert_in_delta(0, (worksheet.intermediate_output_al220||0), 0.001); end
  def test_intermediate_output_am220; assert_in_delta(0, (worksheet.intermediate_output_am220||0), 0.001); end
  def test_intermediate_output_an220; assert_in_delta(0, (worksheet.intermediate_output_an220||0), 0.001); end
  def test_intermediate_output_ao220; assert_in_epsilon(1.2843009, worksheet.intermediate_output_ao220, 0.001); end
  def test_intermediate_output_ap220; assert_in_epsilon(4.67526, worksheet.intermediate_output_ap220, 0.001); end
  def test_intermediate_output_aq220; assert_in_epsilon(4.89331583, worksheet.intermediate_output_aq220, 0.001); end
  def test_intermediate_output_ar220; assert_in_epsilon(5.78000326, worksheet.intermediate_output_ar220, 0.001); end
  def test_intermediate_output_as220; assert_in_epsilon(4.398455251, worksheet.intermediate_output_as220, 0.001); end
  def test_intermediate_output_at220; assert_in_epsilon(5.033138643, worksheet.intermediate_output_at220, 0.001); end
  def test_intermediate_output_au220; assert_in_epsilon(4.917245238, worksheet.intermediate_output_au220, 0.001); end
  def test_intermediate_output_av220; assert_in_epsilon(8.756573386, worksheet.intermediate_output_av220, 0.001); end
  def test_intermediate_output_aw220; assert_equal("DUKES - Commodity balances, imports of wood waste, wood, poultry litter, meal and bone, and farm waste, and straw, SRC, and other plant-based biomass ", worksheet.intermediate_output_aw220); end
  def test_intermediate_output_ay220; assert_in_epsilon(4.39614, worksheet.intermediate_output_ay220, 0.001); end
  def test_intermediate_output_az220; assert_in_epsilon(4.089432558139535, worksheet.intermediate_output_az220, 0.001); end
  def test_intermediate_output_ba220; assert_in_epsilon(3.578253488372093, worksheet.intermediate_output_ba220, 0.001); end
  def test_intermediate_output_bb220; assert_in_epsilon(3.0670744186046512, worksheet.intermediate_output_bb220, 0.001); end
  def test_intermediate_output_bc220; assert_in_epsilon(2.5558953488372094, worksheet.intermediate_output_bc220, 0.001); end
  def test_intermediate_output_bd220; assert_in_epsilon(2.0447162790697675, worksheet.intermediate_output_bd220, 0.001); end
  def test_intermediate_output_be220; assert_in_epsilon(1.5335372093023256, worksheet.intermediate_output_be220, 0.001); end
  def test_intermediate_output_bf220; assert_in_epsilon(1.0223581395348837, worksheet.intermediate_output_bf220, 0.001); end
  def test_intermediate_output_bg220; assert_in_delta(0.5111790697674419, worksheet.intermediate_output_bg220, 0.001); end
  def test_intermediate_output_bh220; assert_in_epsilon(-10.645439123937308, worksheet.intermediate_output_bh220, 0.001); end
  def test_intermediate_output_c221; assert_equal("V.b", worksheet.intermediate_output_c221); end
  def test_intermediate_output_d221; assert_equal("V.04", worksheet.intermediate_output_d221); end
  def test_intermediate_output_e221; assert_equal("Liquid hydrocarbons", worksheet.intermediate_output_e221); end
  def test_intermediate_output_aj221; assert_in_delta(0, (worksheet.intermediate_output_aj221||0), 0.001); end
  def test_intermediate_output_ak221; assert_in_delta(0, (worksheet.intermediate_output_ak221||0), 0.001); end
  def test_intermediate_output_al221; assert_in_delta(0, (worksheet.intermediate_output_al221||0), 0.001); end
  def test_intermediate_output_am221; assert_in_delta(0, (worksheet.intermediate_output_am221||0), 0.001); end
  def test_intermediate_output_an221; assert_in_delta(0, (worksheet.intermediate_output_an221||0), 0.001); end
  def test_intermediate_output_ao221; assert_in_delta(0, (worksheet.intermediate_output_ao221||0), 0.001); end
  def test_intermediate_output_ap221; assert_in_delta(0, (worksheet.intermediate_output_ap221||0), 0.001); end
  def test_intermediate_output_aq221; assert_in_delta(0.768079488, worksheet.intermediate_output_aq221, 0.001); end
  def test_intermediate_output_ar221; assert_in_delta(0.621433135, worksheet.intermediate_output_ar221, 0.001); end
  def test_intermediate_output_as221; assert_in_delta(0.883831113, worksheet.intermediate_output_as221, 0.001); end
  def test_intermediate_output_at221; assert_in_epsilon(6.362225731, worksheet.intermediate_output_at221, 0.001); end
  def test_intermediate_output_au221; assert_in_epsilon(9.448472566, worksheet.intermediate_output_au221, 0.001); end
  def test_intermediate_output_av221; assert_in_epsilon(11.52719409, worksheet.intermediate_output_av221, 0.001); end
  def test_intermediate_output_aw221; assert_equal("DUKES - Commodity balances, imports of liquid biofuels", worksheet.intermediate_output_aw221); end
  def test_intermediate_output_ay221; assert_in_delta(-0.39542, worksheet.intermediate_output_ay221, 0.001); end
  def test_intermediate_output_az221; assert_in_delta(-0.36783255813953486, worksheet.intermediate_output_az221, 0.001); end
  def test_intermediate_output_ba221; assert_in_delta(-0.32185348837209304, worksheet.intermediate_output_ba221, 0.001); end
  def test_intermediate_output_bb221; assert_in_delta(-0.2758744186046512, worksheet.intermediate_output_bb221, 0.001); end
  def test_intermediate_output_bc221; assert_in_delta(-0.2298953488372093, worksheet.intermediate_output_bc221, 0.001); end
  def test_intermediate_output_bd221; assert_in_delta(-0.18391627906976743, worksheet.intermediate_output_bd221, 0.001); end
  def test_intermediate_output_be221; assert_in_delta(-0.13793720930232556, worksheet.intermediate_output_be221, 0.001); end
  def test_intermediate_output_bf221; assert_in_delta(-0.09195813953488369, worksheet.intermediate_output_bf221, 0.001); end
  def test_intermediate_output_bg221; assert_in_delta(-0.04597906976744187, worksheet.intermediate_output_bg221, 0.001); end
  def test_intermediate_output_bh221; assert_in_delta(0, (worksheet.intermediate_output_bh221||0), 0.001); end
  def test_intermediate_output_c222; assert_equal("V.b", worksheet.intermediate_output_c222); end
  def test_intermediate_output_d222; assert_equal("V.05", worksheet.intermediate_output_d222); end
  def test_intermediate_output_e222; assert_equal("Gaseous hydrocarbons", worksheet.intermediate_output_e222); end
  def test_intermediate_output_aj222; assert_in_delta(0, (worksheet.intermediate_output_aj222||0), 0.001); end
  def test_intermediate_output_ak222; assert_in_delta(0, (worksheet.intermediate_output_ak222||0), 0.001); end
  def test_intermediate_output_al222; assert_in_delta(0, (worksheet.intermediate_output_al222||0), 0.001); end
  def test_intermediate_output_am222; assert_in_delta(0, (worksheet.intermediate_output_am222||0), 0.001); end
  def test_intermediate_output_an222; assert_in_delta(0, (worksheet.intermediate_output_an222||0), 0.001); end
  def test_intermediate_output_ao222; assert_in_delta(0, (worksheet.intermediate_output_ao222||0), 0.001); end
  def test_intermediate_output_ap222; assert_in_delta(0, (worksheet.intermediate_output_ap222||0), 0.001); end
  def test_intermediate_output_aq222; assert_in_delta(0, (worksheet.intermediate_output_aq222||0), 0.001); end
  def test_intermediate_output_ar222; assert_in_delta(0, (worksheet.intermediate_output_ar222||0), 0.001); end
  def test_intermediate_output_as222; assert_in_delta(0, (worksheet.intermediate_output_as222||0), 0.001); end
  def test_intermediate_output_at222; assert_in_delta(0, (worksheet.intermediate_output_at222||0), 0.001); end
  def test_intermediate_output_au222; assert_in_delta(0, (worksheet.intermediate_output_au222||0), 0.001); end
  def test_intermediate_output_av222; assert_in_delta(0, (worksheet.intermediate_output_av222||0), 0.001); end
  def test_intermediate_output_aw222; assert_equal("DUKES - Commodity balances, imports of sewage gas and landfill gas", worksheet.intermediate_output_aw222); end
  def test_intermediate_output_ay222; assert_in_delta(0, (worksheet.intermediate_output_ay222||0), 0.001); end
  def test_intermediate_output_az222; assert_in_delta(0, (worksheet.intermediate_output_az222||0), 0.001); end
  def test_intermediate_output_ba222; assert_in_delta(0, (worksheet.intermediate_output_ba222||0), 0.001); end
  def test_intermediate_output_bb222; assert_in_delta(0, (worksheet.intermediate_output_bb222||0), 0.001); end
  def test_intermediate_output_bc222; assert_in_delta(0, (worksheet.intermediate_output_bc222||0), 0.001); end
  def test_intermediate_output_bd222; assert_in_delta(0, (worksheet.intermediate_output_bd222||0), 0.001); end
  def test_intermediate_output_be222; assert_in_delta(0, (worksheet.intermediate_output_be222||0), 0.001); end
  def test_intermediate_output_bf222; assert_in_delta(0, (worksheet.intermediate_output_bf222||0), 0.001); end
  def test_intermediate_output_bg222; assert_in_delta(0, (worksheet.intermediate_output_bg222||0), 0.001); end
  def test_intermediate_output_bh222; assert_in_epsilon(-19.174933273029367, worksheet.intermediate_output_bh222, 0.001); end
  def test_intermediate_output_c224; assert_equal("Total", worksheet.intermediate_output_c224); end
  def test_intermediate_output_c225; assert_equal("V.b", worksheet.intermediate_output_c225); end
  def test_intermediate_output_d225; assert_equal("V.03", worksheet.intermediate_output_d225); end
  def test_intermediate_output_e225; assert_equal("Solid hydrocarbons", worksheet.intermediate_output_e225); end
  def test_intermediate_output_aj225; assert_in_epsilon(11.2811, worksheet.intermediate_output_aj225, 0.001); end
  def test_intermediate_output_ak225; assert_in_epsilon(11.5128859, worksheet.intermediate_output_ak225, 0.001); end
  def test_intermediate_output_al225; assert_in_epsilon(9.9829594, worksheet.intermediate_output_al225, 0.001); end
  def test_intermediate_output_am225; assert_in_epsilon(10.7253023, worksheet.intermediate_output_am225, 0.001); end
  def test_intermediate_output_an225; assert_in_epsilon(11.7831671, worksheet.intermediate_output_an225, 0.001); end
  def test_intermediate_output_ao225; assert_in_epsilon(13.2077258, worksheet.intermediate_output_ao225, 0.001); end
  def test_intermediate_output_ap225; assert_in_epsilon(12.9045317, worksheet.intermediate_output_ap225, 0.001); end
  def test_intermediate_output_aq225; assert_in_epsilon(18.45851032, worksheet.intermediate_output_aq225, 0.001); end
  def test_intermediate_output_ar225; assert_in_epsilon(18.88799564, worksheet.intermediate_output_ar225, 0.001); end
  def test_intermediate_output_as225; assert_in_epsilon(18.50890517, worksheet.intermediate_output_as225, 0.001); end
  def test_intermediate_output_at225; assert_in_epsilon(20.71415345, worksheet.intermediate_output_at225, 0.001); end
  def test_intermediate_output_au225; assert_in_epsilon(23.70385084, worksheet.intermediate_output_au225, 0.001); end
  def test_intermediate_output_av225; assert_in_epsilon(28.71642504, worksheet.intermediate_output_av225, 0.001); end
  def test_intermediate_output_aw225; assert_equal("Calculation", worksheet.intermediate_output_aw225); end
  def test_intermediate_output_ay225; assert_in_epsilon(18.123732565398164, worksheet.intermediate_output_ay225, 0.001); end
  def test_intermediate_output_az225; assert_in_epsilon(19.756086582619957, worksheet.intermediate_output_az225, 0.001); end
  def test_intermediate_output_ba225; assert_in_epsilon(25.302666235510152, worksheet.intermediate_output_ba225, 0.001); end
  def test_intermediate_output_bb225; assert_in_epsilon(51.74377615422827, worksheet.intermediate_output_bb225, 0.001); end
  def test_intermediate_output_bc225; assert_in_epsilon(82.43440253889634, worksheet.intermediate_output_bc225, 0.001); end
  def test_intermediate_output_bd225; assert_in_epsilon(88.37647866701559, worksheet.intermediate_output_bd225, 0.001); end
  def test_intermediate_output_be225; assert_in_epsilon(87.40621872537399, worksheet.intermediate_output_be225, 0.001); end
  def test_intermediate_output_bf225; assert_in_epsilon(89.96910307753174, worksheet.intermediate_output_bf225, 0.001); end
  def test_intermediate_output_bg225; assert_in_epsilon(92.8001516956941, worksheet.intermediate_output_bg225, 0.001); end
  def test_intermediate_output_bh225; assert_in_epsilon(82.07051868496265, worksheet.intermediate_output_bh225, 0.001); end
  def test_intermediate_output_c226; assert_equal("V.b", worksheet.intermediate_output_c226); end
  def test_intermediate_output_d226; assert_equal("V.04", worksheet.intermediate_output_d226); end
  def test_intermediate_output_e226; assert_equal("Liquid hydrocarbons", worksheet.intermediate_output_e226); end
  def test_intermediate_output_aj226; assert_in_delta(0, (worksheet.intermediate_output_aj226||0), 0.001); end
  def test_intermediate_output_ak226; assert_in_delta(0, (worksheet.intermediate_output_ak226||0), 0.001); end
  def test_intermediate_output_al226; assert_in_delta(0, (worksheet.intermediate_output_al226||0), 0.001); end
  def test_intermediate_output_am226; assert_in_delta(0, (worksheet.intermediate_output_am226||0), 0.001); end
  def test_intermediate_output_an226; assert_in_delta(0, (worksheet.intermediate_output_an226||0), 0.001); end
  def test_intermediate_output_ao226; assert_in_delta(0, (worksheet.intermediate_output_ao226||0), 0.001); end
  def test_intermediate_output_ap226; assert_in_delta(0, (worksheet.intermediate_output_ap226||0), 0.001); end
  def test_intermediate_output_aq226; assert_in_delta(0.861215638, worksheet.intermediate_output_aq226, 0.001); end
  def test_intermediate_output_ar226; assert_in_epsilon(3.313229379, worksheet.intermediate_output_ar226, 0.001); end
  def test_intermediate_output_as226; assert_in_epsilon(5.483743472, worksheet.intermediate_output_as226, 0.001); end
  def test_intermediate_output_at226; assert_in_epsilon(9.878952814, worksheet.intermediate_output_at226, 0.001); end
  def test_intermediate_output_au226; assert_in_epsilon(12.07762885, worksheet.intermediate_output_au226, 0.001); end
  def test_intermediate_output_av226; assert_in_epsilon(15.06624188, worksheet.intermediate_output_av226, 0.001); end
  def test_intermediate_output_aw226; assert_equal("Calculation", worksheet.intermediate_output_aw226); end
  def test_intermediate_output_ay226; assert_in_epsilon(1.1671852222222219, worksheet.intermediate_output_ay226, 0.001); end
  def test_intermediate_output_az226; assert_in_epsilon(2.875401243851577, worksheet.intermediate_output_az226, 0.001); end
  def test_intermediate_output_ba226; assert_in_epsilon(11.42585152433419, worksheet.intermediate_output_ba226, 0.001); end
  def test_intermediate_output_bb226; assert_in_epsilon(21.097523378328297, worksheet.intermediate_output_bb226, 0.001); end
  def test_intermediate_output_bc226; assert_in_epsilon(38.890174839372186, worksheet.intermediate_output_bc226, 0.001); end
  def test_intermediate_output_bd226; assert_in_epsilon(61.39316218351078, worksheet.intermediate_output_bd226, 0.001); end
  def test_intermediate_output_be226; assert_in_epsilon(85.74225353576414, worksheet.intermediate_output_be226, 0.001); end
  def test_intermediate_output_bf226; assert_in_epsilon(113.23867221085501, worksheet.intermediate_output_bf226, 0.001); end
  def test_intermediate_output_bg226; assert_in_epsilon(144.21565039737197, worksheet.intermediate_output_bg226, 0.001); end
  def test_intermediate_output_bh226; assert_in_epsilon(179.03885813693358, worksheet.intermediate_output_bh226, 0.001); end
  def test_intermediate_output_c227; assert_equal("V.b", worksheet.intermediate_output_c227); end
  def test_intermediate_output_d227; assert_equal("V.05", worksheet.intermediate_output_d227); end
  def test_intermediate_output_e227; assert_equal("Gaseous hydrocarbons", worksheet.intermediate_output_e227); end
  def test_intermediate_output_aj227; assert_in_epsilon(4.679912, worksheet.intermediate_output_aj227, 0.001); end
  def test_intermediate_output_ak227; assert_in_epsilon(6.65236, worksheet.intermediate_output_ak227, 0.001); end
  def test_intermediate_output_al227; assert_in_epsilon(8.5030419, worksheet.intermediate_output_al227, 0.001); end
  def test_intermediate_output_am227; assert_in_epsilon(9.7205866, worksheet.intermediate_output_am227, 0.001); end
  def test_intermediate_output_an227; assert_in_epsilon(10.375123, worksheet.intermediate_output_an227, 0.001); end
  def test_intermediate_output_ao227; assert_in_epsilon(12.654603, worksheet.intermediate_output_ao227, 0.001); end
  def test_intermediate_output_ap227; assert_in_epsilon(17.4844257, worksheet.intermediate_output_ap227, 0.001); end
  def test_intermediate_output_aq227; assert_in_epsilon(18.91593462, worksheet.intermediate_output_aq227, 0.001); end
  def test_intermediate_output_ar227; assert_in_epsilon(19.24482717, worksheet.intermediate_output_ar227, 0.001); end
  def test_intermediate_output_as227; assert_in_epsilon(20.29461125, worksheet.intermediate_output_as227, 0.001); end
  def test_intermediate_output_at227; assert_in_epsilon(20.91263605, worksheet.intermediate_output_at227, 0.001); end
  def test_intermediate_output_au227; assert_in_epsilon(21.92331406, worksheet.intermediate_output_au227, 0.001); end
  def test_intermediate_output_av227; assert_in_epsilon(22.89564828, worksheet.intermediate_output_av227, 0.001); end
  def test_intermediate_output_aw227; assert_equal("Calculation", worksheet.intermediate_output_aw227); end
  def test_intermediate_output_ay227; assert_in_epsilon(22.003982326267895, worksheet.intermediate_output_ay227, 0.001); end
  def test_intermediate_output_az227; assert_in_epsilon(19.01793396955904, worksheet.intermediate_output_az227, 0.001); end
  def test_intermediate_output_ba227; assert_in_epsilon(33.45776700031678, worksheet.intermediate_output_ba227, 0.001); end
  def test_intermediate_output_bb227; assert_in_epsilon(47.51275641919732, worksheet.intermediate_output_bb227, 0.001); end
  def test_intermediate_output_bc227; assert_in_epsilon(52.71818656690877, worksheet.intermediate_output_bc227, 0.001); end
  def test_intermediate_output_bd227; assert_in_epsilon(53.447765106522894, worksheet.intermediate_output_bd227, 0.001); end
  def test_intermediate_output_be227; assert_in_epsilon(54.73774984805112, worksheet.intermediate_output_be227, 0.001); end
  def test_intermediate_output_bf227; assert_in_epsilon(57.45466055503756, worksheet.intermediate_output_bf227, 0.001); end
  def test_intermediate_output_bg227; assert_in_epsilon(66.49201385991722, worksheet.intermediate_output_bg227, 0.001); end
  def test_intermediate_output_bh227; assert_in_epsilon(68.45964710488106, worksheet.intermediate_output_bh227, 0.001); end
  def test_intermediate_output_b229; assert_equal("Hydro-carbon use by sector and Bio-energy share", worksheet.intermediate_output_b229); end
  def test_intermediate_output_ay229; assert_equal("Please note: Bio-energy is not assigned to sectors but is assumed to replace fossil fuels up to maximum demand", worksheet.intermediate_output_ay229); end
  def test_intermediate_output_c231; assert_equal("Solid Hydrocarbon consumption", worksheet.intermediate_output_c231); end
  def test_intermediate_output_ay231; assert_in_epsilon(496.38670892459777, worksheet.intermediate_output_ay231, 0.001); end
  def test_intermediate_output_az231; assert_in_epsilon(444.8906627246124, worksheet.intermediate_output_az231, 0.001); end
  def test_intermediate_output_ba231; assert_in_epsilon(372.85372697083795, worksheet.intermediate_output_ba231, 0.001); end
  def test_intermediate_output_bb231; assert_in_epsilon(291.5313933413785, worksheet.intermediate_output_bb231, 0.001); end
  def test_intermediate_output_bc231; assert_in_epsilon(185.38853299905753, worksheet.intermediate_output_bc231, 0.001); end
  def test_intermediate_output_bd231; assert_in_epsilon(104.00961232337345, worksheet.intermediate_output_bd231, 0.001); end
  def test_intermediate_output_be231; assert_in_epsilon(103.87512178497008, worksheet.intermediate_output_be231, 0.001); end
  def test_intermediate_output_bf231; assert_in_epsilon(100.31688409288134, worksheet.intermediate_output_bf231, 0.001); end
  def test_intermediate_output_bg231; assert_in_epsilon(92.83803683781102, worksheet.intermediate_output_bg231, 0.001); end
  def test_intermediate_output_bh231; assert_in_epsilon(82.07051868496265, worksheet.intermediate_output_bh231, 0.001); end
  def test_intermediate_output_c232; assert_equal("V", worksheet.intermediate_output_c232); end
  def test_intermediate_output_d232; assert_equal("Share of solid biomass to total solid hydrocarbon consumption", worksheet.intermediate_output_d232); end
  def test_intermediate_output_c233; assert_equal("I.b", worksheet.intermediate_output_c233); end
  def test_intermediate_output_d233; assert_equal("CCS Power", worksheet.intermediate_output_d233); end
  def test_intermediate_output_ak233; assert_in_delta(0, (worksheet.intermediate_output_ak233||0), 0.001); end
  def test_intermediate_output_al233; assert_in_delta(0, (worksheet.intermediate_output_al233||0), 0.001); end
  def test_intermediate_output_am233; assert_in_delta(0, (worksheet.intermediate_output_am233||0), 0.001); end
  def test_intermediate_output_an233; assert_in_delta(0, (worksheet.intermediate_output_an233||0), 0.001); end
  def test_intermediate_output_ao233; assert_in_delta(0, (worksheet.intermediate_output_ao233||0), 0.001); end
  def test_intermediate_output_ap233; assert_in_delta(0, (worksheet.intermediate_output_ap233||0), 0.001); end
  def test_intermediate_output_aq233; assert_in_delta(0, (worksheet.intermediate_output_aq233||0), 0.001); end
  def test_intermediate_output_ar233; assert_in_delta(0, (worksheet.intermediate_output_ar233||0), 0.001); end
  def test_intermediate_output_as233; assert_in_delta(0, (worksheet.intermediate_output_as233||0), 0.001); end
  def test_intermediate_output_at233; assert_in_delta(0, (worksheet.intermediate_output_at233||0), 0.001); end
  def test_intermediate_output_au233; assert_in_delta(0, (worksheet.intermediate_output_au233||0), 0.001); end
  def test_intermediate_output_av233; assert_in_delta(0, (worksheet.intermediate_output_av233||0), 0.001); end
  def test_intermediate_output_aw233; assert_equal("n/a ", worksheet.intermediate_output_aw233); end
  def test_intermediate_output_ay233; assert_in_delta(0, (worksheet.intermediate_output_ay233||0), 0.001); end
  def test_intermediate_output_az233; assert_in_delta(0, (worksheet.intermediate_output_az233||0), 0.001); end
  def test_intermediate_output_ba233; assert_in_epsilon(6.773727272727275, worksheet.intermediate_output_ba233, 0.001); end
  def test_intermediate_output_bb233; assert_in_epsilon(20.697500000000005, worksheet.intermediate_output_bb233, 0.001); end
  def test_intermediate_output_bc233; assert_in_epsilon(20.24755434782609, worksheet.intermediate_output_bc233, 0.001); end
  def test_intermediate_output_bd233; assert_in_epsilon(19.81675531914894, worksheet.intermediate_output_bd233, 0.001); end
  def test_intermediate_output_be233; assert_in_epsilon(19.40390625, worksheet.intermediate_output_be233, 0.001); end
  def test_intermediate_output_bf233; assert_in_epsilon(19.403906250000002, worksheet.intermediate_output_bf233, 0.001); end
  def test_intermediate_output_bg233; assert_in_epsilon(19.007908163265306, worksheet.intermediate_output_bg233, 0.001); end
  def test_intermediate_output_bh233; assert_in_epsilon(18.627750000000002, worksheet.intermediate_output_bh233, 0.001); end
  def test_intermediate_output_c234; assert_equal("I.a", worksheet.intermediate_output_c234); end
  def test_intermediate_output_d234; assert_equal("Biomass/Coal power stations", worksheet.intermediate_output_d234); end
  def test_intermediate_output_ak234; assert_in_delta(0, (worksheet.intermediate_output_ak234||0), 0.001); end
  def test_intermediate_output_al234; assert_in_delta(0, (worksheet.intermediate_output_al234||0), 0.001); end
  def test_intermediate_output_am234; assert_in_delta(0, (worksheet.intermediate_output_am234||0), 0.001); end
  def test_intermediate_output_an234; assert_in_delta(0, (worksheet.intermediate_output_an234||0), 0.001); end
  def test_intermediate_output_ao234; assert_in_delta(0, (worksheet.intermediate_output_ao234||0), 0.001); end
  def test_intermediate_output_ap234; assert_in_delta(0, (worksheet.intermediate_output_ap234||0), 0.001); end
  def test_intermediate_output_aq234; assert_in_delta(0, (worksheet.intermediate_output_aq234||0), 0.001); end
  def test_intermediate_output_ar234; assert_in_delta(0, (worksheet.intermediate_output_ar234||0), 0.001); end
  def test_intermediate_output_as234; assert_in_delta(0, (worksheet.intermediate_output_as234||0), 0.001); end
  def test_intermediate_output_at234; assert_in_delta(0, (worksheet.intermediate_output_at234||0), 0.001); end
  def test_intermediate_output_au234; assert_in_delta(0, (worksheet.intermediate_output_au234||0), 0.001); end
  def test_intermediate_output_av234; assert_in_delta(0, (worksheet.intermediate_output_av234||0), 0.001); end
  def test_intermediate_output_aw234; assert_equal("DUKES -  Electricity fuel use, generation and supply", worksheet.intermediate_output_aw234); end
  def test_intermediate_output_ay234; assert_in_epsilon(426.68958128074416, worksheet.intermediate_output_ay234, 0.001); end
  def test_intermediate_output_az234; assert_in_epsilon(380.41144958733827, worksheet.intermediate_output_az234, 0.001); end
  def test_intermediate_output_ba234; assert_in_epsilon(309.27508250412575, worksheet.intermediate_output_ba234, 0.001); end
  def test_intermediate_output_bb234; assert_in_epsilon(200.13653347541222, worksheet.intermediate_output_bb234, 0.001); end
  def test_intermediate_output_bc234; assert_in_epsilon(85.42367903607851, worksheet.intermediate_output_bc234, 0.001); end
  def test_intermediate_output_bd234; assert_in_delta(0, (worksheet.intermediate_output_bd234||0), 0.001); end
  def test_intermediate_output_be234; assert_in_delta(0, (worksheet.intermediate_output_be234||0), 0.001); end
  def test_intermediate_output_bf234; assert_in_delta(0, (worksheet.intermediate_output_bf234||0), 0.001); end
  def test_intermediate_output_bg234; assert_in_delta(0, (worksheet.intermediate_output_bg234||0), 0.001); end
  def test_intermediate_output_bh234; assert_in_delta(0, (worksheet.intermediate_output_bh234||0), 0.001); end
  def test_intermediate_output_c235; assert_equal("XI", worksheet.intermediate_output_c235); end
  def test_intermediate_output_d235; assert_equal("Industry", worksheet.intermediate_output_d235); end
  def test_intermediate_output_ak235; assert_in_epsilon(113.55532, worksheet.intermediate_output_ak235, 0.001); end
  def test_intermediate_output_al235; assert_in_epsilon(117.004, worksheet.intermediate_output_al235, 0.001); end
  def test_intermediate_output_am235; assert_in_epsilon(114.168, worksheet.intermediate_output_am235, 0.001); end
  def test_intermediate_output_an235; assert_in_epsilon(112.6194092, worksheet.intermediate_output_an235, 0.001); end
  def test_intermediate_output_ao235; assert_in_epsilon(112.1681073, worksheet.intermediate_output_ao235, 0.001); end
  def test_intermediate_output_ap235; assert_in_epsilon(113.9677442, worksheet.intermediate_output_ap235, 0.001); end
  def test_intermediate_output_aq235; assert_in_epsilon(118.5182465, worksheet.intermediate_output_aq235, 0.001); end
  def test_intermediate_output_ar235; assert_in_epsilon(117.2874293, worksheet.intermediate_output_ar235, 0.001); end
  def test_intermediate_output_as235; assert_in_epsilon(116.4151009, worksheet.intermediate_output_as235, 0.001); end
  def test_intermediate_output_at235; assert_in_epsilon(116.8549575, worksheet.intermediate_output_at235, 0.001); end
  def test_intermediate_output_au235; assert_in_epsilon(103.0706654, worksheet.intermediate_output_au235, 0.001); end
  def test_intermediate_output_av235; assert_in_epsilon(106.6044588, worksheet.intermediate_output_av235, 0.001); end
  def test_intermediate_output_aw235; assert_equal("DUKES - Aggregate energy balances, industry, coal", worksheet.intermediate_output_aw235); end
  def test_intermediate_output_ay235; assert_in_epsilon(54.553269110073614, worksheet.intermediate_output_ay235, 0.001); end
  def test_intermediate_output_az235; assert_in_epsilon(52.08788567535594, worksheet.intermediate_output_az235, 0.001); end
  def test_intermediate_output_ba235; assert_in_epsilon(48.20129487842991, worksheet.intermediate_output_ba235, 0.001); end
  def test_intermediate_output_bb235; assert_in_epsilon(44.57303989852375, worksheet.intermediate_output_bb235, 0.001); end
  def test_intermediate_output_bc235; assert_in_epsilon(41.18225978982514, worksheet.intermediate_output_bc235, 0.001); end
  def test_intermediate_output_bd235; assert_in_epsilon(38.009931279643055, worksheet.intermediate_output_bd235, 0.001); end
  def test_intermediate_output_be235; assert_in_epsilon(35.038704739833776, worksheet.intermediate_output_be235, 0.001); end
  def test_intermediate_output_bf235; assert_in_epsilon(32.25275467655611, worksheet.intermediate_output_bf235, 0.001); end
  def test_intermediate_output_bg235; assert_in_epsilon(29.63764346846324, worksheet.intermediate_output_bg235, 0.001); end
  def test_intermediate_output_bh235; assert_in_epsilon(27.180197193307766, worksheet.intermediate_output_bh235, 0.001); end
  def test_intermediate_output_c236; assert_equal("IX", worksheet.intermediate_output_c236); end
  def test_intermediate_output_d236; assert_equal("Heating", worksheet.intermediate_output_d236); end
  def test_intermediate_output_ak236; assert_in_epsilon(24.42074453, worksheet.intermediate_output_ak236, 0.001); end
  def test_intermediate_output_al236; assert_in_epsilon(17.4515637, worksheet.intermediate_output_al236, 0.001); end
  def test_intermediate_output_am236; assert_in_epsilon(17.50532048, worksheet.intermediate_output_am236, 0.001); end
  def test_intermediate_output_an236; assert_in_epsilon(11.8550141, worksheet.intermediate_output_an236, 0.001); end
  def test_intermediate_output_ao236; assert_in_epsilon(9.603553023, worksheet.intermediate_output_ao236, 0.001); end
  def test_intermediate_output_ap236; assert_in_epsilon(8.68614397, worksheet.intermediate_output_ap236, 0.001); end
  def test_intermediate_output_aq236; assert_in_epsilon(5.883140333, worksheet.intermediate_output_aq236, 0.001); end
  def test_intermediate_output_ar236; assert_in_epsilon(5.193713923, worksheet.intermediate_output_ar236, 0.001); end
  def test_intermediate_output_as236; assert_in_epsilon(5.849571352, worksheet.intermediate_output_as236, 0.001); end
  def test_intermediate_output_at236; assert_in_epsilon(6.189137293, worksheet.intermediate_output_at236, 0.001); end
  def test_intermediate_output_au236; assert_in_epsilon(6.601790658, worksheet.intermediate_output_au236, 0.001); end
  def test_intermediate_output_av236; assert_in_epsilon(6.54085466, worksheet.intermediate_output_av236, 0.001); end
  def test_intermediate_output_aw236; assert_equal("DUKES - Aggregate energy balances, domestic coal", worksheet.intermediate_output_aw236); end
  def test_intermediate_output_ay236; assert_in_epsilon(14.264597260728184, worksheet.intermediate_output_ay236, 0.001); end
  def test_intermediate_output_az236; assert_in_epsilon(11.49384942313591, worksheet.intermediate_output_az236, 0.001); end
  def test_intermediate_output_ba236; assert_in_epsilon(7.696052860208277, worksheet.intermediate_output_ba236, 0.001); end
  def test_intermediate_output_bb236; assert_in_epsilon(25.206616097295946, worksheet.intermediate_output_bb236, 0.001); end
  def test_intermediate_output_bc236; assert_in_epsilon(37.6071590657133, worksheet.intermediate_output_bc236, 0.001); end
  def test_intermediate_output_bd236; assert_in_epsilon(45.2519368403442, worksheet.intermediate_output_bd236, 0.001); end
  def test_intermediate_output_be236; assert_in_epsilon(48.47763894808821, worksheet.intermediate_output_be236, 0.001); end
  def test_intermediate_output_bf236; assert_in_epsilon(47.681427414558215, worksheet.intermediate_output_bf236, 0.001); end
  def test_intermediate_output_bg236; assert_in_epsilon(43.18972510621684, worksheet.intermediate_output_bg236, 0.001); end
  def test_intermediate_output_bh236; assert_in_epsilon(35.23580709276903, worksheet.intermediate_output_bh236, 0.001); end
  def test_intermediate_output_c238; assert_equal("Liquid Hydrocarbon consumption", worksheet.intermediate_output_c238); end
  def test_intermediate_output_ay238; assert_in_epsilon(905.5062770948471, worksheet.intermediate_output_ay238, 0.001); end
  def test_intermediate_output_az238; assert_in_epsilon(855.2094824761291, worksheet.intermediate_output_az238, 0.001); end
  def test_intermediate_output_ba238; assert_in_epsilon(764.3131321113813, worksheet.intermediate_output_ba238, 0.001); end
  def test_intermediate_output_bb238; assert_in_epsilon(664.1296979555792, worksheet.intermediate_output_bb238, 0.001); end
  def test_intermediate_output_bc238; assert_in_epsilon(536.4073805742506, worksheet.intermediate_output_bc238, 0.001); end
  def test_intermediate_output_bd238; assert_in_epsilon(430.27011709896374, worksheet.intermediate_output_bd238, 0.001); end
  def test_intermediate_output_be238; assert_in_epsilon(388.7169189293097, worksheet.intermediate_output_be238, 0.001); end
  def test_intermediate_output_bf238; assert_in_epsilon(349.84384012451306, worksheet.intermediate_output_bf238, 0.001); end
  def test_intermediate_output_bg238; assert_in_epsilon(308.3786601664144, worksheet.intermediate_output_bg238, 0.001); end
  def test_intermediate_output_bh238; assert_in_epsilon(270.671696249422, worksheet.intermediate_output_bh238, 0.001); end
  def test_intermediate_output_c239; assert_equal("V", worksheet.intermediate_output_c239); end
  def test_intermediate_output_d239; assert_equal("Share of Bioliquids to total liquid hydrocarbon consumption", worksheet.intermediate_output_d239); end
  def test_intermediate_output_ay239; assert_in_delta(0.001288986340290124, worksheet.intermediate_output_ay239, 0.001); end
  def test_intermediate_output_ba239; assert_in_delta(0.014949175991220745, worksheet.intermediate_output_ba239, 0.001); end
  def test_intermediate_output_bb239; assert_in_delta(0.031767173555517496, worksheet.intermediate_output_bb239, 0.001); end
  def test_intermediate_output_bc239; assert_in_delta(0.0725011926527527, worksheet.intermediate_output_bc239, 0.001); end
  def test_intermediate_output_bd239; assert_in_delta(0.1426851639092336, worksheet.intermediate_output_bd239, 0.001); end
  def test_intermediate_output_be239; assert_in_delta(0.22057762181264054, worksheet.intermediate_output_be239, 0.001); end
  def test_intermediate_output_bf239; assert_in_delta(0.32368348166585464, worksheet.intermediate_output_bf239, 0.001); end
  def test_intermediate_output_bg239; assert_in_delta(0.4676576852611883, worksheet.intermediate_output_bg239, 0.001); end
  def test_intermediate_output_c240; assert_equal("XII", worksheet.intermediate_output_c240); end
  def test_intermediate_output_d240; assert_equal("Transport", worksheet.intermediate_output_d240); end
  def test_intermediate_output_ak240; assert_equal(:na, worksheet.intermediate_output_ak240); end
  def test_intermediate_output_al240; assert_equal(:na, worksheet.intermediate_output_al240); end
  def test_intermediate_output_am240; assert_equal(:na, worksheet.intermediate_output_am240); end
  def test_intermediate_output_an240; assert_equal(:na, worksheet.intermediate_output_an240); end
  def test_intermediate_output_ao240; assert_equal(:na, worksheet.intermediate_output_ao240); end
  def test_intermediate_output_ap240; assert_equal(:na, worksheet.intermediate_output_ap240); end
  def test_intermediate_output_aq240; assert_equal(:na, worksheet.intermediate_output_aq240); end
  def test_intermediate_output_ar240; assert_equal(:na, worksheet.intermediate_output_ar240); end
  def test_intermediate_output_as240; assert_equal(:na, worksheet.intermediate_output_as240); end
  def test_intermediate_output_at240; assert_equal(:na, worksheet.intermediate_output_at240); end
  def test_intermediate_output_au240; assert_equal(:na, worksheet.intermediate_output_au240); end
  def test_intermediate_output_av240; assert_equal(:na, worksheet.intermediate_output_av240); end
  def test_intermediate_output_aw240; assert_equal("Energy consumption in the UK, Transport, Table 2.1, total petroleum use", worksheet.intermediate_output_aw240); end
  def test_intermediate_output_ay240; assert_in_epsilon(732.8202358203371, worksheet.intermediate_output_ay240, 0.001); end
  def test_intermediate_output_az240; assert_in_epsilon(692.4158960514652, worksheet.intermediate_output_az240, 0.001); end
  def test_intermediate_output_ba240; assert_in_epsilon(621.7754584094932, worksheet.intermediate_output_ba240, 0.001); end
  def test_intermediate_output_bb240; assert_in_epsilon(531.8225351228524, worksheet.intermediate_output_bb240, 0.001); end
  def test_intermediate_output_bc240; assert_in_epsilon(413.0983172466855, worksheet.intermediate_output_bc240, 0.001); end
  def test_intermediate_output_bd240; assert_in_epsilon(314.8326645475689, worksheet.intermediate_output_bd240, 0.001); end
  def test_intermediate_output_be240; assert_in_epsilon(280.25293540023614, worksheet.intermediate_output_be240, 0.001); end
  def test_intermediate_output_bf240; assert_in_epsilon(247.5708553400038, worksheet.intermediate_output_bf240, 0.001); end
  def test_intermediate_output_bg240; assert_in_epsilon(211.62162491320618, worksheet.intermediate_output_bg240, 0.001); end
  def test_intermediate_output_bh240; assert_in_epsilon(178.84586872755173, worksheet.intermediate_output_bh240, 0.001); end
  def test_intermediate_output_c241; assert_equal("XI", worksheet.intermediate_output_c241); end
  def test_intermediate_output_d241; assert_equal("Industry", worksheet.intermediate_output_d241); end
  def test_intermediate_output_ak241; assert_in_epsilon(73.00151, worksheet.intermediate_output_ak241, 0.001); end
  def test_intermediate_output_al241; assert_in_epsilon(76.15702378, worksheet.intermediate_output_al241, 0.001); end
  def test_intermediate_output_am241; assert_in_epsilon(72.21332952, worksheet.intermediate_output_am241, 0.001); end
  def test_intermediate_output_an241; assert_in_epsilon(58.04690626, worksheet.intermediate_output_an241, 0.001); end
  def test_intermediate_output_ao241; assert_in_epsilon(56.93925004, worksheet.intermediate_output_ao241, 0.001); end
  def test_intermediate_output_ap241; assert_in_epsilon(53.5808897, worksheet.intermediate_output_ap241, 0.001); end
  def test_intermediate_output_aq241; assert_in_epsilon(55.73394665, worksheet.intermediate_output_aq241, 0.001); end
  def test_intermediate_output_ar241; assert_in_epsilon(59.85796902, worksheet.intermediate_output_ar241, 0.001); end
  def test_intermediate_output_as241; assert_in_epsilon(60.4447161, worksheet.intermediate_output_as241, 0.001); end
  def test_intermediate_output_at241; assert_in_epsilon(59.74594793, worksheet.intermediate_output_at241, 0.001); end
  def test_intermediate_output_au241; assert_in_epsilon(52.77511272, worksheet.intermediate_output_au241, 0.001); end
  def test_intermediate_output_av241; assert_in_epsilon(55.63460029, worksheet.intermediate_output_av241, 0.001); end
  def test_intermediate_output_aw241; assert_equal("DUKES - aggregate energy balances, industry liquid hydrocarbons", worksheet.intermediate_output_aw241); end
  def test_intermediate_output_ay241; assert_in_epsilon(81.62303487912313, worksheet.intermediate_output_ay241, 0.001); end
  def test_intermediate_output_az241; assert_in_epsilon(78.5284345229596, worksheet.intermediate_output_az241, 0.001); end
  def test_intermediate_output_ba241; assert_in_epsilon(73.64368608072903, worksheet.intermediate_output_ba241, 0.001); end
  def test_intermediate_output_bb241; assert_in_epsilon(69.07646214650293, worksheet.intermediate_output_bb241, 0.001); end
  def test_intermediate_output_bc241; assert_in_epsilon(64.80162353391997, worksheet.intermediate_output_bc241, 0.001); end
  def test_intermediate_output_bd241; assert_in_epsilon(60.7961961080917, worksheet.intermediate_output_bd241, 0.001); end
  def test_intermediate_output_be241; assert_in_epsilon(57.03918133560216, worksheet.intermediate_output_be241, 0.001); end
  def test_intermediate_output_bf241; assert_in_epsilon(53.511383334500294, worksheet.intermediate_output_bf241, 0.001); end
  def test_intermediate_output_bg241; assert_in_epsilon(50.195250999744935, worksheet.intermediate_output_bg241, 0.001); end
  def test_intermediate_output_bh241; assert_in_epsilon(47.074733901503805, worksheet.intermediate_output_bh241, 0.001); end
  def test_intermediate_output_c242; assert_equal("XV.a", worksheet.intermediate_output_c242); end
  def test_intermediate_output_d242; assert_equal("Petroleum refineries", worksheet.intermediate_output_d242); end
  def test_intermediate_output_ak242; assert_in_epsilon(68.37816011, worksheet.intermediate_output_ak242, 0.001); end
  def test_intermediate_output_al242; assert_in_epsilon(64.8507886, worksheet.intermediate_output_al242, 0.001); end
  def test_intermediate_output_am242; assert_in_epsilon(63.04462365, worksheet.intermediate_output_am242, 0.001); end
  def test_intermediate_output_an242; assert_in_epsilon(70.29185596, worksheet.intermediate_output_an242, 0.001); end
  def test_intermediate_output_ao242; assert_in_epsilon(67.50576921, worksheet.intermediate_output_ao242, 0.001); end
  def test_intermediate_output_ap242; assert_in_epsilon(67.55346877, worksheet.intermediate_output_ap242, 0.001); end
  def test_intermediate_output_aq242; assert_in_epsilon(69.45787, worksheet.intermediate_output_aq242, 0.001); end
  def test_intermediate_output_ar242; assert_in_epsilon(60.05119281, worksheet.intermediate_output_ar242, 0.001); end
  def test_intermediate_output_as242; assert_in_epsilon(57.24685939, worksheet.intermediate_output_as242, 0.001); end
  def test_intermediate_output_at242; assert_in_epsilon(58.57160534, worksheet.intermediate_output_at242, 0.001); end
  def test_intermediate_output_au242; assert_in_epsilon(53.80431206, worksheet.intermediate_output_au242, 0.001); end
  def test_intermediate_output_av242; assert_in_epsilon(54.98917277, worksheet.intermediate_output_av242, 0.001); end
  def test_intermediate_output_aw242; assert_equal("DUKES aggregate energy balances, petroleum refinaries petroleum products use", worksheet.intermediate_output_aw242); end
  def test_intermediate_output_ay242; assert_in_epsilon(56.26668514219076, worksheet.intermediate_output_ay242, 0.001); end
  def test_intermediate_output_az242; assert_in_epsilon(52.999433672866644, worksheet.intermediate_output_az242, 0.001); end
  def test_intermediate_output_ba242; assert_in_epsilon(50.22299177401591, worksheet.intermediate_output_ba242, 0.001); end
  def test_intermediate_output_bb242; assert_in_epsilon(47.636958248593686, worksheet.intermediate_output_bb242, 0.001); end
  def test_intermediate_output_bc242; assert_in_epsilon(45.61302133938901, worksheet.intermediate_output_bc242, 0.001); end
  def test_intermediate_output_bd242; assert_in_epsilon(44.04693754034375, worksheet.intermediate_output_bd242, 0.001); end
  def test_intermediate_output_be242; assert_in_epsilon(42.83513175011493, worksheet.intermediate_output_be242, 0.001); end
  def test_intermediate_output_bf242; assert_in_epsilon(41.89745952968376, worksheet.intermediate_output_bf242, 0.001); end
  def test_intermediate_output_bg242; assert_in_epsilon(41.17190663989083, worksheet.intermediate_output_bg242, 0.001); end
  def test_intermediate_output_bh242; assert_in_epsilon(40.61048764462101, worksheet.intermediate_output_bh242, 0.001); end
  def test_intermediate_output_c244; assert_equal("Gaseous Hydrocarbon consumption", worksheet.intermediate_output_c244); end
  def test_intermediate_output_ay244; assert_in_epsilon(989.4325303419978, worksheet.intermediate_output_ay244, 0.001); end
  def test_intermediate_output_az244; assert_in_epsilon(901.8385984583198, worksheet.intermediate_output_az244, 0.001); end
  def test_intermediate_output_ba244; assert_in_epsilon(786.6767579026948, worksheet.intermediate_output_ba244, 0.001); end
  def test_intermediate_output_bb244; assert_in_epsilon(605.7873254290457, worksheet.intermediate_output_bb244, 0.001); end
  def test_intermediate_output_bc244; assert_in_epsilon(432.6282171066534, worksheet.intermediate_output_bc244, 0.001); end
  def test_intermediate_output_bd244; assert_in_epsilon(293.1086386335795, worksheet.intermediate_output_bd244, 0.001); end
  def test_intermediate_output_be244; assert_in_epsilon(230.52475130513426, worksheet.intermediate_output_be244, 0.001); end
  def test_intermediate_output_bf244; assert_in_epsilon(168.51173328450162, worksheet.intermediate_output_bf244, 0.001); end
  def test_intermediate_output_bg244; assert_in_epsilon(114.77466604259581, worksheet.intermediate_output_bg244, 0.001); end
  def test_intermediate_output_bh244; assert_in_epsilon(68.45964710488106, worksheet.intermediate_output_bh244, 0.001); end
  def test_intermediate_output_c245; assert_equal("V", worksheet.intermediate_output_c245); end
  def test_intermediate_output_d245; assert_equal("Share of Biogas to total gaseous hydrocarbon consumption", worksheet.intermediate_output_d245); end
  def test_intermediate_output_c246; assert_equal("IX.a", worksheet.intermediate_output_c246); end
  def test_intermediate_output_d246; assert_equal("Domestic space heating and hot water", worksheet.intermediate_output_d246); end
  def test_intermediate_output_ar246; assert_in_epsilon(254.0914794, worksheet.intermediate_output_ar246, 0.001); end
  def test_intermediate_output_as246; assert_in_epsilon(241.4598289, worksheet.intermediate_output_as246, 0.001); end
  def test_intermediate_output_at246; assert_in_epsilon(254.5511238, worksheet.intermediate_output_at246, 0.001); end
  def test_intermediate_output_au246; assert_in_epsilon(251.6905486, worksheet.intermediate_output_au246, 0.001); end
  def test_intermediate_output_aw246; assert_equal("Energy consumption in UK, domestic gas space heating", worksheet.intermediate_output_aw246); end
  def test_intermediate_output_ay246; assert_in_epsilon(324.6552003579533, worksheet.intermediate_output_ay246, 0.001); end
  def test_intermediate_output_az246; assert_in_epsilon(310.2020419273092, worksheet.intermediate_output_az246, 0.001); end
  def test_intermediate_output_ba246; assert_in_epsilon(274.1685400513792, worksheet.intermediate_output_ba246, 0.001); end
  def test_intermediate_output_bb246; assert_in_epsilon(217.0911702412414, worksheet.intermediate_output_bb246, 0.001); end
  def test_intermediate_output_bc246; assert_in_epsilon(168.2522432954576, worksheet.intermediate_output_bc246, 0.001); end
  def test_intermediate_output_bd246; assert_in_epsilon(126.59051092008973, worksheet.intermediate_output_bd246, 0.001); end
  def test_intermediate_output_be246; assert_in_epsilon(91.60719384555765, worksheet.intermediate_output_be246, 0.001); end
  def test_intermediate_output_bf246; assert_in_epsilon(62.96355849629242, worksheet.intermediate_output_bf246, 0.001); end
  def test_intermediate_output_bg246; assert_in_epsilon(40.17783609466846, worksheet.intermediate_output_bg246, 0.001); end
  def test_intermediate_output_bh246; assert_in_epsilon(22.763726859437412, worksheet.intermediate_output_bh246, 0.001); end
  def test_intermediate_output_c247; assert_equal("IX.c", worksheet.intermediate_output_c247); end
  def test_intermediate_output_d247; assert_equal("Commercial heating and cooling", worksheet.intermediate_output_d247); end
  def test_intermediate_output_ar247; assert_in_epsilon(75.26536024, worksheet.intermediate_output_ar247, 0.001); end
  def test_intermediate_output_as247; assert_in_epsilon(72.43646261, worksheet.intermediate_output_as247, 0.001); end
  def test_intermediate_output_at247; assert_in_epsilon(70.4353316, worksheet.intermediate_output_at247, 0.001); end
  def test_intermediate_output_au247; assert_in_epsilon(61.68484301, worksheet.intermediate_output_au247, 0.001); end
  def test_intermediate_output_aw247; assert_equal("Energy consumption in UK, commercial gas space heating", worksheet.intermediate_output_aw247); end
  def test_intermediate_output_ay247; assert_in_epsilon(78.26235982624942, worksheet.intermediate_output_ay247, 0.001); end
  def test_intermediate_output_az247; assert_in_epsilon(76.78724669480462, worksheet.intermediate_output_az247, 0.001); end
  def test_intermediate_output_ba247; assert_in_epsilon(74.9428879863531, worksheet.intermediate_output_ba247, 0.001); end
  def test_intermediate_output_bb247; assert_in_epsilon(62.49813821201373, worksheet.intermediate_output_bb247, 0.001); end
  def test_intermediate_output_bc247; assert_in_epsilon(50.79957529629567, worksheet.intermediate_output_bc247, 0.001); end
  def test_intermediate_output_bd247; assert_in_epsilon(39.74615702410077, worksheet.intermediate_output_bd247, 0.001); end
  def test_intermediate_output_be247; assert_in_epsilon(29.24067722811602, worksheet.intermediate_output_be247, 0.001); end
  def test_intermediate_output_bf247; assert_in_epsilon(19.188945321768852, worksheet.intermediate_output_bf247, 0.001); end
  def test_intermediate_output_bg247; assert_in_epsilon(9.498987882353585, worksheet.intermediate_output_bg247, 0.001); end
  def test_intermediate_output_bh247; assert_in_delta(0.08026608473685735, worksheet.intermediate_output_bh247, 0.001); end
  def test_intermediate_output_c248; assert_equal("XI", worksheet.intermediate_output_c248); end
  def test_intermediate_output_d248; assert_equal("Industry", worksheet.intermediate_output_d248); end
  def test_intermediate_output_ak248; assert_in_epsilon(68.19307333, worksheet.intermediate_output_ak248, 0.001); end
  def test_intermediate_output_al248; assert_in_epsilon(84.8390885, worksheet.intermediate_output_al248, 0.001); end
  def test_intermediate_output_am248; assert_in_epsilon(76.97345584, worksheet.intermediate_output_am248, 0.001); end
  def test_intermediate_output_an248; assert_in_epsilon(62.61575762, worksheet.intermediate_output_an248, 0.001); end
  def test_intermediate_output_ao248; assert_in_epsilon(69.01463435, worksheet.intermediate_output_ao248, 0.001); end
  def test_intermediate_output_ap248; assert_in_epsilon(68.26181377, worksheet.intermediate_output_ap248, 0.001); end
  def test_intermediate_output_aq248; assert_in_epsilon(68.96100319, worksheet.intermediate_output_aq248, 0.001); end
  def test_intermediate_output_ar248; assert_in_epsilon(73.31393634, worksheet.intermediate_output_ar248, 0.001); end
  def test_intermediate_output_as248; assert_in_epsilon(75.52793362, worksheet.intermediate_output_as248, 0.001); end
  def test_intermediate_output_at248; assert_in_epsilon(74.21415243, worksheet.intermediate_output_at248, 0.001); end
  def test_intermediate_output_au248; assert_in_epsilon(59.8750939, worksheet.intermediate_output_au248, 0.001); end
  def test_intermediate_output_av248; assert_in_epsilon(59.91086183, worksheet.intermediate_output_av248, 0.001); end
  def test_intermediate_output_aw248; assert_equal("DUKES - 1.2 and 2.5", worksheet.intermediate_output_aw248); end
  def test_intermediate_output_ay248; assert_in_epsilon(150.05297390894643, worksheet.intermediate_output_ay248, 0.001); end
  def test_intermediate_output_az248; assert_in_epsilon(140.57843937446975, worksheet.intermediate_output_az248, 0.001); end
  def test_intermediate_output_ba248; assert_in_epsilon(125.67035978771972, worksheet.intermediate_output_ba248, 0.001); end
  def test_intermediate_output_bb248; assert_in_epsilon(111.78564356085244, worksheet.intermediate_output_bb248, 0.001); end
  def test_intermediate_output_bc248; assert_in_epsilon(98.8393801969895, worksheet.intermediate_output_bc248, 0.001); end
  def test_intermediate_output_bd248; assert_in_epsilon(86.754363484735, worksheet.intermediate_output_bd248, 0.001); end
  def test_intermediate_output_be248; assert_in_epsilon(75.46038659638278, worksheet.intermediate_output_be248, 0.001); end
  def test_intermediate_output_bf248; assert_in_epsilon(56.87131133284786, worksheet.intermediate_output_bf248, 0.001); end
  def test_intermediate_output_bg248; assert_in_epsilon(39.48043663432262, worksheet.intermediate_output_bg248, 0.001); end
  def test_intermediate_output_bh248; assert_in_epsilon(23.19196925530487, worksheet.intermediate_output_bh248, 0.001); end
  def test_intermediate_output_c249; assert_equal("I.a", worksheet.intermediate_output_c249); end
  def test_intermediate_output_d249; assert_equal("Biomass/Coal power stations", worksheet.intermediate_output_d249); end
  def test_intermediate_output_ak249; assert_in_delta(0, (worksheet.intermediate_output_ak249||0), 0.001); end
  def test_intermediate_output_al249; assert_in_delta(0, (worksheet.intermediate_output_al249||0), 0.001); end
  def test_intermediate_output_am249; assert_in_delta(0, (worksheet.intermediate_output_am249||0), 0.001); end
  def test_intermediate_output_an249; assert_in_delta(0, (worksheet.intermediate_output_an249||0), 0.001); end
  def test_intermediate_output_ao249; assert_in_delta(0, (worksheet.intermediate_output_ao249||0), 0.001); end
  def test_intermediate_output_ap249; assert_in_delta(0, (worksheet.intermediate_output_ap249||0), 0.001); end
  def test_intermediate_output_aq249; assert_in_delta(0, (worksheet.intermediate_output_aq249||0), 0.001); end
  def test_intermediate_output_ar249; assert_in_delta(0, (worksheet.intermediate_output_ar249||0), 0.001); end
  def test_intermediate_output_as249; assert_in_delta(0, (worksheet.intermediate_output_as249||0), 0.001); end
  def test_intermediate_output_at249; assert_in_delta(0, (worksheet.intermediate_output_at249||0), 0.001); end
  def test_intermediate_output_au249; assert_in_delta(0, (worksheet.intermediate_output_au249||0), 0.001); end
  def test_intermediate_output_av249; assert_in_delta(0, (worksheet.intermediate_output_av249||0), 0.001); end
  def test_intermediate_output_aw249; assert_equal("DUKES -  Electricity fuel use, generation and supply", worksheet.intermediate_output_aw249); end
  def test_intermediate_output_ay249; assert_in_epsilon(350.65068302528186, worksheet.intermediate_output_ay249, 0.001); end
  def test_intermediate_output_az249; assert_in_epsilon(300.81593957759156, worksheet.intermediate_output_az249, 0.001); end
  def test_intermediate_output_ba249; assert_in_epsilon(244.56381276730198, worksheet.intermediate_output_ba249, 0.001); end
  def test_intermediate_output_bb249; assert_in_epsilon(158.26090257408507, worksheet.intermediate_output_bb249, 0.001); end
  def test_intermediate_output_bc249; assert_in_epsilon(67.55002852644914, worksheet.intermediate_output_bc249, 0.001); end
  def test_intermediate_output_bd249; assert_in_delta(0, (worksheet.intermediate_output_bd249||0), 0.001); end
  def test_intermediate_output_be249; assert_in_delta(0, (worksheet.intermediate_output_be249||0), 0.001); end
  def test_intermediate_output_bf249; assert_in_delta(0, (worksheet.intermediate_output_bf249||0), 0.001); end
  def test_intermediate_output_bg249; assert_in_delta(0, (worksheet.intermediate_output_bg249||0), 0.001); end
  def test_intermediate_output_bh249; assert_in_delta(0, (worksheet.intermediate_output_bh249||0), 0.001); end
  def test_intermediate_output_c250; assert_equal("I.b", worksheet.intermediate_output_c250); end
  def test_intermediate_output_d250; assert_equal("CCS Power", worksheet.intermediate_output_d250); end
  def test_intermediate_output_ak250; assert_in_delta(0, (worksheet.intermediate_output_ak250||0), 0.001); end
  def test_intermediate_output_al250; assert_in_delta(0, (worksheet.intermediate_output_al250||0), 0.001); end
  def test_intermediate_output_am250; assert_in_delta(0, (worksheet.intermediate_output_am250||0), 0.001); end
  def test_intermediate_output_an250; assert_in_delta(0, (worksheet.intermediate_output_an250||0), 0.001); end
  def test_intermediate_output_ao250; assert_in_delta(0, (worksheet.intermediate_output_ao250||0), 0.001); end
  def test_intermediate_output_ap250; assert_in_delta(0, (worksheet.intermediate_output_ap250||0), 0.001); end
  def test_intermediate_output_aq250; assert_in_delta(0, (worksheet.intermediate_output_aq250||0), 0.001); end
  def test_intermediate_output_ar250; assert_in_delta(0, (worksheet.intermediate_output_ar250||0), 0.001); end
  def test_intermediate_output_as250; assert_in_delta(0, (worksheet.intermediate_output_as250||0), 0.001); end
  def test_intermediate_output_at250; assert_in_delta(0, (worksheet.intermediate_output_at250||0), 0.001); end
  def test_intermediate_output_au250; assert_in_delta(0, (worksheet.intermediate_output_au250||0), 0.001); end
  def test_intermediate_output_av250; assert_in_delta(0, (worksheet.intermediate_output_av250||0), 0.001); end
  def test_intermediate_output_aw250; assert_equal("n/a ", worksheet.intermediate_output_aw250); end
  def test_intermediate_output_ay250; assert_in_delta(0, (worksheet.intermediate_output_ay250||0), 0.001); end
  def test_intermediate_output_az250; assert_in_delta(0, (worksheet.intermediate_output_az250||0), 0.001); end
  def test_intermediate_output_ba250; assert_in_epsilon(5.781025862068966, worksheet.intermediate_output_ba250, 0.001); end
  def test_intermediate_output_bb250; assert_in_epsilon(5.683042372881357, worksheet.intermediate_output_bb250, 0.001); end
  def test_intermediate_output_bc250; assert_in_epsilon(5.588325, worksheet.intermediate_output_bc250, 0.001); end
  def test_intermediate_output_bd250; assert_in_epsilon(5.4967131147540975, worksheet.intermediate_output_bd250, 0.001); end
  def test_intermediate_output_be250; assert_in_epsilon(5.408056451612903, worksheet.intermediate_output_be250, 0.001); end
  def test_intermediate_output_bf250; assert_in_epsilon(5.322214285714286, worksheet.intermediate_output_bf250, 0.001); end
  def test_intermediate_output_bg250; assert_in_epsilon(5.2390546874999995, worksheet.intermediate_output_bg250, 0.001); end
  def test_intermediate_output_bh250; assert_in_epsilon(5.158453846153846, worksheet.intermediate_output_bh250, 0.001); end
  def test_intermediate_output_d252; assert_equal("Bio type", worksheet.intermediate_output_d252); end
  def test_intermediate_output_e252; assert_equal("Column1", worksheet.intermediate_output_e252); end
  def test_intermediate_output_f252; assert_equal("Column2", worksheet.intermediate_output_f252); end
  def test_intermediate_output_g252; assert_equal("Column22", worksheet.intermediate_output_g252); end
  def test_intermediate_output_h252; assert_equal("Column23", worksheet.intermediate_output_h252); end
  def test_intermediate_output_i252; assert_equal("Column24", worksheet.intermediate_output_i252); end
  def test_intermediate_output_j252; assert_equal("Column25", worksheet.intermediate_output_j252); end
  def test_intermediate_output_k252; assert_equal("Column26", worksheet.intermediate_output_k252); end
  def test_intermediate_output_l252; assert_equal("Column27", worksheet.intermediate_output_l252); end
  def test_intermediate_output_m252; assert_equal("Column28", worksheet.intermediate_output_m252); end
  def test_intermediate_output_n252; assert_equal("Column29", worksheet.intermediate_output_n252); end
  def test_intermediate_output_o252; assert_equal("Column30", worksheet.intermediate_output_o252); end
  def test_intermediate_output_p252; assert_equal("Column31", worksheet.intermediate_output_p252); end
  def test_intermediate_output_q252; assert_equal("Column32", worksheet.intermediate_output_q252); end
  def test_intermediate_output_r252; assert_equal("Column33", worksheet.intermediate_output_r252); end
  def test_intermediate_output_s252; assert_equal("Column34", worksheet.intermediate_output_s252); end
  def test_intermediate_output_t252; assert_equal("Column35", worksheet.intermediate_output_t252); end
  def test_intermediate_output_u252; assert_equal("Column36", worksheet.intermediate_output_u252); end
  def test_intermediate_output_v252; assert_equal("Column37", worksheet.intermediate_output_v252); end
  def test_intermediate_output_w252; assert_equal("Column38", worksheet.intermediate_output_w252); end
  def test_intermediate_output_x252; assert_equal("Column39", worksheet.intermediate_output_x252); end
  def test_intermediate_output_y252; assert_equal("Column40", worksheet.intermediate_output_y252); end
  def test_intermediate_output_z252; assert_equal("Column41", worksheet.intermediate_output_z252); end
  def test_intermediate_output_aa252; assert_equal("Column42", worksheet.intermediate_output_aa252); end
  def test_intermediate_output_ab252; assert_equal("Column43", worksheet.intermediate_output_ab252); end
  def test_intermediate_output_ac252; assert_equal("Column44", worksheet.intermediate_output_ac252); end
  def test_intermediate_output_ad252; assert_equal("Column45", worksheet.intermediate_output_ad252); end
  def test_intermediate_output_ae252; assert_equal("Column46", worksheet.intermediate_output_ae252); end
  def test_intermediate_output_af252; assert_equal("Column47", worksheet.intermediate_output_af252); end
  def test_intermediate_output_ag252; assert_equal("Column48", worksheet.intermediate_output_ag252); end
  def test_intermediate_output_ah252; assert_equal("Column49", worksheet.intermediate_output_ah252); end
  def test_intermediate_output_ai252; assert_equal("Column50", worksheet.intermediate_output_ai252); end
  def test_intermediate_output_aj252; assert_equal("Column51", worksheet.intermediate_output_aj252); end
  def test_intermediate_output_ak252; assert_equal("Column52", worksheet.intermediate_output_ak252); end
  def test_intermediate_output_al252; assert_equal("Column53", worksheet.intermediate_output_al252); end
  def test_intermediate_output_am252; assert_equal("Column54", worksheet.intermediate_output_am252); end
  def test_intermediate_output_an252; assert_equal("Column55", worksheet.intermediate_output_an252); end
  def test_intermediate_output_ao252; assert_equal("Column56", worksheet.intermediate_output_ao252); end
  def test_intermediate_output_ap252; assert_equal("Column57", worksheet.intermediate_output_ap252); end
  def test_intermediate_output_aq252; assert_equal("Column58", worksheet.intermediate_output_aq252); end
  def test_intermediate_output_ar252; assert_equal("Column59", worksheet.intermediate_output_ar252); end
  def test_intermediate_output_as252; assert_equal("Column60", worksheet.intermediate_output_as252); end
  def test_intermediate_output_at252; assert_equal("Column61", worksheet.intermediate_output_at252); end
  def test_intermediate_output_au252; assert_equal("Column612", worksheet.intermediate_output_au252); end
  def test_intermediate_output_av252; assert_equal("Column62", worksheet.intermediate_output_av252); end
  def test_intermediate_output_aw252; assert_equal("Column63", worksheet.intermediate_output_aw252); end
  def test_intermediate_output_ax252; assert_equal("Column3", worksheet.intermediate_output_ax252); end
  def test_intermediate_output_ay252; assert_equal("2007", worksheet.intermediate_output_ay252); end
  def test_intermediate_output_az252; assert_equal("2010", worksheet.intermediate_output_az252); end
  def test_intermediate_output_ba252; assert_equal("2015", worksheet.intermediate_output_ba252); end
  def test_intermediate_output_bb252; assert_equal("2020", worksheet.intermediate_output_bb252); end
  def test_intermediate_output_bc252; assert_equal("2025", worksheet.intermediate_output_bc252); end
  def test_intermediate_output_bd252; assert_equal("2030", worksheet.intermediate_output_bd252); end
  def test_intermediate_output_be252; assert_equal("2035", worksheet.intermediate_output_be252); end
  def test_intermediate_output_bf252; assert_equal("2040", worksheet.intermediate_output_bf252); end
  def test_intermediate_output_bg252; assert_equal("2045", worksheet.intermediate_output_bg252); end
  def test_intermediate_output_bh252; assert_equal("2050", worksheet.intermediate_output_bh252); end
  def test_intermediate_output_d253; assert_equal("Solid", worksheet.intermediate_output_d253); end
  def test_intermediate_output_ay232; assert_in_delta(0.03651131716371398, worksheet.intermediate_output_ay232, 0.001); end
  def test_intermediate_output_ay253; assert_in_delta(0.03651131716371398, worksheet.intermediate_output_ay253, 0.001); end
  def test_intermediate_output_az232; assert_in_delta(0.04440661096735354, worksheet.intermediate_output_az232, 0.001); end
  def test_intermediate_output_az253; assert_in_delta(0.04440661096735354, worksheet.intermediate_output_az253, 0.001); end
  def test_intermediate_output_ba232; assert_in_delta(0.06786217866474258, worksheet.intermediate_output_ba232, 0.001); end
  def test_intermediate_output_ba253; assert_in_delta(0.06786217866474258, worksheet.intermediate_output_ba253, 0.001); end
  def test_intermediate_output_bb232; assert_in_delta(0.17748955116349052, worksheet.intermediate_output_bb232, 0.001); end
  def test_intermediate_output_bb253; assert_in_delta(0.17748955116349052, worksheet.intermediate_output_bb253, 0.001); end
  def test_intermediate_output_bc232; assert_in_delta(0.4446575049995968, worksheet.intermediate_output_bc232, 0.001); end
  def test_intermediate_output_bc253; assert_in_delta(0.4446575049995968, worksheet.intermediate_output_bc253, 0.001); end
  def test_intermediate_output_bd232; assert_in_delta(0.8496952992406769, worksheet.intermediate_output_bd232, 0.001); end
  def test_intermediate_output_bd253; assert_in_delta(0.8496952992406769, worksheet.intermediate_output_bd253, 0.001); end
  def test_intermediate_output_be232; assert_in_delta(0.8414547893990627, worksheet.intermediate_output_be232, 0.001); end
  def test_intermediate_output_be253; assert_in_delta(0.8414547893990627, worksheet.intermediate_output_be253, 0.001); end
  def test_intermediate_output_bf232; assert_in_delta(0.8968490587709164, worksheet.intermediate_output_bf232, 0.001); end
  def test_intermediate_output_bf253; assert_in_delta(0.8968490587709164, worksheet.intermediate_output_bf253, 0.001); end
  def test_intermediate_output_bg232; assert_in_delta(0.9995919221968996, worksheet.intermediate_output_bg232, 0.001); end
  def test_intermediate_output_bg253; assert_in_delta(0.9995919221968996, worksheet.intermediate_output_bg253, 0.001); end
  def test_intermediate_output_bh232; assert_in_delta(1, worksheet.intermediate_output_bh232, 0.001); end
  def test_intermediate_output_bh253; assert_in_delta(1, worksheet.intermediate_output_bh253, 0.001); end
  def test_intermediate_output_d254; assert_equal("Liquid", worksheet.intermediate_output_d254); end
  def test_intermediate_output_ay254; assert_in_delta(0.001288986340290124, worksheet.intermediate_output_ay254, 0.001); end
  def test_intermediate_output_az239; assert_in_delta(0.003362218617509115, worksheet.intermediate_output_az239, 0.001); end
  def test_intermediate_output_az254; assert_in_delta(0.003362218617509115, worksheet.intermediate_output_az254, 0.001); end
  def test_intermediate_output_ba254; assert_in_delta(0.014949175991220745, worksheet.intermediate_output_ba254, 0.001); end
  def test_intermediate_output_bb254; assert_in_delta(0.031767173555517496, worksheet.intermediate_output_bb254, 0.001); end
  def test_intermediate_output_bc254; assert_in_delta(0.0725011926527527, worksheet.intermediate_output_bc254, 0.001); end
  def test_intermediate_output_bd254; assert_in_delta(0.1426851639092336, worksheet.intermediate_output_bd254, 0.001); end
  def test_intermediate_output_be254; assert_in_delta(0.22057762181264054, worksheet.intermediate_output_be254, 0.001); end
  def test_intermediate_output_bf254; assert_in_delta(0.32368348166585464, worksheet.intermediate_output_bf254, 0.001); end
  def test_intermediate_output_bg254; assert_in_delta(0.4676576852611883, worksheet.intermediate_output_bg254, 0.001); end
  def test_intermediate_output_bh239; assert_in_delta(0.6614613223982998, worksheet.intermediate_output_bh239, 0.001); end
  def test_intermediate_output_bh254; assert_in_delta(0.6614613223982998, worksheet.intermediate_output_bh254, 0.001); end
  def test_intermediate_output_d255; assert_equal("Gas", worksheet.intermediate_output_d255); end
  def test_intermediate_output_ay245; assert_in_delta(0.022238992201582666, worksheet.intermediate_output_ay245, 0.001); end
  def test_intermediate_output_ay255; assert_in_delta(0.022238992201582666, worksheet.intermediate_output_ay255, 0.001); end
  def test_intermediate_output_az245; assert_in_delta(0.021087957426162426, worksheet.intermediate_output_az245, 0.001); end
  def test_intermediate_output_az255; assert_in_delta(0.021087957426162426, worksheet.intermediate_output_az255, 0.001); end
  def test_intermediate_output_ba245; assert_in_delta(0.04253051417143205, worksheet.intermediate_output_ba245, 0.001); end
  def test_intermediate_output_ba255; assert_in_delta(0.04253051417143205, worksheet.intermediate_output_ba255, 0.001); end
  def test_intermediate_output_bb245; assert_in_delta(0.07843141383908397, worksheet.intermediate_output_bb245, 0.001); end
  def test_intermediate_output_bb255; assert_in_delta(0.07843141383908397, worksheet.intermediate_output_bb255, 0.001); end
  def test_intermediate_output_bc245; assert_in_delta(0.12185563604583946, worksheet.intermediate_output_bc245, 0.001); end
  def test_intermediate_output_bc255; assert_in_delta(0.12185563604583946, worksheet.intermediate_output_bc255, 0.001); end
  def test_intermediate_output_bd245; assert_in_delta(0.1823479695299562, worksheet.intermediate_output_bd245, 0.001); end
  def test_intermediate_output_bd255; assert_in_delta(0.1823479695299562, worksheet.intermediate_output_bd255, 0.001); end
  def test_intermediate_output_be245; assert_in_delta(0.23744847153352944, worksheet.intermediate_output_be245, 0.001); end
  def test_intermediate_output_be255; assert_in_delta(0.23744847153352944, worksheet.intermediate_output_be255, 0.001); end
  def test_intermediate_output_bf245; assert_in_delta(0.3409534721124478, worksheet.intermediate_output_bf245, 0.001); end
  def test_intermediate_output_bf255; assert_in_delta(0.3409534721124478, worksheet.intermediate_output_bf255, 0.001); end
  def test_intermediate_output_bg245; assert_in_delta(0.579326572252803, worksheet.intermediate_output_bg245, 0.001); end
  def test_intermediate_output_bg255; assert_in_delta(0.579326572252803, worksheet.intermediate_output_bg255, 0.001); end
  def test_intermediate_output_bh245; assert_in_delta(1, worksheet.intermediate_output_bh245, 0.001); end
  def test_intermediate_output_bh255; assert_in_delta(1, worksheet.intermediate_output_bh255, 0.001); end
  def test_intermediate_output_b257; assert_equal("Electricity Generation Emissions", worksheet.intermediate_output_b257); end
  def test_intermediate_output_c260; assert_equal("Emissions from Electricity Generation, exlcuding CHP", worksheet.intermediate_output_c260); end
  def test_intermediate_output_ay260; assert_equal("2007", worksheet.intermediate_output_ay260); end
  def test_intermediate_output_az260; assert_equal("2010", worksheet.intermediate_output_az260); end
  def test_intermediate_output_ba260; assert_equal("2015", worksheet.intermediate_output_ba260); end
  def test_intermediate_output_bb260; assert_equal("2020", worksheet.intermediate_output_bb260); end
  def test_intermediate_output_bc260; assert_equal("2025", worksheet.intermediate_output_bc260); end
  def test_intermediate_output_bd260; assert_equal("2030", worksheet.intermediate_output_bd260); end
  def test_intermediate_output_be260; assert_equal("2035", worksheet.intermediate_output_be260); end
  def test_intermediate_output_bf260; assert_equal("2040", worksheet.intermediate_output_bf260); end
  def test_intermediate_output_bg260; assert_equal("2045", worksheet.intermediate_output_bg260); end
  def test_intermediate_output_bh260; assert_equal("2050", worksheet.intermediate_output_bh260); end
  def test_intermediate_output_c261; assert_equal("Power Generation", worksheet.intermediate_output_c261); end
  def test_intermediate_output_c262; assert_equal("CCS in Power", worksheet.intermediate_output_c262); end
  def test_intermediate_output_ay262; assert_in_delta(0, (worksheet.intermediate_output_ay262||0), 0.001); end
  def test_intermediate_output_az262; assert_in_delta(0, (worksheet.intermediate_output_az262||0), 0.001); end
  def test_intermediate_output_ba262; assert_in_epsilon(-2.8350150827586207, worksheet.intermediate_output_ba262, 0.001); end
  def test_intermediate_output_bb262; assert_in_epsilon(-6.678458816949153, worksheet.intermediate_output_bb262, 0.001); end
  def test_intermediate_output_bc262; assert_in_epsilon(-6.538048685217391, worksheet.intermediate_output_bc262, 0.001); end
  def test_intermediate_output_bd262; assert_in_epsilon(-6.403460266271363, worksheet.intermediate_output_bd262, 0.001); end
  def test_intermediate_output_be262; assert_in_epsilon(-6.274336960887095, worksheet.intermediate_output_be262, 0.001); end
  def test_intermediate_output_bf262; assert_in_epsilon(-6.260121498214285, worksheet.intermediate_output_bf262, 0.001); end
  def test_intermediate_output_bg262; assert_in_epsilon(-6.136579599107142, worksheet.intermediate_output_bg262, 0.001); end
  def test_intermediate_output_bh262; assert_in_epsilon(-6.017852256923077, worksheet.intermediate_output_bh262, 0.001); end
  def test_intermediate_output_c263; assert_equal("Bioenergy in Gas Power", worksheet.intermediate_output_c263); end
  def test_intermediate_output_c264; assert_equal("Bioenergy in Solid BM Power", worksheet.intermediate_output_c264); end
  def test_intermediate_output_c265; assert_equal("Bioenergy in Solid HC CCS Power", worksheet.intermediate_output_c265); end
  def test_intermediate_output_c266; assert_equal("Bioenergy in Gas CCS Power", worksheet.intermediate_output_c266); end
  def test_intermediate_output_c267; assert_equal("Total Emissions from Power", worksheet.intermediate_output_c267); end
  def test_intermediate_output_c269; assert_equal("Emissions reclassified", worksheet.intermediate_output_c269); end
  def test_intermediate_output_ay269; assert_equal("2007", worksheet.intermediate_output_ay269); end
  def test_intermediate_output_az269; assert_equal("2010", worksheet.intermediate_output_az269); end
  def test_intermediate_output_ba269; assert_equal("2015", worksheet.intermediate_output_ba269); end
  def test_intermediate_output_bb269; assert_equal("2020", worksheet.intermediate_output_bb269); end
  def test_intermediate_output_bc269; assert_equal("2025", worksheet.intermediate_output_bc269); end
  def test_intermediate_output_bd269; assert_equal("2030", worksheet.intermediate_output_bd269); end
  def test_intermediate_output_be269; assert_equal("2035", worksheet.intermediate_output_be269); end
  def test_intermediate_output_bf269; assert_equal("2040", worksheet.intermediate_output_bf269); end
  def test_intermediate_output_bg269; assert_equal("2045", worksheet.intermediate_output_bg269); end
  def test_intermediate_output_bh269; assert_equal("2050", worksheet.intermediate_output_bh269); end
  def test_intermediate_output_c270; assert_in_delta(1, worksheet.intermediate_output_c270, 0.001); end
  def test_intermediate_output_d270; assert_equal("Fuel Combustion", worksheet.intermediate_output_d270); end
  def test_intermediate_output_ay261; assert_in_epsilon(200.17416495129552, worksheet.intermediate_output_ay261, 0.001); end
  def test_intermediate_output_ay270; assert_in_epsilon(200.17416495129552, worksheet.intermediate_output_ay270, 0.001); end
  def test_intermediate_output_az261; assert_in_epsilon(176.3040158779136, worksheet.intermediate_output_az261, 0.001); end
  def test_intermediate_output_az270; assert_in_epsilon(176.3040158779136, worksheet.intermediate_output_az270, 0.001); end
  def test_intermediate_output_ba261; assert_in_epsilon(144.74639966916254, worksheet.intermediate_output_ba261, 0.001); end
  def test_intermediate_output_ba270; assert_in_epsilon(144.74639966916254, worksheet.intermediate_output_ba270, 0.001); end
  def test_intermediate_output_bb261; assert_in_epsilon(99.11040721400133, worksheet.intermediate_output_bb261, 0.001); end
  def test_intermediate_output_bb270; assert_in_epsilon(99.11040721400133, worksheet.intermediate_output_bb270, 0.001); end
  def test_intermediate_output_bc261; assert_in_epsilon(46.4441117295977, worksheet.intermediate_output_bc261, 0.001); end
  def test_intermediate_output_bc270; assert_in_epsilon(46.4441117295977, worksheet.intermediate_output_bc270, 0.001); end
  def test_intermediate_output_bd261; assert_in_epsilon(7.191162197082763, worksheet.intermediate_output_bd261, 0.001); end
  def test_intermediate_output_bd270; assert_in_epsilon(7.191162197082763, worksheet.intermediate_output_bd270, 0.001); end
  def test_intermediate_output_be261; assert_in_epsilon(7.046124020400048, worksheet.intermediate_output_be261, 0.001); end
  def test_intermediate_output_be270; assert_in_epsilon(7.046124020400048, worksheet.intermediate_output_be270, 0.001); end
  def test_intermediate_output_bf261; assert_in_epsilon(7.0302633484101795, worksheet.intermediate_output_bf261, 0.001); end
  def test_intermediate_output_bf270; assert_in_epsilon(7.0302633484101795, worksheet.intermediate_output_bf270, 0.001); end
  def test_intermediate_output_bg261; assert_in_epsilon(6.891492165582478, worksheet.intermediate_output_bg261, 0.001); end
  def test_intermediate_output_bg270; assert_in_epsilon(6.891492165582478, worksheet.intermediate_output_bg270, 0.001); end
  def test_intermediate_output_bh261; assert_in_epsilon(6.7581299990587445, worksheet.intermediate_output_bh261, 0.001); end
  def test_intermediate_output_bh270; assert_in_epsilon(6.7581299990587445, worksheet.intermediate_output_bh270, 0.001); end
  def test_intermediate_output_c271; assert_equal("X2", worksheet.intermediate_output_c271); end
  def test_intermediate_output_d271; assert_equal("Bioenergy credit", worksheet.intermediate_output_d271); end
  def test_intermediate_output_ay263; assert_in_epsilon(-1.440823252222691, worksheet.intermediate_output_ay263, 0.001); end
  def test_intermediate_output_ay264; assert_in_epsilon(-4.854933427780264, worksheet.intermediate_output_ay264, 0.001); end
  def test_intermediate_output_ay265; assert_in_delta(0, (worksheet.intermediate_output_ay265||0), 0.001); end
  def test_intermediate_output_ay266; assert_in_delta(0, (worksheet.intermediate_output_ay266||0), 0.001); end
  def test_intermediate_output_ay271; assert_in_epsilon(-6.295756680002954, worksheet.intermediate_output_ay271, 0.001); end
  def test_intermediate_output_az263; assert_in_epsilon(-1.172077361824136, worksheet.intermediate_output_az263, 0.001); end
  def test_intermediate_output_az264; assert_in_epsilon(-5.2643523515010315, worksheet.intermediate_output_az264, 0.001); end
  def test_intermediate_output_az265; assert_in_delta(0, (worksheet.intermediate_output_az265||0), 0.001); end
  def test_intermediate_output_az266; assert_in_delta(0, (worksheet.intermediate_output_az266||0), 0.001); end
  def test_intermediate_output_az271; assert_in_epsilon(-6.436429713325167, worksheet.intermediate_output_az271, 0.001); end
  def test_intermediate_output_ba263; assert_in_epsilon(-1.9218245921673391, worksheet.intermediate_output_ba263, 0.001); end
  def test_intermediate_output_ba264; assert_in_epsilon(-6.540583125775179, worksheet.intermediate_output_ba264, 0.001); end
  def test_intermediate_output_ba265; assert_in_delta(-0.1432515220427178, worksheet.intermediate_output_ba265, 0.001); end
  def test_intermediate_output_ba266; assert_in_delta(-0.04542829760448087, worksheet.intermediate_output_ba266, 0.001); end
  def test_intermediate_output_ba271; assert_in_epsilon(-8.651087537589717, worksheet.intermediate_output_ba271, 0.001); end
  def test_intermediate_output_bb263; assert_in_epsilon(-2.293425298853925, worksheet.intermediate_output_bb263, 0.001); end
  def test_intermediate_output_bb264; assert_in_epsilon(-11.06987977609064, worksheet.intermediate_output_bb264, 0.001); end
  def test_intermediate_output_bb265; assert_in_epsilon(-1.144812657074349, worksheet.intermediate_output_bb265, 0.001); end
  def test_intermediate_output_bb266; assert_in_delta(-0.08235535713770903, worksheet.intermediate_output_bb266, 0.001); end
  def test_intermediate_output_bb271; assert_in_epsilon(-14.590473089156623, worksheet.intermediate_output_bb271, 0.001); end
  def test_intermediate_output_bc263; assert_in_epsilon(-1.520869934228766, worksheet.intermediate_output_bc263, 0.001); end
  def test_intermediate_output_bc264; assert_in_epsilon(-11.837163285862667, worksheet.intermediate_output_bc264, 0.001); end
  def test_intermediate_output_bc265; assert_in_epsilon(-2.805704573475117, worksheet.intermediate_output_bc265, 0.001); end
  def test_intermediate_output_bc266; assert_in_delta(-0.12581956900093905, worksheet.intermediate_output_bc266, 0.001); end
  def test_intermediate_output_bc271; assert_in_epsilon(-16.28955736256749, worksheet.intermediate_output_bc271, 0.001); end
  def test_intermediate_output_bd263; assert_in_delta(0, (worksheet.intermediate_output_bd263||0), 0.001); end
  def test_intermediate_output_bd264; assert_in_delta(0, (worksheet.intermediate_output_bd264||0), 0.001); end
  def test_intermediate_output_bd265; assert_in_epsilon(-5.247343594976242, worksheet.intermediate_output_bd265, 0.001); end
  def test_intermediate_output_bd266; assert_in_delta(-0.18519315025665833, worksheet.intermediate_output_bd266, 0.001); end
  def test_intermediate_output_bd271; assert_in_epsilon(-5.432536745232901, worksheet.intermediate_output_bd271, 0.001); end
  def test_intermediate_output_be263; assert_in_delta(0, (worksheet.intermediate_output_be263||0), 0.001); end
  def test_intermediate_output_be264; assert_in_delta(0, (worksheet.intermediate_output_be264||0), 0.001); end
  def test_intermediate_output_be265; assert_in_epsilon(-5.088194383900738, worksheet.intermediate_output_be265, 0.001); end
  def test_intermediate_output_be266; assert_in_delta(-0.2372638162538114, worksheet.intermediate_output_be266, 0.001); end
  def test_intermediate_output_be271; assert_in_epsilon(-5.32545820015455, worksheet.intermediate_output_be271, 0.001); end
  def test_intermediate_output_bf263; assert_in_delta(0, (worksheet.intermediate_output_bf263||0), 0.001); end
  def test_intermediate_output_bf264; assert_in_delta(0, (worksheet.intermediate_output_bf264||0), 0.001); end
  def test_intermediate_output_bf265; assert_in_epsilon(-5.4231580847068654, worksheet.intermediate_output_bf265, 0.001); end
  def test_intermediate_output_bf266; assert_in_delta(-0.3352805734689151, worksheet.intermediate_output_bf266, 0.001); end
  def test_intermediate_output_bf271; assert_in_epsilon(-5.7584386581757805, worksheet.intermediate_output_bf271, 0.001); end
  def test_intermediate_output_bg263; assert_in_delta(0, (worksheet.intermediate_output_bg263||0), 0.001); end
  def test_intermediate_output_bg264; assert_in_delta(0, (worksheet.intermediate_output_bg264||0), 0.001); end
  def test_intermediate_output_bg265; assert_in_epsilon(-5.921078281158959, worksheet.intermediate_output_bg265, 0.001); end
  def test_intermediate_output_bg266; assert_in_delta(-0.5607861738865774, worksheet.intermediate_output_bg266, 0.001); end
  def test_intermediate_output_bg271; assert_in_epsilon(-6.481864455045536, worksheet.intermediate_output_bg271, 0.001); end
  def test_intermediate_output_bh263; assert_in_delta(0, (worksheet.intermediate_output_bh263||0), 0.001); end
  def test_intermediate_output_bh264; assert_in_delta(0, (worksheet.intermediate_output_bh264||0), 0.001); end
  def test_intermediate_output_bh265; assert_in_epsilon(-5.805025617636766, worksheet.intermediate_output_bh265, 0.001); end
  def test_intermediate_output_bh266; assert_in_delta(-0.9531043814219774, worksheet.intermediate_output_bh266, 0.001); end
  def test_intermediate_output_bh271; assert_in_epsilon(-6.758129999058744, worksheet.intermediate_output_bh271, 0.001); end
  def test_intermediate_output_c272; assert_equal("X3", worksheet.intermediate_output_c272); end
  def test_intermediate_output_d272; assert_equal("Carbon capture", worksheet.intermediate_output_d272); end
  def test_intermediate_output_ay272; assert_in_delta(0, (worksheet.intermediate_output_ay272||0), 0.001); end
  def test_intermediate_output_az272; assert_in_delta(0, (worksheet.intermediate_output_az272||0), 0.001); end
  def test_intermediate_output_ba272; assert_in_epsilon(-2.8350150827586207, worksheet.intermediate_output_ba272, 0.001); end
  def test_intermediate_output_bb272; assert_in_epsilon(-6.678458816949153, worksheet.intermediate_output_bb272, 0.001); end
  def test_intermediate_output_bc272; assert_in_epsilon(-6.538048685217391, worksheet.intermediate_output_bc272, 0.001); end
  def test_intermediate_output_bd272; assert_in_epsilon(-6.403460266271363, worksheet.intermediate_output_bd272, 0.001); end
  def test_intermediate_output_be272; assert_in_epsilon(-6.274336960887095, worksheet.intermediate_output_be272, 0.001); end
  def test_intermediate_output_bf272; assert_in_epsilon(-6.260121498214285, worksheet.intermediate_output_bf272, 0.001); end
  def test_intermediate_output_bg272; assert_in_epsilon(-6.136579599107142, worksheet.intermediate_output_bg272, 0.001); end
  def test_intermediate_output_bh272; assert_in_epsilon(-6.017852256923077, worksheet.intermediate_output_bh272, 0.001); end
  def test_intermediate_output_d273; assert_equal("Total", worksheet.intermediate_output_d273); end
  def test_intermediate_output_ay267; assert_in_epsilon(193.87840827129259, worksheet.intermediate_output_ay267, 0.001); end
  def test_intermediate_output_ay273; assert_in_epsilon(193.87840827129259, worksheet.intermediate_output_ay273, 0.001); end
  def test_intermediate_output_az267; assert_in_epsilon(169.86758616458843, worksheet.intermediate_output_az267, 0.001); end
  def test_intermediate_output_az273; assert_in_epsilon(169.86758616458843, worksheet.intermediate_output_az273, 0.001); end
  def test_intermediate_output_ba267; assert_in_epsilon(133.2602970488142, worksheet.intermediate_output_ba267, 0.001); end
  def test_intermediate_output_ba273; assert_in_epsilon(133.2602970488142, worksheet.intermediate_output_ba273, 0.001); end
  def test_intermediate_output_bb267; assert_in_epsilon(77.84147530789554, worksheet.intermediate_output_bb267, 0.001); end
  def test_intermediate_output_bb273; assert_in_epsilon(77.84147530789554, worksheet.intermediate_output_bb273, 0.001); end
  def test_intermediate_output_bc267; assert_in_epsilon(23.616505681812825, worksheet.intermediate_output_bc267, 0.001); end
  def test_intermediate_output_bc273; assert_in_epsilon(23.616505681812825, worksheet.intermediate_output_bc273, 0.001); end
  def test_intermediate_output_bd267; assert_in_epsilon(-4.644834814421501, worksheet.intermediate_output_bd267, 0.001); end
  def test_intermediate_output_bd273; assert_in_epsilon(-4.644834814421501, worksheet.intermediate_output_bd273, 0.001); end
  def test_intermediate_output_be267; assert_in_epsilon(-4.5536711406415975, worksheet.intermediate_output_be267, 0.001); end
  def test_intermediate_output_be273; assert_in_epsilon(-4.5536711406415975, worksheet.intermediate_output_be273, 0.001); end
  def test_intermediate_output_bf267; assert_in_epsilon(-4.988296807979886, worksheet.intermediate_output_bf267, 0.001); end
  def test_intermediate_output_bf273; assert_in_epsilon(-4.988296807979886, worksheet.intermediate_output_bf273, 0.001); end
  def test_intermediate_output_bg267; assert_in_epsilon(-5.7269518885702, worksheet.intermediate_output_bg267, 0.001); end
  def test_intermediate_output_bg273; assert_in_epsilon(-5.7269518885702, worksheet.intermediate_output_bg273, 0.001); end
  def test_intermediate_output_bh267; assert_in_epsilon(-6.017852256923076, worksheet.intermediate_output_bh267, 0.001); end
  def test_intermediate_output_bh273; assert_in_epsilon(-6.017852256923076, worksheet.intermediate_output_bh273, 0.001); end
  def test_intermediate_output_c275; assert_equal("Emissions intensity", worksheet.intermediate_output_c275); end
  def test_intermediate_output_e275; assert_equal("MtCO2e/TWh", worksheet.intermediate_output_e275); end
  def test_intermediate_output_ay275; assert_in_delta(0.5069142962968773, worksheet.intermediate_output_ay275, 0.001); end
  def test_intermediate_output_az275; assert_in_delta(0.4710083573308865, worksheet.intermediate_output_az275, 0.001); end
  def test_intermediate_output_ba275; assert_in_delta(0.38145682411465853, worksheet.intermediate_output_ba275, 0.001); end
  def test_intermediate_output_bb275; assert_in_delta(0.22169633538931668, worksheet.intermediate_output_bb275, 0.001); end
  def test_intermediate_output_bc275; assert_in_delta(0.06444071044940425, worksheet.intermediate_output_bc275, 0.001); end
  def test_intermediate_output_bd275; assert_in_delta(-0.010558277751692652, worksheet.intermediate_output_bd275, 0.001); end
  def test_intermediate_output_be275; assert_in_delta(-0.00844454219834245, worksheet.intermediate_output_be275, 0.001); end
  def test_intermediate_output_bf275; assert_in_delta(-0.008400589367776407, worksheet.intermediate_output_bf275, 0.001); end
  def test_intermediate_output_bg275; assert_in_delta(-0.008918611710279321, worksheet.intermediate_output_bg275, 0.001); end
  def test_intermediate_output_bh275; assert_in_delta(-0.008993655175707277, worksheet.intermediate_output_bh275, 0.001); end
  def test_intermediate_output_e276; assert_equal("gCO2e/KWh", worksheet.intermediate_output_e276); end
  def test_intermediate_output_ay276; assert_in_epsilon(506.91429629687735, worksheet.intermediate_output_ay276, 0.001); end
  def test_intermediate_output_az276; assert_in_epsilon(471.0083573308865, worksheet.intermediate_output_az276, 0.001); end
  def test_intermediate_output_ba276; assert_in_epsilon(381.45682411465856, worksheet.intermediate_output_ba276, 0.001); end
  def test_intermediate_output_bb276; assert_in_epsilon(221.6963353893167, worksheet.intermediate_output_bb276, 0.001); end
  def test_intermediate_output_bc276; assert_in_epsilon(64.44071044940425, worksheet.intermediate_output_bc276, 0.001); end
  def test_intermediate_output_bd276; assert_in_epsilon(-10.558277751692652, worksheet.intermediate_output_bd276, 0.001); end
  def test_intermediate_output_be276; assert_in_epsilon(-8.44454219834245, worksheet.intermediate_output_be276, 0.001); end
  def test_intermediate_output_bf276; assert_in_epsilon(-8.400589367776407, worksheet.intermediate_output_bf276, 0.001); end
  def test_intermediate_output_bg276; assert_in_epsilon(-8.918611710279322, worksheet.intermediate_output_bg276, 0.001); end
  def test_intermediate_output_bh276; assert_in_epsilon(-8.993655175707277, worksheet.intermediate_output_bh276, 0.001); end
  def test_intermediate_output_c278; assert_equal("Note: Emissions from CHP are excluded, while emissions from district heating are included.", worksheet.intermediate_output_c278); end
  def test_intermediate_output_b281; assert_equal("Primary supply, format for web-based interface", worksheet.intermediate_output_b281); end
  def test_intermediate_output_c283; assert_equal("N.01", worksheet.intermediate_output_c283); end
  def test_intermediate_output_d283; assert_equal("Nuclear fission", worksheet.intermediate_output_d283); end
  def test_intermediate_output_e283; assert_in_delta(0, (worksheet.intermediate_output_e283||0), 0.001); end
  def test_intermediate_output_f283; assert_in_epsilon(163.24447683045062, worksheet.intermediate_output_f283, 0.001); end
  def test_intermediate_output_ax283; assert_in_delta(0, (worksheet.intermediate_output_ax283||0), 0.001); end
  def test_intermediate_output_ay283; assert_in_epsilon(163.91620313701554, worksheet.intermediate_output_ay283, 0.001); end
  def test_intermediate_output_az23; assert_in_epsilon(160.70999999999998, worksheet.intermediate_output_az23, 0.001); end
  def test_intermediate_output_az283; assert_in_epsilon(160.70999999999998, worksheet.intermediate_output_az283, 0.001); end
  def test_intermediate_output_ba23; assert_in_epsilon(134.9964, worksheet.intermediate_output_ba23, 0.001); end
  def test_intermediate_output_ba283; assert_in_epsilon(134.9964, worksheet.intermediate_output_ba283, 0.001); end
  def test_intermediate_output_bb23; assert_in_epsilon(77.14080000000003, worksheet.intermediate_output_bb23, 0.001); end
  def test_intermediate_output_bb283; assert_in_epsilon(77.14080000000003, worksheet.intermediate_output_bb283, 0.001); end
  def test_intermediate_output_bc23; assert_in_epsilon(25.713600000000014, worksheet.intermediate_output_bc23, 0.001); end
  def test_intermediate_output_bc283; assert_in_epsilon(25.713600000000014, worksheet.intermediate_output_bc283, 0.001); end
  def test_intermediate_output_bd23; assert_in_epsilon(25.713600000000014, worksheet.intermediate_output_bd23, 0.001); end
  def test_intermediate_output_bd283; assert_in_epsilon(25.713600000000014, worksheet.intermediate_output_bd283, 0.001); end
  def test_intermediate_output_be23; assert_in_delta(0, (worksheet.intermediate_output_be23||0), 0.001); end
  def test_intermediate_output_be283; assert_in_delta(0, (worksheet.intermediate_output_be283||0), 0.001); end
  def test_intermediate_output_bf23; assert_in_delta(0, (worksheet.intermediate_output_bf23||0), 0.001); end
  def test_intermediate_output_bf283; assert_in_delta(0, (worksheet.intermediate_output_bf283||0), 0.001); end
  def test_intermediate_output_bg23; assert_in_delta(0, (worksheet.intermediate_output_bg23||0), 0.001); end
  def test_intermediate_output_bg283; assert_in_delta(0, (worksheet.intermediate_output_bg283||0), 0.001); end
  def test_intermediate_output_bh23; assert_in_delta(0, (worksheet.intermediate_output_bh23||0), 0.001); end
  def test_intermediate_output_bh283; assert_in_delta(0, (worksheet.intermediate_output_bh283||0), 0.001); end
  def test_intermediate_output_c284; assert_equal("R.01", worksheet.intermediate_output_c284); end
  def test_intermediate_output_d284; assert_equal("Solar", worksheet.intermediate_output_d284); end
  def test_intermediate_output_e284; assert_in_delta(0, (worksheet.intermediate_output_e284||0), 0.001); end
  def test_intermediate_output_f284; assert_in_delta(0.5360591477000001, worksheet.intermediate_output_f284, 0.001); end
  def test_intermediate_output_ax284; assert_in_delta(0, (worksheet.intermediate_output_ax284||0), 0.001); end
  def test_intermediate_output_ay24; assert_in_delta(0.015312704990667746, worksheet.intermediate_output_ay24, 0.001); end
  def test_intermediate_output_ay284; assert_in_delta(0.015312704990667746, worksheet.intermediate_output_ay284, 0.001); end
  def test_intermediate_output_az24; assert_in_epsilon(17.245522222601338, worksheet.intermediate_output_az24, 0.001); end
  def test_intermediate_output_az284; assert_in_epsilon(17.245522222601338, worksheet.intermediate_output_az284, 0.001); end
  def test_intermediate_output_ba24; assert_in_epsilon(46.45053368404071, worksheet.intermediate_output_ba24, 0.001); end
  def test_intermediate_output_ba284; assert_in_epsilon(46.45053368404071, worksheet.intermediate_output_ba284, 0.001); end
  def test_intermediate_output_bb24; assert_in_epsilon(76.28648912678419, worksheet.intermediate_output_bb24, 0.001); end
  def test_intermediate_output_bb284; assert_in_epsilon(76.28648912678419, worksheet.intermediate_output_bb284, 0.001); end
  def test_intermediate_output_bc24; assert_in_epsilon(106.72152027532374, worksheet.intermediate_output_bc24, 0.001); end
  def test_intermediate_output_bc284; assert_in_epsilon(106.72152027532374, worksheet.intermediate_output_bc284, 0.001); end
  def test_intermediate_output_bd24; assert_in_epsilon(137.63709490854308, worksheet.intermediate_output_bd24, 0.001); end
  def test_intermediate_output_bd284; assert_in_epsilon(137.63709490854308, worksheet.intermediate_output_bd284, 0.001); end
  def test_intermediate_output_be24; assert_in_epsilon(168.92541634832412, worksheet.intermediate_output_be24, 0.001); end
  def test_intermediate_output_be284; assert_in_epsilon(168.92541634832412, worksheet.intermediate_output_be284, 0.001); end
  def test_intermediate_output_bf24; assert_in_epsilon(200.5822146823395, worksheet.intermediate_output_bf24, 0.001); end
  def test_intermediate_output_bf284; assert_in_epsilon(200.5822146823395, worksheet.intermediate_output_bf284, 0.001); end
  def test_intermediate_output_bg24; assert_in_epsilon(232.61336514044433, worksheet.intermediate_output_bg24, 0.001); end
  def test_intermediate_output_bg284; assert_in_epsilon(232.61336514044433, worksheet.intermediate_output_bg284, 0.001); end
  def test_intermediate_output_bh24; assert_in_epsilon(264.9899216379231, worksheet.intermediate_output_bh24, 0.001); end
  def test_intermediate_output_bh284; assert_in_epsilon(264.9899216379231, worksheet.intermediate_output_bh284, 0.001); end
  def test_intermediate_output_c285; assert_equal("R.02", worksheet.intermediate_output_c285); end
  def test_intermediate_output_d285; assert_equal("Wind", worksheet.intermediate_output_d285); end
  def test_intermediate_output_e285; assert_in_delta(0, (worksheet.intermediate_output_e285||0), 0.001); end
  def test_intermediate_output_f285; assert_in_epsilon(6.978861884782586, worksheet.intermediate_output_f285, 0.001); end
  def test_intermediate_output_ax285; assert_in_delta(0, (worksheet.intermediate_output_ax285||0), 0.001); end
  def test_intermediate_output_ay25; assert_in_epsilon(5.962752417600001, worksheet.intermediate_output_ay25, 0.001); end
  def test_intermediate_output_ay285; assert_in_epsilon(5.962752417600001, worksheet.intermediate_output_ay285, 0.001); end
  def test_intermediate_output_az25; assert_in_epsilon(14.545862099999999, worksheet.intermediate_output_az25, 0.001); end
  def test_intermediate_output_az285; assert_in_epsilon(14.545862099999999, worksheet.intermediate_output_az285, 0.001); end
  def test_intermediate_output_ba25; assert_in_epsilon(41.77634535000001, worksheet.intermediate_output_ba25, 0.001); end
  def test_intermediate_output_ba285; assert_in_epsilon(41.77634535000001, worksheet.intermediate_output_ba285, 0.001); end
  def test_intermediate_output_bb25; assert_in_epsilon(107.988581916, worksheet.intermediate_output_bb25, 0.001); end
  def test_intermediate_output_bb285; assert_in_epsilon(107.988581916, worksheet.intermediate_output_bb285, 0.001); end
  def test_intermediate_output_bc25; assert_in_epsilon(191.74345164000005, worksheet.intermediate_output_bc25, 0.001); end
  def test_intermediate_output_bc285; assert_in_epsilon(191.74345164000005, worksheet.intermediate_output_bc285, 0.001); end
  def test_intermediate_output_bd25; assert_in_epsilon(286.2468925200001, worksheet.intermediate_output_bd25, 0.001); end
  def test_intermediate_output_bd285; assert_in_epsilon(286.2468925200001, worksheet.intermediate_output_bd285, 0.001); end
  def test_intermediate_output_be25; assert_in_epsilon(366.73455132000004, worksheet.intermediate_output_be25, 0.001); end
  def test_intermediate_output_be285; assert_in_epsilon(366.73455132000004, worksheet.intermediate_output_be285, 0.001); end
  def test_intermediate_output_bf25; assert_in_epsilon(389.48232132000004, worksheet.intermediate_output_bf25, 0.001); end
  def test_intermediate_output_bf285; assert_in_epsilon(389.48232132000004, worksheet.intermediate_output_bf285, 0.001); end
  def test_intermediate_output_bg25; assert_in_epsilon(398.02917132, worksheet.intermediate_output_bg25, 0.001); end
  def test_intermediate_output_bg285; assert_in_epsilon(398.02917132, worksheet.intermediate_output_bg285, 0.001); end
  def test_intermediate_output_bh25; assert_in_epsilon(398.02917132, worksheet.intermediate_output_bh25, 0.001); end
  def test_intermediate_output_bh285; assert_in_epsilon(398.02917132, worksheet.intermediate_output_bh285, 0.001); end
  def test_intermediate_output_c286; assert_equal("R.03", worksheet.intermediate_output_c286); end
  def test_intermediate_output_d286; assert_equal("Tidal", worksheet.intermediate_output_d286); end
  def test_intermediate_output_e286; assert_in_delta(0, (worksheet.intermediate_output_e286||0), 0.001); end
  def test_intermediate_output_f286; assert_in_delta(0, (worksheet.intermediate_output_f286||0), 0.001); end
  def test_intermediate_output_ax286; assert_in_delta(0, (worksheet.intermediate_output_ax286||0), 0.001); end
  def test_intermediate_output_ay26; assert_in_delta(0, (worksheet.intermediate_output_ay26||0), 0.001); end
  def test_intermediate_output_ay286; assert_in_delta(0, (worksheet.intermediate_output_ay286||0), 0.001); end
  def test_intermediate_output_az26; assert_in_delta(0.0050034246575342495, worksheet.intermediate_output_az26, 0.001); end
  def test_intermediate_output_az286; assert_in_delta(0.0050034246575342495, worksheet.intermediate_output_az286, 0.001); end
  def test_intermediate_output_ba26; assert_in_delta(0.08339041095890425, worksheet.intermediate_output_ba26, 0.001); end
  def test_intermediate_output_ba286; assert_in_delta(0.08339041095890425, worksheet.intermediate_output_ba286, 0.001); end
  def test_intermediate_output_bb26; assert_in_delta(0.7663752219178082, worksheet.intermediate_output_bb26, 0.001); end
  def test_intermediate_output_bb286; assert_in_delta(0.7663752219178082, worksheet.intermediate_output_bb286, 0.001); end
  def test_intermediate_output_bc26; assert_in_epsilon(1.4334985095890427, worksheet.intermediate_output_bc26, 0.001); end
  def test_intermediate_output_bc286; assert_in_epsilon(1.4334985095890427, worksheet.intermediate_output_bc286, 0.001); end
  def test_intermediate_output_bd26; assert_in_epsilon(3.066861819178081, worksheet.intermediate_output_bd26, 0.001); end
  def test_intermediate_output_bd286; assert_in_epsilon(3.066861819178081, worksheet.intermediate_output_bd286, 0.001); end
  def test_intermediate_output_be26; assert_in_epsilon(6.402478257534248, worksheet.intermediate_output_be26, 0.001); end
  def test_intermediate_output_be286; assert_in_epsilon(6.402478257534248, worksheet.intermediate_output_be286, 0.001); end
  def test_intermediate_output_bf26; assert_in_epsilon(14.288421224657535, worksheet.intermediate_output_bf26, 0.001); end
  def test_intermediate_output_bf286; assert_in_epsilon(14.288421224657535, worksheet.intermediate_output_bf286, 0.001); end
  def test_intermediate_output_bg26; assert_in_epsilon(27.464106156164384, worksheet.intermediate_output_bg26, 0.001); end
  def test_intermediate_output_bg286; assert_in_epsilon(27.464106156164384, worksheet.intermediate_output_bg286, 0.001); end
  def test_intermediate_output_bh26; assert_in_epsilon(33.4682157452055, worksheet.intermediate_output_bh26, 0.001); end
  def test_intermediate_output_bh286; assert_in_epsilon(33.4682157452055, worksheet.intermediate_output_bh286, 0.001); end
  def test_intermediate_output_c287; assert_equal("R.04", worksheet.intermediate_output_c287); end
  def test_intermediate_output_d287; assert_equal("Wave", worksheet.intermediate_output_d287); end
  def test_intermediate_output_e287; assert_in_delta(0, (worksheet.intermediate_output_e287||0), 0.001); end
  def test_intermediate_output_f287; assert_in_delta(0, (worksheet.intermediate_output_f287||0), 0.001); end
  def test_intermediate_output_ax287; assert_in_delta(0, (worksheet.intermediate_output_ax287||0), 0.001); end
  def test_intermediate_output_ay27; assert_in_delta(0, (worksheet.intermediate_output_ay27||0), 0.001); end
  def test_intermediate_output_ay287; assert_in_delta(0, (worksheet.intermediate_output_ay287||0), 0.001); end
  def test_intermediate_output_az27; assert_in_delta(0, (worksheet.intermediate_output_az27||0), 0.001); end
  def test_intermediate_output_az287; assert_in_delta(0, (worksheet.intermediate_output_az287||0), 0.001); end
  def test_intermediate_output_ba27; assert_in_delta(0.030020547945205478, worksheet.intermediate_output_ba27, 0.001); end
  def test_intermediate_output_ba287; assert_in_delta(0.030020547945205478, worksheet.intermediate_output_ba287, 0.001); end
  def test_intermediate_output_bb27; assert_in_delta(0.1584417808219177, worksheet.intermediate_output_bb27, 0.001); end
  def test_intermediate_output_bb287; assert_in_delta(0.1584417808219177, worksheet.intermediate_output_bb287, 0.001); end
  def test_intermediate_output_bc27; assert_in_delta(0.39610445205479383, worksheet.intermediate_output_bc27, 0.001); end
  def test_intermediate_output_bc287; assert_in_delta(0.39610445205479383, worksheet.intermediate_output_bc287, 0.001); end
  def test_intermediate_output_bd27; assert_in_delta(0.7922089041095896, worksheet.intermediate_output_bd27, 0.001); end
  def test_intermediate_output_bd287; assert_in_delta(0.7922089041095896, worksheet.intermediate_output_bd287, 0.001); end
  def test_intermediate_output_be27; assert_in_epsilon(3.168835616438358, worksheet.intermediate_output_be27, 0.001); end
  def test_intermediate_output_be287; assert_in_epsilon(3.168835616438358, worksheet.intermediate_output_be287, 0.001); end
  def test_intermediate_output_bf27; assert_in_epsilon(7.129880136986295, worksheet.intermediate_output_bf27, 0.001); end
  def test_intermediate_output_bf287; assert_in_epsilon(7.129880136986295, worksheet.intermediate_output_bf287, 0.001); end
  def test_intermediate_output_bg27; assert_in_epsilon(15.210410958904115, worksheet.intermediate_output_bg27, 0.001); end
  def test_intermediate_output_bg287; assert_in_epsilon(15.210410958904115, worksheet.intermediate_output_bg287, 0.001); end
  def test_intermediate_output_bh27; assert_in_epsilon(19.01301369863013, worksheet.intermediate_output_bh27, 0.001); end
  def test_intermediate_output_bh287; assert_in_epsilon(19.01301369863013, worksheet.intermediate_output_bh287, 0.001); end
  def test_intermediate_output_c288; assert_equal("R.05", worksheet.intermediate_output_c288); end
  def test_intermediate_output_d288; assert_equal("Geothermal", worksheet.intermediate_output_d288); end
  def test_intermediate_output_e288; assert_in_delta(0, (worksheet.intermediate_output_e288||0), 0.001); end
  def test_intermediate_output_f288; assert_in_delta(0, (worksheet.intermediate_output_f288||0), 0.001); end
  def test_intermediate_output_ax288; assert_in_delta(0, (worksheet.intermediate_output_ax288||0), 0.001); end
  def test_intermediate_output_ay28; assert_in_delta(0, (worksheet.intermediate_output_ay28||0), 0.001); end
  def test_intermediate_output_ay288; assert_in_delta(0, (worksheet.intermediate_output_ay288||0), 0.001); end
  def test_intermediate_output_az28; assert_in_delta(0, (worksheet.intermediate_output_az28||0), 0.001); end
  def test_intermediate_output_az288; assert_in_delta(0, (worksheet.intermediate_output_az288||0), 0.001); end
  def test_intermediate_output_ba28; assert_in_delta(0.0911664, worksheet.intermediate_output_ba28, 0.001); end
  def test_intermediate_output_ba288; assert_in_delta(0.0911664, worksheet.intermediate_output_ba288, 0.001); end
  def test_intermediate_output_bb28; assert_in_delta(0.7293312, worksheet.intermediate_output_bb28, 0.001); end
  def test_intermediate_output_bb288; assert_in_delta(0.7293312, worksheet.intermediate_output_bb288, 0.001); end
  def test_intermediate_output_bc28; assert_in_epsilon(5.8346496, worksheet.intermediate_output_bc28, 0.001); end
  def test_intermediate_output_bc288; assert_in_epsilon(5.8346496, worksheet.intermediate_output_bc288, 0.001); end
  def test_intermediate_output_bd28; assert_in_epsilon(21.038400000000003, worksheet.intermediate_output_bd28, 0.001); end
  def test_intermediate_output_bd288; assert_in_epsilon(21.038400000000003, worksheet.intermediate_output_bd288, 0.001); end
  def test_intermediate_output_be28; assert_in_epsilon(21.038400000000003, worksheet.intermediate_output_be28, 0.001); end
  def test_intermediate_output_be288; assert_in_epsilon(21.038400000000003, worksheet.intermediate_output_be288, 0.001); end
  def test_intermediate_output_bf28; assert_in_epsilon(21.038400000000003, worksheet.intermediate_output_bf28, 0.001); end
  def test_intermediate_output_bf288; assert_in_epsilon(21.038400000000003, worksheet.intermediate_output_bf288, 0.001); end
  def test_intermediate_output_bg28; assert_in_epsilon(21.038400000000003, worksheet.intermediate_output_bg28, 0.001); end
  def test_intermediate_output_bg288; assert_in_epsilon(21.038400000000003, worksheet.intermediate_output_bg288, 0.001); end
  def test_intermediate_output_bh28; assert_in_epsilon(21.038400000000003, worksheet.intermediate_output_bh28, 0.001); end
  def test_intermediate_output_bh288; assert_in_epsilon(21.038400000000003, worksheet.intermediate_output_bh288, 0.001); end
  def test_intermediate_output_c289; assert_equal("R.06", worksheet.intermediate_output_c289); end
  def test_intermediate_output_d289; assert_equal("Hydro", worksheet.intermediate_output_d289); end
  def test_intermediate_output_e289; assert_in_delta(0, (worksheet.intermediate_output_e289||0), 0.001); end
  def test_intermediate_output_f289; assert_in_epsilon(5.088394340000001, worksheet.intermediate_output_f289, 0.001); end
  def test_intermediate_output_ax289; assert_in_delta(0, (worksheet.intermediate_output_ax289||0), 0.001); end
  def test_intermediate_output_ay29; assert_in_epsilon(4.114400994, worksheet.intermediate_output_ay29, 0.001); end
  def test_intermediate_output_ay289; assert_in_epsilon(4.114400994, worksheet.intermediate_output_ay289, 0.001); end
  def test_intermediate_output_az29; assert_in_epsilon(5.329728000000001, worksheet.intermediate_output_az29, 0.001); end
  def test_intermediate_output_az289; assert_in_epsilon(5.329728000000001, worksheet.intermediate_output_az289, 0.001); end
  def test_intermediate_output_ba29; assert_in_epsilon(5.662836, worksheet.intermediate_output_ba29, 0.001); end
  def test_intermediate_output_ba289; assert_in_epsilon(5.662836, worksheet.intermediate_output_ba289, 0.001); end
  def test_intermediate_output_bb29; assert_in_epsilon(5.995944000000001, worksheet.intermediate_output_bb29, 0.001); end
  def test_intermediate_output_bb289; assert_in_epsilon(5.995944000000001, worksheet.intermediate_output_bb289, 0.001); end
  def test_intermediate_output_bc29; assert_in_epsilon(6.162498000000001, worksheet.intermediate_output_bc29, 0.001); end
  def test_intermediate_output_bc289; assert_in_epsilon(6.162498000000001, worksheet.intermediate_output_bc289, 0.001); end
  def test_intermediate_output_bd29; assert_in_epsilon(6.329052, worksheet.intermediate_output_bd29, 0.001); end
  def test_intermediate_output_bd289; assert_in_epsilon(6.329052, worksheet.intermediate_output_bd289, 0.001); end
  def test_intermediate_output_be29; assert_in_epsilon(6.4956059999999995, worksheet.intermediate_output_be29, 0.001); end
  def test_intermediate_output_be289; assert_in_epsilon(6.4956059999999995, worksheet.intermediate_output_be289, 0.001); end
  def test_intermediate_output_bf29; assert_in_epsilon(6.66216, worksheet.intermediate_output_bf29, 0.001); end
  def test_intermediate_output_bf289; assert_in_epsilon(6.66216, worksheet.intermediate_output_bf289, 0.001); end
  def test_intermediate_output_bg29; assert_in_epsilon(6.828714, worksheet.intermediate_output_bg29, 0.001); end
  def test_intermediate_output_bg289; assert_in_epsilon(6.828714, worksheet.intermediate_output_bg289, 0.001); end
  def test_intermediate_output_bh29; assert_in_epsilon(6.995268000000001, worksheet.intermediate_output_bh29, 0.001); end
  def test_intermediate_output_bh289; assert_in_epsilon(6.995268000000001, worksheet.intermediate_output_bh289, 0.001); end
  def test_intermediate_output_c290; assert_equal("Y.02", worksheet.intermediate_output_c290); end
  def test_intermediate_output_d290; assert_equal("Electricity oversupply (imports)", worksheet.intermediate_output_d290); end
  def test_intermediate_output_e290; assert_in_delta(0, (worksheet.intermediate_output_e290||0), 0.001); end
  def test_intermediate_output_f290; assert_in_epsilon(5.21452425, worksheet.intermediate_output_f290, 0.001); end
  def test_intermediate_output_ax290; assert_in_delta(0, (worksheet.intermediate_output_ax290||0), 0.001); end
  def test_intermediate_output_ay290; assert_in_delta(0, (worksheet.intermediate_output_ay290||0), 0.001); end
  def test_intermediate_output_az290; assert_in_delta(0, (worksheet.intermediate_output_az290||0), 0.001); end
  def test_intermediate_output_ba290; assert_in_delta(0, (worksheet.intermediate_output_ba290||0), 0.001); end
  def test_intermediate_output_bb290; assert_in_delta(0, (worksheet.intermediate_output_bb290||0), 0.001); end
  def test_intermediate_output_bc290; assert_in_delta(0, (worksheet.intermediate_output_bc290||0), 0.001); end
  def test_intermediate_output_bd290; assert_in_delta(0, (worksheet.intermediate_output_bd290||0), 0.001); end
  def test_intermediate_output_be290; assert_in_delta(0, (worksheet.intermediate_output_be290||0), 0.001); end
  def test_intermediate_output_bf290; assert_in_delta(0, (worksheet.intermediate_output_bf290||0), 0.001); end
  def test_intermediate_output_bg290; assert_in_delta(0, (worksheet.intermediate_output_bg290||0), 0.001); end
  def test_intermediate_output_bh290; assert_in_delta(0, (worksheet.intermediate_output_bh290||0), 0.001); end
  def test_intermediate_output_c291; assert_equal("R.07", worksheet.intermediate_output_c291); end
  def test_intermediate_output_d291; assert_equal("Environmental heat", worksheet.intermediate_output_d291); end
  def test_intermediate_output_e291; assert_in_delta(0, (worksheet.intermediate_output_e291||0), 0.001); end
  def test_intermediate_output_f291; assert_in_delta(0, (worksheet.intermediate_output_f291||0), 0.001); end
  def test_intermediate_output_ax291; assert_in_delta(0, (worksheet.intermediate_output_ax291||0), 0.001); end
  def test_intermediate_output_ay32; assert_in_delta(0, (worksheet.intermediate_output_ay32||0), 0.001); end
  def test_intermediate_output_ay291; assert_in_delta(0, (worksheet.intermediate_output_ay291||0), 0.001); end
  def test_intermediate_output_az32; assert_in_delta(0, (worksheet.intermediate_output_az32||0), 0.001); end
  def test_intermediate_output_az291; assert_in_delta(0, (worksheet.intermediate_output_az291||0), 0.001); end
  def test_intermediate_output_ba32; assert_in_delta(0, (worksheet.intermediate_output_ba32||0), 0.001); end
  def test_intermediate_output_ba291; assert_in_delta(0, (worksheet.intermediate_output_ba291||0), 0.001); end
  def test_intermediate_output_bb32; assert_in_epsilon(14.334699398965846, worksheet.intermediate_output_bb32, 0.001); end
  def test_intermediate_output_bb291; assert_in_epsilon(14.334699398965846, worksheet.intermediate_output_bb291, 0.001); end
  def test_intermediate_output_bc32; assert_in_epsilon(26.25997113316019, worksheet.intermediate_output_bc32, 0.001); end
  def test_intermediate_output_bc291; assert_in_epsilon(26.25997113316019, worksheet.intermediate_output_bc291, 0.001); end
  def test_intermediate_output_bd32; assert_in_epsilon(36.01015925968227, worksheet.intermediate_output_bd32, 0.001); end
  def test_intermediate_output_bd291; assert_in_epsilon(36.01015925968227, worksheet.intermediate_output_bd291, 0.001); end
  def test_intermediate_output_be32; assert_in_epsilon(43.80172151011209, worksheet.intermediate_output_be32, 0.001); end
  def test_intermediate_output_be291; assert_in_epsilon(43.80172151011209, worksheet.intermediate_output_be291, 0.001); end
  def test_intermediate_output_bf32; assert_in_epsilon(49.8678774022646, worksheet.intermediate_output_bf32, 0.001); end
  def test_intermediate_output_bf291; assert_in_epsilon(49.8678774022646, worksheet.intermediate_output_bf291, 0.001); end
  def test_intermediate_output_bg32; assert_in_epsilon(54.412764042577855, worksheet.intermediate_output_bg32, 0.001); end
  def test_intermediate_output_bg291; assert_in_epsilon(54.412764042577855, worksheet.intermediate_output_bg291, 0.001); end
  def test_intermediate_output_bh32; assert_in_epsilon(57.602138321505166, worksheet.intermediate_output_bh32, 0.001); end
  def test_intermediate_output_bh291; assert_in_epsilon(57.602138321505166, worksheet.intermediate_output_bh291, 0.001); end
  def test_intermediate_output_d292; assert_equal("Bioenergy", worksheet.intermediate_output_d292); end
  def test_intermediate_output_e292; assert_in_delta(0, (worksheet.intermediate_output_e292||0), 0.001); end
  def test_intermediate_output_f292; assert_in_epsilon(98.50879965682326, worksheet.intermediate_output_f292, 0.001); end
  def test_intermediate_output_ax292; assert_in_delta(0, (worksheet.intermediate_output_ax292||0), 0.001); end
  def test_intermediate_output_ay35; assert_in_epsilon(4.00072, worksheet.intermediate_output_ay35, 0.001); end
  def test_intermediate_output_ay36; assert_in_epsilon(54.55055245569296, worksheet.intermediate_output_ay36, 0.001); end
  def test_intermediate_output_ay292; assert_in_epsilon(54.55055245569296, worksheet.intermediate_output_ay292, 0.001); end
  def test_intermediate_output_az35; assert_in_epsilon(3.7216, worksheet.intermediate_output_az35, 0.001); end
  def test_intermediate_output_az36; assert_in_epsilon(58.45948605409794, worksheet.intermediate_output_az36, 0.001); end
  def test_intermediate_output_az292; assert_in_epsilon(58.45948605409794, worksheet.intermediate_output_az292, 0.001); end
  def test_intermediate_output_ba35; assert_in_epsilon(3.2564, worksheet.intermediate_output_ba35, 0.001); end
  def test_intermediate_output_ba36; assert_in_epsilon(108.65982452065421, worksheet.intermediate_output_ba36, 0.001); end
  def test_intermediate_output_ba292; assert_in_epsilon(108.65982452065421, worksheet.intermediate_output_ba292, 0.001); end
  def test_intermediate_output_bb35; assert_in_epsilon(2.7912, worksheet.intermediate_output_bb35, 0.001); end
  def test_intermediate_output_bb36; assert_in_epsilon(184.5864938213338, worksheet.intermediate_output_bb36, 0.001); end
  def test_intermediate_output_bb292; assert_in_epsilon(184.5864938213338, worksheet.intermediate_output_bb292, 0.001); end
  def test_intermediate_output_bc35; assert_in_epsilon(2.326, worksheet.intermediate_output_bc35, 0.001); end
  def test_intermediate_output_bc36; assert_in_epsilon(243.02010882349728, worksheet.intermediate_output_bc36, 0.001); end
  def test_intermediate_output_bc292; assert_in_epsilon(243.02010882349728, worksheet.intermediate_output_bc292, 0.001); end
  def test_intermediate_output_bd35; assert_in_epsilon(1.8608, worksheet.intermediate_output_bd35, 0.001); end
  def test_intermediate_output_bd36; assert_in_epsilon(299.57826864615896, worksheet.intermediate_output_bd36, 0.001); end
  def test_intermediate_output_bd292; assert_in_epsilon(299.57826864615896, worksheet.intermediate_output_bd292, 0.001); end
  def test_intermediate_output_be35; assert_in_epsilon(1.3956, worksheet.intermediate_output_be35, 0.001); end
  def test_intermediate_output_be36; assert_in_epsilon(353.5923566378647, worksheet.intermediate_output_be36, 0.001); end
  def test_intermediate_output_be292; assert_in_epsilon(353.5923566378647, worksheet.intermediate_output_be292, 0.001); end
  def test_intermediate_output_bf35; assert_in_delta(0.9304000000000001, worksheet.intermediate_output_bf35, 0.001); end
  def test_intermediate_output_bf36; assert_in_epsilon(420.0680381811176, worksheet.intermediate_output_bf36, 0.001); end
  def test_intermediate_output_bf292; assert_in_epsilon(420.0680381811176, worksheet.intermediate_output_bf292, 0.001); end
  def test_intermediate_output_bg35; assert_in_delta(0.4652, worksheet.intermediate_output_bg35, 0.001); end
  def test_intermediate_output_bg36; assert_in_epsilon(502.0681790109012, worksheet.intermediate_output_bg36, 0.001); end
  def test_intermediate_output_bg292; assert_in_epsilon(502.0681790109012, worksheet.intermediate_output_bg292, 0.001); end
  def test_intermediate_output_bh35; assert_in_epsilon(-29.820372396966675, worksheet.intermediate_output_bh35, 0.001); end
  def test_intermediate_output_bh36; assert_in_epsilon(574.0417621953234, worksheet.intermediate_output_bh36, 0.001); end
  def test_intermediate_output_bh292; assert_in_epsilon(574.0417621953234, worksheet.intermediate_output_bh292, 0.001); end
  def test_intermediate_output_d293; assert_equal("Coal", worksheet.intermediate_output_d293); end
  def test_intermediate_output_e293; assert_in_delta(0, (worksheet.intermediate_output_e293||0), 0.001); end
  def test_intermediate_output_f293; assert_in_epsilon(475.4021773117744, worksheet.intermediate_output_f293, 0.001); end
  def test_intermediate_output_ax293; assert_in_delta(0, (worksheet.intermediate_output_ax293||0), 0.001); end
  def test_intermediate_output_ay37; assert_in_epsilon(346.69608961099897, worksheet.intermediate_output_ay37, 0.001); end
  def test_intermediate_output_ay39; assert_in_epsilon(471.091791005217, worksheet.intermediate_output_ay39, 0.001); end
  def test_intermediate_output_ay293; assert_in_epsilon(471.091791005217, worksheet.intermediate_output_ay293, 0.001); end
  def test_intermediate_output_az37; assert_in_epsilon(290.08432080865913, worksheet.intermediate_output_az37, 0.001); end
  def test_intermediate_output_az39; assert_in_epsilon(418.01432080865914, worksheet.intermediate_output_az39, 0.001); end
  def test_intermediate_output_az293; assert_in_epsilon(418.01432080865914, worksheet.intermediate_output_az293, 0.001); end
  def test_intermediate_output_ba37; assert_in_epsilon(211.17230792282777, worksheet.intermediate_output_ba37, 0.001); end
  def test_intermediate_output_ba39; assert_in_epsilon(339.1023079228278, worksheet.intermediate_output_ba39, 0.001); end
  def test_intermediate_output_ba293; assert_in_epsilon(339.1023079228278, worksheet.intermediate_output_ba293, 0.001); end
  def test_intermediate_output_bb37; assert_in_epsilon(102.24554410381685, worksheet.intermediate_output_bb37, 0.001); end
  def test_intermediate_output_bb39; assert_in_epsilon(230.17554410381686, worksheet.intermediate_output_bb39, 0.001); end
  def test_intermediate_output_bb293; assert_in_epsilon(230.17554410381686, worksheet.intermediate_output_bb293, 0.001); end
  def test_intermediate_output_bc37; assert_in_epsilon(-33.745736494005484, worksheet.intermediate_output_bc37, 0.001); end
  def test_intermediate_output_bc39; assert_in_epsilon(94.18426350599452, worksheet.intermediate_output_bc39, 0.001); end
  def test_intermediate_output_bc293; assert_in_epsilon(94.18426350599452, worksheet.intermediate_output_bc293, 0.001); end
  def test_intermediate_output_bd37; assert_in_epsilon(-56.298134268642144, worksheet.intermediate_output_bd37, 0.001); end
  def test_intermediate_output_bd39; assert_in_epsilon(7.666865731357859, worksheet.intermediate_output_bd39, 0.001); end
  def test_intermediate_output_bd293; assert_in_epsilon(7.666865731357859, worksheet.intermediate_output_bd293, 0.001); end
  def test_intermediate_output_be37; assert_in_epsilon(-54.77390781957058, worksheet.intermediate_output_be37, 0.001); end
  def test_intermediate_output_be39; assert_in_epsilon(9.191092180429422, worksheet.intermediate_output_be39, 0.001); end
  def test_intermediate_output_be293; assert_in_epsilon(9.191092180429422, worksheet.intermediate_output_be293, 0.001); end
  def test_intermediate_output_bf37; assert_in_epsilon(-60.236668130483736, worksheet.intermediate_output_bf37, 0.001); end
  def test_intermediate_output_bf39; assert_in_epsilon(3.7283318695162677, worksheet.intermediate_output_bf39, 0.001); end
  def test_intermediate_output_bf293; assert_in_epsilon(3.7283318695162677, worksheet.intermediate_output_bf293, 0.001); end
  def test_intermediate_output_bg37; assert_in_epsilon(-69.91829758288308, worksheet.intermediate_output_bg37, 0.001); end
  def test_intermediate_output_bg39; assert_in_epsilon(-5.953297582883081, worksheet.intermediate_output_bg39, 0.001); end
  def test_intermediate_output_bg293; assert_in_delta(0, (worksheet.intermediate_output_bg293||0), 0.001); end
  def test_intermediate_output_bh37; assert_in_epsilon(-69.35801161666667, worksheet.intermediate_output_bh37, 0.001); end
  def test_intermediate_output_bh39; assert_in_epsilon(-5.393011616666669, worksheet.intermediate_output_bh39, 0.001); end
  def test_intermediate_output_bh293; assert_in_delta(0, (worksheet.intermediate_output_bh293||0), 0.001); end
  def test_intermediate_output_d294; assert_equal("Oil", worksheet.intermediate_output_d294); end
  def test_intermediate_output_e294; assert_in_delta(0, (worksheet.intermediate_output_e294||0), 0.001); end
  def test_intermediate_output_f294; assert_in_epsilon(906.622998738918, worksheet.intermediate_output_f294, 0.001); end
  def test_intermediate_output_ax294; assert_in_delta(0, (worksheet.intermediate_output_ax294||0), 0.001); end
  def test_intermediate_output_ay41; assert_in_epsilon(-74.87530779666133, worksheet.intermediate_output_ay41, 0.001); end
  def test_intermediate_output_ay43; assert_in_epsilon(901.0159005531367, worksheet.intermediate_output_ay43, 0.001); end
  def test_intermediate_output_ay294; assert_in_epsilon(901.0159005531367, worksheet.intermediate_output_ay294, 0.001); end
  def test_intermediate_output_az41; assert_in_epsilon(49.786128395065475, worksheet.intermediate_output_az41, 0.001); end
  def test_intermediate_output_az43; assert_in_epsilon(852.3340812322775, worksheet.intermediate_output_az43, 0.001); end
  def test_intermediate_output_az294; assert_in_epsilon(852.3340812322775, worksheet.intermediate_output_az294, 0.001); end
  def test_intermediate_output_ba41; assert_in_epsilon(106.05843705373104, worksheet.intermediate_output_ba41, 0.001); end
  def test_intermediate_output_ba43; assert_in_epsilon(752.887280587047, worksheet.intermediate_output_ba43, 0.001); end
  def test_intermediate_output_ba294; assert_in_epsilon(752.887280587047, worksheet.intermediate_output_ba294, 0.001); end
  def test_intermediate_output_bb41; assert_in_epsilon(141.24322450450188, worksheet.intermediate_output_bb41, 0.001); end
  def test_intermediate_output_bb43; assert_in_epsilon(643.0321745772509, worksheet.intermediate_output_bb43, 0.001); end
  def test_intermediate_output_bb294; assert_in_epsilon(643.0321745772509, worksheet.intermediate_output_bb294, 0.001); end
  def test_intermediate_output_bc41; assert_in_epsilon(109.24248152044544, worksheet.intermediate_output_bc41, 0.001); end
  def test_intermediate_output_bc43; assert_in_epsilon(497.5172057348784, worksheet.intermediate_output_bc43, 0.001); end
  def test_intermediate_output_bc294; assert_in_epsilon(497.5172057348784, worksheet.intermediate_output_bc294, 0.001); end
  def test_intermediate_output_bd41; assert_in_epsilon(68.43737480525499, worksheet.intermediate_output_bd41, 0.001); end
  def test_intermediate_output_bd43; assert_in_epsilon(368.876954915453, worksheet.intermediate_output_bd43, 0.001); end
  def test_intermediate_output_bd294; assert_in_epsilon(368.876954915453, worksheet.intermediate_output_bd294, 0.001); end
  def test_intermediate_output_be41; assert_in_epsilon(70.5002454337706, worksheet.intermediate_output_be41, 0.001); end
  def test_intermediate_output_be43; assert_in_epsilon(302.9746653935456, worksheet.intermediate_output_be43, 0.001); end
  def test_intermediate_output_be294; assert_in_epsilon(302.9746653935456, worksheet.intermediate_output_be294, 0.001); end
  def test_intermediate_output_bf41; assert_in_epsilon(56.72089329241504, worksheet.intermediate_output_bf41, 0.001); end
  def test_intermediate_output_bf43; assert_in_epsilon(236.60516791365805, worksheet.intermediate_output_bf43, 0.001); end
  def test_intermediate_output_bf294; assert_in_epsilon(236.60516791365805, worksheet.intermediate_output_bf294, 0.001); end
  def test_intermediate_output_bg41; assert_in_epsilon(24.971987111109456, worksheet.intermediate_output_bg41, 0.001); end
  def test_intermediate_output_bg43; assert_in_epsilon(164.16300976904245, worksheet.intermediate_output_bg43, 0.001); end
  def test_intermediate_output_bg294; assert_in_epsilon(164.16300976904245, worksheet.intermediate_output_bg294, 0.001); end
  def test_intermediate_output_bh41; assert_in_epsilon(-16.070521891350595, worksheet.intermediate_output_bh41, 0.001); end
  def test_intermediate_output_bh43; assert_in_epsilon(91.6328381124884, worksheet.intermediate_output_bh43, 0.001); end
  def test_intermediate_output_bh294; assert_in_epsilon(91.6328381124884, worksheet.intermediate_output_bh294, 0.001); end
  def test_intermediate_output_d295; assert_equal("Natural gas", worksheet.intermediate_output_d295); end
  def test_intermediate_output_e295; assert_in_delta(0, (worksheet.intermediate_output_e295||0), 0.001); end
  def test_intermediate_output_f295; assert_in_epsilon(1048.9298032969484, worksheet.intermediate_output_f295, 0.001); end
  def test_intermediate_output_ax295; assert_in_delta(0, (worksheet.intermediate_output_ax295||0), 0.001); end
  def test_intermediate_output_ay44; assert_in_epsilon(247.57851058527865, worksheet.intermediate_output_ay44, 0.001); end
  def test_intermediate_output_ay46; assert_in_epsilon(978.5785105852787, worksheet.intermediate_output_ay46, 0.001); end
  def test_intermediate_output_ay295; assert_in_epsilon(978.5785105852787, worksheet.intermediate_output_ay295, 0.001); end
  def test_intermediate_output_az44; assert_in_epsilon(247.22259483327366, worksheet.intermediate_output_az44, 0.001); end
  def test_intermediate_output_az46; assert_in_epsilon(892.9954907173886, worksheet.intermediate_output_az46, 0.001); end
  def test_intermediate_output_az295; assert_in_epsilon(892.9954907173886, worksheet.intermediate_output_az295, 0.001); end
  def test_intermediate_output_ba44; assert_in_epsilon(266.0125280255418, worksheet.intermediate_output_ba44, 0.001); end
  def test_intermediate_output_ba46; assert_in_epsilon(761.9001111488918, worksheet.intermediate_output_ba46, 0.001); end
  def test_intermediate_output_ba295; assert_in_epsilon(761.9001111488918, worksheet.intermediate_output_ba295, 0.001); end
  def test_intermediate_output_bb44; assert_in_epsilon(182.67125243358015, worksheet.intermediate_output_bb44, 0.001); end
  def test_intermediate_output_bb46; assert_in_epsilon(565.7918983721402, worksheet.intermediate_output_bb46, 0.001); end
  def test_intermediate_output_bb295; assert_in_epsilon(565.7918983721402, worksheet.intermediate_output_bb295, 0.001); end
  def test_intermediate_output_bc44; assert_in_epsilon(91.05072126861359, worksheet.intermediate_output_bc44, 0.001); end
  def test_intermediate_output_bc46; assert_in_epsilon(387.50217385855757, worksheet.intermediate_output_bc46, 0.001); end
  def test_intermediate_output_bc295; assert_in_epsilon(387.50217385855757, worksheet.intermediate_output_bc295, 0.001); end
  def test_intermediate_output_bd44; assert_in_epsilon(15.348403372255149, worksheet.intermediate_output_bd44, 0.001); end
  def test_intermediate_output_bd46; assert_in_epsilon(244.73688628053915, worksheet.intermediate_output_bd46, 0.001); end
  def test_intermediate_output_bd295; assert_in_epsilon(244.73688628053915, worksheet.intermediate_output_bd295, 0.001); end
  def test_intermediate_output_be44; assert_in_delta(0.4686459718368212, worksheet.intermediate_output_be44, 0.001); end
  def test_intermediate_output_be46; assert_in_epsilon(177.9650813283118, worksheet.intermediate_output_be46, 0.001); end
  def test_intermediate_output_be295; assert_in_epsilon(177.9650813283118, worksheet.intermediate_output_be295, 0.001); end
  def test_intermediate_output_bf44; assert_in_epsilon(-25.006312647750775, worksheet.intermediate_output_bf44, 0.001); end
  def test_intermediate_output_bf46; assert_in_epsilon(112.33704550529023, worksheet.intermediate_output_bf46, 0.001); end
  def test_intermediate_output_bf295; assert_in_epsilon(112.33704550529023, worksheet.intermediate_output_bf295, 0.001); end
  def test_intermediate_output_bg44; assert_in_epsilon(-57.43454528627539, worksheet.intermediate_output_bg44, 0.001); end
  def test_intermediate_output_bg46; assert_in_epsilon(48.839127144782616, worksheet.intermediate_output_bg46, 0.001); end
  def test_intermediate_output_bg295; assert_in_epsilon(48.839127144782616, worksheet.intermediate_output_bg295, 0.001); end
  def test_intermediate_output_bh44; assert_in_epsilon(-82.2325418852722, worksheet.intermediate_output_bh44, 0.001); end
  def test_intermediate_output_bh46; assert_in_delta(0, (worksheet.intermediate_output_bh46||0), 0.001); end
  def test_intermediate_output_bh295; assert_in_delta(0, (worksheet.intermediate_output_bh295||0), 0.001); end
  def test_intermediate_output_d296; assert_equal("Total used in UK", worksheet.intermediate_output_d296); end
  def test_intermediate_output_e296; assert_in_delta(0, (worksheet.intermediate_output_e296||0), 0.001); end
  def test_intermediate_output_f296; assert_in_epsilon(2710.526095457397, worksheet.intermediate_output_f296, 0.001); end
  def test_intermediate_output_ax296; assert_in_delta(0, (worksheet.intermediate_output_ax296||0), 0.001); end
  def test_intermediate_output_ay47; assert_in_epsilon(2579.2454238529317, worksheet.intermediate_output_ay47, 0.001); end
  def test_intermediate_output_ay296; assert_in_epsilon(2579.2454238529317, worksheet.intermediate_output_ay296, 0.001); end
  def test_intermediate_output_az47; assert_in_epsilon(2419.639494559682, worksheet.intermediate_output_az47, 0.001); end
  def test_intermediate_output_az296; assert_in_epsilon(2419.639494559682, worksheet.intermediate_output_az296, 0.001); end
  def test_intermediate_output_ba47; assert_in_epsilon(2191.6402165723657, worksheet.intermediate_output_ba47, 0.001); end
  def test_intermediate_output_ba296; assert_in_epsilon(2191.6402165723657, worksheet.intermediate_output_ba296, 0.001); end
  def test_intermediate_output_bb47; assert_in_epsilon(1906.9867735190314, worksheet.intermediate_output_bb47, 0.001); end
  def test_intermediate_output_bb296; assert_in_epsilon(1906.9867735190314, worksheet.intermediate_output_bb296, 0.001); end
  def test_intermediate_output_bc47; assert_in_epsilon(1586.4890455330558, worksheet.intermediate_output_bc47, 0.001); end
  def test_intermediate_output_bc296; assert_in_epsilon(1586.4890455330558, worksheet.intermediate_output_bc296, 0.001); end
  def test_intermediate_output_bd47; assert_in_epsilon(1376.3733476226666, worksheet.intermediate_output_bd47, 0.001); end
  def test_intermediate_output_bd296; assert_in_epsilon(1376.3733476226666, worksheet.intermediate_output_bd296, 0.001); end
  def test_intermediate_output_be47; assert_in_epsilon(1300.9335806432948, worksheet.intermediate_output_be47, 0.001); end
  def test_intermediate_output_be296; assert_in_epsilon(1300.9335806432948, worksheet.intermediate_output_be296, 0.001); end
  def test_intermediate_output_bf47; assert_in_epsilon(1257.5294972319602, worksheet.intermediate_output_bf47, 0.001); end
  def test_intermediate_output_bf296; assert_in_epsilon(1257.5294972319602, worksheet.intermediate_output_bf296, 0.001); end
  def test_intermediate_output_bg47; assert_in_epsilon(1223.305464778964, worksheet.intermediate_output_bg47, 0.001); end
  def test_intermediate_output_bg296; assert_in_epsilon(1223.305464778964, worksheet.intermediate_output_bg296, 0.001); end
  def test_intermediate_output_bh47; assert_in_epsilon(1203.3451986520408, worksheet.intermediate_output_bh47, 0.001); end
  def test_intermediate_output_bh296; assert_in_epsilon(1203.3451986520408, worksheet.intermediate_output_bh296, 0.001); end
  def test_intermediate_output_d297; assert_equal("Imported energy", worksheet.intermediate_output_d297); end
  def test_intermediate_output_f297; assert_in_epsilon(818.936866535737, worksheet.intermediate_output_f297, 0.001); end
  def test_intermediate_output_ax297; assert_in_delta(0, (worksheet.intermediate_output_ax297||0), 0.001); end
  def test_intermediate_output_ay297; assert_in_epsilon(762.1915233332932, worksheet.intermediate_output_ay297, 0.001); end
  def test_intermediate_output_az297; assert_in_epsilon(751.5246440369983, worksheet.intermediate_output_az297, 0.001); end
  def test_intermediate_output_ba297; assert_in_epsilon(721.4960730021007, worksheet.intermediate_output_ba297, 0.001); end
  def test_intermediate_output_bb297; assert_in_epsilon(506.0920210418989, worksheet.intermediate_output_bb297, 0.001); end
  def test_intermediate_output_bc297; assert_in_epsilon(228.33280278905903, worksheet.intermediate_output_bc297, 0.001); end
  def test_intermediate_output_bd297; assert_in_epsilon(111.36017817751015, worksheet.intermediate_output_bd297, 0.001); end
  def test_intermediate_output_be297; assert_in_epsilon(72.36449140560742, worksheet.intermediate_output_be297, 0.001); end
  def test_intermediate_output_bf297; assert_in_epsilon(57.65129329241504, worksheet.intermediate_output_bf297, 0.001); end
  def test_intermediate_output_bg297; assert_in_epsilon(25.437187111109456, worksheet.intermediate_output_bg297, 0.001); end
  def test_intermediate_output_bh297; assert_in_delta(0, (worksheet.intermediate_output_bh297||0), 0.001); end
  def test_intermediate_output_bg298; assert_equal("% imported", worksheet.intermediate_output_bg298); end
  def test_intermediate_output_bh298; assert_in_delta(0, (worksheet.intermediate_output_bh298||0), 0.001); end
  def test_intermediate_output_d299; assert_equal("Primary demand", worksheet.intermediate_output_d299); end
  def test_intermediate_output_f299; assert_in_epsilon(2707.9903243745525, worksheet.intermediate_output_f299, 0.001); end
  def test_intermediate_output_ax299; assert_in_delta(0, (worksheet.intermediate_output_ax299||0), 0.001); end
  def test_intermediate_output_ay18; assert_in_epsilon(1901.498066438453, worksheet.intermediate_output_ay18, 0.001); end
  def test_intermediate_output_ay299; assert_in_epsilon(2579.2454238529317, worksheet.intermediate_output_ay299, 0.001); end
  def test_intermediate_output_az18; assert_in_epsilon(1798.0165210399814, worksheet.intermediate_output_az18, 0.001); end
  def test_intermediate_output_az299; assert_in_epsilon(2419.6394945596826, worksheet.intermediate_output_az299, 0.001); end
  def test_intermediate_output_ba18; assert_in_epsilon(1647.1986514088592, worksheet.intermediate_output_ba18, 0.001); end
  def test_intermediate_output_ba299; assert_in_epsilon(2191.6402165723657, worksheet.intermediate_output_ba299, 0.001); end
  def test_intermediate_output_bb18; assert_in_epsilon(1492.7300490412779, worksheet.intermediate_output_bb18, 0.001); end
  def test_intermediate_output_bb299; assert_in_epsilon(1906.9867735190317, worksheet.intermediate_output_bb299, 0.001); end
  def test_intermediate_output_bc18; assert_in_epsilon(1328.0453057521374, worksheet.intermediate_output_bc18, 0.001); end
  def test_intermediate_output_bc299; assert_in_epsilon(1586.4890455330556, worksheet.intermediate_output_bc299, 0.001); end
  def test_intermediate_output_bd18; assert_in_epsilon(1186.625894531874, worksheet.intermediate_output_bd18, 0.001); end
  def test_intermediate_output_bd299; assert_in_epsilon(1376.3733476226664, worksheet.intermediate_output_bd299, 0.001); end
  def test_intermediate_output_be18; assert_in_epsilon(1103.8271377333272, worksheet.intermediate_output_be18, 0.001); end
  def test_intermediate_output_be299; assert_in_epsilon(1300.933580643295, worksheet.intermediate_output_be299, 0.001); end
  def test_intermediate_output_bf18; assert_in_epsilon(1027.3995365406345, worksheet.intermediate_output_bf18, 0.001); end
  def test_intermediate_output_bf299; assert_in_epsilon(1257.52949723196, worksheet.intermediate_output_bf299, 0.001); end
  def test_intermediate_output_bg18; assert_in_epsilon(953.934917150657, worksheet.intermediate_output_bg18, 0.001); end
  def test_intermediate_output_bg299; assert_in_epsilon(1223.305464778964, worksheet.intermediate_output_bg299, 0.001); end
  def test_intermediate_output_bh18; assert_in_epsilon(888.6842499911435, worksheet.intermediate_output_bh18, 0.001); end
  def test_intermediate_output_bh299; assert_in_epsilon(1203.3451986520408, worksheet.intermediate_output_bh299, 0.001); end
  def test_intermediate_output_b302; assert_equal("Electricity, format for web-based interface", worksheet.intermediate_output_b302); end
  def test_intermediate_output_c304; assert_equal("V.01", worksheet.intermediate_output_c304); end
  def test_intermediate_output_ay304; assert_in_epsilon(2007, worksheet.intermediate_output_ay304, 0.001); end
  def test_intermediate_output_az304; assert_in_epsilon(2010, worksheet.intermediate_output_az304, 0.001); end
  def test_intermediate_output_ba304; assert_in_epsilon(2015, worksheet.intermediate_output_ba304, 0.001); end
  def test_intermediate_output_bb304; assert_in_epsilon(2020, worksheet.intermediate_output_bb304, 0.001); end
  def test_intermediate_output_bc304; assert_in_epsilon(2025, worksheet.intermediate_output_bc304, 0.001); end
  def test_intermediate_output_bd304; assert_in_epsilon(2030, worksheet.intermediate_output_bd304, 0.001); end
  def test_intermediate_output_be304; assert_in_epsilon(2035, worksheet.intermediate_output_be304, 0.001); end
  def test_intermediate_output_bf304; assert_in_epsilon(2040, worksheet.intermediate_output_bf304, 0.001); end
  def test_intermediate_output_bg304; assert_in_epsilon(2045, worksheet.intermediate_output_bg304, 0.001); end
  def test_intermediate_output_bh304; assert_in_epsilon(2050, worksheet.intermediate_output_bh304, 0.001); end
  def test_intermediate_output_bi304; assert_equal("TWh", worksheet.intermediate_output_bi304); end
  def test_intermediate_output_c306; assert_equal("VIII.a", worksheet.intermediate_output_c306); end
  def test_intermediate_output_d306; assert_equal("H2 Production for Transport", worksheet.intermediate_output_d306); end
  def test_intermediate_output_ay306; assert_in_delta(0, (worksheet.intermediate_output_ay306||0), 0.001); end
  def test_intermediate_output_c307; assert_equal("VI.a", worksheet.intermediate_output_c307); end
  def test_intermediate_output_d307; assert_equal("Agriculture and land use", worksheet.intermediate_output_d307); end
  def test_intermediate_output_ay307; assert_in_epsilon(4.172844, worksheet.intermediate_output_ay307, 0.001); end
  def test_intermediate_output_c308; assert_equal("IV.b", worksheet.intermediate_output_c308); end
  def test_intermediate_output_d308; assert_equal("Solar thermal", worksheet.intermediate_output_d308); end
  def test_intermediate_output_c309; assert_equal("IX.a", worksheet.intermediate_output_c309); end
  def test_intermediate_output_d309; assert_equal("Domestic space heating and hot water", worksheet.intermediate_output_d309); end
  def test_intermediate_output_c310; assert_equal("IX.c", worksheet.intermediate_output_c310); end
  def test_intermediate_output_d310; assert_equal("Commercial heating and cooling", worksheet.intermediate_output_d310); end
  def test_intermediate_output_c311; assert_equal("X.a", worksheet.intermediate_output_c311); end
  def test_intermediate_output_d311; assert_equal("Domestic lighting, appliances, and cooking", worksheet.intermediate_output_d311); end
  def test_intermediate_output_c312; assert_equal("X.b", worksheet.intermediate_output_c312); end
  def test_intermediate_output_d312; assert_equal("Commercial lighting, appliances, and catering", worksheet.intermediate_output_d312); end
  def test_intermediate_output_c313; assert_equal("XI.a", worksheet.intermediate_output_c313); end
  def test_intermediate_output_d313; assert_equal("Industrial processes", worksheet.intermediate_output_d313); end
  def test_intermediate_output_ay313; assert_in_epsilon(114.37233546157294, worksheet.intermediate_output_ay313, 0.001); end
  def test_intermediate_output_c314; assert_equal("XII.a", worksheet.intermediate_output_c314); end
  def test_intermediate_output_d314; assert_equal("Domestic passenger transport", worksheet.intermediate_output_d314); end
  def test_intermediate_output_c315; assert_equal("XII.b", worksheet.intermediate_output_c315); end
  def test_intermediate_output_d315; assert_equal("Domestic freight", worksheet.intermediate_output_d315); end
  def test_intermediate_output_c316; assert_equal("XIV.a", worksheet.intermediate_output_c316); end
  def test_intermediate_output_d316; assert_equal("Geosequestration", worksheet.intermediate_output_d316); end
  def test_intermediate_output_c317; assert_equal("XV.a", worksheet.intermediate_output_c317); end
  def test_intermediate_output_d317; assert_equal("Petroleum refineries", worksheet.intermediate_output_d317); end
  def test_intermediate_output_c318; assert_equal("XV.b", worksheet.intermediate_output_c318); end
  def test_intermediate_output_d318; assert_equal("Indigenous fossil-fuel production", worksheet.intermediate_output_d318); end
  def test_intermediate_output_c319; assert_equal("XVII.a", worksheet.intermediate_output_c319); end
  def test_intermediate_output_d319; assert_equal("District heating effective demand", worksheet.intermediate_output_d319); end
  def test_intermediate_output_d320; assert_equal("Total", worksheet.intermediate_output_d320); end
  def test_intermediate_output_ay308; assert_in_delta(0, (worksheet.intermediate_output_ay308||0), 0.001); end
  def test_intermediate_output_ay309; assert_in_epsilon(31.0254990420838, worksheet.intermediate_output_ay309, 0.001); end
  def test_intermediate_output_ay310; assert_in_epsilon(28.551697890247862, worksheet.intermediate_output_ay310, 0.001); end
  def test_intermediate_output_ay311; assert_in_epsilon(86.77241318670144, worksheet.intermediate_output_ay311, 0.001); end
  def test_intermediate_output_ay312; assert_in_epsilon(72.6348790796996, worksheet.intermediate_output_ay312, 0.001); end
  def test_intermediate_output_ay314; assert_in_epsilon(8.580392457134547, worksheet.intermediate_output_ay314, 0.001); end
  def test_intermediate_output_ay315; assert_in_delta(0.10120000000000001, worksheet.intermediate_output_ay315, 0.001); end
  def test_intermediate_output_ay316; assert_in_delta(0, (worksheet.intermediate_output_ay316||0), 0.001); end
  def test_intermediate_output_ay317; assert_in_epsilon(6.864816135126632, worksheet.intermediate_output_ay317, 0.001); end
  def test_intermediate_output_ay318; assert_in_epsilon(1.5434122188034558, worksheet.intermediate_output_ay318, 0.001); end
  def test_intermediate_output_ay319; assert_in_epsilon(1.2590275909415456, worksheet.intermediate_output_ay319, 0.001); end
  def test_intermediate_output_ay320; assert_in_epsilon(355.8785170623119, worksheet.intermediate_output_ay320, 0.001); end
  def test_intermediate_output_az306; assert_in_delta(0, (worksheet.intermediate_output_az306||0), 0.001); end
  def test_intermediate_output_az307; assert_in_epsilon(4.257578873526973, worksheet.intermediate_output_az307, 0.001); end
  def test_intermediate_output_az308; assert_in_delta(0.3833284840070279, worksheet.intermediate_output_az308, 0.001); end
  def test_intermediate_output_az309; assert_in_epsilon(25.055789161987267, worksheet.intermediate_output_az309, 0.001); end
  def test_intermediate_output_az310; assert_in_epsilon(27.67598233502796, worksheet.intermediate_output_az310, 0.001); end
  def test_intermediate_output_az311; assert_in_epsilon(68.22299441486452, worksheet.intermediate_output_az311, 0.001); end
  def test_intermediate_output_az312; assert_in_epsilon(72.40051137801733, worksheet.intermediate_output_az312, 0.001); end
  def test_intermediate_output_az313; assert_in_epsilon(120.09516206285063, worksheet.intermediate_output_az313, 0.001); end
  def test_intermediate_output_az314; assert_in_epsilon(8.336741987654559, worksheet.intermediate_output_az314, 0.001); end
  def test_intermediate_output_az315; assert_in_delta(0.109800707118683, worksheet.intermediate_output_az315, 0.001); end
  def test_intermediate_output_az316; assert_in_delta(0, (worksheet.intermediate_output_az316||0), 0.001); end
  def test_intermediate_output_az317; assert_in_epsilon(6.466195165232063, worksheet.intermediate_output_az317, 0.001); end
  def test_intermediate_output_az318; assert_in_epsilon(1.4718031885075513, worksheet.intermediate_output_az318, 0.001); end
  def test_intermediate_output_az319; assert_in_epsilon(1.2257520915554105, worksheet.intermediate_output_az319, 0.001); end
  def test_intermediate_output_az320; assert_in_epsilon(335.70163985035, worksheet.intermediate_output_az320, 0.001); end
  def test_intermediate_output_ba306; assert_in_delta(0, (worksheet.intermediate_output_ba306||0), 0.001); end
  def test_intermediate_output_ba307; assert_in_epsilon(4.30803595634908, worksheet.intermediate_output_ba307, 0.001); end
  def test_intermediate_output_ba308; assert_in_epsilon(1.0570661191679018, worksheet.intermediate_output_ba308, 0.001); end
  def test_intermediate_output_ba309; assert_in_epsilon(16.916439970953, worksheet.intermediate_output_ba309, 0.001); end
  def test_intermediate_output_ba310; assert_in_epsilon(25.622593678781335, worksheet.intermediate_output_ba310, 0.001); end
  def test_intermediate_output_ba311; assert_in_epsilon(62.28904505215703, worksheet.intermediate_output_ba311, 0.001); end
  def test_intermediate_output_ba312; assert_in_epsilon(69.40555995124195, worksheet.intermediate_output_ba312, 0.001); end
  def test_intermediate_output_ba313; assert_in_epsilon(129.00298786841697, worksheet.intermediate_output_ba313, 0.001); end
  def test_intermediate_output_ba314; assert_in_epsilon(9.747321839320865, worksheet.intermediate_output_ba314, 0.001); end
  def test_intermediate_output_ba315; assert_in_delta(0.128666002003076, worksheet.intermediate_output_ba315, 0.001); end
  def test_intermediate_output_ba316; assert_in_delta(0, (worksheet.intermediate_output_ba316||0), 0.001); end
  def test_intermediate_output_ba317; assert_in_epsilon(6.127455410129972, worksheet.intermediate_output_ba317, 0.001); end
  def test_intermediate_output_ba318; assert_in_epsilon(1.3823848986645149, worksheet.intermediate_output_ba318, 0.001); end
  def test_intermediate_output_ba319; assert_in_epsilon(1.1809217430942915, worksheet.intermediate_output_ba319, 0.001); end
  def test_intermediate_output_ba320; assert_in_epsilon(327.16847849027994, worksheet.intermediate_output_ba320, 0.001); end
  def test_intermediate_output_bb306; assert_in_delta(0, (worksheet.intermediate_output_bb306||0), 0.001); end
  def test_intermediate_output_bb307; assert_in_epsilon(4.3587080303481045, worksheet.intermediate_output_bb307, 0.001); end
  def test_intermediate_output_bb308; assert_in_epsilon(1.775871181564784, worksheet.intermediate_output_bb308, 0.001); end
  def test_intermediate_output_bb309; assert_in_epsilon(16.357333051617584, worksheet.intermediate_output_bb309, 0.001); end
  def test_intermediate_output_bb310; assert_in_epsilon(26.070919424435566, worksheet.intermediate_output_bb310, 0.001); end
  def test_intermediate_output_bb311; assert_in_epsilon(57.172460427816375, worksheet.intermediate_output_bb311, 0.001); end
  def test_intermediate_output_bb312; assert_in_epsilon(66.82338578202129, worksheet.intermediate_output_bb312, 0.001); end
  def test_intermediate_output_bb313; assert_in_epsilon(137.1875150082797, worksheet.intermediate_output_bb313, 0.001); end
  def test_intermediate_output_bb314; assert_in_epsilon(11.400579703976852, worksheet.intermediate_output_bb314, 0.001); end
  def test_intermediate_output_bb315; assert_in_delta(0.145740427687365, worksheet.intermediate_output_bb315, 0.001); end
  def test_intermediate_output_bb316; assert_in_delta(0, (worksheet.intermediate_output_bb316||0), 0.001); end
  def test_intermediate_output_bb317; assert_in_epsilon(5.811946425969373, worksheet.intermediate_output_bb317, 0.001); end
  def test_intermediate_output_bb318; assert_in_epsilon(1.2990989147526122, worksheet.intermediate_output_bb318, 0.001); end
  def test_intermediate_output_bb319; assert_in_epsilon(1.6948456770635327, worksheet.intermediate_output_bb319, 0.001); end
  def test_intermediate_output_bb320; assert_in_epsilon(330.09840405553314, worksheet.intermediate_output_bb320, 0.001); end
  def test_intermediate_output_bc306; assert_in_delta(0, (worksheet.intermediate_output_bc306||0), 0.001); end
  def test_intermediate_output_bc307; assert_in_epsilon(4.40959247768784, worksheet.intermediate_output_bc307, 0.001); end
  def test_intermediate_output_bc308; assert_in_epsilon(2.537467365804243, worksheet.intermediate_output_bc308, 0.001); end
  def test_intermediate_output_bc309; assert_in_epsilon(15.565206166572953, worksheet.intermediate_output_bc309, 0.001); end
  def test_intermediate_output_bc310; assert_in_epsilon(26.645959007913262, worksheet.intermediate_output_bc310, 0.001); end
  def test_intermediate_output_bc311; assert_in_epsilon(52.79750172131632, worksheet.intermediate_output_bc311, 0.001); end
  def test_intermediate_output_bc312; assert_in_epsilon(64.6151830492934, worksheet.intermediate_output_bc312, 0.001); end
  def test_intermediate_output_bc313; assert_in_epsilon(144.71634103811908, worksheet.intermediate_output_bc313, 0.001); end
  def test_intermediate_output_bc314; assert_in_epsilon(23.96825652872806, worksheet.intermediate_output_bc314, 0.001); end
  def test_intermediate_output_bc315; assert_in_delta(0.35986670869882903, worksheet.intermediate_output_bc315, 0.001); end
  def test_intermediate_output_bc316; assert_in_delta(0, (worksheet.intermediate_output_bc316||0), 0.001); end
  def test_intermediate_output_bc317; assert_in_epsilon(5.565016031621894, worksheet.intermediate_output_bc317, 0.001); end
  def test_intermediate_output_bc318; assert_in_epsilon(1.2339158553677942, worksheet.intermediate_output_bc318, 0.001); end
  def test_intermediate_output_bc319; assert_in_epsilon(2.0573774774426146, worksheet.intermediate_output_bc319, 0.001); end
  def test_intermediate_output_bc320; assert_in_epsilon(344.4716834285663, worksheet.intermediate_output_bc320, 0.001); end
  def test_intermediate_output_bd306; assert_in_delta(0, (worksheet.intermediate_output_bd306||0), 0.001); end
  def test_intermediate_output_bd307; assert_in_epsilon(4.540038760993973, worksheet.intermediate_output_bd307, 0.001); end
  def test_intermediate_output_bd308; assert_in_epsilon(3.333388084663686, worksheet.intermediate_output_bd308, 0.001); end
  def test_intermediate_output_bd309; assert_in_epsilon(14.51169341030608, worksheet.intermediate_output_bd309, 0.001); end
  def test_intermediate_output_bd310; assert_in_epsilon(27.349752170583066, worksheet.intermediate_output_bd310, 0.001); end
  def test_intermediate_output_bd311; assert_in_epsilon(48.94497442413928, worksheet.intermediate_output_bd311, 0.001); end
  def test_intermediate_output_bd312; assert_in_epsilon(62.7467333098353, worksheet.intermediate_output_bd312, 0.001); end
  def test_intermediate_output_bd313; assert_in_epsilon(151.65020132920066, worksheet.intermediate_output_bd313, 0.001); end
  def test_intermediate_output_bd314; assert_in_epsilon(33.80308601463196, worksheet.intermediate_output_bd314, 0.001); end
  def test_intermediate_output_bd315; assert_in_delta(0.6055253886502021, worksheet.intermediate_output_bd315, 0.001); end
  def test_intermediate_output_bd316; assert_in_delta(0, (worksheet.intermediate_output_bd316||0), 0.001); end
  def test_intermediate_output_bd317; assert_in_epsilon(5.373945999586455, worksheet.intermediate_output_bd317, 0.001); end
  def test_intermediate_output_bd318; assert_in_delta(0.6779996494278734, worksheet.intermediate_output_bd318, 0.001); end
  def test_intermediate_output_bd319; assert_in_epsilon(2.2793982366922103, worksheet.intermediate_output_bd319, 0.001); end
  def test_intermediate_output_bd320; assert_in_epsilon(355.8167367787108, worksheet.intermediate_output_bd320, 0.001); end
  def test_intermediate_output_be306; assert_in_delta(0, (worksheet.intermediate_output_be306||0), 0.001); end
  def test_intermediate_output_be307; assert_in_epsilon(4.659453575048139, worksheet.intermediate_output_be307, 0.001); end
  def test_intermediate_output_be308; assert_in_epsilon(4.155933575420395, worksheet.intermediate_output_be308, 0.001); end
  def test_intermediate_output_be309; assert_in_epsilon(13.214247427677442, worksheet.intermediate_output_be309, 0.001); end
  def test_intermediate_output_be310; assert_in_epsilon(28.18576294225938, worksheet.intermediate_output_be310, 0.001); end
  def test_intermediate_output_be311; assert_in_epsilon(44.971820699894074, worksheet.intermediate_output_be311, 0.001); end
  def test_intermediate_output_be312; assert_in_epsilon(61.187909360380345, worksheet.intermediate_output_be312, 0.001); end
  def test_intermediate_output_be313; assert_in_epsilon(158.04365124066655, worksheet.intermediate_output_be313, 0.001); end
  def test_intermediate_output_be314; assert_in_epsilon(33.54398310098016, worksheet.intermediate_output_be314, 0.001); end
  def test_intermediate_output_be315; assert_in_delta(0.8760820277183811, worksheet.intermediate_output_be315, 0.001); end
  def test_intermediate_output_be316; assert_in_delta(0, (worksheet.intermediate_output_be316||0), 0.001); end
  def test_intermediate_output_be317; assert_in_epsilon(5.226099651069918, worksheet.intermediate_output_be317, 0.001); end
  def test_intermediate_output_be318; assert_in_delta(0.6389721439616136, worksheet.intermediate_output_be318, 0.001); end
  def test_intermediate_output_be319; assert_in_epsilon(2.371056922031048, worksheet.intermediate_output_be319, 0.001); end
  def test_intermediate_output_be320; assert_in_epsilon(357.0749726671075, worksheet.intermediate_output_be320, 0.001); end
  def test_intermediate_output_bf306; assert_in_delta(0, (worksheet.intermediate_output_bf306||0), 0.001); end
  def test_intermediate_output_bf307; assert_in_epsilon(4.7790730986427805, worksheet.intermediate_output_bf307, 0.001); end
  def test_intermediate_output_bf308; assert_in_epsilon(5.004798844336699, worksheet.intermediate_output_bf308, 0.001); end
  def test_intermediate_output_bf309; assert_in_epsilon(11.696547591832068, worksheet.intermediate_output_bf309, 0.001); end
  def test_intermediate_output_bf310; assert_in_epsilon(29.158883159556222, worksheet.intermediate_output_bf310, 0.001); end
  def test_intermediate_output_bf311; assert_in_epsilon(41.21352722334173, worksheet.intermediate_output_bf311, 0.001); end
  def test_intermediate_output_bf312; assert_in_epsilon(59.91223683079552, worksheet.intermediate_output_bf312, 0.001); end
  def test_intermediate_output_bf313; assert_in_epsilon(171.96797245314195, worksheet.intermediate_output_bf313, 0.001); end
  def test_intermediate_output_bf314; assert_in_epsilon(33.10890307029686, worksheet.intermediate_output_bf314, 0.001); end
  def test_intermediate_output_bf315; assert_in_epsilon(1.207658636254754, worksheet.intermediate_output_bf315, 0.001); end
  def test_intermediate_output_bf316; assert_in_delta(0, (worksheet.intermediate_output_bf316||0), 0.001); end
  def test_intermediate_output_bf317; assert_in_epsilon(5.1116989649088405, worksheet.intermediate_output_bf317, 0.001); end
  def test_intermediate_output_bf318; assert_in_delta(0.6087734041936447, worksheet.intermediate_output_bf318, 0.001); end
  def test_intermediate_output_bf319; assert_in_epsilon(2.343938911390126, worksheet.intermediate_output_bf319, 0.001); end
  def test_intermediate_output_bf320; assert_in_epsilon(366.11401218869116, worksheet.intermediate_output_bf320, 0.001); end
  def test_intermediate_output_bg306; assert_in_delta(0, (worksheet.intermediate_output_bg306||0), 0.001); end
  def test_intermediate_output_bg307; assert_in_epsilon(4.898894839135851, worksheet.intermediate_output_bg307, 0.001); end
  def test_intermediate_output_bg308; assert_in_epsilon(5.880403550687963, worksheet.intermediate_output_bg308, 0.001); end
  def test_intermediate_output_bg309; assert_in_epsilon(9.941883525486983, worksheet.intermediate_output_bg309, 0.001); end
  def test_intermediate_output_bg310; assert_in_epsilon(30.275450308029814, worksheet.intermediate_output_bg310, 0.001); end
  def test_intermediate_output_bg311; assert_in_epsilon(37.77467065522574, worksheet.intermediate_output_bg311, 0.001); end
  def test_intermediate_output_bg312; assert_in_epsilon(58.89650672260337, worksheet.intermediate_output_bg312, 0.001); end
  def test_intermediate_output_bg313; assert_in_epsilon(184.91577875047452, worksheet.intermediate_output_bg313, 0.001); end
  def test_intermediate_output_bg314; assert_in_epsilon(34.48730154961636, worksheet.intermediate_output_bg314, 0.001); end
  def test_intermediate_output_bg315; assert_in_epsilon(1.682298645605885, worksheet.intermediate_output_bg315, 0.001); end
  def test_intermediate_output_bg316; assert_in_delta(0, (worksheet.intermediate_output_bg316||0), 0.001); end
  def test_intermediate_output_bg317; assert_in_epsilon(5.0231778947204795, worksheet.intermediate_output_bg317, 0.001); end
  def test_intermediate_output_bg318; assert_in_delta(0.5854061950246674, worksheet.intermediate_output_bg318, 0.001); end
  def test_intermediate_output_bg319; assert_in_epsilon(2.2073146945013535, worksheet.intermediate_output_bg319, 0.001); end
  def test_intermediate_output_bg320; assert_in_epsilon(376.56908733111305, worksheet.intermediate_output_bg320, 0.001); end
  def test_intermediate_output_bh306; assert_in_delta(0, (worksheet.intermediate_output_bh306||0), 0.001); end
  def test_intermediate_output_bh307; assert_in_epsilon(5.018916334236913, worksheet.intermediate_output_bh307, 0.001); end
  def test_intermediate_output_bh308; assert_in_epsilon(6.780680116994507, worksheet.intermediate_output_bh308, 0.001); end
  def test_intermediate_output_bh309; assert_in_epsilon(7.753173409526754, worksheet.intermediate_output_bh309, 0.001); end
  def test_intermediate_output_bh310; assert_in_epsilon(31.54327949039369, worksheet.intermediate_output_bh310, 0.001); end
  def test_intermediate_output_bh311; assert_in_epsilon(34.627826804004464, worksheet.intermediate_output_bh311, 0.001); end
  def test_intermediate_output_bh312; assert_in_epsilon(58.12043293759403, worksheet.intermediate_output_bh312, 0.001); end
  def test_intermediate_output_bh313; assert_in_epsilon(196.9695187036365, worksheet.intermediate_output_bh313, 0.001); end
  def test_intermediate_output_bh314; assert_in_epsilon(35.53347039864454, worksheet.intermediate_output_bh314, 0.001); end
  def test_intermediate_output_bh315; assert_in_epsilon(2.1334592707445137, worksheet.intermediate_output_bh315, 0.001); end
  def test_intermediate_output_bh316; assert_in_delta(0, (worksheet.intermediate_output_bh316||0), 0.001); end
  def test_intermediate_output_bh317; assert_in_epsilon(4.9546819780416245, worksheet.intermediate_output_bh317, 0.001); end
  def test_intermediate_output_bh318; assert_in_delta(0.5673250940071375, worksheet.intermediate_output_bh318, 0.001); end
  def test_intermediate_output_bh319; assert_in_epsilon(2.233974997967833, worksheet.intermediate_output_bh319, 0.001); end
  def test_intermediate_output_bh320; assert_in_epsilon(386.2367395357925, worksheet.intermediate_output_bh320, 0.001); end
  def test_intermediate_output_d322; assert_equal("Transport", worksheet.intermediate_output_d322); end
  def test_intermediate_output_ay322; assert_in_epsilon(8.681592457134547, worksheet.intermediate_output_ay322, 0.001); end
  def test_intermediate_output_az322; assert_in_epsilon(8.446542694773242, worksheet.intermediate_output_az322, 0.001); end
  def test_intermediate_output_ba322; assert_in_epsilon(9.87598784132394, worksheet.intermediate_output_ba322, 0.001); end
  def test_intermediate_output_bb322; assert_in_epsilon(11.546320131664217, worksheet.intermediate_output_bb322, 0.001); end
  def test_intermediate_output_bc322; assert_in_epsilon(24.328123237426887, worksheet.intermediate_output_bc322, 0.001); end
  def test_intermediate_output_bd322; assert_in_epsilon(34.40861140328216, worksheet.intermediate_output_bd322, 0.001); end
  def test_intermediate_output_be322; assert_in_epsilon(34.42006512869854, worksheet.intermediate_output_be322, 0.001); end
  def test_intermediate_output_bf322; assert_in_epsilon(34.31656170655162, worksheet.intermediate_output_bf322, 0.001); end
  def test_intermediate_output_bg322; assert_in_epsilon(36.169600195222245, worksheet.intermediate_output_bg322, 0.001); end
  def test_intermediate_output_bh322; assert_in_epsilon(37.666929669389056, worksheet.intermediate_output_bh322, 0.001); end
  def test_intermediate_output_d323; assert_equal("Industry", worksheet.intermediate_output_d323); end
  def test_intermediate_output_ay323; assert_in_epsilon(126.95340781550303, worksheet.intermediate_output_ay323, 0.001); end
  def test_intermediate_output_az323; assert_in_epsilon(132.29073929011722, worksheet.intermediate_output_az323, 0.001); end
  def test_intermediate_output_ba323; assert_in_epsilon(140.82086413356052, worksheet.intermediate_output_ba323, 0.001); end
  def test_intermediate_output_bb323; assert_in_epsilon(148.65726837934977, worksheet.intermediate_output_bb323, 0.001); end
  def test_intermediate_output_bc323; assert_in_epsilon(155.92486540279663, worksheet.intermediate_output_bc323, 0.001); end
  def test_intermediate_output_bd323; assert_in_epsilon(162.24218573920896, worksheet.intermediate_output_bd323, 0.001); end
  def test_intermediate_output_be323; assert_in_epsilon(168.5681766107462, worksheet.intermediate_output_be323, 0.001); end
  def test_intermediate_output_bf323; assert_in_epsilon(182.46751792088722, worksheet.intermediate_output_bf323, 0.001); end
  def test_intermediate_output_bg323; assert_in_epsilon(195.42325767935552, worksheet.intermediate_output_bg323, 0.001); end
  def test_intermediate_output_bh323; assert_in_epsilon(207.51044210992217, worksheet.intermediate_output_bh323, 0.001); end
  def test_intermediate_output_d324; assert_equal("Heating and cooling", worksheet.intermediate_output_d324); end
  def test_intermediate_output_ay324; assert_in_epsilon(60.8362245232732, worksheet.intermediate_output_ay324, 0.001); end
  def test_intermediate_output_az324; assert_in_epsilon(54.34085207257767, worksheet.intermediate_output_az324, 0.001); end
  def test_intermediate_output_ba324; assert_in_epsilon(44.77702151199652, worksheet.intermediate_output_ba324, 0.001); end
  def test_intermediate_output_bb324; assert_in_epsilon(45.89896933468147, worksheet.intermediate_output_bb324, 0.001); end
  def test_intermediate_output_bc324; assert_in_epsilon(46.80601001773307, worksheet.intermediate_output_bc324, 0.001); end
  def test_intermediate_output_bd324; assert_in_epsilon(47.474231902245045, worksheet.intermediate_output_bd324, 0.001); end
  def test_intermediate_output_be324; assert_in_epsilon(47.92700086738826, worksheet.intermediate_output_be324, 0.001); end
  def test_intermediate_output_bf324; assert_in_epsilon(48.204168507115114, worksheet.intermediate_output_bf324, 0.001); end
  def test_intermediate_output_bg324; assert_in_epsilon(48.30505207870612, worksheet.intermediate_output_bg324, 0.001); end
  def test_intermediate_output_bh324; assert_in_epsilon(48.311108014882784, worksheet.intermediate_output_bh324, 0.001); end
  def test_intermediate_output_d325; assert_equal("Lighting & appliances", worksheet.intermediate_output_d325); end
  def test_intermediate_output_ay325; assert_in_epsilon(159.40729226640104, worksheet.intermediate_output_ay325, 0.001); end
  def test_intermediate_output_az325; assert_in_epsilon(140.62350579288184, worksheet.intermediate_output_az325, 0.001); end
  def test_intermediate_output_ba325; assert_in_epsilon(131.69460500339898, worksheet.intermediate_output_ba325, 0.001); end
  def test_intermediate_output_bb325; assert_in_epsilon(123.99584620983767, worksheet.intermediate_output_bb325, 0.001); end
  def test_intermediate_output_bc325; assert_in_epsilon(117.41268477060973, worksheet.intermediate_output_bc325, 0.001); end
  def test_intermediate_output_bd325; assert_in_epsilon(111.69170773397458, worksheet.intermediate_output_bd325, 0.001); end
  def test_intermediate_output_be325; assert_in_epsilon(106.15973006027443, worksheet.intermediate_output_be325, 0.001); end
  def test_intermediate_output_bf325; assert_in_epsilon(101.12576405413725, worksheet.intermediate_output_bf325, 0.001); end
  def test_intermediate_output_bg325; assert_in_epsilon(96.67117737782911, worksheet.intermediate_output_bg325, 0.001); end
  def test_intermediate_output_bh325; assert_in_epsilon(92.7482597415985, worksheet.intermediate_output_bh325, 0.001); end
  def test_intermediate_output_d326; assert_equal("Total", worksheet.intermediate_output_d326); end
  def test_intermediate_output_ay326; assert_in_epsilon(355.8785170623118, worksheet.intermediate_output_ay326, 0.001); end
  def test_intermediate_output_az326; assert_in_epsilon(335.7016398503499, worksheet.intermediate_output_az326, 0.001); end
  def test_intermediate_output_ba326; assert_in_epsilon(327.16847849027994, worksheet.intermediate_output_ba326, 0.001); end
  def test_intermediate_output_bb326; assert_in_epsilon(330.09840405553314, worksheet.intermediate_output_bb326, 0.001); end
  def test_intermediate_output_bc326; assert_in_epsilon(344.4716834285663, worksheet.intermediate_output_bc326, 0.001); end
  def test_intermediate_output_bd326; assert_in_epsilon(355.8167367787107, worksheet.intermediate_output_bd326, 0.001); end
  def test_intermediate_output_be326; assert_in_epsilon(357.07497266710743, worksheet.intermediate_output_be326, 0.001); end
  def test_intermediate_output_bf326; assert_in_epsilon(366.11401218869116, worksheet.intermediate_output_bf326, 0.001); end
  def test_intermediate_output_bg326; assert_in_epsilon(376.569087331113, worksheet.intermediate_output_bg326, 0.001); end
  def test_intermediate_output_bh326; assert_in_epsilon(386.2367395357925, worksheet.intermediate_output_bh326, 0.001); end
  def test_intermediate_output_b329; assert_equal("Heating, format for web-based interface", worksheet.intermediate_output_b329); end
  def test_intermediate_output_d331; assert_equal("2050 Split of heating technology", worksheet.intermediate_output_d331); end
  def test_intermediate_output_e331; assert_equal("Residential ", worksheet.intermediate_output_e331); end
  def test_intermediate_output_f331; assert_equal("Commercial", worksheet.intermediate_output_f331); end
  def test_intermediate_output_d332; assert_equal("Gas boiler (old)", worksheet.intermediate_output_d332); end
  def test_intermediate_output_e332; assert_in_delta(0, (worksheet.intermediate_output_e332||0), 0.001); end
  def test_intermediate_output_f332; assert_in_delta(0, (worksheet.intermediate_output_f332||0), 0.001); end
  def test_intermediate_output_d333; assert_equal("Gas boiler (new)", worksheet.intermediate_output_d333); end
  def test_intermediate_output_e333; assert_in_delta(0, (worksheet.intermediate_output_e333||0), 0.001); end
  def test_intermediate_output_f333; assert_in_delta(0.001, worksheet.intermediate_output_f333, 0.001); end
  def test_intermediate_output_d334; assert_equal("Resistive heating", worksheet.intermediate_output_d334); end
  def test_intermediate_output_e334; assert_in_delta(0, (worksheet.intermediate_output_e334||0), 0.001); end
  def test_intermediate_output_f334; assert_in_delta(0.1, worksheet.intermediate_output_f334, 0.001); end
  def test_intermediate_output_d335; assert_equal("Oil-fired boiler", worksheet.intermediate_output_d335); end
  def test_intermediate_output_e335; assert_in_delta(0, (worksheet.intermediate_output_e335||0), 0.001); end
  def test_intermediate_output_f335; assert_in_delta(0, (worksheet.intermediate_output_f335||0), 0.001); end
  def test_intermediate_output_d336; assert_equal("Solid-fuel boiler", worksheet.intermediate_output_d336); end
  def test_intermediate_output_e336; assert_in_delta(0.15, worksheet.intermediate_output_e336, 0.001); end
  def test_intermediate_output_f336; assert_in_delta(0, (worksheet.intermediate_output_f336||0), 0.001); end
  def test_intermediate_output_d337; assert_equal("Stirling engine micro-CHP", worksheet.intermediate_output_d337); end
  def test_intermediate_output_e337; assert_in_delta(0, (worksheet.intermediate_output_e337||0), 0.001); end
  def test_intermediate_output_f337; assert_in_delta(0, (worksheet.intermediate_output_f337||0), 0.001); end
  def test_intermediate_output_d338; assert_equal("Fuel-cell micro-CHP", worksheet.intermediate_output_d338); end
  def test_intermediate_output_e338; assert_in_delta(0, (worksheet.intermediate_output_e338||0), 0.001); end
  def test_intermediate_output_f338; assert_in_delta(0, (worksheet.intermediate_output_f338||0), 0.001); end
  def test_intermediate_output_d339; assert_equal("Air-source heat pump", worksheet.intermediate_output_d339); end
  def test_intermediate_output_e339; assert_in_delta(0.14, worksheet.intermediate_output_e339, 0.001); end
  def test_intermediate_output_f339; assert_in_delta(0.6, worksheet.intermediate_output_f339, 0.001); end
  def test_intermediate_output_d340; assert_equal("Ground-source heat pump", worksheet.intermediate_output_d340); end
  def test_intermediate_output_e340; assert_in_delta(0.2, worksheet.intermediate_output_e340, 0.001); end
  def test_intermediate_output_f340; assert_in_delta(0.3, worksheet.intermediate_output_f340, 0.001); end
  def test_intermediate_output_d341; assert_equal("Geothermal electricity", worksheet.intermediate_output_d341); end
  def test_intermediate_output_e341; assert_in_delta(0, (worksheet.intermediate_output_e341||0), 0.001); end
  def test_intermediate_output_f341; assert_in_delta(0, (worksheet.intermediate_output_f341||0), 0.001); end
  def test_intermediate_output_d342; assert_equal("Community scale gas CHP with local district heating", worksheet.intermediate_output_d342); end
  def test_intermediate_output_e342; assert_in_delta(0.15, worksheet.intermediate_output_e342, 0.001); end
  def test_intermediate_output_f342; assert_in_delta(0, (worksheet.intermediate_output_f342||0), 0.001); end
  def test_intermediate_output_d343; assert_equal("Community scale solid-fuel CHP with local district heating", worksheet.intermediate_output_d343); end
  def test_intermediate_output_e343; assert_in_delta(0.25, worksheet.intermediate_output_e343, 0.001); end
  def test_intermediate_output_f343; assert_in_delta(0, (worksheet.intermediate_output_f343||0), 0.001); end
  def test_intermediate_output_d344; assert_equal("Long distance district heating from large power stations", worksheet.intermediate_output_d344); end
  def test_intermediate_output_e344; assert_in_delta(0.11, worksheet.intermediate_output_e344, 0.001); end
  def test_intermediate_output_f344; assert_in_delta(0, (worksheet.intermediate_output_f344||0), 0.001); end
  def test_intermediate_output_d345; assert_equal("Total", worksheet.intermediate_output_d345); end
  def test_intermediate_output_e345; assert_in_delta(1, worksheet.intermediate_output_e345, 0.001); end
  def test_intermediate_output_f345; assert_in_delta(1, worksheet.intermediate_output_f345, 0.001); end
  def test_land_use_b2; assert_equal("Land use implications", worksheet.land_use_b2); end
  def test_land_use_c4; assert_equal("B.01", worksheet.land_use_c4); end
  def test_land_use_d4; assert_equal("UK Land area", worksheet.land_use_d4); end
  def test_land_use_h4; assert_in_epsilon(2007, worksheet.land_use_h4, 0.001); end
  def test_land_use_i4; assert_in_epsilon(2010, worksheet.land_use_i4, 0.001); end
  def test_land_use_j4; assert_in_epsilon(2015, worksheet.land_use_j4, 0.001); end
  def test_land_use_k4; assert_in_epsilon(2020, worksheet.land_use_k4, 0.001); end
  def test_land_use_l4; assert_in_epsilon(2025, worksheet.land_use_l4, 0.001); end
  def test_land_use_m4; assert_in_epsilon(2030, worksheet.land_use_m4, 0.001); end
  def test_land_use_n4; assert_in_epsilon(2035, worksheet.land_use_n4, 0.001); end
  def test_land_use_o4; assert_in_epsilon(2040, worksheet.land_use_o4, 0.001); end
  def test_land_use_p4; assert_in_epsilon(2045, worksheet.land_use_p4, 0.001); end
  def test_land_use_q4; assert_in_epsilon(2050, worksheet.land_use_q4, 0.001); end
  def test_land_use_r4; assert_equal("km^2", worksheet.land_use_r4); end
  def test_land_use_c6; assert_equal("III.a.1", worksheet.land_use_c6); end
  def test_land_use_d6; assert_equal("onshore wind if 2.5 W/m2", worksheet.land_use_d6); end
  def test_land_use_h6; assert_in_epsilon(227.50727999999998, worksheet.land_use_h6, 0.001); end
  def test_land_use_i6; assert_in_epsilon(470.80799999999977, worksheet.land_use_i6, 0.001); end
  def test_land_use_j6; assert_in_epsilon(800.8079999999997, worksheet.land_use_j6, 0.001); end
  def test_land_use_k6; assert_in_epsilon(1130.8079999999998, worksheet.land_use_k6, 0.001); end
  def test_land_use_l6; assert_in_epsilon(1321.6079999999995, worksheet.land_use_l6, 0.001); end
  def test_land_use_m6; assert_in_epsilon(994.0079999999995, worksheet.land_use_m6, 0.001); end
  def test_land_use_n6; assert_in_epsilon(664.0079999999997, worksheet.land_use_n6, 0.001); end
  def test_land_use_o6; assert_in_epsilon(334.00799999999975, worksheet.land_use_o6, 0.001); end
  def test_land_use_p6; assert_in_epsilon(4.007999999999824, worksheet.land_use_p6, 0.001); end
  def test_land_use_q6; assert_in_epsilon(4.007999999999824, worksheet.land_use_q6, 0.001); end
  def test_land_use_c7; assert_equal("III.b", worksheet.land_use_c7); end
  def test_land_use_d7; assert_equal("hydroelectric resevoir assuming similar to Loch Sloy", worksheet.land_use_d7); end
  def test_land_use_h7; assert_in_epsilon(42.31636363636362, worksheet.land_use_h7, 0.001); end
  def test_land_use_i7; assert_in_epsilon(52.36363636363635, worksheet.land_use_i7, 0.001); end
  def test_land_use_j7; assert_in_epsilon(55.63636363636362, worksheet.land_use_j7, 0.001); end
  def test_land_use_k7; assert_in_epsilon(58.90909090909089, worksheet.land_use_k7, 0.001); end
  def test_land_use_l7; assert_in_epsilon(60.54545454545453, worksheet.land_use_l7, 0.001); end
  def test_land_use_m7; assert_in_epsilon(62.18181818181816, worksheet.land_use_m7, 0.001); end
  def test_land_use_n7; assert_in_epsilon(63.8181818181818, worksheet.land_use_n7, 0.001); end
  def test_land_use_o7; assert_in_epsilon(65.45454545454544, worksheet.land_use_o7, 0.001); end
  def test_land_use_p7; assert_in_epsilon(67.09090909090907, worksheet.land_use_p7, 0.001); end
  def test_land_use_q7; assert_in_epsilon(68.7272727272727, worksheet.land_use_q7, 0.001); end
  def test_land_use_c8; assert_equal("IV.a", worksheet.land_use_c8); end
  def test_land_use_d8; assert_equal("solar PV if 20% efficient", worksheet.land_use_d8); end
  def test_land_use_h8; assert_in_delta(0.0794013284314798, worksheet.land_use_h8, 0.001); end
  def test_land_use_i8; assert_in_epsilon(61.59606043236754, worksheet.land_use_i8, 0.001); end
  def test_land_use_j8; assert_in_epsilon(164.1238256055943, worksheet.land_use_j8, 0.001); end
  def test_land_use_k8; assert_in_epsilon(266.65159077882106, worksheet.land_use_k8, 0.001); end
  def test_land_use_l8; assert_in_epsilon(369.1793559520478, worksheet.land_use_l8, 0.001); end
  def test_land_use_m8; assert_in_epsilon(471.7071211252746, worksheet.land_use_m8, 0.001); end
  def test_land_use_n8; assert_in_epsilon(574.2348862985014, worksheet.land_use_n8, 0.001); end
  def test_land_use_o8; assert_in_epsilon(676.7626514717281, worksheet.land_use_o8, 0.001); end
  def test_land_use_p8; assert_in_epsilon(779.2904166449548, worksheet.land_use_p8, 0.001); end
  def test_land_use_q8; assert_in_epsilon(881.8181818181818, worksheet.land_use_q8, 0.001); end
  def test_land_use_c9; assert_equal("IV.b", worksheet.land_use_c9); end
  def test_land_use_d9; assert_equal("solar thermal panels if 50% efficient", worksheet.land_use_d9); end
  def test_land_use_h9; assert_in_delta(0, (worksheet.land_use_h9||0), 0.001); end
  def test_land_use_i9; assert_in_epsilon(11.131020214669052, worksheet.land_use_i9, 0.001); end
  def test_land_use_j9; assert_in_epsilon(30.694886583184257, worksheet.land_use_j9, 0.001); end
  def test_land_use_k9; assert_in_epsilon(51.56741240310077, worksheet.land_use_k9, 0.001); end
  def test_land_use_l9; assert_in_epsilon(73.68249874776387, worksheet.land_use_l9, 0.001); end
  def test_land_use_m9; assert_in_epsilon(96.79429445438284, worksheet.land_use_m9, 0.001); end
  def test_land_use_n9; assert_in_epsilon(120.67921526535483, worksheet.land_use_n9, 0.001); end
  def test_land_use_o9; assert_in_epsilon(145.32840483005367, worksheet.land_use_o9, 0.001); end
  def test_land_use_p9; assert_in_epsilon(170.75404913536073, worksheet.land_use_p9, 0.001); end
  def test_land_use_q9; assert_in_epsilon(196.89611025641025, worksheet.land_use_q9, 0.001); end
  def test_land_use_c10; assert_equal("IV.c", worksheet.land_use_c10); end
  def test_land_use_d10; assert_equal("micro wind if 2 Wpeak/m2", worksheet.land_use_d10); end
  def test_land_use_h10; assert_in_delta(0, (worksheet.land_use_h10||0), 0.001); end
  def test_land_use_i10; assert_in_epsilon(23.999999999999996, worksheet.land_use_i10, 0.001); end
  def test_land_use_j10; assert_in_epsilon(498.7499999999999, worksheet.land_use_j10, 0.001); end
  def test_land_use_k10; assert_in_epsilon(791.9999999999998, worksheet.land_use_k10, 0.001); end
  def test_land_use_l10; assert_in_epsilon(791.9999999999998, worksheet.land_use_l10, 0.001); end
  def test_land_use_m10; assert_in_epsilon(791.9999999999998, worksheet.land_use_m10, 0.001); end
  def test_land_use_n10; assert_in_epsilon(791.9999999999998, worksheet.land_use_n10, 0.001); end
  def test_land_use_o10; assert_in_epsilon(791.9999999999998, worksheet.land_use_o10, 0.001); end
  def test_land_use_p10; assert_in_epsilon(791.9999999999998, worksheet.land_use_p10, 0.001); end
  def test_land_use_q10; assert_in_epsilon(791.9999999999998, worksheet.land_use_q10, 0.001); end
  def test_land_use_c11; assert_equal("VI.a.Biocrop", worksheet.land_use_c11); end
  def test_land_use_d11; assert_equal("Area of biocrops", worksheet.land_use_d11); end
  def test_land_use_h11; assert_in_epsilon(3639.4, worksheet.land_use_h11, 0.001); end
  def test_land_use_i11; assert_in_epsilon(2443.094128773601, worksheet.land_use_i11, 0.001); end
  def test_land_use_j11; assert_in_epsilon(6300.04397286129, worksheet.land_use_j11, 0.001); end
  def test_land_use_k11; assert_in_epsilon(10081.55419183146, worksheet.land_use_k11, 0.001); end
  def test_land_use_l11; assert_in_epsilon(13790.6895626117, worksheet.land_use_l11, 0.001); end
  def test_land_use_m11; assert_in_epsilon(19760.39035385429, worksheet.land_use_m11, 0.001); end
  def test_land_use_n11; assert_in_epsilon(25333.47738415439, worksheet.land_use_n11, 0.001); end
  def test_land_use_o11; assert_in_epsilon(30842.6568747754, worksheet.land_use_o11, 0.001); end
  def test_land_use_p11; assert_in_epsilon(36290.525105229695, worksheet.land_use_p11, 0.001); end
  def test_land_use_q11; assert_in_epsilon(41679.5728797235, worksheet.land_use_q11, 0.001); end
  def test_land_use_c12; assert_equal("VI.a.Forestry", worksheet.land_use_c12); end
  def test_land_use_d12; assert_equal("Area of forest", worksheet.land_use_d12); end
  def test_land_use_h12; assert_in_epsilon(24369.699999999997, worksheet.land_use_h12, 0.001); end
  def test_land_use_i12; assert_in_epsilon(24934.3, worksheet.land_use_i12, 0.001); end
  def test_land_use_j12; assert_in_epsilon(26595.050000000003, worksheet.land_use_j12, 0.001); end
  def test_land_use_k12; assert_in_epsilon(28255.8, worksheet.land_use_k12, 0.001); end
  def test_land_use_l12; assert_in_epsilon(29916.550000000003, worksheet.land_use_l12, 0.001); end
  def test_land_use_m12; assert_in_epsilon(31577.3, worksheet.land_use_m12, 0.001); end
  def test_land_use_n12; assert_in_epsilon(33238.049999999996, worksheet.land_use_n12, 0.001); end
  def test_land_use_o12; assert_in_epsilon(34898.8, worksheet.land_use_o12, 0.001); end
  def test_land_use_p12; assert_in_epsilon(36559.55, worksheet.land_use_p12, 0.001); end
  def test_land_use_q12; assert_in_epsilon(38220.3, worksheet.land_use_q12, 0.001); end
  def test_land_use_c14; assert_equal("B.04", worksheet.land_use_c14); end
  def test_land_use_d14; assert_equal("UK Sea area", worksheet.land_use_d14); end
  def test_land_use_h14; assert_in_epsilon(2007, worksheet.land_use_h14, 0.001); end
  def test_land_use_i14; assert_in_epsilon(2010, worksheet.land_use_i14, 0.001); end
  def test_land_use_j14; assert_in_epsilon(2015, worksheet.land_use_j14, 0.001); end
  def test_land_use_k14; assert_in_epsilon(2020, worksheet.land_use_k14, 0.001); end
  def test_land_use_l14; assert_in_epsilon(2025, worksheet.land_use_l14, 0.001); end
  def test_land_use_m14; assert_in_epsilon(2030, worksheet.land_use_m14, 0.001); end
  def test_land_use_n14; assert_in_epsilon(2035, worksheet.land_use_n14, 0.001); end
  def test_land_use_o14; assert_in_epsilon(2040, worksheet.land_use_o14, 0.001); end
  def test_land_use_p14; assert_in_epsilon(2045, worksheet.land_use_p14, 0.001); end
  def test_land_use_q14; assert_in_epsilon(2050, worksheet.land_use_q14, 0.001); end
  def test_land_use_r14; assert_equal("km^2", worksheet.land_use_r14); end
  def test_land_use_c16; assert_equal("III.a.2", worksheet.land_use_c16); end
  def test_land_use_d16; assert_equal("offshore wind area if 2.5 W/m2", worksheet.land_use_d16); end
  def test_land_use_h16; assert_in_epsilon(44.57815999999999, worksheet.land_use_h16, 0.001); end
  def test_land_use_i16; assert_in_epsilon(188.1320000000001, worksheet.land_use_i16, 0.001); end
  def test_land_use_j16; assert_in_epsilon(1005.732, worksheet.land_use_j16, 0.001); end
  def test_land_use_k16; assert_in_epsilon(3638.4023999999995, worksheet.land_use_k16, 0.001); end
  def test_land_use_l16; assert_in_epsilon(7269.408, worksheet.land_use_l16, 0.001); end
  def test_land_use_m16; assert_in_epsilon(11909.28, worksheet.land_use_m16, 0.001); end
  def test_land_use_n16; assert_in_epsilon(15912, worksheet.land_use_n16, 0.001); end
  def test_land_use_o16; assert_in_epsilon(17280, worksheet.land_use_o16, 0.001); end
  def test_land_use_p16; assert_in_epsilon(17999.999999999996, worksheet.land_use_p16, 0.001); end
  def test_land_use_q16; assert_in_epsilon(17999.999999999996, worksheet.land_use_q16, 0.001); end
  def test_land_use_c17; assert_equal("III.c.TidalStream", worksheet.land_use_c17); end
  def test_land_use_d17; assert_equal("tidal stream devices if >1m/s tides", worksheet.land_use_d17); end
  def test_land_use_h17; assert_in_delta(0, (worksheet.land_use_h17||0), 0.001); end
  def test_land_use_i17; assert_in_delta(0.10569930661254866, worksheet.land_use_i17, 0.001); end
  def test_land_use_j17; assert_in_epsilon(1.7616551102091462, worksheet.land_use_j17, 0.001); end
  def test_land_use_k17; assert_in_epsilon(3.5233102204182862, worksheet.land_use_k17, 0.001); end
  def test_land_use_l17; assert_in_epsilon(17.616551102091464, worksheet.land_use_l17, 0.001); end
  def test_land_use_m17; assert_in_epsilon(35.23310220418286, worksheet.land_use_m17, 0.001); end
  def test_land_use_n17; assert_in_epsilon(105.69930661254865, worksheet.land_use_n17, 0.001); end
  def test_land_use_o17; assert_in_epsilon(229.01516432718861, worksheet.land_use_o17, 0.001); end
  def test_land_use_p17; assert_in_epsilon(507.35667174023325, worksheet.land_use_p17, 0.001); end
  def test_land_use_q17; assert_in_epsilon(634.1958396752918, worksheet.land_use_q17, 0.001); end
  def test_land_use_c18; assert_equal("III.c.TidalRange", worksheet.land_use_c18); end
  def test_land_use_d18; assert_equal("tidal impoundment if >Xm tidal range", worksheet.land_use_d18); end
  def test_land_use_h18; assert_in_delta(0, (worksheet.land_use_h18||0), 0.001); end
  def test_land_use_i18; assert_in_delta(0, (worksheet.land_use_i18||0), 0.001); end
  def test_land_use_j18; assert_in_delta(0, (worksheet.land_use_j18||0), 0.001); end
  def test_land_use_k18; assert_in_epsilon(21.428571428571423, worksheet.land_use_k18, 0.001); end
  def test_land_use_l18; assert_in_epsilon(21.428571428571423, worksheet.land_use_l18, 0.001); end
  def test_land_use_m18; assert_in_epsilon(49.99999999999999, worksheet.land_use_m18, 0.001); end
  def test_land_use_n18; assert_in_epsilon(49.99999999999999, worksheet.land_use_n18, 0.001); end
  def test_land_use_o18; assert_in_epsilon(123.21428571428571, worksheet.land_use_o18, 0.001); end
  def test_land_use_p18; assert_in_epsilon(123.21428571428571, worksheet.land_use_p18, 0.001); end
  def test_land_use_q18; assert_in_epsilon(123.21428571428571, worksheet.land_use_q18, 0.001); end
  def test_land_use_c19; assert_equal("VI.c", worksheet.land_use_c19); end
  def test_land_use_d19; assert_equal("algae if 0.9W/m2 efficient", worksheet.land_use_d19); end
  def test_land_use_h19; assert_in_delta(0, (worksheet.land_use_h19||0), 0.001); end
  def test_land_use_i19; assert_in_delta(0, (worksheet.land_use_i19||0), 0.001); end
  def test_land_use_j19; assert_in_delta(0, (worksheet.land_use_j19||0), 0.001); end
  def test_land_use_k19; assert_in_delta(1, worksheet.land_use_k19, 0.001); end
  def test_land_use_l19; assert_in_epsilon(50, worksheet.land_use_l19, 0.001); end
  def test_land_use_m19; assert_in_epsilon(250, worksheet.land_use_m19, 0.001); end
  def test_land_use_n19; assert_in_epsilon(500, worksheet.land_use_n19, 0.001); end
  def test_land_use_o19; assert_in_epsilon(1000, worksheet.land_use_o19, 0.001); end
  def test_land_use_p19; assert_in_epsilon(2500, worksheet.land_use_p19, 0.001); end
  def test_land_use_q19; assert_in_epsilon(5860.09, worksheet.land_use_q19, 0.001); end
  def test_land_use_c21; assert_equal("B.05", worksheet.land_use_c21); end
  def test_land_use_d21; assert_equal("Land area overseas", worksheet.land_use_d21); end
  def test_land_use_h21; assert_in_epsilon(2007, worksheet.land_use_h21, 0.001); end
  def test_land_use_i21; assert_in_epsilon(2010, worksheet.land_use_i21, 0.001); end
  def test_land_use_j21; assert_in_epsilon(2015, worksheet.land_use_j21, 0.001); end
  def test_land_use_k21; assert_in_epsilon(2020, worksheet.land_use_k21, 0.001); end
  def test_land_use_l21; assert_in_epsilon(2025, worksheet.land_use_l21, 0.001); end
  def test_land_use_m21; assert_in_epsilon(2030, worksheet.land_use_m21, 0.001); end
  def test_land_use_n21; assert_in_epsilon(2035, worksheet.land_use_n21, 0.001); end
  def test_land_use_o21; assert_in_epsilon(2040, worksheet.land_use_o21, 0.001); end
  def test_land_use_p21; assert_in_epsilon(2045, worksheet.land_use_p21, 0.001); end
  def test_land_use_q21; assert_in_epsilon(2050, worksheet.land_use_q21, 0.001); end
  def test_land_use_r21; assert_equal("km^2", worksheet.land_use_r21); end
  def test_land_use_c23; assert_equal("V.b", worksheet.land_use_c23); end
  def test_land_use_d23; assert_equal("biocrops overseas if 0.6W/m2 productivity", worksheet.land_use_d23); end
  def test_land_use_h23; assert_in_epsilon(760.6510000760512, worksheet.land_use_h23, 0.001); end
  def test_land_use_i23; assert_in_epsilon(707.5823256521406, worksheet.land_use_i23, 0.001); end
  def test_land_use_j23; assert_in_epsilon(619.134534945623, worksheet.land_use_j23, 0.001); end
  def test_land_use_k23; assert_in_epsilon(530.6867442391055, worksheet.land_use_k23, 0.001); end
  def test_land_use_l23; assert_in_epsilon(442.2389535325879, worksheet.land_use_l23, 0.001); end
  def test_land_use_m23; assert_in_epsilon(353.7911628260703, worksheet.land_use_m23, 0.001); end
  def test_land_use_n23; assert_in_epsilon(265.3433721195527, worksheet.land_use_n23, 0.001); end
  def test_land_use_o23; assert_in_epsilon(176.89558141303516, worksheet.land_use_o23, 0.001); end
  def test_land_use_p23; assert_in_epsilon(88.44779070651758, worksheet.land_use_p23, 0.001); end
  def test_land_use_q23; assert_in_epsilon(-5669.703474972748, worksheet.land_use_q23, 0.001); end
  def test_land_use_c24; assert_equal("VII.a", worksheet.land_use_c24); end
  def test_land_use_d24; assert_equal("solar devices overseas assuming 15W/m2 ", worksheet.land_use_d24); end
  def test_land_use_h24; assert_in_delta(0, (worksheet.land_use_h24||0), 0.001); end
  def test_land_use_i24; assert_in_delta(0, (worksheet.land_use_i24||0), 0.001); end
  def test_land_use_j24; assert_in_delta(0, (worksheet.land_use_j24||0), 0.001); end
  def test_land_use_k24; assert_in_delta(0, (worksheet.land_use_k24||0), 0.001); end
  def test_land_use_l24; assert_in_delta(0, (worksheet.land_use_l24||0), 0.001); end
  def test_land_use_m24; assert_in_delta(0, (worksheet.land_use_m24||0), 0.001); end
  def test_land_use_n24; assert_in_delta(0, (worksheet.land_use_n24||0), 0.001); end
  def test_land_use_o24; assert_in_delta(0, (worksheet.land_use_o24||0), 0.001); end
  def test_land_use_p24; assert_in_delta(0, (worksheet.land_use_p24||0), 0.001); end
  def test_land_use_q24; assert_in_delta(0, (worksheet.land_use_q24||0), 0.001); end
  def test_land_use_c26; assert_equal("B.06", worksheet.land_use_c26); end
  def test_land_use_d26; assert_equal("Length of wave front", worksheet.land_use_d26); end
  def test_land_use_h26; assert_in_epsilon(2007, worksheet.land_use_h26, 0.001); end
  def test_land_use_i26; assert_in_epsilon(2010, worksheet.land_use_i26, 0.001); end
  def test_land_use_j26; assert_in_epsilon(2015, worksheet.land_use_j26, 0.001); end
  def test_land_use_k26; assert_in_epsilon(2020, worksheet.land_use_k26, 0.001); end
  def test_land_use_l26; assert_in_epsilon(2025, worksheet.land_use_l26, 0.001); end
  def test_land_use_m26; assert_in_epsilon(2030, worksheet.land_use_m26, 0.001); end
  def test_land_use_n26; assert_in_epsilon(2035, worksheet.land_use_n26, 0.001); end
  def test_land_use_o26; assert_in_epsilon(2040, worksheet.land_use_o26, 0.001); end
  def test_land_use_p26; assert_in_epsilon(2045, worksheet.land_use_p26, 0.001); end
  def test_land_use_q26; assert_in_epsilon(2050, worksheet.land_use_q26, 0.001); end
  def test_land_use_r26; assert_equal("km", worksheet.land_use_r26); end
  def test_land_use_c28; assert_equal("III.c.Wave", worksheet.land_use_c28); end
  def test_land_use_d28; assert_equal("wave energy convertors if 25% efficient", worksheet.land_use_d28); end
  def test_land_use_h28; assert_in_delta(0, (worksheet.land_use_h28||0), 0.001); end
  def test_land_use_i28; assert_in_delta(0, (worksheet.land_use_i28||0), 0.001); end
  def test_land_use_j28; assert_in_delta(0.380517503805175, worksheet.land_use_j28, 0.001); end
  def test_land_use_k28; assert_in_epsilon(2.0082868256384225, worksheet.land_use_k28, 0.001); end
  def test_land_use_l28; assert_in_epsilon(5.020717064096051, worksheet.land_use_l28, 0.001); end
  def test_land_use_m28; assert_in_epsilon(10.041434128192124, worksheet.land_use_m28, 0.001); end
  def test_land_use_n28; assert_in_epsilon(40.1657365127685, worksheet.land_use_n28, 0.001); end
  def test_land_use_o28; assert_in_epsilon(90.37290715372899, worksheet.land_use_o28, 0.001); end
  def test_land_use_p28; assert_in_epsilon(192.79553526128873, worksheet.land_use_p28, 0.001); end
  def test_land_use_q28; assert_in_epsilon(240.99441907661074, worksheet.land_use_q28, 0.001); end
  def test_land_use_c30; assert_equal("B.03", worksheet.land_use_c30); end
  def test_land_use_d30; assert_equal("Number of units", worksheet.land_use_d30); end
  def test_land_use_h30; assert_in_epsilon(2007, worksheet.land_use_h30, 0.001); end
  def test_land_use_i30; assert_in_epsilon(2010, worksheet.land_use_i30, 0.001); end
  def test_land_use_j30; assert_in_epsilon(2015, worksheet.land_use_j30, 0.001); end
  def test_land_use_k30; assert_in_epsilon(2020, worksheet.land_use_k30, 0.001); end
  def test_land_use_l30; assert_in_epsilon(2025, worksheet.land_use_l30, 0.001); end
  def test_land_use_m30; assert_in_epsilon(2030, worksheet.land_use_m30, 0.001); end
  def test_land_use_n30; assert_in_epsilon(2035, worksheet.land_use_n30, 0.001); end
  def test_land_use_o30; assert_in_epsilon(2040, worksheet.land_use_o30, 0.001); end
  def test_land_use_p30; assert_in_epsilon(2045, worksheet.land_use_p30, 0.001); end
  def test_land_use_q30; assert_in_epsilon(2050, worksheet.land_use_q30, 0.001); end
  def test_land_use_r30; assert_equal("#", worksheet.land_use_r30); end
  def test_land_use_c32; assert_equal("I.a", worksheet.land_use_c32); end
  def test_land_use_d32; assert_equal("2 GW thermal power stations", worksheet.land_use_d32); end
  def test_land_use_h32; assert_in_epsilon(31.2942734602452, worksheet.land_use_h32, 0.001); end
  def test_land_use_i32; assert_in_epsilon(28.112881398144136, worksheet.land_use_i32, 0.001); end
  def test_land_use_j32; assert_in_epsilon(21.479604506433613, worksheet.land_use_j32, 0.001); end
  def test_land_use_k32; assert_in_epsilon(14.848910140708096, worksheet.land_use_k32, 0.001); end
  def test_land_use_l32; assert_in_epsilon(7.004148616537329, worksheet.land_use_l32, 0.001); end
  def test_land_use_m32; assert_in_delta(0, (worksheet.land_use_m32||0), 0.001); end
  def test_land_use_n32; assert_in_delta(0, (worksheet.land_use_n32||0), 0.001); end
  def test_land_use_o32; assert_in_delta(0, (worksheet.land_use_o32||0), 0.001); end
  def test_land_use_p32; assert_in_delta(0, (worksheet.land_use_p32||0), 0.001); end
  def test_land_use_q32; assert_in_delta(0, (worksheet.land_use_q32||0), 0.001); end
  def test_land_use_c33; assert_equal("I.b", worksheet.land_use_c33); end
  def test_land_use_d33; assert_equal("1.2 GW CCS power stations", worksheet.land_use_d33); end
  def test_land_use_h33; assert_in_delta(0, (worksheet.land_use_h33||0), 0.001); end
  def test_land_use_i33; assert_in_delta(0, (worksheet.land_use_i33||0), 0.001); end
  def test_land_use_j33; assert_in_delta(0.7083333333333335, worksheet.land_use_j33, 0.001); end
  def test_land_use_k33; assert_in_epsilon(1.416666666666667, worksheet.land_use_k33, 0.001); end
  def test_land_use_l33; assert_in_epsilon(1.4166666666666667, worksheet.land_use_l33, 0.001); end
  def test_land_use_m33; assert_in_epsilon(1.4166666666666667, worksheet.land_use_m33, 0.001); end
  def test_land_use_n33; assert_in_epsilon(1.4166666666666667, worksheet.land_use_n33, 0.001); end
  def test_land_use_o33; assert_in_epsilon(1.4166666666666667, worksheet.land_use_o33, 0.001); end
  def test_land_use_p33; assert_in_epsilon(1.4166666666666667, worksheet.land_use_p33, 0.001); end
  def test_land_use_q33; assert_in_epsilon(1.4166666666666667, worksheet.land_use_q33, 0.001); end
  def test_land_use_c34; assert_equal("II.a", worksheet.land_use_c34); end
  def test_land_use_d34; assert_equal("3 GW nuclear power station complexes", worksheet.land_use_d34); end
  def test_land_use_h34; assert_in_epsilon(3.6666666666666665, worksheet.land_use_h34, 0.001); end
  def test_land_use_i34; assert_in_epsilon(3.3333333333333335, worksheet.land_use_i34, 0.001); end
  def test_land_use_j34; assert_in_epsilon(2.4, worksheet.land_use_j34, 0.001); end
  def test_land_use_k34; assert_in_epsilon(1.2000000000000002, worksheet.land_use_k34, 0.001); end
  def test_land_use_l34; assert_in_delta(0.4000000000000002, worksheet.land_use_l34, 0.001); end
  def test_land_use_m34; assert_in_delta(0.4000000000000002, worksheet.land_use_m34, 0.001); end
  def test_land_use_n34; assert_in_delta(0, (worksheet.land_use_n34||0), 0.001); end
  def test_land_use_o34; assert_in_delta(0, (worksheet.land_use_o34||0), 0.001); end
  def test_land_use_p34; assert_in_delta(0, (worksheet.land_use_p34||0), 0.001); end
  def test_land_use_q34; assert_in_delta(0, (worksheet.land_use_q34||0), 0.001); end
  def test_land_use_c35; assert_equal("III.d", worksheet.land_use_c35); end
  def test_land_use_d35; assert_equal("0.01 GW geothermal power stations", worksheet.land_use_d35); end
  def test_land_use_h35; assert_in_delta(0, (worksheet.land_use_h35||0), 0.001); end
  def test_land_use_i35; assert_in_delta(0, (worksheet.land_use_i35||0), 0.001); end
  def test_land_use_j35; assert_in_epsilon(1.2999999999999998, worksheet.land_use_j35, 0.001); end
  def test_land_use_k35; assert_in_epsilon(10.399999999999999, worksheet.land_use_k35, 0.001); end
  def test_land_use_l35; assert_in_epsilon(83.19999999999999, worksheet.land_use_l35, 0.001); end
  def test_land_use_m35; assert_in_epsilon(300, worksheet.land_use_m35, 0.001); end
  def test_land_use_n35; assert_in_epsilon(300, worksheet.land_use_n35, 0.001); end
  def test_land_use_o35; assert_in_epsilon(300, worksheet.land_use_o35, 0.001); end
  def test_land_use_p35; assert_in_epsilon(300, worksheet.land_use_p35, 0.001); end
  def test_land_use_q35; assert_in_epsilon(300, worksheet.land_use_q35, 0.001); end
  def test_land_use_c36; assert_equal("VII.c", worksheet.land_use_c36); end
  def test_land_use_d36; assert_equal("1 GW standby generators", worksheet.land_use_d36); end
  def test_land_use_h36; assert_in_delta(0, (worksheet.land_use_h36||0), 0.001); end
  def test_land_use_i36; assert_in_delta(0, (worksheet.land_use_i36||0), 0.001); end
  def test_land_use_j36; assert_in_delta(0, (worksheet.land_use_j36||0), 0.001); end
  def test_land_use_k36; assert_in_epsilon(3.5689130393179114, worksheet.land_use_k36, 0.001); end
  def test_land_use_l36; assert_in_epsilon(10.58976032855675, worksheet.land_use_l36, 0.001); end
  def test_land_use_m36; assert_in_epsilon(7.624903041794366, worksheet.land_use_m36, 0.001); end
  def test_land_use_n36; assert_in_delta(0.5011287945865025, worksheet.land_use_n36, 0.001); end
  def test_land_use_o36; assert_in_delta(0, (worksheet.land_use_o36||0), 0.001); end
  def test_land_use_p36; assert_in_delta(0, (worksheet.land_use_p36||0), 0.001); end
  def test_land_use_q36; assert_in_delta(0, (worksheet.land_use_q36||0), 0.001); end
  def test_land_use_c37; assert_equal("VI.b", worksheet.land_use_c37); end
  def test_land_use_d37; assert_equal("Number of Household, C&I and CDW to energy facilities", worksheet.land_use_d37); end
  def test_land_use_h37; assert_in_epsilon(43.99784119293418, worksheet.land_use_h37, 0.001); end
  def test_land_use_i37; assert_in_epsilon(45.70304186046512, worksheet.land_use_i37, 0.001); end
  def test_land_use_j37; assert_in_epsilon(55.65071511627907, worksheet.land_use_j37, 0.001); end
  def test_land_use_k37; assert_in_epsilon(65.09603255813953, worksheet.land_use_k37, 0.001); end
  def test_land_use_l37; assert_in_epsilon(59.84948395348837, worksheet.land_use_l37, 0.001); end
  def test_land_use_m37; assert_in_epsilon(54.82519953488373, worksheet.land_use_m37, 0.001); end
  def test_land_use_n37; assert_in_epsilon(50.5747483139535, worksheet.land_use_n37, 0.001); end
  def test_land_use_o37; assert_in_epsilon(46.48041395348837, worksheet.land_use_o37, 0.001); end
  def test_land_use_p37; assert_in_epsilon(42.542196453488366, worksheet.land_use_p37, 0.001); end
  def test_land_use_q37; assert_in_epsilon(38.760095813953484, worksheet.land_use_q37, 0.001); end
  def test_flows_b2; assert_equal("Flows through the energy system (for producing an energy flow diagram)", worksheet.flows_b2); end
  def test_flows_q2; assert_equal("Cross check of flows through the energy system (based on the idea that energy is transformed, but not destroyed)", worksheet.flows_q2); end
  def test_flows_n4; assert_equal("TWh", worksheet.flows_n4); end
  def test_flows_s4; assert_equal("Values flowing from the transformation", worksheet.flows_s4); end
  def test_flows_ad4; assert_equal("Values flowing to the transformation", worksheet.flows_ad4); end
  def test_flows_ao4; assert_equal("Check that flows in equal flows out", worksheet.flows_ao4); end
  def test_flows_c5; assert_equal("From", worksheet.flows_c5); end
  def test_flows_d5; assert_equal("To", worksheet.flows_d5); end
  def test_flows_e5; assert_in_epsilon(2007, worksheet.flows_e5, 0.001); end
  def test_flows_f5; assert_in_epsilon(2010, worksheet.flows_f5, 0.001); end
  def test_flows_g5; assert_in_epsilon(2015, worksheet.flows_g5, 0.001); end
  def test_flows_h5; assert_in_epsilon(2020, worksheet.flows_h5, 0.001); end
  def test_flows_i5; assert_in_epsilon(2025, worksheet.flows_i5, 0.001); end
  def test_flows_j5; assert_in_epsilon(2030, worksheet.flows_j5, 0.001); end
  def test_flows_k5; assert_in_epsilon(2035, worksheet.flows_k5, 0.001); end
  def test_flows_l5; assert_in_epsilon(2040, worksheet.flows_l5, 0.001); end
  def test_flows_m5; assert_in_epsilon(2045, worksheet.flows_m5, 0.001); end
  def test_flows_n5; assert_in_epsilon(2050, worksheet.flows_n5, 0.001); end
  def test_flows_r5; assert_equal("Transformation", worksheet.flows_r5); end
  def test_flows_s5; assert_in_epsilon(2007, worksheet.flows_s5, 0.001); end
  def test_flows_t5; assert_in_epsilon(2010, worksheet.flows_t5, 0.001); end
  def test_flows_u5; assert_in_epsilon(2015, worksheet.flows_u5, 0.001); end
  def test_flows_v5; assert_in_epsilon(2020, worksheet.flows_v5, 0.001); end
  def test_flows_w5; assert_in_epsilon(2025, worksheet.flows_w5, 0.001); end
  def test_flows_x5; assert_in_epsilon(2030, worksheet.flows_x5, 0.001); end
  def test_flows_y5; assert_in_epsilon(2035, worksheet.flows_y5, 0.001); end
  def test_flows_z5; assert_in_epsilon(2040, worksheet.flows_z5, 0.001); end
  def test_flows_aa5; assert_in_epsilon(2045, worksheet.flows_aa5, 0.001); end
  def test_flows_ab5; assert_in_epsilon(2050, worksheet.flows_ab5, 0.001); end
  def test_flows_ad5; assert_in_epsilon(2007, worksheet.flows_ad5, 0.001); end
  def test_flows_ae5; assert_in_epsilon(2010, worksheet.flows_ae5, 0.001); end
  def test_flows_af5; assert_in_epsilon(2015, worksheet.flows_af5, 0.001); end
  def test_flows_ag5; assert_in_epsilon(2020, worksheet.flows_ag5, 0.001); end
  def test_flows_ah5; assert_in_epsilon(2025, worksheet.flows_ah5, 0.001); end
  def test_flows_ai5; assert_in_epsilon(2030, worksheet.flows_ai5, 0.001); end
  def test_flows_aj5; assert_in_epsilon(2035, worksheet.flows_aj5, 0.001); end
  def test_flows_ak5; assert_in_epsilon(2040, worksheet.flows_ak5, 0.001); end
  def test_flows_al5; assert_in_epsilon(2045, worksheet.flows_al5, 0.001); end
  def test_flows_am5; assert_in_epsilon(2050, worksheet.flows_am5, 0.001); end
  def test_flows_ao5; assert_in_epsilon(2007, worksheet.flows_ao5, 0.001); end
  def test_flows_ap5; assert_in_epsilon(2010, worksheet.flows_ap5, 0.001); end
  def test_flows_aq5; assert_in_epsilon(2015, worksheet.flows_aq5, 0.001); end
  def test_flows_ar5; assert_in_epsilon(2020, worksheet.flows_ar5, 0.001); end
  def test_flows_as5; assert_in_epsilon(2025, worksheet.flows_as5, 0.001); end
  def test_flows_at5; assert_in_epsilon(2030, worksheet.flows_at5, 0.001); end
  def test_flows_au5; assert_in_epsilon(2035, worksheet.flows_au5, 0.001); end
  def test_flows_av5; assert_in_epsilon(2040, worksheet.flows_av5, 0.001); end
  def test_flows_aw5; assert_in_epsilon(2045, worksheet.flows_aw5, 0.001); end
  def test_flows_ax5; assert_in_epsilon(2050, worksheet.flows_ax5, 0.001); end
  def test_flows_c6; assert_equal("Coal reserves", worksheet.flows_c6); end
  def test_flows_d6; assert_equal("Coal", worksheet.flows_d6); end
  def test_flows_r6; assert_equal("Agricultural 'waste'", worksheet.flows_r6); end
  def test_flows_s6; assert_in_epsilon(3.4811481886666664, worksheet.flows_s6, 0.001); end
  def test_flows_t6; assert_in_epsilon(9.137988823303997, worksheet.flows_t6, 0.001); end
  def test_flows_u6; assert_in_epsilon(32.5242359838616, worksheet.flows_u6, 0.001); end
  def test_flows_v6; assert_in_epsilon(79.24414314442726, worksheet.flows_v6, 0.001); end
  def test_flows_w6; assert_in_epsilon(110.63610082183695, worksheet.flows_w6, 0.001); end
  def test_flows_x6; assert_in_epsilon(118.75711820385587, worksheet.flows_x6, 0.001); end
  def test_flows_y6; assert_in_epsilon(119.40188738381968, worksheet.flows_y6, 0.001); end
  def test_flows_z6; assert_in_epsilon(123.71704830787853, worksheet.flows_z6, 0.001); end
  def test_flows_aa6; assert_in_epsilon(128.26577939530478, worksheet.flows_aa6, 0.001); end
  def test_flows_ab6; assert_in_epsilon(129.69712565263816, worksheet.flows_ab6, 0.001); end
  def test_flows_ad6; assert_in_delta(0, (worksheet.flows_ad6||0), 0.001); end
  def test_flows_ae6; assert_in_delta(0, (worksheet.flows_ae6||0), 0.001); end
  def test_flows_af6; assert_in_delta(0, (worksheet.flows_af6||0), 0.001); end
  def test_flows_ag6; assert_in_delta(0, (worksheet.flows_ag6||0), 0.001); end
  def test_flows_ah6; assert_in_delta(0, (worksheet.flows_ah6||0), 0.001); end
  def test_flows_ai6; assert_in_delta(0, (worksheet.flows_ai6||0), 0.001); end
  def test_flows_aj6; assert_in_delta(0, (worksheet.flows_aj6||0), 0.001); end
  def test_flows_ak6; assert_in_delta(0, (worksheet.flows_ak6||0), 0.001); end
  def test_flows_al6; assert_in_delta(0, (worksheet.flows_al6||0), 0.001); end
  def test_flows_am6; assert_in_delta(0, (worksheet.flows_am6||0), 0.001); end
  def test_flows_c7; assert_equal("Coal imports", worksheet.flows_c7); end
  def test_flows_d7; assert_equal("Coal", worksheet.flows_d7); end
  def test_flows_r7; assert_equal("Agriculture", worksheet.flows_r7); end
  def test_flows_s7; assert_in_delta(0, (worksheet.flows_s7||0), 0.001); end
  def test_flows_t7; assert_in_delta(0, (worksheet.flows_t7||0), 0.001); end
  def test_flows_u7; assert_in_delta(0, (worksheet.flows_u7||0), 0.001); end
  def test_flows_v7; assert_in_delta(0, (worksheet.flows_v7||0), 0.001); end
  def test_flows_w7; assert_in_delta(0, (worksheet.flows_w7||0), 0.001); end
  def test_flows_x7; assert_in_delta(0, (worksheet.flows_x7||0), 0.001); end
  def test_flows_y7; assert_in_delta(0, (worksheet.flows_y7||0), 0.001); end
  def test_flows_z7; assert_in_delta(0, (worksheet.flows_z7||0), 0.001); end
  def test_flows_aa7; assert_in_delta(0, (worksheet.flows_aa7||0), 0.001); end
  def test_flows_ab7; assert_in_delta(0, (worksheet.flows_ab7||0), 0.001); end
  def test_flows_ad7; assert_in_epsilon(10.432110000000002, worksheet.flows_ad7, 0.001); end
  def test_flows_ae7; assert_in_epsilon(10.643947183817431, worksheet.flows_ae7, 0.001); end
  def test_flows_af7; assert_in_epsilon(10.770089890872702, worksheet.flows_af7, 0.001); end
  def test_flows_ag7; assert_in_epsilon(10.896770075870263, worksheet.flows_ag7, 0.001); end
  def test_flows_ah7; assert_in_epsilon(11.0239811942196, worksheet.flows_ah7, 0.001); end
  def test_flows_ai7; assert_in_epsilon(11.350096902484932, worksheet.flows_ai7, 0.001); end
  def test_flows_aj7; assert_in_epsilon(11.648633937620348, worksheet.flows_aj7, 0.001); end
  def test_flows_ak7; assert_in_epsilon(11.94768274660695, worksheet.flows_ak7, 0.001); end
  def test_flows_al7; assert_in_epsilon(12.247237097839626, worksheet.flows_al7, 0.001); end
  def test_flows_am7; assert_in_epsilon(12.547290835592284, worksheet.flows_am7, 0.001); end
  def test_flows_c8; assert_equal("Oil reserves", worksheet.flows_c8); end
  def test_flows_d8; assert_equal("Oil", worksheet.flows_d8); end
  def test_flows_r8; assert_equal("Bio-conversion", worksheet.flows_r8); end
  def test_flows_s8; assert_in_epsilon(43.37864710171031, worksheet.flows_s8, 0.001); end
  def test_flows_t8; assert_in_epsilon(47.6176307207646, worksheet.flows_t8, 0.001); end
  def test_flows_u8; assert_in_epsilon(96.95467170815422, worksheet.flows_u8, 0.001); end
  def test_flows_v8; assert_in_epsilon(172.18322073800044, worksheet.flows_v8, 0.001); end
  def test_flows_w8; assert_in_epsilon(231.92424186933061, worksheet.flows_w8, 0.001); end
  def test_flows_x8; assert_in_epsilon(289.7512007211589, worksheet.flows_x8, 0.001); end
  def test_flows_y8; assert_in_epsilon(344.91894575869804, worksheet.flows_y8, 0.001); end
  def test_flows_z8; assert_in_epsilon(412.51818903528414, worksheet.flows_z8, 0.001); end
  def test_flows_aa8; assert_in_epsilon(495.6117962859011, worksheet.flows_aa8, 0.001); end
  def test_flows_ab8; assert_in_epsilon(598.4691229756233, worksheet.flows_ab8, 0.001); end
  def test_flows_ad8; assert_in_epsilon(43.37864710171031, worksheet.flows_ad8, 0.001); end
  def test_flows_ae8; assert_in_epsilon(47.6176307207646, worksheet.flows_ae8, 0.001); end
  def test_flows_af8; assert_in_epsilon(96.95467170815422, worksheet.flows_af8, 0.001); end
  def test_flows_ag8; assert_in_epsilon(172.18322073800044, worksheet.flows_ag8, 0.001); end
  def test_flows_ah8; assert_in_epsilon(231.92424186933064, worksheet.flows_ah8, 0.001); end
  def test_flows_ai8; assert_in_epsilon(289.75120072115897, worksheet.flows_ai8, 0.001); end
  def test_flows_aj8; assert_in_epsilon(344.91894575869804, worksheet.flows_aj8, 0.001); end
  def test_flows_ak8; assert_in_epsilon(412.5181890352842, worksheet.flows_ak8, 0.001); end
  def test_flows_al8; assert_in_epsilon(495.61179628590116, worksheet.flows_al8, 0.001); end
  def test_flows_am8; assert_in_epsilon(598.4691229756233, worksheet.flows_am8, 0.001); end
  def test_flows_ao8; assert_in_delta(0, (worksheet.flows_ao8||0), 0.001); end
  def test_flows_ap8; assert_in_delta(0, (worksheet.flows_ap8||0), 0.001); end
  def test_flows_aq8; assert_in_delta(0, (worksheet.flows_aq8||0), 0.001); end
  def test_flows_ar8; assert_in_delta(0, (worksheet.flows_ar8||0), 0.001); end
  def test_flows_as8; assert_in_delta(0, (worksheet.flows_as8||0), 0.001); end
  def test_flows_at8; assert_in_delta(0, (worksheet.flows_at8||0), 0.001); end
  def test_flows_au8; assert_in_delta(0, (worksheet.flows_au8||0), 0.001); end
  def test_flows_av8; assert_in_delta(0, (worksheet.flows_av8||0), 0.001); end
  def test_flows_aw8; assert_in_delta(0, (worksheet.flows_aw8||0), 0.001); end
  def test_flows_ax8; assert_in_delta(0, (worksheet.flows_ax8||0), 0.001); end
  def test_flows_c9; assert_equal("Oil imports", worksheet.flows_c9); end
  def test_flows_d9; assert_equal("Oil", worksheet.flows_d9); end
  def test_flows_r9; assert_equal("Biofuel imports", worksheet.flows_r9); end
  def test_flows_s9; assert_in_delta(0, (worksheet.flows_s9||0), 0.001); end
  def test_flows_t9; assert_in_delta(0, (worksheet.flows_t9||0), 0.001); end
  def test_flows_u9; assert_in_delta(0, (worksheet.flows_u9||0), 0.001); end
  def test_flows_v9; assert_in_delta(0, (worksheet.flows_v9||0), 0.001); end
  def test_flows_w9; assert_in_delta(0, (worksheet.flows_w9||0), 0.001); end
  def test_flows_x9; assert_in_delta(0, (worksheet.flows_x9||0), 0.001); end
  def test_flows_y9; assert_in_delta(0, (worksheet.flows_y9||0), 0.001); end
  def test_flows_z9; assert_in_delta(0, (worksheet.flows_z9||0), 0.001); end
  def test_flows_aa9; assert_in_delta(0, (worksheet.flows_aa9||0), 0.001); end
  def test_flows_ab9; assert_in_delta(0, (worksheet.flows_ab9||0), 0.001); end
  def test_flows_ad9; assert_in_delta(0, (worksheet.flows_ad9||0), 0.001); end
  def test_flows_ae9; assert_in_delta(0, (worksheet.flows_ae9||0), 0.001); end
  def test_flows_af9; assert_in_delta(0, (worksheet.flows_af9||0), 0.001); end
  def test_flows_ag9; assert_in_delta(0, (worksheet.flows_ag9||0), 0.001); end
  def test_flows_ah9; assert_in_delta(0, (worksheet.flows_ah9||0), 0.001); end
  def test_flows_ai9; assert_in_delta(0, (worksheet.flows_ai9||0), 0.001); end
  def test_flows_aj9; assert_in_delta(0, (worksheet.flows_aj9||0), 0.001); end
  def test_flows_ak9; assert_in_delta(0, (worksheet.flows_ak9||0), 0.001); end
  def test_flows_al9; assert_in_delta(0, (worksheet.flows_al9||0), 0.001); end
  def test_flows_am9; assert_in_delta(0, (worksheet.flows_am9||0), 0.001); end
  def test_flows_c10; assert_equal("Gas reserves", worksheet.flows_c10); end
  def test_flows_d10; assert_equal("Natural Gas", worksheet.flows_d10); end
  def test_flows_r10; assert_equal("Biomass imports", worksheet.flows_r10); end
  def test_flows_s10; assert_in_epsilon(4.39614, worksheet.flows_s10, 0.001); end
  def test_flows_t10; assert_in_epsilon(4.089432558139535, worksheet.flows_t10, 0.001); end
  def test_flows_u10; assert_in_epsilon(3.578253488372093, worksheet.flows_u10, 0.001); end
  def test_flows_v10; assert_in_epsilon(3.0670744186046512, worksheet.flows_v10, 0.001); end
  def test_flows_w10; assert_in_epsilon(2.5558953488372094, worksheet.flows_w10, 0.001); end
  def test_flows_x10; assert_in_epsilon(2.0447162790697675, worksheet.flows_x10, 0.001); end
  def test_flows_y10; assert_in_epsilon(1.5335372093023256, worksheet.flows_y10, 0.001); end
  def test_flows_z10; assert_in_epsilon(1.0223581395348837, worksheet.flows_z10, 0.001); end
  def test_flows_aa10; assert_in_delta(0.5111790697674419, worksheet.flows_aa10, 0.001); end
  def test_flows_ab10; assert_in_delta(0, (worksheet.flows_ab10||0), 0.001); end
  def test_flows_ad10; assert_in_delta(0, (worksheet.flows_ad10||0), 0.001); end
  def test_flows_ae10; assert_in_delta(0, (worksheet.flows_ae10||0), 0.001); end
  def test_flows_af10; assert_in_delta(0, (worksheet.flows_af10||0), 0.001); end
  def test_flows_ag10; assert_in_delta(0, (worksheet.flows_ag10||0), 0.001); end
  def test_flows_ah10; assert_in_delta(0, (worksheet.flows_ah10||0), 0.001); end
  def test_flows_ai10; assert_in_delta(0, (worksheet.flows_ai10||0), 0.001); end
  def test_flows_aj10; assert_in_delta(0, (worksheet.flows_aj10||0), 0.001); end
  def test_flows_ak10; assert_in_delta(0, (worksheet.flows_ak10||0), 0.001); end
  def test_flows_al10; assert_in_delta(0, (worksheet.flows_al10||0), 0.001); end
  def test_flows_am10; assert_in_delta(0, (worksheet.flows_am10||0), 0.001); end
  def test_flows_c11; assert_equal("Gas imports", worksheet.flows_c11); end
  def test_flows_d11; assert_equal("Natural Gas", worksheet.flows_d11); end
  def test_flows_r11; assert_equal("CHP", worksheet.flows_r11); end
  def test_flows_s11; assert_in_delta(0, (worksheet.flows_s11||0), 0.001); end
  def test_flows_t11; assert_in_delta(0, (worksheet.flows_t11||0), 0.001); end
  def test_flows_u11; assert_in_delta(0, (worksheet.flows_u11||0), 0.001); end
  def test_flows_v11; assert_in_epsilon(26.548597882899507, worksheet.flows_v11, 0.001); end
  def test_flows_w11; assert_in_epsilon(45.67788676866635, worksheet.flows_w11, 0.001); end
  def test_flows_x11; assert_in_epsilon(57.921324701274216, worksheet.flows_x11, 0.001); end
  def test_flows_y11; assert_in_epsilon(63.76603882653515, worksheet.flows_y11, 0.001); end
  def test_flows_z11; assert_in_epsilon(63.776915293141826, worksheet.flows_z11, 0.001); end
  def test_flows_aa11; assert_in_epsilon(58.426157065427645, worksheet.flows_aa11, 0.001); end
  def test_flows_ab11; assert_in_epsilon(48.05675670325677, worksheet.flows_ab11, 0.001); end
  def test_flows_ad11; assert_in_delta(0, (worksheet.flows_ad11||0), 0.001); end
  def test_flows_ae11; assert_in_delta(0, (worksheet.flows_ae11||0), 0.001); end
  def test_flows_af11; assert_in_delta(0, (worksheet.flows_af11||0), 0.001); end
  def test_flows_ag11; assert_in_epsilon(26.548597882899507, worksheet.flows_ag11, 0.001); end
  def test_flows_ah11; assert_in_epsilon(45.677886768666355, worksheet.flows_ah11, 0.001); end
  def test_flows_ai11; assert_in_epsilon(57.921324701274216, worksheet.flows_ai11, 0.001); end
  def test_flows_aj11; assert_in_epsilon(63.76603882653515, worksheet.flows_aj11, 0.001); end
  def test_flows_ak11; assert_in_epsilon(63.776915293141826, worksheet.flows_ak11, 0.001); end
  def test_flows_al11; assert_in_epsilon(58.426157065427645, worksheet.flows_al11, 0.001); end
  def test_flows_am11; assert_in_epsilon(48.05675670325677, worksheet.flows_am11, 0.001); end
  def test_flows_ao11; assert_in_delta(0, (worksheet.flows_ao11||0), 0.001); end
  def test_flows_ap11; assert_in_delta(0, (worksheet.flows_ap11||0), 0.001); end
  def test_flows_aq11; assert_in_delta(0, (worksheet.flows_aq11||0), 0.001); end
  def test_flows_ar11; assert_in_delta(0, (worksheet.flows_ar11||0), 0.001); end
  def test_flows_as11; assert_in_delta(0, (worksheet.flows_as11||0), 0.001); end
  def test_flows_at11; assert_in_delta(0, (worksheet.flows_at11||0), 0.001); end
  def test_flows_au11; assert_in_delta(0, (worksheet.flows_au11||0), 0.001); end
  def test_flows_av11; assert_in_delta(0, (worksheet.flows_av11||0), 0.001); end
  def test_flows_aw11; assert_in_delta(0, (worksheet.flows_aw11||0), 0.001); end
  def test_flows_ax11; assert_in_delta(0, (worksheet.flows_ax11||0), 0.001); end
  def test_flows_c12; assert_equal("UK land based bioenergy", worksheet.flows_c12); end
  def test_flows_d12; assert_equal("Bio-conversion", worksheet.flows_d12); end
  def test_flows_e12; assert_in_epsilon(4.881522222222221, worksheet.flows_e12, 0.001); end
  def test_flows_f12; assert_in_epsilon(8.961145168485396, worksheet.flows_f12, 0.001); end
  def test_flows_g12; assert_in_epsilon(31.957461626199763, worksheet.flows_g12, 0.001); end
  def test_flows_h12; assert_in_epsilon(57.984754598992964, worksheet.flows_h12, 0.001); end
  def test_flows_i12; assert_in_epsilon(87.35842094453447, worksheet.flows_i12, 0.001); end
  def test_flows_j12; assert_in_epsilon(137.28733764887926, worksheet.flows_j12, 0.001); end
  def test_flows_k12; assert_in_epsilon(191.3201149706611, worksheet.flows_k12, 0.001); end
  def test_flows_l12; assert_in_epsilon(252.34844126096894, worksheet.flows_l12, 0.001); end
  def test_flows_m12; assert_in_epsilon(321.11291813999156, worksheet.flows_m12, 0.001); end
  def test_flows_n12; assert_in_epsilon(398.42623627447324, worksheet.flows_n12, 0.001); end
  def test_flows_r12; assert_equal("Coal", worksheet.flows_r12); end
  def test_flows_s12; assert_in_epsilon(471.091791005217, worksheet.flows_s12, 0.001); end
  def test_flows_t12; assert_in_epsilon(418.01432080865914, worksheet.flows_t12, 0.001); end
  def test_flows_u12; assert_in_epsilon(339.1023079228278, worksheet.flows_u12, 0.001); end
  def test_flows_v12; assert_in_epsilon(230.17554410381686, worksheet.flows_v12, 0.001); end
  def test_flows_w12; assert_in_epsilon(127.93, worksheet.flows_w12, 0.001); end
  def test_flows_x12; assert_in_epsilon(63.965, worksheet.flows_x12, 0.001); end
  def test_flows_y12; assert_in_epsilon(63.965, worksheet.flows_y12, 0.001); end
  def test_flows_z12; assert_in_epsilon(63.965, worksheet.flows_z12, 0.001); end
  def test_flows_aa12; assert_in_epsilon(63.965, worksheet.flows_aa12, 0.001); end
  def test_flows_ab12; assert_in_epsilon(63.965, worksheet.flows_ab12, 0.001); end
  def test_flows_ad12; assert_in_epsilon(471.091791005217, worksheet.flows_ad12, 0.001); end
  def test_flows_ae12; assert_in_epsilon(418.01432080865914, worksheet.flows_ae12, 0.001); end
  def test_flows_af12; assert_in_epsilon(339.1023079228278, worksheet.flows_af12, 0.001); end
  def test_flows_ag12; assert_in_epsilon(230.17554410381686, worksheet.flows_ag12, 0.001); end
  def test_flows_ah12; assert_in_epsilon(127.93, worksheet.flows_ah12, 0.001); end
  def test_flows_ai12; assert_in_epsilon(63.965, worksheet.flows_ai12, 0.001); end
  def test_flows_aj12; assert_in_epsilon(63.965, worksheet.flows_aj12, 0.001); end
  def test_flows_ak12; assert_in_epsilon(63.965, worksheet.flows_ak12, 0.001); end
  def test_flows_al12; assert_in_epsilon(63.965, worksheet.flows_al12, 0.001); end
  def test_flows_am12; assert_in_epsilon(63.965, worksheet.flows_am12, 0.001); end
  def test_flows_ao12; assert_in_delta(0, (worksheet.flows_ao12||0), 0.001); end
  def test_flows_ap12; assert_in_delta(0, (worksheet.flows_ap12||0), 0.001); end
  def test_flows_aq12; assert_in_delta(0, (worksheet.flows_aq12||0), 0.001); end
  def test_flows_ar12; assert_in_delta(0, (worksheet.flows_ar12||0), 0.001); end
  def test_flows_as12; assert_in_delta(0, (worksheet.flows_as12||0), 0.001); end
  def test_flows_at12; assert_in_delta(0, (worksheet.flows_at12||0), 0.001); end
  def test_flows_au12; assert_in_delta(0, (worksheet.flows_au12||0), 0.001); end
  def test_flows_av12; assert_in_delta(0, (worksheet.flows_av12||0), 0.001); end
  def test_flows_aw12; assert_in_delta(0, (worksheet.flows_aw12||0), 0.001); end
  def test_flows_ax12; assert_in_delta(0, (worksheet.flows_ax12||0), 0.001); end
  def test_flows_c13; assert_equal("Marine algae", worksheet.flows_c13); end
  def test_flows_d13; assert_equal("Bio-conversion", worksheet.flows_d13); end
  def test_flows_e13; assert_in_delta(0, (worksheet.flows_e13||0), 0.001); end
  def test_flows_f13; assert_in_delta(0, (worksheet.flows_f13||0), 0.001); end
  def test_flows_g13; assert_in_delta(0, (worksheet.flows_g13||0), 0.001); end
  def test_flows_h13; assert_in_delta(0.0058333333333333345, worksheet.flows_h13, 0.001); end
  def test_flows_i13; assert_in_delta(0.38888888888888895, worksheet.flows_i13, 0.001); end
  def test_flows_j13; assert_in_epsilon(1.9444444444444446, worksheet.flows_j13, 0.001); end
  def test_flows_k13; assert_in_epsilon(3.8888888888888893, worksheet.flows_k13, 0.001); end
  def test_flows_l13; assert_in_epsilon(7.777777777777779, worksheet.flows_l13, 0.001); end
  def test_flows_m13; assert_in_epsilon(19.444444444444446, worksheet.flows_m13, 0.001); end
  def test_flows_n13; assert_in_epsilon(45.578477777777785, worksheet.flows_n13, 0.001); end
  def test_flows_r13; assert_equal("Coal imports", worksheet.flows_r13); end
  def test_flows_s13; assert_in_epsilon(346.69608961099897, worksheet.flows_s13, 0.001); end
  def test_flows_t13; assert_in_epsilon(290.08432080865913, worksheet.flows_t13, 0.001); end
  def test_flows_u13; assert_in_epsilon(211.17230792282777, worksheet.flows_u13, 0.001); end
  def test_flows_v13; assert_in_epsilon(102.24554410381685, worksheet.flows_v13, 0.001); end
  def test_flows_w13; assert_in_delta(0, (worksheet.flows_w13||0), 0.001); end
  def test_flows_x13; assert_in_delta(0, (worksheet.flows_x13||0), 0.001); end
  def test_flows_y13; assert_in_delta(0, (worksheet.flows_y13||0), 0.001); end
  def test_flows_z13; assert_in_delta(0, (worksheet.flows_z13||0), 0.001); end
  def test_flows_aa13; assert_in_delta(0, (worksheet.flows_aa13||0), 0.001); end
  def test_flows_ab13; assert_in_delta(0, (worksheet.flows_ab13||0), 0.001); end
  def test_flows_ad13; assert_in_delta(0, (worksheet.flows_ad13||0), 0.001); end
  def test_flows_ae13; assert_in_delta(0, (worksheet.flows_ae13||0), 0.001); end
  def test_flows_af13; assert_in_delta(0, (worksheet.flows_af13||0), 0.001); end
  def test_flows_ag13; assert_in_delta(0, (worksheet.flows_ag13||0), 0.001); end
  def test_flows_ah13; assert_in_delta(0, (worksheet.flows_ah13||0), 0.001); end
  def test_flows_ai13; assert_in_delta(0, (worksheet.flows_ai13||0), 0.001); end
  def test_flows_aj13; assert_in_delta(0, (worksheet.flows_aj13||0), 0.001); end
  def test_flows_ak13; assert_in_delta(0, (worksheet.flows_ak13||0), 0.001); end
  def test_flows_al13; assert_in_delta(0, (worksheet.flows_al13||0), 0.001); end
  def test_flows_am13; assert_in_delta(0, (worksheet.flows_am13||0), 0.001); end
  def test_flows_c14; assert_equal("Agricultural 'waste'", worksheet.flows_c14); end
  def test_flows_d14; assert_equal("Bio-conversion", worksheet.flows_d14); end
  def test_flows_e14; assert_in_epsilon(3.4811481886666664, worksheet.flows_e14, 0.001); end
  def test_flows_f14; assert_in_epsilon(9.137988823303997, worksheet.flows_f14, 0.001); end
  def test_flows_g14; assert_in_epsilon(32.5242359838616, worksheet.flows_g14, 0.001); end
  def test_flows_h14; assert_in_epsilon(79.24414314442726, worksheet.flows_h14, 0.001); end
  def test_flows_i14; assert_in_epsilon(110.63610082183695, worksheet.flows_i14, 0.001); end
  def test_flows_j14; assert_in_epsilon(118.75711820385587, worksheet.flows_j14, 0.001); end
  def test_flows_k14; assert_in_epsilon(119.40188738381968, worksheet.flows_k14, 0.001); end
  def test_flows_l14; assert_in_epsilon(123.71704830787853, worksheet.flows_l14, 0.001); end
  def test_flows_m14; assert_in_epsilon(128.26577939530478, worksheet.flows_m14, 0.001); end
  def test_flows_n14; assert_in_epsilon(129.69712565263816, worksheet.flows_n14, 0.001); end
  def test_flows_r14; assert_equal("Coal reserves", worksheet.flows_r14); end
  def test_flows_s14; assert_in_epsilon(124.395701394218, worksheet.flows_s14, 0.001); end
  def test_flows_t14; assert_in_epsilon(127.93, worksheet.flows_t14, 0.001); end
  def test_flows_u14; assert_in_epsilon(127.93, worksheet.flows_u14, 0.001); end
  def test_flows_v14; assert_in_epsilon(127.93, worksheet.flows_v14, 0.001); end
  def test_flows_w14; assert_in_epsilon(127.93, worksheet.flows_w14, 0.001); end
  def test_flows_x14; assert_in_epsilon(63.965, worksheet.flows_x14, 0.001); end
  def test_flows_y14; assert_in_epsilon(63.965, worksheet.flows_y14, 0.001); end
  def test_flows_z14; assert_in_epsilon(63.965, worksheet.flows_z14, 0.001); end
  def test_flows_aa14; assert_in_epsilon(63.965, worksheet.flows_aa14, 0.001); end
  def test_flows_ab14; assert_in_epsilon(63.965, worksheet.flows_ab14, 0.001); end
  def test_flows_ad14; assert_in_delta(0, (worksheet.flows_ad14||0), 0.001); end
  def test_flows_ae14; assert_in_delta(0, (worksheet.flows_ae14||0), 0.001); end
  def test_flows_af14; assert_in_delta(0, (worksheet.flows_af14||0), 0.001); end
  def test_flows_ag14; assert_in_delta(0, (worksheet.flows_ag14||0), 0.001); end
  def test_flows_ah14; assert_in_delta(0, (worksheet.flows_ah14||0), 0.001); end
  def test_flows_ai14; assert_in_delta(0, (worksheet.flows_ai14||0), 0.001); end
  def test_flows_aj14; assert_in_delta(0, (worksheet.flows_aj14||0), 0.001); end
  def test_flows_ak14; assert_in_delta(0, (worksheet.flows_ak14||0), 0.001); end
  def test_flows_al14; assert_in_delta(0, (worksheet.flows_al14||0), 0.001); end
  def test_flows_am14; assert_in_delta(0, (worksheet.flows_am14||0), 0.001); end
  def test_flows_c15; assert_equal("Other waste", worksheet.flows_c15); end
  def test_flows_d15; assert_equal("Bio-conversion", worksheet.flows_d15); end
  def test_flows_e15; assert_in_epsilon(35.01597669082142, worksheet.flows_e15, 0.001); end
  def test_flows_f15; assert_in_epsilon(29.518496728975208, worksheet.flows_f15, 0.001); end
  def test_flows_g15; assert_in_epsilon(32.472974098092855, worksheet.flows_g15, 0.001); end
  def test_flows_h15; assert_in_epsilon(34.948489661246896, worksheet.flows_h15, 0.001); end
  def test_flows_i15; assert_in_epsilon(33.54083121407032, worksheet.flows_i15, 0.001); end
  def test_flows_j15; assert_in_epsilon(31.762300423979358, worksheet.flows_j15, 0.001); end
  def test_flows_k15; assert_in_epsilon(30.30805451532839, worksheet.flows_k15, 0.001); end
  def test_flows_l15; assert_in_epsilon(28.67492168865894, worksheet.flows_l15, 0.001); end
  def test_flows_m15; assert_in_epsilon(26.78865430616038, worksheet.flows_m15, 0.001); end
  def test_flows_n15; assert_in_epsilon(24.767283270734204, worksheet.flows_n15, 0.001); end
  def test_flows_r15; assert_equal("District heating", worksheet.flows_r15); end
  def test_flows_s15; assert_in_epsilon(8.813193136590819, worksheet.flows_s15, 0.001); end
  def test_flows_t15; assert_in_epsilon(8.580264640887874, worksheet.flows_t15, 0.001); end
  def test_flows_u15; assert_in_epsilon(8.26645220166004, worksheet.flows_u15, 0.001); end
  def test_flows_v15; assert_in_epsilon(11.863919739444729, worksheet.flows_v15, 0.001); end
  def test_flows_w15; assert_in_epsilon(14.4016423420983, worksheet.flows_w15, 0.001); end
  def test_flows_x15; assert_in_epsilon(15.955787656845473, worksheet.flows_x15, 0.001); end
  def test_flows_y15; assert_in_epsilon(16.597398454217334, worksheet.flows_y15, 0.001); end
  def test_flows_z15; assert_in_epsilon(16.407572379730887, worksheet.flows_z15, 0.001); end
  def test_flows_aa15; assert_in_epsilon(15.451202861509474, worksheet.flows_aa15, 0.001); end
  def test_flows_ab15; assert_in_epsilon(15.637824985774833, worksheet.flows_ab15, 0.001); end
  def test_flows_ad15; assert_in_epsilon(8.813193136590819, worksheet.flows_ad15, 0.001); end
  def test_flows_ae15; assert_in_epsilon(8.580264640887874, worksheet.flows_ae15, 0.001); end
  def test_flows_af15; assert_in_epsilon(8.26645220166004, worksheet.flows_af15, 0.001); end
  def test_flows_ag15; assert_in_epsilon(11.863919739444729, worksheet.flows_ag15, 0.001); end
  def test_flows_ah15; assert_in_epsilon(14.4016423420983, worksheet.flows_ah15, 0.001); end
  def test_flows_ai15; assert_in_epsilon(15.955787656845473, worksheet.flows_ai15, 0.001); end
  def test_flows_aj15; assert_in_epsilon(16.597398454217334, worksheet.flows_aj15, 0.001); end
  def test_flows_ak15; assert_in_epsilon(16.407572379730883, worksheet.flows_ak15, 0.001); end
  def test_flows_al15; assert_in_epsilon(15.451202861509474, worksheet.flows_al15, 0.001); end
  def test_flows_am15; assert_in_epsilon(15.63782498577483, worksheet.flows_am15, 0.001); end
  def test_flows_ao15; assert_in_delta(0, (worksheet.flows_ao15||0), 0.001); end
  def test_flows_ap15; assert_in_delta(0, (worksheet.flows_ap15||0), 0.001); end
  def test_flows_aq15; assert_in_delta(0, (worksheet.flows_aq15||0), 0.001); end
  def test_flows_ar15; assert_in_delta(0, (worksheet.flows_ar15||0), 0.001); end
  def test_flows_as15; assert_in_delta(0, (worksheet.flows_as15||0), 0.001); end
  def test_flows_at15; assert_in_delta(0, (worksheet.flows_at15||0), 0.001); end
  def test_flows_au15; assert_in_delta(0, (worksheet.flows_au15||0), 0.001); end
  def test_flows_av15; assert_in_delta(0, (worksheet.flows_av15||0), 0.001); end
  def test_flows_aw15; assert_in_delta(0, (worksheet.flows_aw15||0), 0.001); end
  def test_flows_ax15; assert_in_delta(0, (worksheet.flows_ax15||0), 0.001); end
  def test_flows_c16; assert_equal("Other waste", worksheet.flows_c16); end
  def test_flows_d16; assert_equal("Solid", worksheet.flows_d16); end
  def test_flows_e16; assert_in_epsilon(7.1711853539826516, worksheet.flows_e16, 0.001); end
  def test_flows_f16; assert_in_epsilon(7.120255333333333, worksheet.flows_f16, 0.001); end
  def test_flows_g16; assert_in_epsilon(8.448752812500002, worksheet.flows_g16, 0.001); end
  def test_flows_h16; assert_in_epsilon(9.612073083333332, worksheet.flows_h16, 0.001); end
  def test_flows_i16; assert_in_epsilon(8.769866954166666, worksheet.flows_i16, 0.001); end
  def test_flows_j16; assert_in_epsilon(7.966267925, worksheet.flows_j16, 0.001); end
  def test_flows_k16; assert_in_epsilon(7.277810879166668, worksheet.flows_k16, 0.001); end
  def test_flows_l16; assert_in_epsilon(6.619449145833334, worksheet.flows_l16, 0.001); end
  def test_flows_m16; assert_in_epsilon(5.991182725, worksheet.flows_m16, 0.001); end
  def test_flows_n16; assert_in_epsilon(5.3930116166666675, worksheet.flows_n16, 0.001); end
  def test_flows_r16; assert_equal("Domestic aviation", worksheet.flows_r16); end
  def test_flows_s16; assert_in_delta(0, (worksheet.flows_s16||0), 0.001); end
  def test_flows_t16; assert_in_delta(0, (worksheet.flows_t16||0), 0.001); end
  def test_flows_u16; assert_in_delta(0, (worksheet.flows_u16||0), 0.001); end
  def test_flows_v16; assert_in_delta(0, (worksheet.flows_v16||0), 0.001); end
  def test_flows_w16; assert_in_delta(0, (worksheet.flows_w16||0), 0.001); end
  def test_flows_x16; assert_in_delta(0, (worksheet.flows_x16||0), 0.001); end
  def test_flows_y16; assert_in_delta(0, (worksheet.flows_y16||0), 0.001); end
  def test_flows_z16; assert_in_delta(0, (worksheet.flows_z16||0), 0.001); end
  def test_flows_aa16; assert_in_delta(0, (worksheet.flows_aa16||0), 0.001); end
  def test_flows_ab16; assert_in_delta(0, (worksheet.flows_ab16||0), 0.001); end
  def test_flows_ad16; assert_in_epsilon(9.019834608709552, worksheet.flows_ad16, 0.001); end
  def test_flows_ae16; assert_in_epsilon(8.4601255326889, worksheet.flows_ae16, 0.001); end
  def test_flows_af16; assert_in_epsilon(7.569213924506803, worksheet.flows_af16, 0.001); end
  def test_flows_ag16; assert_in_epsilon(6.730421134036203, worksheet.flows_ag16, 0.001); end
  def test_flows_ah16; assert_in_epsilon(5.9329174348258995, worksheet.flows_ah16, 0.001); end
  def test_flows_ai16; assert_in_epsilon(5.168912153603201, worksheet.flows_ai16, 0.001); end
  def test_flows_aj16; assert_in_epsilon(4.44373056794585, worksheet.flows_aj16, 0.001); end
  def test_flows_ak16; assert_in_epsilon(3.7683975653289035, worksheet.flows_ak16, 0.001); end
  def test_flows_al16; assert_in_epsilon(3.146702306458619, worksheet.flows_al16, 0.001); end
  def test_flows_am16; assert_in_epsilon(2.577874210646388, worksheet.flows_am16, 0.001); end
  def test_flows_c17; assert_equal("Biomass imports", worksheet.flows_c17); end
  def test_flows_d17; assert_equal("Solid", worksheet.flows_d17); end
  def test_flows_e17; assert_in_epsilon(4.39614, worksheet.flows_e17, 0.001); end
  def test_flows_f17; assert_in_epsilon(4.089432558139535, worksheet.flows_f17, 0.001); end
  def test_flows_g17; assert_in_epsilon(3.578253488372093, worksheet.flows_g17, 0.001); end
  def test_flows_h17; assert_in_epsilon(3.0670744186046512, worksheet.flows_h17, 0.001); end
  def test_flows_i17; assert_in_epsilon(2.5558953488372094, worksheet.flows_i17, 0.001); end
  def test_flows_j17; assert_in_epsilon(2.0447162790697675, worksheet.flows_j17, 0.001); end
  def test_flows_k17; assert_in_epsilon(1.5335372093023256, worksheet.flows_k17, 0.001); end
  def test_flows_l17; assert_in_epsilon(1.0223581395348837, worksheet.flows_l17, 0.001); end
  def test_flows_m17; assert_in_delta(0.5111790697674419, worksheet.flows_m17, 0.001); end
  def test_flows_n17; assert_in_delta(0, (worksheet.flows_n17||0), 0.001); end
  def test_flows_r17; assert_equal("Electricity grid", worksheet.flows_r17); end
  def test_flows_s17; assert_in_epsilon(381.2087972220847, worksheet.flows_s17, 0.001); end
  def test_flows_t17; assert_in_epsilon(359.526089847302, worksheet.flows_t17, 0.001); end
  def test_flows_u17; assert_in_epsilon(350.3507885192977, worksheet.flows_u17, 0.001); end
  def test_flows_v17; assert_in_epsilon(352.8940456546456, worksheet.flows_v17, 0.001); end
  def test_flows_w17; assert_in_epsilon(367.8982122980549, worksheet.flows_w17, 0.001); end
  def test_flows_x17; assert_in_epsilon(441.11546730645364, worksheet.flows_x17, 0.001); end
  def test_flows_y17; assert_in_epsilon(540.3445665344781, worksheet.flows_y17, 0.001); end
  def test_flows_z17; assert_in_epsilon(594.930592268505, worksheet.flows_z17, 0.001); end
  def test_flows_aa17; assert_in_epsilon(643.3989268950635, worksheet.flows_aa17, 0.001); end
  def test_flows_ab17; assert_in_epsilon(670.3593296959034, worksheet.flows_ab17, 0.001); end
  def test_flows_ad17; assert_in_epsilon(381.20879722208474, worksheet.flows_ad17, 0.001); end
  def test_flows_ae17; assert_in_epsilon(359.52608984730193, worksheet.flows_ae17, 0.001); end
  def test_flows_af17; assert_in_epsilon(350.3507885192977, worksheet.flows_af17, 0.001); end
  def test_flows_ag17; assert_in_epsilon(352.89404565464554, worksheet.flows_ag17, 0.001); end
  def test_flows_ah17; assert_in_epsilon(367.8982122980549, worksheet.flows_ah17, 0.001); end
  def test_flows_ai17; assert_in_epsilon(441.1154673064536, worksheet.flows_ai17, 0.001); end
  def test_flows_aj17; assert_in_epsilon(540.3445665344781, worksheet.flows_aj17, 0.001); end
  def test_flows_ak17; assert_in_epsilon(594.930592268505, worksheet.flows_ak17, 0.001); end
  def test_flows_al17; assert_in_epsilon(643.3989268950637, worksheet.flows_al17, 0.001); end
  def test_flows_am17; assert_in_epsilon(670.3593296959034, worksheet.flows_am17, 0.001); end
  def test_flows_ao17; assert_in_delta(0, (worksheet.flows_ao17||0), 0.001); end
  def test_flows_ap17; assert_in_delta(0, (worksheet.flows_ap17||0), 0.001); end
  def test_flows_aq17; assert_in_delta(0, (worksheet.flows_aq17||0), 0.001); end
  def test_flows_ar17; assert_in_delta(0, (worksheet.flows_ar17||0), 0.001); end
  def test_flows_as17; assert_in_delta(0, (worksheet.flows_as17||0), 0.001); end
  def test_flows_at17; assert_in_delta(0, (worksheet.flows_at17||0), 0.001); end
  def test_flows_au17; assert_in_delta(0, (worksheet.flows_au17||0), 0.001); end
  def test_flows_av17; assert_in_delta(0, (worksheet.flows_av17||0), 0.001); end
  def test_flows_aw17; assert_in_delta(0, (worksheet.flows_aw17||0), 0.001); end
  def test_flows_ax17; assert_in_delta(0, (worksheet.flows_ax17||0), 0.001); end
  def test_flows_c18; assert_equal("Biofuel imports", worksheet.flows_c18); end
  def test_flows_d18; assert_equal("Liquid", worksheet.flows_d18); end
  def test_flows_e18; assert_in_delta(0, (worksheet.flows_e18||0), 0.001); end
  def test_flows_f18; assert_in_delta(0, (worksheet.flows_f18||0), 0.001); end
  def test_flows_g18; assert_in_delta(0, (worksheet.flows_g18||0), 0.001); end
  def test_flows_h18; assert_in_delta(0, (worksheet.flows_h18||0), 0.001); end
  def test_flows_i18; assert_in_delta(0, (worksheet.flows_i18||0), 0.001); end
  def test_flows_j18; assert_in_delta(0, (worksheet.flows_j18||0), 0.001); end
  def test_flows_k18; assert_in_delta(0, (worksheet.flows_k18||0), 0.001); end
  def test_flows_l18; assert_in_delta(0, (worksheet.flows_l18||0), 0.001); end
  def test_flows_m18; assert_in_delta(0, (worksheet.flows_m18||0), 0.001); end
  def test_flows_n18; assert_in_delta(0, (worksheet.flows_n18||0), 0.001); end
  def test_flows_r18; assert_equal("Electricity imports", worksheet.flows_r18); end
  def test_flows_s18; assert_in_delta(0, (worksheet.flows_s18||0), 0.001); end
  def test_flows_t18; assert_in_delta(0, (worksheet.flows_t18||0), 0.001); end
  def test_flows_u18; assert_in_delta(0, (worksheet.flows_u18||0), 0.001); end
  def test_flows_v18; assert_in_delta(0, (worksheet.flows_v18||0), 0.001); end
  def test_flows_w18; assert_in_delta(0, (worksheet.flows_w18||0), 0.001); end
  def test_flows_x18; assert_in_delta(0, (worksheet.flows_x18||0), 0.001); end
  def test_flows_y18; assert_in_delta(0, (worksheet.flows_y18||0), 0.001); end
  def test_flows_z18; assert_in_delta(0, (worksheet.flows_z18||0), 0.001); end
  def test_flows_aa18; assert_in_delta(0, (worksheet.flows_aa18||0), 0.001); end
  def test_flows_ab18; assert_in_delta(0, (worksheet.flows_ab18||0), 0.001); end
  def test_flows_ad18; assert_in_delta(0, (worksheet.flows_ad18||0), 0.001); end
  def test_flows_ae18; assert_in_delta(0, (worksheet.flows_ae18||0), 0.001); end
  def test_flows_af18; assert_in_delta(0, (worksheet.flows_af18||0), 0.001); end
  def test_flows_ag18; assert_in_delta(0, (worksheet.flows_ag18||0), 0.001); end
  def test_flows_ah18; assert_in_delta(0, (worksheet.flows_ah18||0), 0.001); end
  def test_flows_ai18; assert_in_delta(0, (worksheet.flows_ai18||0), 0.001); end
  def test_flows_aj18; assert_in_delta(0, (worksheet.flows_aj18||0), 0.001); end
  def test_flows_ak18; assert_in_delta(0, (worksheet.flows_ak18||0), 0.001); end
  def test_flows_al18; assert_in_delta(0, (worksheet.flows_al18||0), 0.001); end
  def test_flows_am18; assert_in_delta(0, (worksheet.flows_am18||0), 0.001); end
  def test_flows_c19; assert_equal("Coal", worksheet.flows_c19); end
  def test_flows_d19; assert_equal("Solid", worksheet.flows_d19); end
  def test_flows_e6; assert_in_epsilon(124.395701394218, worksheet.flows_e6, 0.001); end
  def test_flows_e7; assert_in_epsilon(346.69608961099897, worksheet.flows_e7, 0.001); end
  def test_flows_e19; assert_in_epsilon(471.091791005217, worksheet.flows_e19, 0.001); end
  def test_flows_f6; assert_in_epsilon(127.93, worksheet.flows_f6, 0.001); end
  def test_flows_f7; assert_in_epsilon(290.08432080865913, worksheet.flows_f7, 0.001); end
  def test_flows_f19; assert_in_epsilon(418.01432080865914, worksheet.flows_f19, 0.001); end
  def test_flows_g6; assert_in_epsilon(127.93, worksheet.flows_g6, 0.001); end
  def test_flows_g7; assert_in_epsilon(211.17230792282777, worksheet.flows_g7, 0.001); end
  def test_flows_g19; assert_in_epsilon(339.1023079228278, worksheet.flows_g19, 0.001); end
  def test_flows_h6; assert_in_epsilon(127.93, worksheet.flows_h6, 0.001); end
  def test_flows_h7; assert_in_epsilon(102.24554410381685, worksheet.flows_h7, 0.001); end
  def test_flows_h19; assert_in_epsilon(230.17554410381686, worksheet.flows_h19, 0.001); end
  def test_flows_i6; assert_in_epsilon(127.93, worksheet.flows_i6, 0.001); end
  def test_flows_i7; assert_in_delta(0, (worksheet.flows_i7||0), 0.001); end
  def test_flows_i19; assert_in_epsilon(127.93, worksheet.flows_i19, 0.001); end
  def test_flows_j6; assert_in_epsilon(63.965, worksheet.flows_j6, 0.001); end
  def test_flows_j7; assert_in_delta(0, (worksheet.flows_j7||0), 0.001); end
  def test_flows_j19; assert_in_epsilon(63.965, worksheet.flows_j19, 0.001); end
  def test_flows_k6; assert_in_epsilon(63.965, worksheet.flows_k6, 0.001); end
  def test_flows_k7; assert_in_delta(0, (worksheet.flows_k7||0), 0.001); end
  def test_flows_k19; assert_in_epsilon(63.965, worksheet.flows_k19, 0.001); end
  def test_flows_l6; assert_in_epsilon(63.965, worksheet.flows_l6, 0.001); end
  def test_flows_l7; assert_in_delta(0, (worksheet.flows_l7||0), 0.001); end
  def test_flows_l19; assert_in_epsilon(63.965, worksheet.flows_l19, 0.001); end
  def test_flows_m6; assert_in_epsilon(63.965, worksheet.flows_m6, 0.001); end
  def test_flows_m7; assert_in_delta(0, (worksheet.flows_m7||0), 0.001); end
  def test_flows_m19; assert_in_epsilon(63.965, worksheet.flows_m19, 0.001); end
  def test_flows_n6; assert_in_epsilon(63.965, worksheet.flows_n6, 0.001); end
  def test_flows_n7; assert_in_delta(0, (worksheet.flows_n7||0), 0.001); end
  def test_flows_n19; assert_in_epsilon(63.965, worksheet.flows_n19, 0.001); end
  def test_flows_r19; assert_equal("Gas", worksheet.flows_r19); end
  def test_flows_s19; assert_in_epsilon(1000.5824929115465, worksheet.flows_s19, 0.001); end
  def test_flows_t19; assert_in_epsilon(912.0134246869476, worksheet.flows_t19, 0.001); end
  def test_flows_u19; assert_in_epsilon(795.3578781492087, worksheet.flows_u19, 0.001); end
  def test_flows_v19; assert_in_epsilon(613.3046547913376, worksheet.flows_v19, 0.001); end
  def test_flows_w19; assert_in_epsilon(440.22036042546625, worksheet.flows_w19, 0.001); end
  def test_flows_x19; assert_in_epsilon(298.184651387062, worksheet.flows_x19, 0.001); end
  def test_flows_y19; assert_in_epsilon(232.702831176363, worksheet.flows_y19, 0.001); end
  def test_flows_z19; assert_in_epsilon(194.79801870807856, worksheet.flows_z19, 0.001); end
  def test_flows_aa19; assert_in_epsilon(172.76568629097525, worksheet.flows_aa19, 0.001); end
  def test_flows_ab19; assert_in_epsilon(150.69218899015326, worksheet.flows_ab19, 0.001); end
  def test_flows_ad19; assert_in_epsilon(1000.5824929115465, worksheet.flows_ad19, 0.001); end
  def test_flows_ae19; assert_in_epsilon(912.0134246869477, worksheet.flows_ae19, 0.001); end
  def test_flows_af19; assert_in_epsilon(795.3578781492085, worksheet.flows_af19, 0.001); end
  def test_flows_ag19; assert_in_epsilon(613.3046547913375, worksheet.flows_ag19, 0.001); end
  def test_flows_ah19; assert_in_epsilon(440.2203604254663, worksheet.flows_ah19, 0.001); end
  def test_flows_ai19; assert_in_epsilon(298.18465138706205, worksheet.flows_ai19, 0.001); end
  def test_flows_aj19; assert_in_epsilon(232.70283117636293, worksheet.flows_aj19, 0.001); end
  def test_flows_ak19; assert_in_epsilon(194.7980187080786, worksheet.flows_ak19, 0.001); end
  def test_flows_al19; assert_in_epsilon(172.76568629097522, worksheet.flows_al19, 0.001); end
  def test_flows_am19; assert_in_epsilon(169.86712226318264, worksheet.flows_am19, 0.001); end
  def test_flows_ao19; assert_in_delta(0, (worksheet.flows_ao19||0), 0.001); end
  def test_flows_ap19; assert_in_delta(0, (worksheet.flows_ap19||0), 0.001); end
  def test_flows_aq19; assert_in_delta(0, (worksheet.flows_aq19||0), 0.001); end
  def test_flows_ar19; assert_in_delta(0, (worksheet.flows_ar19||0), 0.001); end
  def test_flows_as19; assert_in_delta(0, (worksheet.flows_as19||0), 0.001); end
  def test_flows_at19; assert_in_delta(0, (worksheet.flows_at19||0), 0.001); end
  def test_flows_au19; assert_in_delta(0, (worksheet.flows_au19||0), 0.001); end
  def test_flows_av19; assert_in_delta(0, (worksheet.flows_av19||0), 0.001); end
  def test_flows_aw19; assert_in_delta(0, (worksheet.flows_aw19||0), 0.001); end
  def test_flows_ax19; assert_in_epsilon(-19.17493327302938, worksheet.flows_ax19, 0.001); end
  def test_flows_c20; assert_equal("Oil", worksheet.flows_c20); end
  def test_flows_d20; assert_equal("Liquid", worksheet.flows_d20); end
  def test_flows_e8; assert_in_epsilon(975.891208349798, worksheet.flows_e8, 0.001); end
  def test_flows_e9; assert_in_delta(0, (worksheet.flows_e9||0), 0.001); end
  def test_flows_e20; assert_in_epsilon(975.891208349798, worksheet.flows_e20, 0.001); end
  def test_flows_f8; assert_in_epsilon(802.547952837212, worksheet.flows_f8, 0.001); end
  def test_flows_f9; assert_in_epsilon(49.786128395065475, worksheet.flows_f9, 0.001); end
  def test_flows_f20; assert_in_epsilon(852.3340812322775, worksheet.flows_f20, 0.001); end
  def test_flows_g8; assert_in_epsilon(646.828843533316, worksheet.flows_g8, 0.001); end
  def test_flows_g9; assert_in_epsilon(106.05843705373104, worksheet.flows_g9, 0.001); end
  def test_flows_g20; assert_in_epsilon(752.887280587047, worksheet.flows_g20, 0.001); end
  def test_flows_h8; assert_in_epsilon(501.788950072749, worksheet.flows_h8, 0.001); end
  def test_flows_h9; assert_in_epsilon(141.24322450450188, worksheet.flows_h9, 0.001); end
  def test_flows_h20; assert_in_epsilon(643.0321745772509, worksheet.flows_h20, 0.001); end
  def test_flows_i8; assert_in_epsilon(388.274724214433, worksheet.flows_i8, 0.001); end
  def test_flows_i9; assert_in_epsilon(109.24248152044544, worksheet.flows_i9, 0.001); end
  def test_flows_i20; assert_in_epsilon(497.5172057348784, worksheet.flows_i20, 0.001); end
  def test_flows_j8; assert_in_epsilon(300.439580110198, worksheet.flows_j8, 0.001); end
  def test_flows_j9; assert_in_epsilon(68.43737480525499, worksheet.flows_j9, 0.001); end
  def test_flows_j20; assert_in_epsilon(368.876954915453, worksheet.flows_j20, 0.001); end
  def test_flows_k8; assert_in_epsilon(232.474419959775, worksheet.flows_k8, 0.001); end
  def test_flows_k9; assert_in_epsilon(70.5002454337706, worksheet.flows_k9, 0.001); end
  def test_flows_k20; assert_in_epsilon(302.9746653935456, worksheet.flows_k20, 0.001); end
  def test_flows_l8; assert_in_epsilon(179.884274621243, worksheet.flows_l8, 0.001); end
  def test_flows_l9; assert_in_epsilon(56.72089329241504, worksheet.flows_l9, 0.001); end
  def test_flows_l20; assert_in_epsilon(236.60516791365805, worksheet.flows_l20, 0.001); end
  def test_flows_m8; assert_in_epsilon(139.191022657933, worksheet.flows_m8, 0.001); end
  def test_flows_m9; assert_in_epsilon(24.971987111109456, worksheet.flows_m9, 0.001); end
  def test_flows_m20; assert_in_epsilon(164.16300976904245, worksheet.flows_m20, 0.001); end
  def test_flows_n8; assert_in_epsilon(107.703360003839, worksheet.flows_n8, 0.001); end
  def test_flows_n9; assert_in_delta(0, (worksheet.flows_n9||0), 0.001); end
  def test_flows_n20; assert_in_epsilon(107.703360003839, worksheet.flows_n20, 0.001); end
  def test_flows_r20; assert_equal("Gas imports", worksheet.flows_r20); end
  def test_flows_s20; assert_in_epsilon(247.57851058527865, worksheet.flows_s20, 0.001); end
  def test_flows_t20; assert_in_epsilon(247.22259483327366, worksheet.flows_t20, 0.001); end
  def test_flows_u20; assert_in_epsilon(266.0125280255418, worksheet.flows_u20, 0.001); end
  def test_flows_v20; assert_in_epsilon(182.67125243358015, worksheet.flows_v20, 0.001); end
  def test_flows_w20; assert_in_epsilon(91.05072126861359, worksheet.flows_w20, 0.001); end
  def test_flows_x20; assert_in_epsilon(15.348403372255149, worksheet.flows_x20, 0.001); end
  def test_flows_y20; assert_in_delta(0.4686459718368212, worksheet.flows_y20, 0.001); end
  def test_flows_z20; assert_in_delta(0, (worksheet.flows_z20||0), 0.001); end
  def test_flows_aa20; assert_in_delta(0, (worksheet.flows_aa20||0), 0.001); end
  def test_flows_ab20; assert_in_delta(0, (worksheet.flows_ab20||0), 0.001); end
  def test_flows_ad20; assert_in_delta(0, (worksheet.flows_ad20||0), 0.001); end
  def test_flows_ae20; assert_in_delta(0, (worksheet.flows_ae20||0), 0.001); end
  def test_flows_af20; assert_in_delta(0, (worksheet.flows_af20||0), 0.001); end
  def test_flows_ag20; assert_in_delta(0, (worksheet.flows_ag20||0), 0.001); end
  def test_flows_ah20; assert_in_delta(0, (worksheet.flows_ah20||0), 0.001); end
  def test_flows_ai20; assert_in_delta(0, (worksheet.flows_ai20||0), 0.001); end
  def test_flows_aj20; assert_in_delta(0, (worksheet.flows_aj20||0), 0.001); end
  def test_flows_ak20; assert_in_delta(0, (worksheet.flows_ak20||0), 0.001); end
  def test_flows_al20; assert_in_delta(0, (worksheet.flows_al20||0), 0.001); end
  def test_flows_am20; assert_in_delta(0, (worksheet.flows_am20||0), 0.001); end
  def test_flows_c21; assert_equal("Natural Gas", worksheet.flows_c21); end
  def test_flows_d21; assert_equal("Gas", worksheet.flows_d21); end
  def test_flows_e10; assert_in_epsilon(731, worksheet.flows_e10, 0.001); end
  def test_flows_e11; assert_in_epsilon(247.57851058527865, worksheet.flows_e11, 0.001); end
  def test_flows_e21; assert_in_epsilon(978.5785105852787, worksheet.flows_e21, 0.001); end
  def test_flows_f10; assert_in_epsilon(645.772895884115, worksheet.flows_f10, 0.001); end
  def test_flows_f11; assert_in_epsilon(247.22259483327366, worksheet.flows_f11, 0.001); end
  def test_flows_f21; assert_in_epsilon(892.9954907173886, worksheet.flows_f21, 0.001); end
  def test_flows_g10; assert_in_epsilon(495.88758312335, worksheet.flows_g10, 0.001); end
  def test_flows_g11; assert_in_epsilon(266.0125280255418, worksheet.flows_g11, 0.001); end
  def test_flows_g21; assert_in_epsilon(761.9001111488918, worksheet.flows_g21, 0.001); end
  def test_flows_h10; assert_in_epsilon(383.12064593856, worksheet.flows_h10, 0.001); end
  def test_flows_h11; assert_in_epsilon(182.67125243358015, worksheet.flows_h11, 0.001); end
  def test_flows_h21; assert_in_epsilon(565.7918983721402, worksheet.flows_h21, 0.001); end
  def test_flows_i10; assert_in_epsilon(296.451452589944, worksheet.flows_i10, 0.001); end
  def test_flows_i11; assert_in_epsilon(91.05072126861359, worksheet.flows_i11, 0.001); end
  def test_flows_i21; assert_in_epsilon(387.50217385855757, worksheet.flows_i21, 0.001); end
  def test_flows_j10; assert_in_epsilon(229.388482908284, worksheet.flows_j10, 0.001); end
  def test_flows_j11; assert_in_epsilon(15.348403372255149, worksheet.flows_j11, 0.001); end
  def test_flows_j21; assert_in_epsilon(244.73688628053915, worksheet.flows_j21, 0.001); end
  def test_flows_k10; assert_in_epsilon(177.496435356475, worksheet.flows_k10, 0.001); end
  def test_flows_k11; assert_in_delta(0.4686459718368212, worksheet.flows_k11, 0.001); end
  def test_flows_k21; assert_in_epsilon(177.9650813283118, worksheet.flows_k21, 0.001); end
  def test_flows_l10; assert_in_epsilon(137.343358153041, worksheet.flows_l10, 0.001); end
  def test_flows_l11; assert_in_delta(0, (worksheet.flows_l11||0), 0.001); end
  def test_flows_l21; assert_in_epsilon(137.343358153041, worksheet.flows_l21, 0.001); end
  def test_flows_m10; assert_in_epsilon(106.273672431058, worksheet.flows_m10, 0.001); end
  def test_flows_m11; assert_in_delta(0, (worksheet.flows_m11||0), 0.001); end
  def test_flows_m21; assert_in_epsilon(106.273672431058, worksheet.flows_m21, 0.001); end
  def test_flows_n10; assert_in_epsilon(82.2325418852722, worksheet.flows_n10, 0.001); end
  def test_flows_n11; assert_in_delta(0, (worksheet.flows_n11||0), 0.001); end
  def test_flows_n21; assert_in_epsilon(82.2325418852722, worksheet.flows_n21, 0.001); end
  def test_flows_r21; assert_equal("Gas reserves", worksheet.flows_r21); end
  def test_flows_s21; assert_in_epsilon(731, worksheet.flows_s21, 0.001); end
  def test_flows_t21; assert_in_epsilon(645.772895884115, worksheet.flows_t21, 0.001); end
  def test_flows_u21; assert_in_epsilon(495.88758312335, worksheet.flows_u21, 0.001); end
  def test_flows_v21; assert_in_epsilon(383.12064593856, worksheet.flows_v21, 0.001); end
  def test_flows_w21; assert_in_epsilon(296.451452589944, worksheet.flows_w21, 0.001); end
  def test_flows_x21; assert_in_epsilon(229.388482908284, worksheet.flows_x21, 0.001); end
  def test_flows_y21; assert_in_epsilon(177.496435356475, worksheet.flows_y21, 0.001); end
  def test_flows_z21; assert_in_epsilon(137.343358153041, worksheet.flows_z21, 0.001); end
  def test_flows_aa21; assert_in_epsilon(106.273672431058, worksheet.flows_aa21, 0.001); end
  def test_flows_ab21; assert_in_epsilon(82.2325418852722, worksheet.flows_ab21, 0.001); end
  def test_flows_ad21; assert_in_delta(0, (worksheet.flows_ad21||0), 0.001); end
  def test_flows_ae21; assert_in_delta(0, (worksheet.flows_ae21||0), 0.001); end
  def test_flows_af21; assert_in_delta(0, (worksheet.flows_af21||0), 0.001); end
  def test_flows_ag21; assert_in_delta(0, (worksheet.flows_ag21||0), 0.001); end
  def test_flows_ah21; assert_in_delta(0, (worksheet.flows_ah21||0), 0.001); end
  def test_flows_ai21; assert_in_delta(0, (worksheet.flows_ai21||0), 0.001); end
  def test_flows_aj21; assert_in_delta(0, (worksheet.flows_aj21||0), 0.001); end
  def test_flows_ak21; assert_in_delta(0, (worksheet.flows_ak21||0), 0.001); end
  def test_flows_al21; assert_in_delta(0, (worksheet.flows_al21||0), 0.001); end
  def test_flows_am21; assert_in_delta(0, (worksheet.flows_am21||0), 0.001); end
  def test_flows_c22; assert_equal("Solar", worksheet.flows_c22); end
  def test_flows_d22; assert_equal("Solar PV", worksheet.flows_d22); end
  def test_flows_e22; assert_in_delta(0.015312704990667746, worksheet.flows_e22, 0.001); end
  def test_flows_f22; assert_in_epsilon(11.878923446502947, worksheet.flows_f22, 0.001); end
  def test_flows_g22; assert_in_epsilon(31.65160801569008, worksheet.flows_g22, 0.001); end
  def test_flows_h22; assert_in_epsilon(51.42429258487721, worksheet.flows_h22, 0.001); end
  def test_flows_i22; assert_in_epsilon(71.19697715406434, worksheet.flows_i22, 0.001); end
  def test_flows_j22; assert_in_epsilon(90.96966172325146, worksheet.flows_j22, 0.001); end
  def test_flows_k22; assert_in_epsilon(110.7423462924386, worksheet.flows_k22, 0.001); end
  def test_flows_l22; assert_in_epsilon(130.51503086162572, worksheet.flows_l22, 0.001); end
  def test_flows_m22; assert_in_epsilon(150.28771543081285, worksheet.flows_m22, 0.001); end
  def test_flows_n22; assert_in_epsilon(170.06040000000002, worksheet.flows_n22, 0.001); end
  def test_flows_r22; assert_equal("Geosequestration", worksheet.flows_r22); end
  def test_flows_s22; assert_in_delta(0, (worksheet.flows_s22||0), 0.001); end
  def test_flows_t22; assert_in_delta(0, (worksheet.flows_t22||0), 0.001); end
  def test_flows_u22; assert_in_delta(0, (worksheet.flows_u22||0), 0.001); end
  def test_flows_v22; assert_in_delta(0, (worksheet.flows_v22||0), 0.001); end
  def test_flows_w22; assert_in_delta(0, (worksheet.flows_w22||0), 0.001); end
  def test_flows_x22; assert_in_delta(0, (worksheet.flows_x22||0), 0.001); end
  def test_flows_y22; assert_in_delta(0, (worksheet.flows_y22||0), 0.001); end
  def test_flows_z22; assert_in_delta(0, (worksheet.flows_z22||0), 0.001); end
  def test_flows_aa22; assert_in_delta(0, (worksheet.flows_aa22||0), 0.001); end
  def test_flows_ab22; assert_in_delta(0, (worksheet.flows_ab22||0), 0.001); end
  def test_flows_ad22; assert_in_delta(0, (worksheet.flows_ad22||0), 0.001); end
  def test_flows_ae22; assert_in_delta(0, (worksheet.flows_ae22||0), 0.001); end
  def test_flows_af22; assert_in_delta(0, (worksheet.flows_af22||0), 0.001); end
  def test_flows_ag22; assert_in_delta(0, (worksheet.flows_ag22||0), 0.001); end
  def test_flows_ah22; assert_in_delta(0, (worksheet.flows_ah22||0), 0.001); end
  def test_flows_ai22; assert_in_delta(0, (worksheet.flows_ai22||0), 0.001); end
  def test_flows_aj22; assert_in_delta(0, (worksheet.flows_aj22||0), 0.001); end
  def test_flows_ak22; assert_in_delta(0, (worksheet.flows_ak22||0), 0.001); end
  def test_flows_al22; assert_in_delta(0, (worksheet.flows_al22||0), 0.001); end
  def test_flows_am22; assert_in_delta(0, (worksheet.flows_am22||0), 0.001); end
  def test_flows_c23; assert_equal("Solar PV", worksheet.flows_c23); end
  def test_flows_d23; assert_equal("Electricity grid", worksheet.flows_d23); end
  def test_flows_e23; assert_in_delta(0.015312704990667746, worksheet.flows_e23, 0.001); end
  def test_flows_f23; assert_in_epsilon(11.878923446502947, worksheet.flows_f23, 0.001); end
  def test_flows_g23; assert_in_epsilon(31.65160801569008, worksheet.flows_g23, 0.001); end
  def test_flows_h23; assert_in_epsilon(51.42429258487721, worksheet.flows_h23, 0.001); end
  def test_flows_i23; assert_in_epsilon(71.19697715406434, worksheet.flows_i23, 0.001); end
  def test_flows_j23; assert_in_epsilon(90.96966172325146, worksheet.flows_j23, 0.001); end
  def test_flows_k23; assert_in_epsilon(110.7423462924386, worksheet.flows_k23, 0.001); end
  def test_flows_l23; assert_in_epsilon(130.51503086162572, worksheet.flows_l23, 0.001); end
  def test_flows_m23; assert_in_epsilon(150.28771543081285, worksheet.flows_m23, 0.001); end
  def test_flows_n23; assert_in_epsilon(170.06040000000002, worksheet.flows_n23, 0.001); end
  def test_flows_r23; assert_equal("Geothermal", worksheet.flows_r23); end
  def test_flows_s23; assert_in_delta(0, (worksheet.flows_s23||0), 0.001); end
  def test_flows_t23; assert_in_delta(0, (worksheet.flows_t23||0), 0.001); end
  def test_flows_u23; assert_in_delta(0.0911664, worksheet.flows_u23, 0.001); end
  def test_flows_v23; assert_in_delta(0.7293312, worksheet.flows_v23, 0.001); end
  def test_flows_w23; assert_in_epsilon(5.8346496, worksheet.flows_w23, 0.001); end
  def test_flows_x23; assert_in_epsilon(21.038400000000003, worksheet.flows_x23, 0.001); end
  def test_flows_y23; assert_in_epsilon(21.038400000000003, worksheet.flows_y23, 0.001); end
  def test_flows_z23; assert_in_epsilon(21.038400000000003, worksheet.flows_z23, 0.001); end
  def test_flows_aa23; assert_in_epsilon(21.038400000000003, worksheet.flows_aa23, 0.001); end
  def test_flows_ab23; assert_in_epsilon(21.038400000000003, worksheet.flows_ab23, 0.001); end
  def test_flows_ad23; assert_in_delta(0, (worksheet.flows_ad23||0), 0.001); end
  def test_flows_ae23; assert_in_delta(0, (worksheet.flows_ae23||0), 0.001); end
  def test_flows_af23; assert_in_delta(0, (worksheet.flows_af23||0), 0.001); end
  def test_flows_ag23; assert_in_delta(0, (worksheet.flows_ag23||0), 0.001); end
  def test_flows_ah23; assert_in_delta(0, (worksheet.flows_ah23||0), 0.001); end
  def test_flows_ai23; assert_in_delta(0, (worksheet.flows_ai23||0), 0.001); end
  def test_flows_aj23; assert_in_delta(0, (worksheet.flows_aj23||0), 0.001); end
  def test_flows_ak23; assert_in_delta(0, (worksheet.flows_ak23||0), 0.001); end
  def test_flows_al23; assert_in_delta(0, (worksheet.flows_al23||0), 0.001); end
  def test_flows_am23; assert_in_delta(0, (worksheet.flows_am23||0), 0.001); end
  def test_flows_c24; assert_equal("Solar", worksheet.flows_c24); end
  def test_flows_d24; assert_equal("Solar Thermal", worksheet.flows_d24); end
  def test_flows_e24; assert_in_delta(0, (worksheet.flows_e24||0), 0.001); end
  def test_flows_f24; assert_in_epsilon(5.366598776098391, worksheet.flows_f24, 0.001); end
  def test_flows_g24; assert_in_epsilon(14.798925668350625, worksheet.flows_g24, 0.001); end
  def test_flows_h24; assert_in_epsilon(24.86219654190698, worksheet.flows_h24, 0.001); end
  def test_flows_i24; assert_in_epsilon(35.5245431212594, worksheet.flows_i24, 0.001); end
  def test_flows_j24; assert_in_epsilon(46.66743318529161, worksheet.flows_j24, 0.001); end
  def test_flows_k24; assert_in_epsilon(58.18307005588554, worksheet.flows_k24, 0.001); end
  def test_flows_l24; assert_in_epsilon(70.0671838207138, worksheet.flows_l24, 0.001); end
  def test_flows_m24; assert_in_epsilon(82.32564970963149, worksheet.flows_m24, 0.001); end
  def test_flows_n24; assert_in_epsilon(94.9295216379231, worksheet.flows_n24, 0.001); end
  def test_flows_r24; assert_equal("H2", worksheet.flows_r24); end
  def test_flows_s24; assert_in_delta(0, (worksheet.flows_s24||0), 0.001); end
  def test_flows_t24; assert_in_delta(0, (worksheet.flows_t24||0), 0.001); end
  def test_flows_u24; assert_in_delta(0, (worksheet.flows_u24||0), 0.001); end
  def test_flows_v24; assert_in_delta(0, (worksheet.flows_v24||0), 0.001); end
  def test_flows_w24; assert_in_delta(0, (worksheet.flows_w24||0), 0.001); end
  def test_flows_x24; assert_in_delta(0, (worksheet.flows_x24||0), 0.001); end
  def test_flows_y24; assert_in_delta(0, (worksheet.flows_y24||0), 0.001); end
  def test_flows_z24; assert_in_delta(0, (worksheet.flows_z24||0), 0.001); end
  def test_flows_aa24; assert_in_delta(0, (worksheet.flows_aa24||0), 0.001); end
  def test_flows_ab24; assert_in_delta(0, (worksheet.flows_ab24||0), 0.001); end
  def test_flows_ad24; assert_in_delta(0, (worksheet.flows_ad24||0), 0.001); end
  def test_flows_ae24; assert_in_delta(0, (worksheet.flows_ae24||0), 0.001); end
  def test_flows_af24; assert_in_delta(0, (worksheet.flows_af24||0), 0.001); end
  def test_flows_ag24; assert_in_delta(0, (worksheet.flows_ag24||0), 0.001); end
  def test_flows_ah24; assert_in_delta(0, (worksheet.flows_ah24||0), 0.001); end
  def test_flows_ai24; assert_in_delta(0, (worksheet.flows_ai24||0), 0.001); end
  def test_flows_aj24; assert_in_delta(0, (worksheet.flows_aj24||0), 0.001); end
  def test_flows_ak24; assert_in_delta(0, (worksheet.flows_ak24||0), 0.001); end
  def test_flows_al24; assert_in_delta(0, (worksheet.flows_al24||0), 0.001); end
  def test_flows_am24; assert_in_delta(0, (worksheet.flows_am24||0), 0.001); end
  def test_flows_ao24; assert_in_delta(0, (worksheet.flows_ao24||0), 0.001); end
  def test_flows_ap24; assert_in_delta(0, (worksheet.flows_ap24||0), 0.001); end
  def test_flows_aq24; assert_in_delta(0, (worksheet.flows_aq24||0), 0.001); end
  def test_flows_ar24; assert_in_delta(0, (worksheet.flows_ar24||0), 0.001); end
  def test_flows_as24; assert_in_delta(0, (worksheet.flows_as24||0), 0.001); end
  def test_flows_at24; assert_in_delta(0, (worksheet.flows_at24||0), 0.001); end
  def test_flows_au24; assert_in_delta(0, (worksheet.flows_au24||0), 0.001); end
  def test_flows_av24; assert_in_delta(0, (worksheet.flows_av24||0), 0.001); end
  def test_flows_aw24; assert_in_delta(0, (worksheet.flows_aw24||0), 0.001); end
  def test_flows_ax24; assert_in_delta(0, (worksheet.flows_ax24||0), 0.001); end
  def test_flows_c25; assert_equal("Bio-conversion", worksheet.flows_c25); end
  def test_flows_d25; assert_equal("Solid", worksheet.flows_d25); end
  def test_flows_e25; assert_in_epsilon(13.727592565398165, worksheet.flows_e25, 0.001); end
  def test_flows_f25; assert_in_epsilon(15.666654024480422, worksheet.flows_f25, 0.001); end
  def test_flows_g25; assert_in_epsilon(21.72441274713806, worksheet.flows_g25, 0.001); end
  def test_flows_h25; assert_in_epsilon(48.67670173562362, worksheet.flows_h25, 0.001); end
  def test_flows_i25; assert_in_epsilon(79.87850719005912, worksheet.flows_i25, 0.001); end
  def test_flows_j25; assert_in_epsilon(86.33176238794582, worksheet.flows_j25, 0.001); end
  def test_flows_k25; assert_in_epsilon(85.87268151607167, worksheet.flows_k25, 0.001); end
  def test_flows_l25; assert_in_epsilon(88.94674493799685, worksheet.flows_l25, 0.001); end
  def test_flows_m25; assert_in_epsilon(92.28897262592666, worksheet.flows_m25, 0.001); end
  def test_flows_n25; assert_in_epsilon(92.71595780889996, worksheet.flows_n25, 0.001); end
  def test_flows_r25; assert_equal("H2 conversion", worksheet.flows_r25); end
  def test_flows_s25; assert_in_delta(0, (worksheet.flows_s25||0), 0.001); end
  def test_flows_t25; assert_in_delta(0, (worksheet.flows_t25||0), 0.001); end
  def test_flows_u25; assert_in_delta(0, (worksheet.flows_u25||0), 0.001); end
  def test_flows_v25; assert_in_delta(0, (worksheet.flows_v25||0), 0.001); end
  def test_flows_w25; assert_in_delta(0, (worksheet.flows_w25||0), 0.001); end
  def test_flows_x25; assert_in_delta(0, (worksheet.flows_x25||0), 0.001); end
  def test_flows_y25; assert_in_delta(0, (worksheet.flows_y25||0), 0.001); end
  def test_flows_z25; assert_in_delta(0, (worksheet.flows_z25||0), 0.001); end
  def test_flows_aa25; assert_in_delta(0, (worksheet.flows_aa25||0), 0.001); end
  def test_flows_ab25; assert_in_delta(0, (worksheet.flows_ab25||0), 0.001); end
  def test_flows_ad25; assert_in_delta(0, (worksheet.flows_ad25||0), 0.001); end
  def test_flows_ae25; assert_in_delta(0, (worksheet.flows_ae25||0), 0.001); end
  def test_flows_af25; assert_in_delta(0, (worksheet.flows_af25||0), 0.001); end
  def test_flows_ag25; assert_in_delta(0, (worksheet.flows_ag25||0), 0.001); end
  def test_flows_ah25; assert_in_delta(0, (worksheet.flows_ah25||0), 0.001); end
  def test_flows_ai25; assert_in_delta(0, (worksheet.flows_ai25||0), 0.001); end
  def test_flows_aj25; assert_in_delta(0, (worksheet.flows_aj25||0), 0.001); end
  def test_flows_ak25; assert_in_delta(0, (worksheet.flows_ak25||0), 0.001); end
  def test_flows_al25; assert_in_delta(0, (worksheet.flows_al25||0), 0.001); end
  def test_flows_am25; assert_in_delta(0, (worksheet.flows_am25||0), 0.001); end
  def test_flows_ao25; assert_in_delta(0, (worksheet.flows_ao25||0), 0.001); end
  def test_flows_ap25; assert_in_delta(0, (worksheet.flows_ap25||0), 0.001); end
  def test_flows_aq25; assert_in_delta(0, (worksheet.flows_aq25||0), 0.001); end
  def test_flows_ar25; assert_in_delta(0, (worksheet.flows_ar25||0), 0.001); end
  def test_flows_as25; assert_in_delta(0, (worksheet.flows_as25||0), 0.001); end
  def test_flows_at25; assert_in_delta(0, (worksheet.flows_at25||0), 0.001); end
  def test_flows_au25; assert_in_delta(0, (worksheet.flows_au25||0), 0.001); end
  def test_flows_av25; assert_in_delta(0, (worksheet.flows_av25||0), 0.001); end
  def test_flows_aw25; assert_in_delta(0, (worksheet.flows_aw25||0), 0.001); end
  def test_flows_ax25; assert_in_delta(0, (worksheet.flows_ax25||0), 0.001); end
  def test_flows_c26; assert_equal("Bio-conversion", worksheet.flows_c26); end
  def test_flows_d26; assert_equal("Liquid", worksheet.flows_d26); end
  def test_flows_e26; assert_in_epsilon(1.562605222222222, worksheet.flows_e26, 0.001); end
  def test_flows_f26; assert_in_epsilon(3.2432338019911118, worksheet.flows_f26, 0.001); end
  def test_flows_g26; assert_in_epsilon(11.747705012706284, worksheet.flows_g26, 0.001); end
  def test_flows_h26; assert_in_epsilon(21.37339779693295, worksheet.flows_h26, 0.001); end
  def test_flows_i26; assert_in_epsilon(39.1200701882094, worksheet.flows_i26, 0.001); end
  def test_flows_j26; assert_in_epsilon(61.57707846258055, worksheet.flows_j26, 0.001); end
  def test_flows_k26; assert_in_epsilon(85.88019074506646, worksheet.flows_k26, 0.001); end
  def test_flows_l26; assert_in_epsilon(113.3306303503899, worksheet.flows_l26, 0.001); end
  def test_flows_m26; assert_in_epsilon(144.26162946713941, worksheet.flows_m26, 0.001); end
  def test_flows_n26; assert_in_epsilon(179.03885813693358, worksheet.flows_n26, 0.001); end
  def test_flows_r26; assert_equal("Heating and cooling - commercial", worksheet.flows_r26); end
  def test_flows_s26; assert_in_delta(0, (worksheet.flows_s26||0), 0.001); end
  def test_flows_t26; assert_in_delta(0, (worksheet.flows_t26||0), 0.001); end
  def test_flows_u26; assert_in_delta(0, (worksheet.flows_u26||0), 0.001); end
  def test_flows_v26; assert_in_delta(0, (worksheet.flows_v26||0), 0.001); end
  def test_flows_w26; assert_in_delta(0, (worksheet.flows_w26||0), 0.001); end
  def test_flows_x26; assert_in_delta(0, (worksheet.flows_x26||0), 0.001); end
  def test_flows_y26; assert_in_delta(0, (worksheet.flows_y26||0), 0.001); end
  def test_flows_z26; assert_in_delta(0, (worksheet.flows_z26||0), 0.001); end
  def test_flows_aa26; assert_in_delta(0, (worksheet.flows_aa26||0), 0.001); end
  def test_flows_ab26; assert_in_delta(0, (worksheet.flows_ab26||0), 0.001); end
  def test_flows_ad26; assert_in_epsilon(115.89465262742715, worksheet.flows_ad26, 0.001); end
  def test_flows_ae26; assert_in_epsilon(113.3726700830947, worksheet.flows_ae26, 0.001); end
  def test_flows_af26; assert_in_epsilon(108.77970249944298, worksheet.flows_af26, 0.001); end
  def test_flows_ag26; assert_in_epsilon(102.45965448888332, worksheet.flows_ag26, 0.001); end
  def test_flows_ah26; assert_in_epsilon(96.72692431688401, worksheet.flows_ah26, 0.001); end
  def test_flows_ai26; assert_in_epsilon(91.53503821805609, worksheet.flows_ai26, 0.001); end
  def test_flows_aj26; assert_in_epsilon(86.84120829045435, worksheet.flows_aj26, 0.001); end
  def test_flows_ak26; assert_in_epsilon(82.60595485644106, worksheet.flows_ak26, 0.001); end
  def test_flows_al26; assert_in_epsilon(78.79275542757222, worksheet.flows_al26, 0.001); end
  def test_flows_am26; assert_in_epsilon(75.36771723790038, worksheet.flows_am26, 0.001); end
  def test_flows_c27; assert_equal("Bio-conversion", worksheet.flows_c27); end
  def test_flows_d27; assert_equal("Gas", worksheet.flows_d27); end
  def test_flows_e27; assert_in_epsilon(22.003982326267895, worksheet.flows_e27, 0.001); end
  def test_flows_f27; assert_in_epsilon(19.01793396955904, worksheet.flows_f27, 0.001); end
  def test_flows_g27; assert_in_epsilon(33.45776700031678, worksheet.flows_g27, 0.001); end
  def test_flows_h27; assert_in_epsilon(47.51275641919732, worksheet.flows_h27, 0.001); end
  def test_flows_i27; assert_in_epsilon(52.71818656690877, worksheet.flows_i27, 0.001); end
  def test_flows_j27; assert_in_epsilon(53.447765106522894, worksheet.flows_j27, 0.001); end
  def test_flows_k27; assert_in_epsilon(54.73774984805112, worksheet.flows_k27, 0.001); end
  def test_flows_l27; assert_in_epsilon(57.45466055503756, worksheet.flows_l27, 0.001); end
  def test_flows_m27; assert_in_epsilon(66.49201385991722, worksheet.flows_m27, 0.001); end
  def test_flows_n27; assert_in_epsilon(87.63458037791042, worksheet.flows_n27, 0.001); end
  def test_flows_r27; assert_equal("Heating and cooling - homes", worksheet.flows_r27); end
  def test_flows_s27; assert_in_delta(0, (worksheet.flows_s27||0), 0.001); end
  def test_flows_t27; assert_in_delta(0, (worksheet.flows_t27||0), 0.001); end
  def test_flows_u27; assert_in_delta(0, (worksheet.flows_u27||0), 0.001); end
  def test_flows_v27; assert_in_delta(0, (worksheet.flows_v27||0), 0.001); end
  def test_flows_w27; assert_in_delta(0, (worksheet.flows_w27||0), 0.001); end
  def test_flows_x27; assert_in_delta(0, (worksheet.flows_x27||0), 0.001); end
  def test_flows_y27; assert_in_delta(0, (worksheet.flows_y27||0), 0.001); end
  def test_flows_z27; assert_in_delta(0, (worksheet.flows_z27||0), 0.001); end
  def test_flows_aa27; assert_in_delta(0, (worksheet.flows_aa27||0), 0.001); end
  def test_flows_ab27; assert_in_delta(0, (worksheet.flows_ab27||0), 0.001); end
  def test_flows_ad27; assert_in_epsilon(382.73931688430497, worksheet.flows_ad27, 0.001); end
  def test_flows_ae27; assert_in_epsilon(362.42719578144647, worksheet.flows_ae27, 0.001); end
  def test_flows_af27; assert_in_epsilon(320.50381818545196, worksheet.flows_af27, 0.001); end
  def test_flows_ag27; assert_in_epsilon(286.0874288196662, worksheet.flows_ag27, 0.001); end
  def test_flows_ah27; assert_in_epsilon(256.1934275598261, worksheet.flows_ah27, 0.001); end
  def test_flows_ai27; assert_in_epsilon(229.90700172424334, worksheet.flows_ai27, 0.001); end
  def test_flows_aj27; assert_in_epsilon(206.93248708261058, worksheet.flows_aj27, 0.001); end
  def test_flows_ak27; assert_in_epsilon(187.29502301695518, worksheet.flows_ak27, 0.001); end
  def test_flows_al27; assert_in_epsilon(170.7767557844424, worksheet.flows_al27, 0.001); end
  def test_flows_am27; assert_in_epsilon(158.72200648917578, worksheet.flows_am27, 0.001); end
  def test_flows_c28; assert_equal("Bio-conversion", worksheet.flows_c28); end
  def test_flows_d28; assert_equal("Losses", worksheet.flows_d28); end
  def test_flows_e28; assert_in_epsilon(6.084466987822026, worksheet.flows_e28, 0.001); end
  def test_flows_f28; assert_in_epsilon(9.68980892473403, worksheet.flows_f28, 0.001); end
  def test_flows_g28; assert_in_epsilon(30.024786947993107, worksheet.flows_g28, 0.001); end
  def test_flows_h28; assert_in_epsilon(54.62036478624654, worksheet.flows_h28, 0.001); end
  def test_flows_i28; assert_in_epsilon(60.207477924153324, worksheet.flows_i28, 0.001); end
  def test_flows_j28; assert_in_epsilon(88.39459476410966, worksheet.flows_j28, 0.001); end
  def test_flows_k28; assert_in_epsilon(118.4283236495088, worksheet.flows_k28, 0.001); end
  def test_flows_l28; assert_in_epsilon(152.78615319185985, worksheet.flows_l28, 0.001); end
  def test_flows_m28; assert_in_epsilon(192.56918033291782, worksheet.flows_m28, 0.001); end
  def test_flows_n28; assert_in_epsilon(239.07972665187935, worksheet.flows_n28, 0.001); end
  def test_flows_r28; assert_equal("Hydro", worksheet.flows_r28); end
  def test_flows_s28; assert_in_epsilon(4.114400994, worksheet.flows_s28, 0.001); end
  def test_flows_t28; assert_in_epsilon(5.329728000000001, worksheet.flows_t28, 0.001); end
  def test_flows_u28; assert_in_epsilon(5.662836, worksheet.flows_u28, 0.001); end
  def test_flows_v28; assert_in_epsilon(5.995944000000001, worksheet.flows_v28, 0.001); end
  def test_flows_w28; assert_in_epsilon(6.162498000000001, worksheet.flows_w28, 0.001); end
  def test_flows_x28; assert_in_epsilon(6.329052, worksheet.flows_x28, 0.001); end
  def test_flows_y28; assert_in_epsilon(6.4956059999999995, worksheet.flows_y28, 0.001); end
  def test_flows_z28; assert_in_epsilon(6.66216, worksheet.flows_z28, 0.001); end
  def test_flows_aa28; assert_in_epsilon(6.828714, worksheet.flows_aa28, 0.001); end
  def test_flows_ab28; assert_in_epsilon(6.995268000000001, worksheet.flows_ab28, 0.001); end
  def test_flows_ad28; assert_in_delta(0, (worksheet.flows_ad28||0), 0.001); end
  def test_flows_ae28; assert_in_delta(0, (worksheet.flows_ae28||0), 0.001); end
  def test_flows_af28; assert_in_delta(0, (worksheet.flows_af28||0), 0.001); end
  def test_flows_ag28; assert_in_delta(0, (worksheet.flows_ag28||0), 0.001); end
  def test_flows_ah28; assert_in_delta(0, (worksheet.flows_ah28||0), 0.001); end
  def test_flows_ai28; assert_in_delta(0, (worksheet.flows_ai28||0), 0.001); end
  def test_flows_aj28; assert_in_delta(0, (worksheet.flows_aj28||0), 0.001); end
  def test_flows_ak28; assert_in_delta(0, (worksheet.flows_ak28||0), 0.001); end
  def test_flows_al28; assert_in_delta(0, (worksheet.flows_al28||0), 0.001); end
  def test_flows_am28; assert_in_delta(0, (worksheet.flows_am28||0), 0.001); end
  def test_flows_c29; assert_equal("Solid", worksheet.flows_c29); end
  def test_flows_d29; assert_equal("Over generation / exports", worksheet.flows_d29); end
  def test_flows_e29; assert_in_delta(0, (worksheet.flows_e29||0), 0.001); end
  def test_flows_f29; assert_in_delta(0, (worksheet.flows_f29||0), 0.001); end
  def test_flows_g29; assert_in_delta(0, (worksheet.flows_g29||0), 0.001); end
  def test_flows_h29; assert_in_delta(0, (worksheet.flows_h29||0), 0.001); end
  def test_flows_i29; assert_in_epsilon(33.745736494005484, worksheet.flows_i29, 0.001); end
  def test_flows_j29; assert_in_epsilon(56.298134268642144, worksheet.flows_j29, 0.001); end
  def test_flows_k29; assert_in_epsilon(54.77390781957058, worksheet.flows_k29, 0.001); end
  def test_flows_l29; assert_in_epsilon(60.236668130483736, worksheet.flows_l29, 0.001); end
  def test_flows_m29; assert_in_epsilon(69.91829758288308, worksheet.flows_m29, 0.001); end
  def test_flows_n29; assert_in_epsilon(69.35801161666667, worksheet.flows_n29, 0.001); end
  def test_flows_r29; assert_equal("Industry", worksheet.flows_r29); end
  def test_flows_s29; assert_in_delta(0, (worksheet.flows_s29||0), 0.001); end
  def test_flows_t29; assert_in_delta(0, (worksheet.flows_t29||0), 0.001); end
  def test_flows_u29; assert_in_delta(0, (worksheet.flows_u29||0), 0.001); end
  def test_flows_v29; assert_in_delta(0, (worksheet.flows_v29||0), 0.001); end
  def test_flows_w29; assert_in_delta(0, (worksheet.flows_w29||0), 0.001); end
  def test_flows_x29; assert_in_delta(0, (worksheet.flows_x29||0), 0.001); end
  def test_flows_y29; assert_in_delta(0, (worksheet.flows_y29||0), 0.001); end
  def test_flows_z29; assert_in_delta(0, (worksheet.flows_z29||0), 0.001); end
  def test_flows_aa29; assert_in_delta(0, (worksheet.flows_aa29||0), 0.001); end
  def test_flows_ab29; assert_in_delta(0, (worksheet.flows_ab29||0), 0.001); end
  def test_flows_ad29; assert_in_epsilon(540.9583199339212, worksheet.flows_ad29, 0.001); end
  def test_flows_ae29; assert_in_epsilon(516.1258694952119, worksheet.flows_ae29, 0.001); end
  def test_flows_af29; assert_in_epsilon(487.4422407567756, worksheet.flows_af29, 0.001); end
  def test_flows_ag29; assert_in_epsilon(460.5858838764924, worksheet.flows_ag29, 0.001); end
  def test_flows_ah29; assert_in_epsilon(437.31512891165806, worksheet.flows_ah29, 0.001); end
  def test_flows_ai29; assert_in_epsilon(416.48383424132584, worksheet.flows_ai29, 0.001); end
  def test_flows_aj29; assert_in_epsilon(398.6794522947776, worksheet.flows_aj29, 0.001); end
  def test_flows_ak29; assert_in_epsilon(382.88279502019344, worksheet.flows_ak29, 0.001); end
  def test_flows_al29; assert_in_epsilon(368.7427227022512, worksheet.flows_al29, 0.001); end
  def test_flows_am29; assert_in_epsilon(355.9804755886297, worksheet.flows_am29, 0.001); end
  def test_flows_c30; assert_equal("Liquid", worksheet.flows_c30); end
  def test_flows_d30; assert_equal("Over generation / exports", worksheet.flows_d30); end
  def test_flows_e30; assert_in_epsilon(74.87530779666133, worksheet.flows_e30, 0.001); end
  def test_flows_f30; assert_in_delta(0, (worksheet.flows_f30||0), 0.001); end
  def test_flows_g30; assert_in_delta(0, (worksheet.flows_g30||0), 0.001); end
  def test_flows_h30; assert_in_delta(0, (worksheet.flows_h30||0), 0.001); end
  def test_flows_i30; assert_in_delta(0, (worksheet.flows_i30||0), 0.001); end
  def test_flows_j30; assert_in_delta(0, (worksheet.flows_j30||0), 0.001); end
  def test_flows_k30; assert_in_delta(0, (worksheet.flows_k30||0), 0.001); end
  def test_flows_l30; assert_in_delta(0, (worksheet.flows_l30||0), 0.001); end
  def test_flows_m30; assert_in_delta(0, (worksheet.flows_m30||0), 0.001); end
  def test_flows_n30; assert_in_epsilon(16.070521891350595, worksheet.flows_n30, 0.001); end
  def test_flows_r30; assert_equal("International aviation", worksheet.flows_r30); end
  def test_flows_s30; assert_in_delta(0, (worksheet.flows_s30||0), 0.001); end
  def test_flows_t30; assert_in_delta(0, (worksheet.flows_t30||0), 0.001); end
  def test_flows_u30; assert_in_delta(0, (worksheet.flows_u30||0), 0.001); end
  def test_flows_v30; assert_in_delta(0, (worksheet.flows_v30||0), 0.001); end
  def test_flows_w30; assert_in_delta(0, (worksheet.flows_w30||0), 0.001); end
  def test_flows_x30; assert_in_delta(0, (worksheet.flows_x30||0), 0.001); end
  def test_flows_y30; assert_in_delta(0, (worksheet.flows_y30||0), 0.001); end
  def test_flows_z30; assert_in_delta(0, (worksheet.flows_z30||0), 0.001); end
  def test_flows_aa30; assert_in_delta(0, (worksheet.flows_aa30||0), 0.001); end
  def test_flows_ab30; assert_in_delta(0, (worksheet.flows_ab30||0), 0.001); end
  def test_flows_ad30; assert_in_epsilon(152.8, worksheet.flows_ad30, 0.001); end
  def test_flows_ae30; assert_in_epsilon(145.27906976744188, worksheet.flows_ae30, 0.001); end
  def test_flows_af30; assert_in_epsilon(132.74418604651166, worksheet.flows_af30, 0.001); end
  def test_flows_ag30; assert_in_epsilon(120.20930232558142, worksheet.flows_ag30, 0.001); end
  def test_flows_ah30; assert_in_epsilon(107.67441860465118, worksheet.flows_ah30, 0.001); end
  def test_flows_ai30; assert_in_epsilon(95.13953488372094, worksheet.flows_ai30, 0.001); end
  def test_flows_aj30; assert_in_epsilon(82.6046511627907, worksheet.flows_aj30, 0.001); end
  def test_flows_ak30; assert_in_epsilon(70.06976744186046, worksheet.flows_ak30, 0.001); end
  def test_flows_al30; assert_in_epsilon(57.534883720930225, worksheet.flows_al30, 0.001); end
  def test_flows_am30; assert_in_epsilon(45, worksheet.flows_am30, 0.001); end
  def test_flows_c31; assert_equal("Gas", worksheet.flows_c31); end
  def test_flows_d31; assert_equal("Over generation / exports", worksheet.flows_d31); end
  def test_flows_e31; assert_in_delta(0, (worksheet.flows_e31||0), 0.001); end
  def test_flows_f31; assert_in_delta(0, (worksheet.flows_f31||0), 0.001); end
  def test_flows_g31; assert_in_delta(0, (worksheet.flows_g31||0), 0.001); end
  def test_flows_h31; assert_in_delta(0, (worksheet.flows_h31||0), 0.001); end
  def test_flows_i31; assert_in_delta(0, (worksheet.flows_i31||0), 0.001); end
  def test_flows_j31; assert_in_delta(0, (worksheet.flows_j31||0), 0.001); end
  def test_flows_k31; assert_in_delta(0, (worksheet.flows_k31||0), 0.001); end
  def test_flows_l31; assert_in_epsilon(25.006312647750775, worksheet.flows_l31, 0.001); end
  def test_flows_m31; assert_in_epsilon(57.43454528627539, worksheet.flows_m31, 0.001); end
  def test_flows_n31; assert_in_epsilon(82.2325418852722, worksheet.flows_n31, 0.001); end
  def test_flows_r31; assert_equal("International shipping", worksheet.flows_r31); end
  def test_flows_s31; assert_in_delta(0, (worksheet.flows_s31||0), 0.001); end
  def test_flows_t31; assert_in_delta(0, (worksheet.flows_t31||0), 0.001); end
  def test_flows_u31; assert_in_delta(0, (worksheet.flows_u31||0), 0.001); end
  def test_flows_v31; assert_in_delta(0, (worksheet.flows_v31||0), 0.001); end
  def test_flows_w31; assert_in_delta(0, (worksheet.flows_w31||0), 0.001); end
  def test_flows_x31; assert_in_delta(0, (worksheet.flows_x31||0), 0.001); end
  def test_flows_y31; assert_in_delta(0, (worksheet.flows_y31||0), 0.001); end
  def test_flows_z31; assert_in_delta(0, (worksheet.flows_z31||0), 0.001); end
  def test_flows_aa31; assert_in_delta(0, (worksheet.flows_aa31||0), 0.001); end
  def test_flows_ab31; assert_in_delta(0, (worksheet.flows_ab31||0), 0.001); end
  def test_flows_ad31; assert_in_epsilon(54.1581570872572, worksheet.flows_ad31, 0.001); end
  def test_flows_ae31; assert_in_epsilon(57.28499215184298, worksheet.flows_ae31, 0.001); end
  def test_flows_af31; assert_in_epsilon(52.37642070782899, worksheet.flows_af31, 0.001); end
  def test_flows_ag31; assert_in_epsilon(42.384644676983896, worksheet.flows_ag31, 0.001); end
  def test_flows_ah31; assert_in_epsilon(39.88547771236235, worksheet.flows_ah31, 0.001); end
  def test_flows_ai31; assert_in_epsilon(37.53367155646424, worksheet.flows_ai31, 0.001); end
  def test_flows_aj31; assert_in_epsilon(35.32053723081991, worksheet.flows_aj31, 0.001); end
  def test_flows_ak31; assert_in_epsilon(33.23789809363531, worksheet.flows_ak31, 0.001); end
  def test_flows_al31; assert_in_epsilon(31.278059630386895, worksheet.flows_al31, 0.001); end
  def test_flows_am31; assert_in_epsilon(29.43378102568326, worksheet.flows_am31, 0.001); end
  def test_flows_c32; assert_equal("Solid", worksheet.flows_c32); end
  def test_flows_d32; assert_equal("Thermal generation", worksheet.flows_d32); end
  def test_flows_e32; assert_in_epsilon(426.68958128074416, worksheet.flows_e32, 0.001); end
  def test_flows_f32; assert_in_epsilon(380.41144958733827, worksheet.flows_f32, 0.001); end
  def test_flows_g32; assert_in_epsilon(316.04880977685303, worksheet.flows_g32, 0.001); end
  def test_flows_h32; assert_in_epsilon(220.83403347541224, worksheet.flows_h32, 0.001); end
  def test_flows_i32; assert_in_epsilon(105.67123338390459, worksheet.flows_i32, 0.001); end
  def test_flows_j32; assert_in_epsilon(19.81675531914894, worksheet.flows_j32, 0.001); end
  def test_flows_k32; assert_in_epsilon(19.40390625, worksheet.flows_k32, 0.001); end
  def test_flows_l32; assert_in_epsilon(19.403906250000002, worksheet.flows_l32, 0.001); end
  def test_flows_m32; assert_in_epsilon(19.007908163265306, worksheet.flows_m32, 0.001); end
  def test_flows_n32; assert_in_epsilon(18.627750000000002, worksheet.flows_n32, 0.001); end
  def test_flows_r32; assert_equal("Lighting & appliances - commercial", worksheet.flows_r32); end
  def test_flows_s32; assert_in_delta(0, (worksheet.flows_s32||0), 0.001); end
  def test_flows_t32; assert_in_delta(0, (worksheet.flows_t32||0), 0.001); end
  def test_flows_u32; assert_in_delta(0, (worksheet.flows_u32||0), 0.001); end
  def test_flows_v32; assert_in_delta(0, (worksheet.flows_v32||0), 0.001); end
  def test_flows_w32; assert_in_delta(0, (worksheet.flows_w32||0), 0.001); end
  def test_flows_x32; assert_in_delta(0, (worksheet.flows_x32||0), 0.001); end
  def test_flows_y32; assert_in_delta(0, (worksheet.flows_y32||0), 0.001); end
  def test_flows_z32; assert_in_delta(0, (worksheet.flows_z32||0), 0.001); end
  def test_flows_aa32; assert_in_delta(0, (worksheet.flows_aa32||0), 0.001); end
  def test_flows_ab32; assert_in_delta(0, (worksheet.flows_ab32||0), 0.001); end
  def test_flows_ad32; assert_in_epsilon(81.62029588380175, worksheet.flows_ad32, 0.001); end
  def test_flows_ae32; assert_in_epsilon(80.70059517312932, worksheet.flows_ae32, 0.001); end
  def test_flows_af32; assert_in_epsilon(76.41775678994217, worksheet.flows_af32, 0.001); end
  def test_flows_ag32; assert_in_epsilon(72.62663040540802, worksheet.flows_ag32, 0.001); end
  def test_flows_ah32; assert_in_epsilon(69.28449834168913, worksheet.flows_ah32, 0.001); end
  def test_flows_ai32; assert_in_epsilon(66.35340620510844, worksheet.flows_ai32, 0.001); end
  def test_flows_aj32; assert_in_epsilon(63.799659268876525, worksheet.flows_aj32, 0.001); end
  def test_flows_ak32; assert_in_epsilon(61.5933768935127, worksheet.flows_ak32, 0.001); end
  def test_flows_al32; assert_in_epsilon(59.70809818699248, worksheet.flows_al32, 0.001); end
  def test_flows_am32; assert_in_epsilon(58.12043293759403, worksheet.flows_am32, 0.001); end
  def test_flows_c33; assert_equal("Liquid", worksheet.flows_c33); end
  def test_flows_d33; assert_equal("Thermal generation", worksheet.flows_d33); end
  def test_flows_e33; assert_in_epsilon(9.479109818726624, worksheet.flows_e33, 0.001); end
  def test_flows_f33; assert_in_epsilon(8.534858112, worksheet.flows_f33, 0.001); end
  def test_flows_g33; assert_in_delta(0, (worksheet.flows_g33||0), 0.001); end
  def test_flows_h33; assert_in_delta(0, (worksheet.flows_h33||0), 0.001); end
  def test_flows_i33; assert_in_delta(0, (worksheet.flows_i33||0), 0.001); end
  def test_flows_j33; assert_in_delta(0, (worksheet.flows_j33||0), 0.001); end
  def test_flows_k33; assert_in_delta(0, (worksheet.flows_k33||0), 0.001); end
  def test_flows_l33; assert_in_delta(0, (worksheet.flows_l33||0), 0.001); end
  def test_flows_m33; assert_in_delta(0, (worksheet.flows_m33||0), 0.001); end
  def test_flows_n33; assert_in_delta(0, (worksheet.flows_n33||0), 0.001); end
  def test_flows_r33; assert_equal("Lighting & appliances - homes", worksheet.flows_r33); end
  def test_flows_s33; assert_in_delta(0, (worksheet.flows_s33||0), 0.001); end
  def test_flows_t33; assert_in_delta(0, (worksheet.flows_t33||0), 0.001); end
  def test_flows_u33; assert_in_delta(0, (worksheet.flows_u33||0), 0.001); end
  def test_flows_v33; assert_in_delta(0, (worksheet.flows_v33||0), 0.001); end
  def test_flows_w33; assert_in_delta(0, (worksheet.flows_w33||0), 0.001); end
  def test_flows_x33; assert_in_delta(0, (worksheet.flows_x33||0), 0.001); end
  def test_flows_y33; assert_in_delta(0, (worksheet.flows_y33||0), 0.001); end
  def test_flows_z33; assert_in_delta(0, (worksheet.flows_z33||0), 0.001); end
  def test_flows_aa33; assert_in_delta(0, (worksheet.flows_aa33||0), 0.001); end
  def test_flows_ab33; assert_in_delta(0, (worksheet.flows_ab33||0), 0.001); end
  def test_flows_ad33; assert_in_epsilon(94.79230123772454, worksheet.flows_ad33, 0.001); end
  def test_flows_ae33; assert_in_epsilon(76.46653109497397, worksheet.flows_ae33, 0.001); end
  def test_flows_af33; assert_in_epsilon(70.9378488225839, worksheet.flows_af33, 0.001); end
  def test_flows_ag33; assert_in_epsilon(66.30431854246748, worksheet.flows_ag33, 0.001); end
  def test_flows_ah33; assert_in_epsilon(62.49210438915357, worksheet.flows_ah33, 0.001); end
  def test_flows_ai33; assert_in_epsilon(59.25587617911921, worksheet.flows_ai33, 0.001); end
  def test_flows_aj33; assert_in_epsilon(55.85815349002011, worksheet.flows_aj33, 0.001); end
  def test_flows_ak33; assert_in_epsilon(52.682798313493585, worksheet.flows_ak33, 0.001); end
  def test_flows_al33; assert_in_epsilon(49.85539346483764, worksheet.flows_al33, 0.001); end
  def test_flows_am33; assert_in_epsilon(47.347672704613224, worksheet.flows_am33, 0.001); end
  def test_flows_c34; assert_equal("Gas", worksheet.flows_c34); end
  def test_flows_d34; assert_equal("Thermal generation", worksheet.flows_d34); end
  def test_flows_e34; assert_in_epsilon(350.65068302528186, worksheet.flows_e34, 0.001); end
  def test_flows_f34; assert_in_epsilon(300.81593957759156, worksheet.flows_f34, 0.001); end
  def test_flows_g34; assert_in_epsilon(250.34483862937094, worksheet.flows_g34, 0.001); end
  def test_flows_h34; assert_in_epsilon(165.0146188587618, worksheet.flows_h34, 0.001); end
  def test_flows_i34; assert_in_epsilon(76.31528162501615, worksheet.flows_i34, 0.001); end
  def test_flows_j34; assert_in_epsilon(7.784184027292406, worksheet.flows_j34, 0.001); end
  def test_flows_k34; assert_in_epsilon(5.558395089988854, worksheet.flows_k34, 0.001); end
  def test_flows_l34; assert_in_epsilon(5.322214285714286, worksheet.flows_l34, 0.001); end
  def test_flows_m34; assert_in_epsilon(5.2390546874999995, worksheet.flows_m34, 0.001); end
  def test_flows_n34; assert_in_epsilon(5.158453846153846, worksheet.flows_n34, 0.001); end
  def test_flows_r34; assert_equal("Liquid", worksheet.flows_r34); end
  def test_flows_s34; assert_in_epsilon(980.3815848915083, worksheet.flows_s34, 0.001); end
  def test_flows_t34; assert_in_epsilon(855.2094824761291, worksheet.flows_t34, 0.001); end
  def test_flows_u34; assert_in_epsilon(764.3131321113813, worksheet.flows_u34, 0.001); end
  def test_flows_v34; assert_in_epsilon(664.1296979555793, worksheet.flows_v34, 0.001); end
  def test_flows_w34; assert_in_epsilon(536.4073805742506, worksheet.flows_w34, 0.001); end
  def test_flows_x34; assert_in_epsilon(430.2701170989637, worksheet.flows_x34, 0.001); end
  def test_flows_y34; assert_in_epsilon(388.7169189293097, worksheet.flows_y34, 0.001); end
  def test_flows_z34; assert_in_epsilon(349.8438401245131, worksheet.flows_z34, 0.001); end
  def test_flows_aa34; assert_in_epsilon(308.3786601664144, worksheet.flows_aa34, 0.001); end
  def test_flows_ab34; assert_in_epsilon(286.7422181407726, worksheet.flows_ab34, 0.001); end
  def test_flows_ad34; assert_in_epsilon(977.4538135720203, worksheet.flows_ad34, 0.001); end
  def test_flows_ae34; assert_in_epsilon(855.5773150342686, worksheet.flows_ae34, 0.001); end
  def test_flows_af34; assert_in_epsilon(764.6349855997533, worksheet.flows_af34, 0.001); end
  def test_flows_ag34; assert_in_epsilon(664.4055723741839, worksheet.flows_ag34, 0.001); end
  def test_flows_ah34; assert_in_epsilon(536.6372759230878, worksheet.flows_ah34, 0.001); end
  def test_flows_ai34; assert_in_epsilon(430.45403337803356, worksheet.flows_ai34, 0.001); end
  def test_flows_aj34; assert_in_epsilon(388.85485613861204, worksheet.flows_aj34, 0.001); end
  def test_flows_ak34; assert_in_epsilon(349.93579826404795, worksheet.flows_ak34, 0.001); end
  def test_flows_al34; assert_in_epsilon(308.42463923618186, worksheet.flows_al34, 0.001); end
  def test_flows_am34; assert_in_epsilon(286.7422181407726, worksheet.flows_am34, 0.001); end
  def test_flows_ao34; assert_in_epsilon(2.927771319487988, worksheet.flows_ao34, 0.001); end
  def test_flows_ap34; assert_in_delta(-0.36783255813952564, worksheet.flows_ap34, 0.001); end
  def test_flows_aq34; assert_in_delta(-0.32185348837208494, worksheet.flows_aq34, 0.001); end
  def test_flows_ar34; assert_in_delta(-0.27587441860453055, worksheet.flows_ar34, 0.001); end
  def test_flows_as34; assert_in_delta(-0.22989534883720353, worksheet.flows_as34, 0.001); end
  def test_flows_at34; assert_in_delta(-0.1839162790698765, worksheet.flows_at34, 0.001); end
  def test_flows_au34; assert_in_delta(-0.13793720930232212, worksheet.flows_au34, 0.001); end
  def test_flows_av34; assert_in_delta(-0.09195813953482457, worksheet.flows_av34, 0.001); end
  def test_flows_aw34; assert_in_delta(-0.045979069767440706, worksheet.flows_aw34, 0.001); end
  def test_flows_ax34; assert_in_delta(0, (worksheet.flows_ax34||0), 0.001); end
  def test_flows_c35; assert_equal("Nuclear", worksheet.flows_c35); end
  def test_flows_d35; assert_equal("Thermal generation", worksheet.flows_d35); end
  def test_flows_e35; assert_in_epsilon(163.91620313701554, worksheet.flows_e35, 0.001); end
  def test_flows_f35; assert_in_epsilon(160.70999999999998, worksheet.flows_f35, 0.001); end
  def test_flows_g35; assert_in_epsilon(134.9964, worksheet.flows_g35, 0.001); end
  def test_flows_h35; assert_in_epsilon(77.14080000000003, worksheet.flows_h35, 0.001); end
  def test_flows_i35; assert_in_epsilon(25.713600000000014, worksheet.flows_i35, 0.001); end
  def test_flows_j35; assert_in_epsilon(25.713600000000014, worksheet.flows_j35, 0.001); end
  def test_flows_k35; assert_in_delta(0, (worksheet.flows_k35||0), 0.001); end
  def test_flows_l35; assert_in_delta(0, (worksheet.flows_l35||0), 0.001); end
  def test_flows_m35; assert_in_delta(0, (worksheet.flows_m35||0), 0.001); end
  def test_flows_n35; assert_in_delta(0, (worksheet.flows_n35||0), 0.001); end
  def test_flows_r35; assert_equal("Losses", worksheet.flows_r35); end
  def test_flows_s35; assert_in_delta(0, (worksheet.flows_s35||0), 0.001); end
  def test_flows_t35; assert_in_delta(0, (worksheet.flows_t35||0), 0.001); end
  def test_flows_u35; assert_in_delta(0, (worksheet.flows_u35||0), 0.001); end
  def test_flows_v35; assert_in_delta(0, (worksheet.flows_v35||0), 0.001); end
  def test_flows_w35; assert_in_delta(0, (worksheet.flows_w35||0), 0.001); end
  def test_flows_x35; assert_in_delta(0, (worksheet.flows_x35||0), 0.001); end
  def test_flows_y35; assert_in_delta(0, (worksheet.flows_y35||0), 0.001); end
  def test_flows_z35; assert_in_delta(0, (worksheet.flows_z35||0), 0.001); end
  def test_flows_aa35; assert_in_delta(0, (worksheet.flows_aa35||0), 0.001); end
  def test_flows_ab35; assert_in_delta(0, (worksheet.flows_ab35||0), 0.001); end
  def test_flows_ad35; assert_in_epsilon(614.6297903277684, worksheet.flows_ad35, 0.001); end
  def test_flows_ae35; assert_in_epsilon(559.0402470017699, worksheet.flows_ae35, 0.001); end
  def test_flows_af35; assert_in_epsilon(485.1373133764793, worksheet.flows_af35, 0.001); end
  def test_flows_ag35; assert_in_epsilon(363.58655814393194, worksheet.flows_ag35, 0.001); end
  def test_flows_ah35; assert_in_epsilon(212.84961223694563, worksheet.flows_ah35, 0.001); end
  def test_flows_ai35; assert_in_epsilon(149.95934728893926, worksheet.flows_ai35, 0.001); end
  def test_flows_aj35; assert_in_epsilon(162.35064711162482, worksheet.flows_aj35, 0.001); end
  def test_flows_ak35; assert_in_epsilon(196.63444933820176, worksheet.flows_ak35, 0.001); end
  def test_flows_al35; assert_in_epsilon(235.39127700660006, worksheet.flows_al35, 0.001); end
  def test_flows_am35; assert_in_epsilon(278.74680446159476, worksheet.flows_am35, 0.001); end
  def test_flows_c36; assert_equal("Thermal generation", worksheet.flows_c36); end
  def test_flows_d36; assert_equal("District heating", worksheet.flows_d36); end
  def test_flows_e36; assert_in_epsilon(8.813193136590819, worksheet.flows_e36, 0.001); end
  def test_flows_f36; assert_in_epsilon(8.580264640887874, worksheet.flows_f36, 0.001); end
  def test_flows_g36; assert_in_epsilon(8.26645220166004, worksheet.flows_g36, 0.001); end
  def test_flows_h36; assert_in_epsilon(11.863919739444729, worksheet.flows_h36, 0.001); end
  def test_flows_i36; assert_in_epsilon(14.4016423420983, worksheet.flows_i36, 0.001); end
  def test_flows_j36; assert_in_epsilon(15.955787656845473, worksheet.flows_j36, 0.001); end
  def test_flows_k36; assert_in_epsilon(16.597398454217334, worksheet.flows_k36, 0.001); end
  def test_flows_l36; assert_in_epsilon(16.407572379730883, worksheet.flows_l36, 0.001); end
  def test_flows_m36; assert_in_epsilon(15.451202861509474, worksheet.flows_m36, 0.001); end
  def test_flows_n36; assert_in_epsilon(15.63782498577483, worksheet.flows_n36, 0.001); end
  def test_flows_r36; assert_equal("Marine algae", worksheet.flows_r36); end
  def test_flows_s36; assert_in_delta(0, (worksheet.flows_s36||0), 0.001); end
  def test_flows_t36; assert_in_delta(0, (worksheet.flows_t36||0), 0.001); end
  def test_flows_u36; assert_in_delta(0, (worksheet.flows_u36||0), 0.001); end
  def test_flows_v36; assert_in_delta(0.0058333333333333345, worksheet.flows_v36, 0.001); end
  def test_flows_w36; assert_in_delta(0.38888888888888895, worksheet.flows_w36, 0.001); end
  def test_flows_x36; assert_in_epsilon(1.9444444444444446, worksheet.flows_x36, 0.001); end
  def test_flows_y36; assert_in_epsilon(3.8888888888888893, worksheet.flows_y36, 0.001); end
  def test_flows_z36; assert_in_epsilon(7.777777777777779, worksheet.flows_z36, 0.001); end
  def test_flows_aa36; assert_in_epsilon(19.444444444444446, worksheet.flows_aa36, 0.001); end
  def test_flows_ab36; assert_in_epsilon(45.578477777777785, worksheet.flows_ab36, 0.001); end
  def test_flows_ad36; assert_in_delta(0, (worksheet.flows_ad36||0), 0.001); end
  def test_flows_ae36; assert_in_delta(0, (worksheet.flows_ae36||0), 0.001); end
  def test_flows_af36; assert_in_delta(0, (worksheet.flows_af36||0), 0.001); end
  def test_flows_ag36; assert_in_delta(0, (worksheet.flows_ag36||0), 0.001); end
  def test_flows_ah36; assert_in_delta(0, (worksheet.flows_ah36||0), 0.001); end
  def test_flows_ai36; assert_in_delta(0, (worksheet.flows_ai36||0), 0.001); end
  def test_flows_aj36; assert_in_delta(0, (worksheet.flows_aj36||0), 0.001); end
  def test_flows_ak36; assert_in_delta(0, (worksheet.flows_ak36||0), 0.001); end
  def test_flows_al36; assert_in_delta(0, (worksheet.flows_al36||0), 0.001); end
  def test_flows_am36; assert_in_delta(0, (worksheet.flows_am36||0), 0.001); end
  def test_flows_c37; assert_equal("Thermal generation", worksheet.flows_c37); end
  def test_flows_d37; assert_equal("Electricity grid", worksheet.flows_d37); end
  def test_flows_e37; assert_in_epsilon(371.11633110549406, worksheet.flows_e37, 0.001); end
  def test_flows_f37; assert_in_epsilon(327.7665728761414, worksheet.flows_f37, 0.001); end
  def test_flows_g37; assert_in_epsilon(271.0554217947035, worksheet.flows_g37, 0.001); end
  def test_flows_h37; assert_in_epsilon(178.67693046889988, worksheet.flows_h37, 0.001); end
  def test_flows_i37; assert_in_epsilon(78.82204450784293, worksheet.flows_i37, 0.001); end
  def test_flows_j37; assert_in_epsilon(17.064117578307794, worksheet.flows_j37, 0.001); end
  def test_flows_k37; assert_in_epsilon(8.579079637968952, worksheet.flows_k37, 0.001); end
  def test_flows_l37; assert_in_epsilon(8.628178393609875, worksheet.flows_l37, 0.001); end
  def test_flows_m37; assert_in_epsilon(8.796097230498646, worksheet.flows_m37, 0.001); end
  def test_flows_n37; assert_in_epsilon(8.804829652032167, worksheet.flows_n37, 0.001); end
  def test_flows_r37; assert_equal("National navigation", worksheet.flows_r37); end
  def test_flows_s37; assert_in_delta(0, (worksheet.flows_s37||0), 0.001); end
  def test_flows_t37; assert_in_delta(0, (worksheet.flows_t37||0), 0.001); end
  def test_flows_u37; assert_in_delta(0, (worksheet.flows_u37||0), 0.001); end
  def test_flows_v37; assert_in_delta(0, (worksheet.flows_v37||0), 0.001); end
  def test_flows_w37; assert_in_delta(0, (worksheet.flows_w37||0), 0.001); end
  def test_flows_x37; assert_in_delta(0, (worksheet.flows_x37||0), 0.001); end
  def test_flows_y37; assert_in_delta(0, (worksheet.flows_y37||0), 0.001); end
  def test_flows_z37; assert_in_delta(0, (worksheet.flows_z37||0), 0.001); end
  def test_flows_aa37; assert_in_delta(0, (worksheet.flows_aa37||0), 0.001); end
  def test_flows_ab37; assert_in_delta(0, (worksheet.flows_ab37||0), 0.001); end
  def test_flows_ad37; assert_in_epsilon(18.817339999999998, worksheet.flows_ad37, 0.001); end
  def test_flows_ae37; assert_in_epsilon(27.144937170003814, worksheet.flows_ae37, 0.001); end
  def test_flows_af37; assert_in_epsilon(27.32305556984198, worksheet.flows_af37, 0.001); end
  def test_flows_ag37; assert_in_epsilon(27.858606532706467, worksheet.flows_ag37, 0.001); end
  def test_flows_ah37; assert_in_epsilon(28.582641909901167, worksheet.flows_ah37, 0.001); end
  def test_flows_ai37; assert_in_epsilon(29.635401755478146, worksheet.flows_ai37, 0.001); end
  def test_flows_aj37; assert_in_epsilon(30.699187307229483, worksheet.flows_aj37, 0.001); end
  def test_flows_ak37; assert_in_epsilon(31.774954722510824, worksheet.flows_ak37, 0.001); end
  def test_flows_al37; assert_in_epsilon(32.86371234516199, worksheet.flows_al37, 0.001); end
  def test_flows_am37; assert_in_epsilon(33.96652500925593, worksheet.flows_am37, 0.001); end
  def test_flows_c38; assert_equal("Thermal generation", worksheet.flows_c38); end
  def test_flows_d38; assert_equal("Losses", worksheet.flows_d38); end
  def test_flows_e38; assert_in_epsilon(570.8060530196833, worksheet.flows_e38, 0.001); end
  def test_flows_f38; assert_in_epsilon(514.1254097599005, worksheet.flows_f38, 0.001); end
  def test_flows_g38; assert_in_epsilon(422.0681744098605, worksheet.flows_g38, 0.001); end
  def test_flows_h38; assert_in_epsilon(271.377928214034, worksheet.flows_h38, 0.001); end
  def test_flows_i38; assert_in_epsilon(111.29950006041251, worksheet.flows_i38, 0.001); end
  def test_flows_j38; assert_in_epsilon(18.00716319874978, worksheet.flows_j38, 0.001); end
  def test_flows_k38; assert_in_delta(-0.3645153905733829, worksheet.flows_k38, 0.001); end
  def test_flows_l38; assert_in_delta(-0.3096302376264699, worksheet.flows_l38, 0.001); end
  def test_flows_m38; assert_in_delta(-0.0003372412428135352, worksheet.flows_m38, 0.001); end
  def test_flows_n38; assert_in_delta(-0.656450791653151, worksheet.flows_n38, 0.001); end
  def test_flows_r38; assert_equal("Natural Gas", worksheet.flows_r38); end
  def test_flows_s38; assert_in_epsilon(978.5785105852787, worksheet.flows_s38, 0.001); end
  def test_flows_t38; assert_in_epsilon(892.9954907173886, worksheet.flows_t38, 0.001); end
  def test_flows_u38; assert_in_epsilon(761.9001111488918, worksheet.flows_u38, 0.001); end
  def test_flows_v38; assert_in_epsilon(565.7918983721402, worksheet.flows_v38, 0.001); end
  def test_flows_w38; assert_in_epsilon(387.50217385855757, worksheet.flows_w38, 0.001); end
  def test_flows_x38; assert_in_epsilon(244.73688628053915, worksheet.flows_x38, 0.001); end
  def test_flows_y38; assert_in_epsilon(177.9650813283118, worksheet.flows_y38, 0.001); end
  def test_flows_z38; assert_in_epsilon(137.343358153041, worksheet.flows_z38, 0.001); end
  def test_flows_aa38; assert_in_epsilon(106.273672431058, worksheet.flows_aa38, 0.001); end
  def test_flows_ab38; assert_in_epsilon(82.2325418852722, worksheet.flows_ab38, 0.001); end
  def test_flows_ad38; assert_in_epsilon(978.5785105852787, worksheet.flows_ad38, 0.001); end
  def test_flows_ae38; assert_in_epsilon(892.9954907173886, worksheet.flows_ae38, 0.001); end
  def test_flows_af38; assert_in_epsilon(761.9001111488918, worksheet.flows_af38, 0.001); end
  def test_flows_ag38; assert_in_epsilon(565.7918983721402, worksheet.flows_ag38, 0.001); end
  def test_flows_ah38; assert_in_epsilon(387.50217385855757, worksheet.flows_ah38, 0.001); end
  def test_flows_ai38; assert_in_epsilon(244.73688628053915, worksheet.flows_ai38, 0.001); end
  def test_flows_aj38; assert_in_epsilon(177.9650813283118, worksheet.flows_aj38, 0.001); end
  def test_flows_ak38; assert_in_epsilon(137.343358153041, worksheet.flows_ak38, 0.001); end
  def test_flows_al38; assert_in_epsilon(106.273672431058, worksheet.flows_al38, 0.001); end
  def test_flows_am38; assert_in_epsilon(82.2325418852722, worksheet.flows_am38, 0.001); end
  def test_flows_ao38; assert_in_delta(0, (worksheet.flows_ao38||0), 0.001); end
  def test_flows_ap38; assert_in_delta(0, (worksheet.flows_ap38||0), 0.001); end
  def test_flows_aq38; assert_in_delta(0, (worksheet.flows_aq38||0), 0.001); end
  def test_flows_ar38; assert_in_delta(0, (worksheet.flows_ar38||0), 0.001); end
  def test_flows_as38; assert_in_delta(0, (worksheet.flows_as38||0), 0.001); end
  def test_flows_at38; assert_in_delta(0, (worksheet.flows_at38||0), 0.001); end
  def test_flows_au38; assert_in_delta(0, (worksheet.flows_au38||0), 0.001); end
  def test_flows_av38; assert_in_delta(0, (worksheet.flows_av38||0), 0.001); end
  def test_flows_aw38; assert_in_delta(0, (worksheet.flows_aw38||0), 0.001); end
  def test_flows_ax38; assert_in_delta(0, (worksheet.flows_ax38||0), 0.001); end
  def test_flows_c39; assert_equal("Solid", worksheet.flows_c39); end
  def test_flows_d39; assert_equal("CHP", worksheet.flows_d39); end
  def test_flows_e39; assert_in_delta(0, (worksheet.flows_e39||0), 0.001); end
  def test_flows_f39; assert_in_delta(0, (worksheet.flows_f39||0), 0.001); end
  def test_flows_g39; assert_in_delta(0, (worksheet.flows_g39||0), 0.001); end
  def test_flows_h39; assert_in_epsilon(13.972946254157636, worksheet.flows_h39, 0.001); end
  def test_flows_i39; assert_in_epsilon(24.040993036140183, worksheet.flows_i39, 0.001); end
  def test_flows_j39; assert_in_epsilon(30.484907737512753, worksheet.flows_j39, 0.001); end
  def test_flows_k39; assert_in_epsilon(33.56107306659745, worksheet.flows_k39, 0.001); end
  def test_flows_l39; assert_in_epsilon(33.566797522706224, worksheet.flows_l39, 0.001); end
  def test_flows_m39; assert_in_epsilon(30.75060898180402, worksheet.flows_m39, 0.001); end
  def test_flows_n39; assert_in_epsilon(25.29302984381935, worksheet.flows_n39, 0.001); end
  def test_flows_r39; assert_equal("Nuclear", worksheet.flows_r39); end
  def test_flows_s39; assert_in_epsilon(163.91620313701554, worksheet.flows_s39, 0.001); end
  def test_flows_t39; assert_in_epsilon(160.70999999999998, worksheet.flows_t39, 0.001); end
  def test_flows_u39; assert_in_epsilon(134.9964, worksheet.flows_u39, 0.001); end
  def test_flows_v39; assert_in_epsilon(77.14080000000003, worksheet.flows_v39, 0.001); end
  def test_flows_w39; assert_in_epsilon(25.713600000000014, worksheet.flows_w39, 0.001); end
  def test_flows_x39; assert_in_epsilon(25.713600000000014, worksheet.flows_x39, 0.001); end
  def test_flows_y39; assert_in_delta(0, (worksheet.flows_y39||0), 0.001); end
  def test_flows_z39; assert_in_delta(0, (worksheet.flows_z39||0), 0.001); end
  def test_flows_aa39; assert_in_delta(0, (worksheet.flows_aa39||0), 0.001); end
  def test_flows_ab39; assert_in_delta(0, (worksheet.flows_ab39||0), 0.001); end
  def test_flows_ad39; assert_in_delta(0, (worksheet.flows_ad39||0), 0.001); end
  def test_flows_ae39; assert_in_delta(0, (worksheet.flows_ae39||0), 0.001); end
  def test_flows_af39; assert_in_delta(0, (worksheet.flows_af39||0), 0.001); end
  def test_flows_ag39; assert_in_delta(0, (worksheet.flows_ag39||0), 0.001); end
  def test_flows_ah39; assert_in_delta(0, (worksheet.flows_ah39||0), 0.001); end
  def test_flows_ai39; assert_in_delta(0, (worksheet.flows_ai39||0), 0.001); end
  def test_flows_aj39; assert_in_delta(0, (worksheet.flows_aj39||0), 0.001); end
  def test_flows_ak39; assert_in_delta(0, (worksheet.flows_ak39||0), 0.001); end
  def test_flows_al39; assert_in_delta(0, (worksheet.flows_al39||0), 0.001); end
  def test_flows_am39; assert_in_delta(0, (worksheet.flows_am39||0), 0.001); end
  def test_flows_c40; assert_equal("Liquid", worksheet.flows_c40); end
  def test_flows_d40; assert_equal("CHP", worksheet.flows_d40); end
  def test_flows_e40; assert_in_delta(0, (worksheet.flows_e40||0), 0.001); end
  def test_flows_f40; assert_in_delta(0, (worksheet.flows_f40||0), 0.001); end
  def test_flows_g40; assert_in_delta(0, (worksheet.flows_g40||0), 0.001); end
  def test_flows_h40; assert_in_delta(0, (worksheet.flows_h40||0), 0.001); end
  def test_flows_i40; assert_in_delta(0, (worksheet.flows_i40||0), 0.001); end
  def test_flows_j40; assert_in_delta(0, (worksheet.flows_j40||0), 0.001); end
  def test_flows_k40; assert_in_delta(0, (worksheet.flows_k40||0), 0.001); end
  def test_flows_l40; assert_in_delta(0, (worksheet.flows_l40||0), 0.001); end
  def test_flows_m40; assert_in_delta(0, (worksheet.flows_m40||0), 0.001); end
  def test_flows_n40; assert_in_delta(0, (worksheet.flows_n40||0), 0.001); end
  def test_flows_r40; assert_equal("Oil", worksheet.flows_r40); end
  def test_flows_s40; assert_in_epsilon(975.891208349798, worksheet.flows_s40, 0.001); end
  def test_flows_t40; assert_in_epsilon(852.3340812322775, worksheet.flows_t40, 0.001); end
  def test_flows_u40; assert_in_epsilon(752.887280587047, worksheet.flows_u40, 0.001); end
  def test_flows_v40; assert_in_epsilon(643.0321745772509, worksheet.flows_v40, 0.001); end
  def test_flows_w40; assert_in_epsilon(497.5172057348784, worksheet.flows_w40, 0.001); end
  def test_flows_x40; assert_in_epsilon(368.876954915453, worksheet.flows_x40, 0.001); end
  def test_flows_y40; assert_in_epsilon(302.9746653935456, worksheet.flows_y40, 0.001); end
  def test_flows_z40; assert_in_epsilon(236.60516791365805, worksheet.flows_z40, 0.001); end
  def test_flows_aa40; assert_in_epsilon(164.16300976904245, worksheet.flows_aa40, 0.001); end
  def test_flows_ab40; assert_in_epsilon(107.703360003839, worksheet.flows_ab40, 0.001); end
  def test_flows_ad40; assert_in_epsilon(975.891208349798, worksheet.flows_ad40, 0.001); end
  def test_flows_ae40; assert_in_epsilon(852.3340812322775, worksheet.flows_ae40, 0.001); end
  def test_flows_af40; assert_in_epsilon(752.887280587047, worksheet.flows_af40, 0.001); end
  def test_flows_ag40; assert_in_epsilon(643.0321745772509, worksheet.flows_ag40, 0.001); end
  def test_flows_ah40; assert_in_epsilon(497.5172057348784, worksheet.flows_ah40, 0.001); end
  def test_flows_ai40; assert_in_epsilon(368.876954915453, worksheet.flows_ai40, 0.001); end
  def test_flows_aj40; assert_in_epsilon(302.9746653935456, worksheet.flows_aj40, 0.001); end
  def test_flows_ak40; assert_in_epsilon(236.60516791365805, worksheet.flows_ak40, 0.001); end
  def test_flows_al40; assert_in_epsilon(164.16300976904245, worksheet.flows_al40, 0.001); end
  def test_flows_am40; assert_in_epsilon(107.703360003839, worksheet.flows_am40, 0.001); end
  def test_flows_ao40; assert_in_delta(0, (worksheet.flows_ao40||0), 0.001); end
  def test_flows_ap40; assert_in_delta(0, (worksheet.flows_ap40||0), 0.001); end
  def test_flows_aq40; assert_in_delta(0, (worksheet.flows_aq40||0), 0.001); end
  def test_flows_ar40; assert_in_delta(0, (worksheet.flows_ar40||0), 0.001); end
  def test_flows_as40; assert_in_delta(0, (worksheet.flows_as40||0), 0.001); end
  def test_flows_at40; assert_in_delta(0, (worksheet.flows_at40||0), 0.001); end
  def test_flows_au40; assert_in_delta(0, (worksheet.flows_au40||0), 0.001); end
  def test_flows_av40; assert_in_delta(0, (worksheet.flows_av40||0), 0.001); end
  def test_flows_aw40; assert_in_delta(0, (worksheet.flows_aw40||0), 0.001); end
  def test_flows_ax40; assert_in_delta(0, (worksheet.flows_ax40||0), 0.001); end
  def test_flows_c41; assert_equal("Gas", worksheet.flows_c41); end
  def test_flows_d41; assert_equal("CHP", worksheet.flows_d41); end
  def test_flows_e41; assert_in_delta(0, (worksheet.flows_e41||0), 0.001); end
  def test_flows_f41; assert_in_delta(0, (worksheet.flows_f41||0), 0.001); end
  def test_flows_g41; assert_in_delta(0, (worksheet.flows_g41||0), 0.001); end
  def test_flows_h41; assert_in_epsilon(12.575651628741872, worksheet.flows_h41, 0.001); end
  def test_flows_i41; assert_in_epsilon(21.63689373252617, worksheet.flows_i41, 0.001); end
  def test_flows_j41; assert_in_epsilon(27.436416963761467, worksheet.flows_j41, 0.001); end
  def test_flows_k41; assert_in_epsilon(30.2049657599377, worksheet.flows_k41, 0.001); end
  def test_flows_l41; assert_in_epsilon(30.2101177704356, worksheet.flows_l41, 0.001); end
  def test_flows_m41; assert_in_epsilon(27.675548083623625, worksheet.flows_m41, 0.001); end
  def test_flows_n41; assert_in_epsilon(22.763726859437412, worksheet.flows_n41, 0.001); end
  def test_flows_r41; assert_equal("Oil imports", worksheet.flows_r41); end
  def test_flows_s41; assert_in_delta(0, (worksheet.flows_s41||0), 0.001); end
  def test_flows_t41; assert_in_epsilon(49.786128395065475, worksheet.flows_t41, 0.001); end
  def test_flows_u41; assert_in_epsilon(106.05843705373104, worksheet.flows_u41, 0.001); end
  def test_flows_v41; assert_in_epsilon(141.24322450450188, worksheet.flows_v41, 0.001); end
  def test_flows_w41; assert_in_epsilon(109.24248152044544, worksheet.flows_w41, 0.001); end
  def test_flows_x41; assert_in_epsilon(68.43737480525499, worksheet.flows_x41, 0.001); end
  def test_flows_y41; assert_in_epsilon(70.5002454337706, worksheet.flows_y41, 0.001); end
  def test_flows_z41; assert_in_epsilon(56.72089329241504, worksheet.flows_z41, 0.001); end
  def test_flows_aa41; assert_in_epsilon(24.971987111109456, worksheet.flows_aa41, 0.001); end
  def test_flows_ab41; assert_in_delta(0, (worksheet.flows_ab41||0), 0.001); end
  def test_flows_ad41; assert_in_delta(0, (worksheet.flows_ad41||0), 0.001); end
  def test_flows_ae41; assert_in_delta(0, (worksheet.flows_ae41||0), 0.001); end
  def test_flows_af41; assert_in_delta(0, (worksheet.flows_af41||0), 0.001); end
  def test_flows_ag41; assert_in_delta(0, (worksheet.flows_ag41||0), 0.001); end
  def test_flows_ah41; assert_in_delta(0, (worksheet.flows_ah41||0), 0.001); end
  def test_flows_ai41; assert_in_delta(0, (worksheet.flows_ai41||0), 0.001); end
  def test_flows_aj41; assert_in_delta(0, (worksheet.flows_aj41||0), 0.001); end
  def test_flows_ak41; assert_in_delta(0, (worksheet.flows_ak41||0), 0.001); end
  def test_flows_al41; assert_in_delta(0, (worksheet.flows_al41||0), 0.001); end
  def test_flows_am41; assert_in_delta(0, (worksheet.flows_am41||0), 0.001); end
  def test_flows_c42; assert_equal("CHP", worksheet.flows_c42); end
  def test_flows_d42; assert_equal("Electricity grid", worksheet.flows_d42); end
  def test_flows_e42; assert_in_delta(0, (worksheet.flows_e42||0), 0.001); end
  def test_flows_f42; assert_in_delta(0, (worksheet.flows_f42||0), 0.001); end
  def test_flows_g42; assert_in_delta(0, (worksheet.flows_g42||0), 0.001); end
  def test_flows_h42; assert_in_epsilon(7.15414848212871, worksheet.flows_h42, 0.001); end
  def test_flows_i42; assert_in_epsilon(12.308988434503775, worksheet.flows_i42, 0.001); end
  def test_flows_j42; assert_in_epsilon(15.608272761606527, worksheet.flows_j42, 0.001); end
  def test_flows_k42; assert_in_epsilon(17.183269410097893, worksheet.flows_k42, 0.001); end
  def test_flows_l42; assert_in_epsilon(17.186200331625585, worksheet.flows_l42, 0.001); end
  def test_flows_m42; assert_in_epsilon(15.744311798683661, worksheet.flows_m42, 0.001); end
  def test_flows_n42; assert_in_epsilon(12.950031280035507, worksheet.flows_n42, 0.001); end
  def test_flows_r42; assert_equal("Oil reserves", worksheet.flows_r42); end
  def test_flows_s42; assert_in_epsilon(975.891208349798, worksheet.flows_s42, 0.001); end
  def test_flows_t42; assert_in_epsilon(802.547952837212, worksheet.flows_t42, 0.001); end
  def test_flows_u42; assert_in_epsilon(646.828843533316, worksheet.flows_u42, 0.001); end
  def test_flows_v42; assert_in_epsilon(501.788950072749, worksheet.flows_v42, 0.001); end
  def test_flows_w42; assert_in_epsilon(388.274724214433, worksheet.flows_w42, 0.001); end
  def test_flows_x42; assert_in_epsilon(300.439580110198, worksheet.flows_x42, 0.001); end
  def test_flows_y42; assert_in_epsilon(232.474419959775, worksheet.flows_y42, 0.001); end
  def test_flows_z42; assert_in_epsilon(179.884274621243, worksheet.flows_z42, 0.001); end
  def test_flows_aa42; assert_in_epsilon(139.191022657933, worksheet.flows_aa42, 0.001); end
  def test_flows_ab42; assert_in_epsilon(107.703360003839, worksheet.flows_ab42, 0.001); end
  def test_flows_ad42; assert_in_delta(0, (worksheet.flows_ad42||0), 0.001); end
  def test_flows_ae42; assert_in_delta(0, (worksheet.flows_ae42||0), 0.001); end
  def test_flows_af42; assert_in_delta(0, (worksheet.flows_af42||0), 0.001); end
  def test_flows_ag42; assert_in_delta(0, (worksheet.flows_ag42||0), 0.001); end
  def test_flows_ah42; assert_in_delta(0, (worksheet.flows_ah42||0), 0.001); end
  def test_flows_ai42; assert_in_delta(0, (worksheet.flows_ai42||0), 0.001); end
  def test_flows_aj42; assert_in_delta(0, (worksheet.flows_aj42||0), 0.001); end
  def test_flows_ak42; assert_in_delta(0, (worksheet.flows_ak42||0), 0.001); end
  def test_flows_al42; assert_in_delta(0, (worksheet.flows_al42||0), 0.001); end
  def test_flows_am42; assert_in_delta(0, (worksheet.flows_am42||0), 0.001); end
  def test_flows_c43; assert_equal("CHP", worksheet.flows_c43); end
  def test_flows_d43; assert_equal("Losses", worksheet.flows_d43); end
  def test_flows_e43; assert_in_delta(0, (worksheet.flows_e43||0), 0.001); end
  def test_flows_f43; assert_in_delta(0, (worksheet.flows_f43||0), 0.001); end
  def test_flows_g43; assert_in_delta(0, (worksheet.flows_g43||0), 0.001); end
  def test_flows_h43; assert_in_epsilon(6.651122416979034, worksheet.flows_h43, 0.001); end
  def test_flows_i43; assert_in_epsilon(11.443512685202727, worksheet.flows_i43, 0.001); end
  def test_flows_j43; assert_in_epsilon(14.510816083056067, worksheet.flows_j43, 0.001); end
  def test_flows_k43; assert_in_epsilon(15.975070779700385, worksheet.flows_k43, 0.001); end
  def test_flows_l43; assert_in_epsilon(15.977795620808163, worksheet.flows_l43, 0.001); end
  def test_flows_m43; assert_in_epsilon(14.637289875338716, worksheet.flows_m43, 0.001); end
  def test_flows_n43; assert_in_epsilon(12.039482205658011, worksheet.flows_n43, 0.001); end
  def test_flows_r43; assert_equal("Other waste", worksheet.flows_r43); end
  def test_flows_s43; assert_in_epsilon(42.18716204480407, worksheet.flows_s43, 0.001); end
  def test_flows_t43; assert_in_epsilon(36.63875206230854, worksheet.flows_t43, 0.001); end
  def test_flows_u43; assert_in_epsilon(40.92172691059286, worksheet.flows_u43, 0.001); end
  def test_flows_v43; assert_in_epsilon(44.560562744580224, worksheet.flows_v43, 0.001); end
  def test_flows_w43; assert_in_epsilon(42.31069816823699, worksheet.flows_w43, 0.001); end
  def test_flows_x43; assert_in_epsilon(39.72856834897936, worksheet.flows_x43, 0.001); end
  def test_flows_y43; assert_in_epsilon(37.58586539449506, worksheet.flows_y43, 0.001); end
  def test_flows_z43; assert_in_epsilon(35.29437083449228, worksheet.flows_z43, 0.001); end
  def test_flows_aa43; assert_in_epsilon(32.77983703116038, worksheet.flows_aa43, 0.001); end
  def test_flows_ab43; assert_in_epsilon(30.160294887400873, worksheet.flows_ab43, 0.001); end
  def test_flows_ad43; assert_in_delta(0, (worksheet.flows_ad43||0), 0.001); end
  def test_flows_ae43; assert_in_delta(0, (worksheet.flows_ae43||0), 0.001); end
  def test_flows_af43; assert_in_delta(0, (worksheet.flows_af43||0), 0.001); end
  def test_flows_ag43; assert_in_delta(0, (worksheet.flows_ag43||0), 0.001); end
  def test_flows_ah43; assert_in_delta(0, (worksheet.flows_ah43||0), 0.001); end
  def test_flows_ai43; assert_in_delta(0, (worksheet.flows_ai43||0), 0.001); end
  def test_flows_aj43; assert_in_delta(0, (worksheet.flows_aj43||0), 0.001); end
  def test_flows_ak43; assert_in_delta(0, (worksheet.flows_ak43||0), 0.001); end
  def test_flows_al43; assert_in_delta(0, (worksheet.flows_al43||0), 0.001); end
  def test_flows_am43; assert_in_delta(0, (worksheet.flows_am43||0), 0.001); end
  def test_flows_c44; assert_equal("Electricity imports", worksheet.flows_c44); end
  def test_flows_d44; assert_equal("Electricity grid", worksheet.flows_d44); end
  def test_flows_r44; assert_equal("Over generation / exports", worksheet.flows_r44); end
  def test_flows_s44; assert_in_delta(0, (worksheet.flows_s44||0), 0.001); end
  def test_flows_t44; assert_in_delta(0, (worksheet.flows_t44||0), 0.001); end
  def test_flows_u44; assert_in_delta(0, (worksheet.flows_u44||0), 0.001); end
  def test_flows_v44; assert_in_delta(0, (worksheet.flows_v44||0), 0.001); end
  def test_flows_w44; assert_in_delta(0, (worksheet.flows_w44||0), 0.001); end
  def test_flows_x44; assert_in_delta(0, (worksheet.flows_x44||0), 0.001); end
  def test_flows_y44; assert_in_delta(0, (worksheet.flows_y44||0), 0.001); end
  def test_flows_z44; assert_in_delta(0, (worksheet.flows_z44||0), 0.001); end
  def test_flows_aa44; assert_in_delta(0, (worksheet.flows_aa44||0), 0.001); end
  def test_flows_ab44; assert_in_delta(0, (worksheet.flows_ab44||0), 0.001); end
  def test_flows_ad44; assert_in_epsilon(74.87530779666133, worksheet.flows_ad44, 0.001); end
  def test_flows_ae44; assert_in_delta(5.684341886080802e-14, worksheet.flows_ae44, 0.001); end
  def test_flows_af44; assert_in_delta(5.684341886080802e-14, worksheet.flows_af44, 0.001); end
  def test_flows_ag44; assert_in_delta(1.1368683772161603e-13, worksheet.flows_ag44, 0.001); end
  def test_flows_ah44; assert_in_epsilon(33.745736494005484, worksheet.flows_ah44, 0.001); end
  def test_flows_ai44; assert_in_epsilon(117.6180316309977, worksheet.flows_ai44, 0.001); end
  def test_flows_aj44; assert_in_epsilon(214.13053176883602, worksheet.flows_aj44, 0.001); end
  def test_flows_ak44; assert_in_epsilon(289.50334178210437, worksheet.flows_ak44, 0.001); end
  def test_flows_al44; assert_in_epsilon(368.7613280501281, worksheet.flows_al44, 0.001); end
  def test_flows_am44; assert_in_epsilon(425.7335941556576, worksheet.flows_am44, 0.001); end
  def test_flows_c45; assert_equal("Wind", worksheet.flows_c45); end
  def test_flows_d45; assert_equal("Electricity grid", worksheet.flows_d45); end
  def test_flows_e45; assert_in_epsilon(5.962752417600001, worksheet.flows_e45, 0.001); end
  def test_flows_f45; assert_in_epsilon(14.545862099999999, worksheet.flows_f45, 0.001); end
  def test_flows_g45; assert_in_epsilon(41.77634535000001, worksheet.flows_g45, 0.001); end
  def test_flows_h45; assert_in_epsilon(107.988581916, worksheet.flows_h45, 0.001); end
  def test_flows_i45; assert_in_epsilon(191.74345164000005, worksheet.flows_i45, 0.001); end
  def test_flows_j45; assert_in_epsilon(286.2468925200001, worksheet.flows_j45, 0.001); end
  def test_flows_k45; assert_in_epsilon(366.73455132000004, worksheet.flows_k45, 0.001); end
  def test_flows_l45; assert_in_epsilon(389.48232132000004, worksheet.flows_l45, 0.001); end
  def test_flows_m45; assert_in_epsilon(398.02917132, worksheet.flows_m45, 0.001); end
  def test_flows_n45; assert_in_epsilon(398.02917132, worksheet.flows_n45, 0.001); end
  def test_flows_r45; assert_equal("Pumped heat", worksheet.flows_r45); end
  def test_flows_s45; assert_in_delta(0, (worksheet.flows_s45||0), 0.001); end
  def test_flows_t45; assert_in_delta(0, (worksheet.flows_t45||0), 0.001); end
  def test_flows_u45; assert_in_delta(0, (worksheet.flows_u45||0), 0.001); end
  def test_flows_v45; assert_in_epsilon(14.334699398965846, worksheet.flows_v45, 0.001); end
  def test_flows_w45; assert_in_epsilon(26.25997113316019, worksheet.flows_w45, 0.001); end
  def test_flows_x45; assert_in_epsilon(36.01015925968227, worksheet.flows_x45, 0.001); end
  def test_flows_y45; assert_in_epsilon(43.80172151011209, worksheet.flows_y45, 0.001); end
  def test_flows_z45; assert_in_epsilon(49.8678774022646, worksheet.flows_z45, 0.001); end
  def test_flows_aa45; assert_in_epsilon(54.412764042577855, worksheet.flows_aa45, 0.001); end
  def test_flows_ab45; assert_in_epsilon(57.602138321505166, worksheet.flows_ab45, 0.001); end
  def test_flows_ad45; assert_in_delta(0, (worksheet.flows_ad45||0), 0.001); end
  def test_flows_ae45; assert_in_delta(0, (worksheet.flows_ae45||0), 0.001); end
  def test_flows_af45; assert_in_delta(0, (worksheet.flows_af45||0), 0.001); end
  def test_flows_ag45; assert_in_delta(0, (worksheet.flows_ag45||0), 0.001); end
  def test_flows_ah45; assert_in_delta(0, (worksheet.flows_ah45||0), 0.001); end
  def test_flows_ai45; assert_in_delta(0, (worksheet.flows_ai45||0), 0.001); end
  def test_flows_aj45; assert_in_delta(0, (worksheet.flows_aj45||0), 0.001); end
  def test_flows_ak45; assert_in_delta(0, (worksheet.flows_ak45||0), 0.001); end
  def test_flows_al45; assert_in_delta(0, (worksheet.flows_al45||0), 0.001); end
  def test_flows_am45; assert_in_delta(0, (worksheet.flows_am45||0), 0.001); end
  def test_flows_c46; assert_equal("Tidal", worksheet.flows_c46); end
  def test_flows_d46; assert_equal("Electricity grid", worksheet.flows_d46); end
  def test_flows_e46; assert_in_delta(0, (worksheet.flows_e46||0), 0.001); end
  def test_flows_f46; assert_in_delta(0.0050034246575342495, worksheet.flows_f46, 0.001); end
  def test_flows_g46; assert_in_delta(0.08339041095890425, worksheet.flows_g46, 0.001); end
  def test_flows_h46; assert_in_delta(0.7663752219178082, worksheet.flows_h46, 0.001); end
  def test_flows_i46; assert_in_epsilon(1.4334985095890427, worksheet.flows_i46, 0.001); end
  def test_flows_j46; assert_in_epsilon(3.066861819178081, worksheet.flows_j46, 0.001); end
  def test_flows_k46; assert_in_epsilon(6.402478257534248, worksheet.flows_k46, 0.001); end
  def test_flows_l46; assert_in_epsilon(14.288421224657535, worksheet.flows_l46, 0.001); end
  def test_flows_m46; assert_in_epsilon(27.464106156164384, worksheet.flows_m46, 0.001); end
  def test_flows_n46; assert_in_epsilon(33.4682157452055, worksheet.flows_n46, 0.001); end
  def test_flows_r46; assert_equal("Rail transport", worksheet.flows_r46); end
  def test_flows_s46; assert_in_delta(0, (worksheet.flows_s46||0), 0.001); end
  def test_flows_t46; assert_in_delta(0, (worksheet.flows_t46||0), 0.001); end
  def test_flows_u46; assert_in_delta(0, (worksheet.flows_u46||0), 0.001); end
  def test_flows_v46; assert_in_delta(0, (worksheet.flows_v46||0), 0.001); end
  def test_flows_w46; assert_in_delta(0, (worksheet.flows_w46||0), 0.001); end
  def test_flows_x46; assert_in_delta(0, (worksheet.flows_x46||0), 0.001); end
  def test_flows_y46; assert_in_delta(0, (worksheet.flows_y46||0), 0.001); end
  def test_flows_z46; assert_in_delta(0, (worksheet.flows_z46||0), 0.001); end
  def test_flows_aa46; assert_in_delta(0, (worksheet.flows_aa46||0), 0.001); end
  def test_flows_ab46; assert_in_delta(0, (worksheet.flows_ab46||0), 0.001); end
  def test_flows_ad46; assert_in_epsilon(15.852446803025652, worksheet.flows_ad46, 0.001); end
  def test_flows_ae46; assert_in_epsilon(18.635917552258014, worksheet.flows_ae46, 0.001); end
  def test_flows_af46; assert_in_epsilon(19.73717540698295, worksheet.flows_af46, 0.001); end
  def test_flows_ag46; assert_in_epsilon(19.551529010621252, worksheet.flows_ag46, 0.001); end
  def test_flows_ah46; assert_in_epsilon(19.545232966038846, worksheet.flows_ah46, 0.001); end
  def test_flows_ai46; assert_in_epsilon(18.824855374621464, worksheet.flows_ai46, 0.001); end
  def test_flows_aj46; assert_in_epsilon(18.105105992897904, worksheet.flows_aj46, 0.001); end
  def test_flows_ak46; assert_in_epsilon(17.222397379222713, worksheet.flows_ak46, 0.001); end
  def test_flows_al46; assert_in_epsilon(16.23272585654513, worksheet.flows_al46, 0.001); end
  def test_flows_am46; assert_in_epsilon(15.180965558887394, worksheet.flows_am46, 0.001); end
  def test_flows_c47; assert_equal("Wave", worksheet.flows_c47); end
  def test_flows_d47; assert_equal("Electricity grid", worksheet.flows_d47); end
  def test_flows_e47; assert_in_delta(0, (worksheet.flows_e47||0), 0.001); end
  def test_flows_f47; assert_in_delta(0, (worksheet.flows_f47||0), 0.001); end
  def test_flows_g47; assert_in_delta(0.030020547945205478, worksheet.flows_g47, 0.001); end
  def test_flows_h47; assert_in_delta(0.1584417808219177, worksheet.flows_h47, 0.001); end
  def test_flows_i47; assert_in_delta(0.39610445205479383, worksheet.flows_i47, 0.001); end
  def test_flows_j47; assert_in_delta(0.7922089041095896, worksheet.flows_j47, 0.001); end
  def test_flows_k47; assert_in_epsilon(3.168835616438358, worksheet.flows_k47, 0.001); end
  def test_flows_l47; assert_in_epsilon(7.129880136986295, worksheet.flows_l47, 0.001); end
  def test_flows_m47; assert_in_epsilon(15.210410958904115, worksheet.flows_m47, 0.001); end
  def test_flows_n47; assert_in_epsilon(19.01301369863013, worksheet.flows_n47, 0.001); end
  def test_flows_r47; assert_equal("Road transport", worksheet.flows_r47); end
  def test_flows_s47; assert_in_delta(0, (worksheet.flows_s47||0), 0.001); end
  def test_flows_t47; assert_in_delta(0, (worksheet.flows_t47||0), 0.001); end
  def test_flows_u47; assert_in_delta(0, (worksheet.flows_u47||0), 0.001); end
  def test_flows_v47; assert_in_delta(0, (worksheet.flows_v47||0), 0.001); end
  def test_flows_w47; assert_in_delta(0, (worksheet.flows_w47||0), 0.001); end
  def test_flows_x47; assert_in_delta(0, (worksheet.flows_x47||0), 0.001); end
  def test_flows_y47; assert_in_delta(0, (worksheet.flows_y47||0), 0.001); end
  def test_flows_z47; assert_in_delta(0, (worksheet.flows_z47||0), 0.001); end
  def test_flows_aa47; assert_in_delta(0, (worksheet.flows_aa47||0), 0.001); end
  def test_flows_ab47; assert_in_delta(0, (worksheet.flows_ab47||0), 0.001); end
  def test_flows_ad47; assert_in_epsilon(490.85404977847907, worksheet.flows_ad47, 0.001); end
  def test_flows_ae47; assert_in_epsilon(444.05739657200286, worksheet.flows_ae47, 0.001); end
  def test_flows_af47; assert_in_epsilon(391.90139459514484, worksheet.flows_af47, 0.001); end
  def test_flows_ag47; assert_in_epsilon(326.63435157458747, worksheet.flows_ag47, 0.001); end
  def test_flows_ah47; assert_in_epsilon(235.80575185633296, worksheet.flows_ah47, 0.001); end
  def test_flows_ai47; assert_in_epsilon(162.93890022696309, worksheet.flows_ai47, 0.001); end
  def test_flows_aj47; assert_in_epsilon(143.49978826725084, worksheet.flows_aj47, 0.001); end
  def test_flows_ak47; assert_in_epsilon(125.81400184399722, worksheet.flows_ak47, 0.001); end
  def test_flows_al47; assert_in_epsilon(106.73514124894554, worksheet.flows_al47, 0.001); end
  def test_flows_am47; assert_in_epsilon(90.35365259246782, worksheet.flows_am47, 0.001); end
  def test_flows_c48; assert_equal("Geothermal", worksheet.flows_c48); end
  def test_flows_d48; assert_equal("Electricity grid", worksheet.flows_d48); end
  def test_flows_e48; assert_in_delta(0, (worksheet.flows_e48||0), 0.001); end
  def test_flows_f48; assert_in_delta(0, (worksheet.flows_f48||0), 0.001); end
  def test_flows_g48; assert_in_delta(0.0911664, worksheet.flows_g48, 0.001); end
  def test_flows_h48; assert_in_delta(0.7293312, worksheet.flows_h48, 0.001); end
  def test_flows_i48; assert_in_epsilon(5.8346496, worksheet.flows_i48, 0.001); end
  def test_flows_j48; assert_in_epsilon(21.038400000000003, worksheet.flows_j48, 0.001); end
  def test_flows_k48; assert_in_epsilon(21.038400000000003, worksheet.flows_k48, 0.001); end
  def test_flows_l48; assert_in_epsilon(21.038400000000003, worksheet.flows_l48, 0.001); end
  def test_flows_m48; assert_in_epsilon(21.038400000000003, worksheet.flows_m48, 0.001); end
  def test_flows_n48; assert_in_epsilon(21.038400000000003, worksheet.flows_n48, 0.001); end
  def test_flows_r48; assert_equal("Solar", worksheet.flows_r48); end
  def test_flows_s48; assert_in_delta(0.015312704990667746, worksheet.flows_s48, 0.001); end
  def test_flows_t48; assert_in_epsilon(17.245522222601338, worksheet.flows_t48, 0.001); end
  def test_flows_u48; assert_in_epsilon(46.45053368404071, worksheet.flows_u48, 0.001); end
  def test_flows_v48; assert_in_epsilon(76.28648912678419, worksheet.flows_v48, 0.001); end
  def test_flows_w48; assert_in_epsilon(106.72152027532374, worksheet.flows_w48, 0.001); end
  def test_flows_x48; assert_in_epsilon(137.63709490854308, worksheet.flows_x48, 0.001); end
  def test_flows_y48; assert_in_epsilon(168.92541634832412, worksheet.flows_y48, 0.001); end
  def test_flows_z48; assert_in_epsilon(200.5822146823395, worksheet.flows_z48, 0.001); end
  def test_flows_aa48; assert_in_epsilon(232.61336514044433, worksheet.flows_aa48, 0.001); end
  def test_flows_ab48; assert_in_epsilon(264.9899216379231, worksheet.flows_ab48, 0.001); end
  def test_flows_ad48; assert_in_delta(0, (worksheet.flows_ad48||0), 0.001); end
  def test_flows_ae48; assert_in_delta(0, (worksheet.flows_ae48||0), 0.001); end
  def test_flows_af48; assert_in_delta(0, (worksheet.flows_af48||0), 0.001); end
  def test_flows_ag48; assert_in_delta(0, (worksheet.flows_ag48||0), 0.001); end
  def test_flows_ah48; assert_in_delta(0, (worksheet.flows_ah48||0), 0.001); end
  def test_flows_ai48; assert_in_delta(0, (worksheet.flows_ai48||0), 0.001); end
  def test_flows_aj48; assert_in_delta(0, (worksheet.flows_aj48||0), 0.001); end
  def test_flows_ak48; assert_in_delta(0, (worksheet.flows_ak48||0), 0.001); end
  def test_flows_al48; assert_in_delta(0, (worksheet.flows_al48||0), 0.001); end
  def test_flows_am48; assert_in_delta(0, (worksheet.flows_am48||0), 0.001); end
  def test_flows_c49; assert_equal("Hydro", worksheet.flows_c49); end
  def test_flows_d49; assert_equal("Electricity grid", worksheet.flows_d49); end
  def test_flows_e49; assert_in_epsilon(4.114400994, worksheet.flows_e49, 0.001); end
  def test_flows_f49; assert_in_epsilon(5.329728000000001, worksheet.flows_f49, 0.001); end
  def test_flows_g49; assert_in_epsilon(5.662836, worksheet.flows_g49, 0.001); end
  def test_flows_h49; assert_in_epsilon(5.995944000000001, worksheet.flows_h49, 0.001); end
  def test_flows_i49; assert_in_epsilon(6.162498000000001, worksheet.flows_i49, 0.001); end
  def test_flows_j49; assert_in_epsilon(6.329052, worksheet.flows_j49, 0.001); end
  def test_flows_k49; assert_in_epsilon(6.4956059999999995, worksheet.flows_k49, 0.001); end
  def test_flows_l49; assert_in_epsilon(6.66216, worksheet.flows_l49, 0.001); end
  def test_flows_m49; assert_in_epsilon(6.828714, worksheet.flows_m49, 0.001); end
  def test_flows_n49; assert_in_epsilon(6.995268000000001, worksheet.flows_n49, 0.001); end
  def test_flows_r49; assert_equal("Solar PV", worksheet.flows_r49); end
  def test_flows_s49; assert_in_delta(0.015312704990667746, worksheet.flows_s49, 0.001); end
  def test_flows_t49; assert_in_epsilon(11.878923446502947, worksheet.flows_t49, 0.001); end
  def test_flows_u49; assert_in_epsilon(31.65160801569008, worksheet.flows_u49, 0.001); end
  def test_flows_v49; assert_in_epsilon(51.42429258487721, worksheet.flows_v49, 0.001); end
  def test_flows_w49; assert_in_epsilon(71.19697715406434, worksheet.flows_w49, 0.001); end
  def test_flows_x49; assert_in_epsilon(90.96966172325146, worksheet.flows_x49, 0.001); end
  def test_flows_y49; assert_in_epsilon(110.7423462924386, worksheet.flows_y49, 0.001); end
  def test_flows_z49; assert_in_epsilon(130.51503086162572, worksheet.flows_z49, 0.001); end
  def test_flows_aa49; assert_in_epsilon(150.28771543081285, worksheet.flows_aa49, 0.001); end
  def test_flows_ab49; assert_in_epsilon(170.06040000000002, worksheet.flows_ab49, 0.001); end
  def test_flows_ad49; assert_in_delta(0.015312704990667746, worksheet.flows_ad49, 0.001); end
  def test_flows_ae49; assert_in_epsilon(11.878923446502947, worksheet.flows_ae49, 0.001); end
  def test_flows_af49; assert_in_epsilon(31.65160801569008, worksheet.flows_af49, 0.001); end
  def test_flows_ag49; assert_in_epsilon(51.42429258487721, worksheet.flows_ag49, 0.001); end
  def test_flows_ah49; assert_in_epsilon(71.19697715406434, worksheet.flows_ah49, 0.001); end
  def test_flows_ai49; assert_in_epsilon(90.96966172325146, worksheet.flows_ai49, 0.001); end
  def test_flows_aj49; assert_in_epsilon(110.7423462924386, worksheet.flows_aj49, 0.001); end
  def test_flows_ak49; assert_in_epsilon(130.51503086162572, worksheet.flows_ak49, 0.001); end
  def test_flows_al49; assert_in_epsilon(150.28771543081285, worksheet.flows_al49, 0.001); end
  def test_flows_am49; assert_in_epsilon(170.06040000000002, worksheet.flows_am49, 0.001); end
  def test_flows_ao49; assert_in_delta(0, (worksheet.flows_ao49||0), 0.001); end
  def test_flows_ap49; assert_in_delta(0, (worksheet.flows_ap49||0), 0.001); end
  def test_flows_aq49; assert_in_delta(0, (worksheet.flows_aq49||0), 0.001); end
  def test_flows_ar49; assert_in_delta(0, (worksheet.flows_ar49||0), 0.001); end
  def test_flows_as49; assert_in_delta(0, (worksheet.flows_as49||0), 0.001); end
  def test_flows_at49; assert_in_delta(0, (worksheet.flows_at49||0), 0.001); end
  def test_flows_au49; assert_in_delta(0, (worksheet.flows_au49||0), 0.001); end
  def test_flows_av49; assert_in_delta(0, (worksheet.flows_av49||0), 0.001); end
  def test_flows_aw49; assert_in_delta(0, (worksheet.flows_aw49||0), 0.001); end
  def test_flows_ax49; assert_in_delta(0, (worksheet.flows_ax49||0), 0.001); end
  def test_flows_c50; assert_equal("Electricity grid", worksheet.flows_c50); end
  def test_flows_d50; assert_equal("H2 conversion", worksheet.flows_d50); end
  def test_flows_e50; assert_in_delta(0, (worksheet.flows_e50||0), 0.001); end
  def test_flows_f50; assert_in_delta(0, (worksheet.flows_f50||0), 0.001); end
  def test_flows_g50; assert_in_delta(0, (worksheet.flows_g50||0), 0.001); end
  def test_flows_h50; assert_in_delta(0, (worksheet.flows_h50||0), 0.001); end
  def test_flows_i50; assert_in_delta(0, (worksheet.flows_i50||0), 0.001); end
  def test_flows_j50; assert_in_delta(0, (worksheet.flows_j50||0), 0.001); end
  def test_flows_k50; assert_in_delta(0, (worksheet.flows_k50||0), 0.001); end
  def test_flows_l50; assert_in_delta(0, (worksheet.flows_l50||0), 0.001); end
  def test_flows_m50; assert_in_delta(0, (worksheet.flows_m50||0), 0.001); end
  def test_flows_n50; assert_in_delta(0, (worksheet.flows_n50||0), 0.001); end
  def test_flows_r50; assert_equal("Solar Thermal", worksheet.flows_r50); end
  def test_flows_s50; assert_in_delta(0, (worksheet.flows_s50||0), 0.001); end
  def test_flows_t50; assert_in_epsilon(5.366598776098391, worksheet.flows_t50, 0.001); end
  def test_flows_u50; assert_in_epsilon(14.798925668350625, worksheet.flows_u50, 0.001); end
  def test_flows_v50; assert_in_epsilon(24.86219654190698, worksheet.flows_v50, 0.001); end
  def test_flows_w50; assert_in_epsilon(35.5245431212594, worksheet.flows_w50, 0.001); end
  def test_flows_x50; assert_in_epsilon(46.66743318529161, worksheet.flows_x50, 0.001); end
  def test_flows_y50; assert_in_epsilon(58.18307005588554, worksheet.flows_y50, 0.001); end
  def test_flows_z50; assert_in_epsilon(70.0671838207138, worksheet.flows_z50, 0.001); end
  def test_flows_aa50; assert_in_epsilon(82.32564970963149, worksheet.flows_aa50, 0.001); end
  def test_flows_ab50; assert_in_epsilon(94.9295216379231, worksheet.flows_ab50, 0.001); end
  def test_flows_ad50; assert_in_delta(0, (worksheet.flows_ad50||0), 0.001); end
  def test_flows_ae50; assert_in_epsilon(5.366598776098391, worksheet.flows_ae50, 0.001); end
  def test_flows_af50; assert_in_epsilon(14.798925668350625, worksheet.flows_af50, 0.001); end
  def test_flows_ag50; assert_in_epsilon(24.86219654190698, worksheet.flows_ag50, 0.001); end
  def test_flows_ah50; assert_in_epsilon(35.5245431212594, worksheet.flows_ah50, 0.001); end
  def test_flows_ai50; assert_in_epsilon(46.66743318529161, worksheet.flows_ai50, 0.001); end
  def test_flows_aj50; assert_in_epsilon(58.18307005588554, worksheet.flows_aj50, 0.001); end
  def test_flows_ak50; assert_in_epsilon(70.0671838207138, worksheet.flows_ak50, 0.001); end
  def test_flows_al50; assert_in_epsilon(82.32564970963149, worksheet.flows_al50, 0.001); end
  def test_flows_am50; assert_in_epsilon(94.9295216379231, worksheet.flows_am50, 0.001); end
  def test_flows_ao50; assert_in_delta(0, (worksheet.flows_ao50||0), 0.001); end
  def test_flows_ap50; assert_in_delta(0, (worksheet.flows_ap50||0), 0.001); end
  def test_flows_aq50; assert_in_delta(0, (worksheet.flows_aq50||0), 0.001); end
  def test_flows_ar50; assert_in_delta(0, (worksheet.flows_ar50||0), 0.001); end
  def test_flows_as50; assert_in_delta(0, (worksheet.flows_as50||0), 0.001); end
  def test_flows_at50; assert_in_delta(0, (worksheet.flows_at50||0), 0.001); end
  def test_flows_au50; assert_in_delta(0, (worksheet.flows_au50||0), 0.001); end
  def test_flows_av50; assert_in_delta(0, (worksheet.flows_av50||0), 0.001); end
  def test_flows_aw50; assert_in_delta(0, (worksheet.flows_aw50||0), 0.001); end
  def test_flows_ax50; assert_in_delta(0, (worksheet.flows_ax50||0), 0.001); end
  def test_flows_c51; assert_equal("Electricity grid", worksheet.flows_c51); end
  def test_flows_d51; assert_equal("Over generation / exports", worksheet.flows_d51); end
  def test_flows_e44; assert_in_delta(0, (worksheet.flows_e44||0), 0.001); end
  def test_flows_e51; assert_in_delta(0, (worksheet.flows_e51||0), 0.001); end
  def test_flows_f44; assert_in_delta(0, (worksheet.flows_f44||0), 0.001); end
  def test_flows_f51; assert_in_delta(5.684341886080802e-14, worksheet.flows_f51, 0.001); end
  def test_flows_g44; assert_in_delta(0, (worksheet.flows_g44||0), 0.001); end
  def test_flows_g51; assert_in_delta(5.684341886080802e-14, worksheet.flows_g51, 0.001); end
  def test_flows_h44; assert_in_delta(0, (worksheet.flows_h44||0), 0.001); end
  def test_flows_h51; assert_in_delta(1.1368683772161603e-13, worksheet.flows_h51, 0.001); end
  def test_flows_i44; assert_in_delta(0, (worksheet.flows_i44||0), 0.001); end
  def test_flows_i51; assert_in_delta(0, (worksheet.flows_i51||0), 0.001); end
  def test_flows_j44; assert_in_delta(0, (worksheet.flows_j44||0), 0.001); end
  def test_flows_j51; assert_in_epsilon(61.31989736235556, worksheet.flows_j51, 0.001); end
  def test_flows_k44; assert_in_delta(0, (worksheet.flows_k44||0), 0.001); end
  def test_flows_k51; assert_in_epsilon(159.35662394926544, worksheet.flows_k51, 0.001); end
  def test_flows_l44; assert_in_delta(0, (worksheet.flows_l44||0), 0.001); end
  def test_flows_l51; assert_in_epsilon(204.2603610038699, worksheet.flows_l51, 0.001); end
  def test_flows_m44; assert_in_delta(0, (worksheet.flows_m44||0), 0.001); end
  def test_flows_m51; assert_in_epsilon(241.40848518096965, worksheet.flows_m51, 0.001); end
  def test_flows_n44; assert_in_delta(0, (worksheet.flows_n44||0), 0.001); end
  def test_flows_n51; assert_in_epsilon(258.07251876236813, worksheet.flows_n51, 0.001); end
  def test_flows_r51; assert_equal("Solid", worksheet.flows_r51); end
  def test_flows_s51; assert_in_epsilon(496.38670892459777, worksheet.flows_s51, 0.001); end
  def test_flows_t51; assert_in_epsilon(444.8906627246124, worksheet.flows_t51, 0.001); end
  def test_flows_u51; assert_in_epsilon(372.85372697083795, worksheet.flows_u51, 0.001); end
  def test_flows_v51; assert_in_epsilon(291.5313933413785, worksheet.flows_v51, 0.001); end
  def test_flows_w51; assert_in_epsilon(219.134269493063, worksheet.flows_w51, 0.001); end
  def test_flows_x51; assert_in_epsilon(160.30774659201558, worksheet.flows_x51, 0.001); end
  def test_flows_y51; assert_in_epsilon(158.64902960454066, worksheet.flows_y51, 0.001); end
  def test_flows_z51; assert_in_epsilon(160.55355222336507, worksheet.flows_z51, 0.001); end
  def test_flows_aa51; assert_in_epsilon(162.75633442069412, worksheet.flows_aa51, 0.001); end
  def test_flows_ab51; assert_in_epsilon(151.42853030162934, worksheet.flows_ab51, 0.001); end
  def test_flows_ad51; assert_in_epsilon(496.38670892459777, worksheet.flows_ad51, 0.001); end
  def test_flows_ae51; assert_in_epsilon(444.8906627246124, worksheet.flows_ae51, 0.001); end
  def test_flows_af51; assert_in_epsilon(372.8537269708379, worksheet.flows_af51, 0.001); end
  def test_flows_ag51; assert_in_epsilon(291.5313933413785, worksheet.flows_ag51, 0.001); end
  def test_flows_ah51; assert_in_epsilon(219.13426949306302, worksheet.flows_ah51, 0.001); end
  def test_flows_ai51; assert_in_epsilon(160.30774659201558, worksheet.flows_ai51, 0.001); end
  def test_flows_aj51; assert_in_epsilon(158.64902960454066, worksheet.flows_aj51, 0.001); end
  def test_flows_ak51; assert_in_epsilon(160.55355222336507, worksheet.flows_ak51, 0.001); end
  def test_flows_al51; assert_in_epsilon(162.7563344206941, worksheet.flows_al51, 0.001); end
  def test_flows_am51; assert_in_epsilon(162.07396942556664, worksheet.flows_am51, 0.001); end
  def test_flows_ao51; assert_in_delta(0, (worksheet.flows_ao51||0), 0.001); end
  def test_flows_ap51; assert_in_delta(0, (worksheet.flows_ap51||0), 0.001); end
  def test_flows_aq51; assert_in_delta(0, (worksheet.flows_aq51||0), 0.001); end
  def test_flows_ar51; assert_in_delta(0, (worksheet.flows_ar51||0), 0.001); end
  def test_flows_as51; assert_in_delta(0, (worksheet.flows_as51||0), 0.001); end
  def test_flows_at51; assert_in_delta(0, (worksheet.flows_at51||0), 0.001); end
  def test_flows_au51; assert_in_delta(0, (worksheet.flows_au51||0), 0.001); end
  def test_flows_av51; assert_in_delta(0, (worksheet.flows_av51||0), 0.001); end
  def test_flows_aw51; assert_in_delta(0, (worksheet.flows_aw51||0), 0.001); end
  def test_flows_ax51; assert_in_epsilon(-10.645439123937308, worksheet.flows_ax51, 0.001); end
  def test_flows_c52; assert_equal("Electricity grid", worksheet.flows_c52); end
  def test_flows_d52; assert_equal("Losses", worksheet.flows_d52); end
  def test_flows_e52; assert_in_epsilon(26.58930775071441, worksheet.flows_e52, 0.001); end
  def test_flows_f52; assert_in_epsilon(25.050202088507326, worksheet.flows_f52, 0.001); end
  def test_flows_g52; assert_in_epsilon(24.363231772111902, worksheet.flows_g52, 0.001); end
  def test_flows_h52; assert_in_epsilon(24.490487276175887, worksheet.flows_h52, 0.001); end
  def test_flows_i52; assert_in_epsilon(25.48390634693117, worksheet.flows_i52, 0.001); end
  def test_flows_j52; assert_in_epsilon(26.258231402079538, worksheet.flows_j52, 0.001); end
  def test_flows_k52; assert_in_epsilon(26.28402684013631, worksheet.flows_k52, 0.001); end
  def test_flows_l52; assert_in_epsilon(26.90015798733404, worksheet.flows_l52, 0.001); end
  def test_flows_m52; assert_in_epsilon(27.628669077482293, worksheet.flows_m52, 0.001); end
  def test_flows_n52; assert_in_epsilon(28.284046395710547, worksheet.flows_n52, 0.001); end
  def test_flows_r52; assert_equal("Thermal generation", worksheet.flows_r52); end
  def test_flows_s52; assert_in_epsilon(950.7355772617682, worksheet.flows_s52, 0.001); end
  def test_flows_t52; assert_in_epsilon(850.4722472769299, worksheet.flows_t52, 0.001); end
  def test_flows_u52; assert_in_epsilon(701.390048406224, worksheet.flows_u52, 0.001); end
  def test_flows_v52; assert_in_epsilon(461.91877842237864, worksheet.flows_v52, 0.001); end
  def test_flows_w52; assert_in_epsilon(204.52318691035373, worksheet.flows_w52, 0.001); end
  def test_flows_x52; assert_in_epsilon(51.02706843390305, worksheet.flows_x52, 0.001); end
  def test_flows_y52; assert_in_epsilon(24.811962701612902, worksheet.flows_y52, 0.001); end
  def test_flows_z52; assert_in_epsilon(24.726120535714287, worksheet.flows_z52, 0.001); end
  def test_flows_aa52; assert_in_epsilon(24.246962850765303, worksheet.flows_aa52, 0.001); end
  def test_flows_ab52; assert_in_epsilon(23.786203846153846, worksheet.flows_ab52, 0.001); end
  def test_flows_ad52; assert_in_epsilon(950.7355772617682, worksheet.flows_ad52, 0.001); end
  def test_flows_ae52; assert_in_epsilon(850.4722472769299, worksheet.flows_ae52, 0.001); end
  def test_flows_af52; assert_in_epsilon(701.390048406224, worksheet.flows_af52, 0.001); end
  def test_flows_ag52; assert_in_epsilon(462.9894523341741, worksheet.flows_ag52, 0.001); end
  def test_flows_ah52; assert_in_epsilon(207.70011500892076, worksheet.flows_ah52, 0.001); end
  def test_flows_ai52; assert_in_epsilon(53.31453934644136, worksheet.flows_ai52, 0.001); end
  def test_flows_aj52; assert_in_epsilon(24.96230133998885, worksheet.flows_aj52, 0.001); end
  def test_flows_ak52; assert_in_epsilon(24.726120535714287, worksheet.flows_ak52, 0.001); end
  def test_flows_al52; assert_in_epsilon(24.246962850765307, worksheet.flows_al52, 0.001); end
  def test_flows_am52; assert_in_epsilon(23.78620384615385, worksheet.flows_am52, 0.001); end
  def test_flows_ao52; assert_in_delta(0, (worksheet.flows_ao52||0), 0.001); end
  def test_flows_ap52; assert_in_delta(0, (worksheet.flows_ap52||0), 0.001); end
  def test_flows_aq52; assert_in_delta(0, (worksheet.flows_aq52||0), 0.001); end
  def test_flows_ar52; assert_in_epsilon(-1.0706739117954385, worksheet.flows_ar52, 0.001); end
  def test_flows_as52; assert_in_epsilon(-3.176928098567032, worksheet.flows_as52, 0.001); end
  def test_flows_at52; assert_in_epsilon(-2.2874709125383106, worksheet.flows_at52, 0.001); end
  def test_flows_au52; assert_in_delta(-0.15033863837594907, worksheet.flows_au52, 0.001); end
  def test_flows_av52; assert_in_delta(0, (worksheet.flows_av52||0), 0.001); end
  def test_flows_aw52; assert_in_delta(0, (worksheet.flows_aw52||0), 0.001); end
  def test_flows_ax52; assert_in_delta(0, (worksheet.flows_ax52||0), 0.001); end
  def test_flows_c53; assert_equal("Gas", worksheet.flows_c53); end
  def test_flows_d53; assert_equal("H2 conversion", worksheet.flows_d53); end
  def test_flows_e53; assert_in_delta(0, (worksheet.flows_e53||0), 0.001); end
  def test_flows_f53; assert_in_delta(0, (worksheet.flows_f53||0), 0.001); end
  def test_flows_g53; assert_in_delta(0, (worksheet.flows_g53||0), 0.001); end
  def test_flows_h53; assert_in_delta(0, (worksheet.flows_h53||0), 0.001); end
  def test_flows_i53; assert_in_delta(0, (worksheet.flows_i53||0), 0.001); end
  def test_flows_j53; assert_in_delta(0, (worksheet.flows_j53||0), 0.001); end
  def test_flows_k53; assert_in_delta(0, (worksheet.flows_k53||0), 0.001); end
  def test_flows_l53; assert_in_delta(0, (worksheet.flows_l53||0), 0.001); end
  def test_flows_m53; assert_in_delta(0, (worksheet.flows_m53||0), 0.001); end
  def test_flows_n53; assert_in_delta(0, (worksheet.flows_n53||0), 0.001); end
  def test_flows_r53; assert_equal("Tidal", worksheet.flows_r53); end
  def test_flows_s53; assert_in_delta(0, (worksheet.flows_s53||0), 0.001); end
  def test_flows_t53; assert_in_delta(0.0050034246575342495, worksheet.flows_t53, 0.001); end
  def test_flows_u53; assert_in_delta(0.08339041095890425, worksheet.flows_u53, 0.001); end
  def test_flows_v53; assert_in_delta(0.7663752219178082, worksheet.flows_v53, 0.001); end
  def test_flows_w53; assert_in_epsilon(1.4334985095890427, worksheet.flows_w53, 0.001); end
  def test_flows_x53; assert_in_epsilon(3.066861819178081, worksheet.flows_x53, 0.001); end
  def test_flows_y53; assert_in_epsilon(6.402478257534248, worksheet.flows_y53, 0.001); end
  def test_flows_z53; assert_in_epsilon(14.288421224657535, worksheet.flows_z53, 0.001); end
  def test_flows_aa53; assert_in_epsilon(27.464106156164384, worksheet.flows_aa53, 0.001); end
  def test_flows_ab53; assert_in_epsilon(33.4682157452055, worksheet.flows_ab53, 0.001); end
  def test_flows_ad53; assert_in_delta(0, (worksheet.flows_ad53||0), 0.001); end
  def test_flows_ae53; assert_in_delta(0, (worksheet.flows_ae53||0), 0.001); end
  def test_flows_af53; assert_in_delta(0, (worksheet.flows_af53||0), 0.001); end
  def test_flows_ag53; assert_in_delta(0, (worksheet.flows_ag53||0), 0.001); end
  def test_flows_ah53; assert_in_delta(0, (worksheet.flows_ah53||0), 0.001); end
  def test_flows_ai53; assert_in_delta(0, (worksheet.flows_ai53||0), 0.001); end
  def test_flows_aj53; assert_in_delta(0, (worksheet.flows_aj53||0), 0.001); end
  def test_flows_ak53; assert_in_delta(0, (worksheet.flows_ak53||0), 0.001); end
  def test_flows_al53; assert_in_delta(0, (worksheet.flows_al53||0), 0.001); end
  def test_flows_am53; assert_in_delta(0, (worksheet.flows_am53||0), 0.001); end
  def test_flows_c54; assert_equal("H2 conversion", worksheet.flows_c54); end
  def test_flows_d54; assert_equal("H2", worksheet.flows_d54); end
  def test_flows_e54; assert_in_delta(0, (worksheet.flows_e54||0), 0.001); end
  def test_flows_f54; assert_in_delta(0, (worksheet.flows_f54||0), 0.001); end
  def test_flows_g54; assert_in_delta(0, (worksheet.flows_g54||0), 0.001); end
  def test_flows_h54; assert_in_delta(0, (worksheet.flows_h54||0), 0.001); end
  def test_flows_i54; assert_in_delta(0, (worksheet.flows_i54||0), 0.001); end
  def test_flows_j54; assert_in_delta(0, (worksheet.flows_j54||0), 0.001); end
  def test_flows_k54; assert_in_delta(0, (worksheet.flows_k54||0), 0.001); end
  def test_flows_l54; assert_in_delta(0, (worksheet.flows_l54||0), 0.001); end
  def test_flows_m54; assert_in_delta(0, (worksheet.flows_m54||0), 0.001); end
  def test_flows_n54; assert_in_delta(0, (worksheet.flows_n54||0), 0.001); end
  def test_flows_r54; assert_equal("UK land based bioenergy", worksheet.flows_r54); end
  def test_flows_s54; assert_in_epsilon(4.881522222222221, worksheet.flows_s54, 0.001); end
  def test_flows_t54; assert_in_epsilon(8.961145168485396, worksheet.flows_t54, 0.001); end
  def test_flows_u54; assert_in_epsilon(31.957461626199763, worksheet.flows_u54, 0.001); end
  def test_flows_v54; assert_in_epsilon(57.984754598992964, worksheet.flows_v54, 0.001); end
  def test_flows_w54; assert_in_epsilon(87.35842094453447, worksheet.flows_w54, 0.001); end
  def test_flows_x54; assert_in_epsilon(137.28733764887926, worksheet.flows_x54, 0.001); end
  def test_flows_y54; assert_in_epsilon(191.3201149706611, worksheet.flows_y54, 0.001); end
  def test_flows_z54; assert_in_epsilon(252.34844126096894, worksheet.flows_z54, 0.001); end
  def test_flows_aa54; assert_in_epsilon(321.11291813999156, worksheet.flows_aa54, 0.001); end
  def test_flows_ab54; assert_in_epsilon(398.42623627447324, worksheet.flows_ab54, 0.001); end
  def test_flows_ad54; assert_in_delta(0, (worksheet.flows_ad54||0), 0.001); end
  def test_flows_ae54; assert_in_delta(0, (worksheet.flows_ae54||0), 0.001); end
  def test_flows_af54; assert_in_delta(0, (worksheet.flows_af54||0), 0.001); end
  def test_flows_ag54; assert_in_delta(0, (worksheet.flows_ag54||0), 0.001); end
  def test_flows_ah54; assert_in_delta(0, (worksheet.flows_ah54||0), 0.001); end
  def test_flows_ai54; assert_in_delta(0, (worksheet.flows_ai54||0), 0.001); end
  def test_flows_aj54; assert_in_delta(0, (worksheet.flows_aj54||0), 0.001); end
  def test_flows_ak54; assert_in_delta(0, (worksheet.flows_ak54||0), 0.001); end
  def test_flows_al54; assert_in_delta(0, (worksheet.flows_al54||0), 0.001); end
  def test_flows_am54; assert_in_delta(0, (worksheet.flows_am54||0), 0.001); end
  def test_flows_c55; assert_equal("H2 conversion", worksheet.flows_c55); end
  def test_flows_d55; assert_equal("Losses", worksheet.flows_d55); end
  def test_flows_e55; assert_in_delta(0, (worksheet.flows_e55||0), 0.001); end
  def test_flows_f55; assert_in_delta(0, (worksheet.flows_f55||0), 0.001); end
  def test_flows_g55; assert_in_delta(0, (worksheet.flows_g55||0), 0.001); end
  def test_flows_h55; assert_in_delta(0, (worksheet.flows_h55||0), 0.001); end
  def test_flows_i55; assert_in_delta(0, (worksheet.flows_i55||0), 0.001); end
  def test_flows_j55; assert_in_delta(0, (worksheet.flows_j55||0), 0.001); end
  def test_flows_k55; assert_in_delta(0, (worksheet.flows_k55||0), 0.001); end
  def test_flows_l55; assert_in_delta(0, (worksheet.flows_l55||0), 0.001); end
  def test_flows_m55; assert_in_delta(0, (worksheet.flows_m55||0), 0.001); end
  def test_flows_n55; assert_in_delta(0, (worksheet.flows_n55||0), 0.001); end
  def test_flows_r55; assert_equal("Wave", worksheet.flows_r55); end
  def test_flows_s55; assert_in_delta(0, (worksheet.flows_s55||0), 0.001); end
  def test_flows_t55; assert_in_delta(0, (worksheet.flows_t55||0), 0.001); end
  def test_flows_u55; assert_in_delta(0.030020547945205478, worksheet.flows_u55, 0.001); end
  def test_flows_v55; assert_in_delta(0.1584417808219177, worksheet.flows_v55, 0.001); end
  def test_flows_w55; assert_in_delta(0.39610445205479383, worksheet.flows_w55, 0.001); end
  def test_flows_x55; assert_in_delta(0.7922089041095896, worksheet.flows_x55, 0.001); end
  def test_flows_y55; assert_in_epsilon(3.168835616438358, worksheet.flows_y55, 0.001); end
  def test_flows_z55; assert_in_epsilon(7.129880136986295, worksheet.flows_z55, 0.001); end
  def test_flows_aa55; assert_in_epsilon(15.210410958904115, worksheet.flows_aa55, 0.001); end
  def test_flows_ab55; assert_in_epsilon(19.01301369863013, worksheet.flows_ab55, 0.001); end
  def test_flows_ad55; assert_in_delta(0, (worksheet.flows_ad55||0), 0.001); end
  def test_flows_ae55; assert_in_delta(0, (worksheet.flows_ae55||0), 0.001); end
  def test_flows_af55; assert_in_delta(0, (worksheet.flows_af55||0), 0.001); end
  def test_flows_ag55; assert_in_delta(0, (worksheet.flows_ag55||0), 0.001); end
  def test_flows_ah55; assert_in_delta(0, (worksheet.flows_ah55||0), 0.001); end
  def test_flows_ai55; assert_in_delta(0, (worksheet.flows_ai55||0), 0.001); end
  def test_flows_aj55; assert_in_delta(0, (worksheet.flows_aj55||0), 0.001); end
  def test_flows_ak55; assert_in_delta(0, (worksheet.flows_ak55||0), 0.001); end
  def test_flows_al55; assert_in_delta(0, (worksheet.flows_al55||0), 0.001); end
  def test_flows_am55; assert_in_delta(0, (worksheet.flows_am55||0), 0.001); end
  def test_flows_c56; assert_equal("Solar Thermal", worksheet.flows_c56); end
  def test_flows_d56; assert_equal("Heating and cooling - homes", worksheet.flows_d56); end
  def test_flows_e56; assert_in_delta(0, (worksheet.flows_e56||0), 0.001); end
  def test_flows_f56; assert_in_epsilon(5.366598776098391, worksheet.flows_f56, 0.001); end
  def test_flows_g56; assert_in_epsilon(14.798925668350625, worksheet.flows_g56, 0.001); end
  def test_flows_h56; assert_in_epsilon(24.86219654190698, worksheet.flows_h56, 0.001); end
  def test_flows_i56; assert_in_epsilon(35.5245431212594, worksheet.flows_i56, 0.001); end
  def test_flows_j56; assert_in_epsilon(46.66743318529161, worksheet.flows_j56, 0.001); end
  def test_flows_k56; assert_in_epsilon(58.18307005588554, worksheet.flows_k56, 0.001); end
  def test_flows_l56; assert_in_epsilon(70.0671838207138, worksheet.flows_l56, 0.001); end
  def test_flows_m56; assert_in_epsilon(82.32564970963149, worksheet.flows_m56, 0.001); end
  def test_flows_n56; assert_in_epsilon(94.9295216379231, worksheet.flows_n56, 0.001); end
  def test_flows_r56; assert_equal("Wind", worksheet.flows_r56); end
  def test_flows_s56; assert_in_epsilon(5.962752417600001, worksheet.flows_s56, 0.001); end
  def test_flows_t56; assert_in_epsilon(14.545862099999999, worksheet.flows_t56, 0.001); end
  def test_flows_u56; assert_in_epsilon(41.77634535000001, worksheet.flows_u56, 0.001); end
  def test_flows_v56; assert_in_epsilon(107.988581916, worksheet.flows_v56, 0.001); end
  def test_flows_w56; assert_in_epsilon(191.74345164000005, worksheet.flows_w56, 0.001); end
  def test_flows_x56; assert_in_epsilon(286.2468925200001, worksheet.flows_x56, 0.001); end
  def test_flows_y56; assert_in_epsilon(366.73455132000004, worksheet.flows_y56, 0.001); end
  def test_flows_z56; assert_in_epsilon(389.48232132000004, worksheet.flows_z56, 0.001); end
  def test_flows_aa56; assert_in_epsilon(398.02917132, worksheet.flows_aa56, 0.001); end
  def test_flows_ab56; assert_in_epsilon(398.02917132, worksheet.flows_ab56, 0.001); end
  def test_flows_ad56; assert_in_delta(0, (worksheet.flows_ad56||0), 0.001); end
  def test_flows_ae56; assert_in_delta(0, (worksheet.flows_ae56||0), 0.001); end
  def test_flows_af56; assert_in_delta(0, (worksheet.flows_af56||0), 0.001); end
  def test_flows_ag56; assert_in_delta(0, (worksheet.flows_ag56||0), 0.001); end
  def test_flows_ah56; assert_in_delta(0, (worksheet.flows_ah56||0), 0.001); end
  def test_flows_ai56; assert_in_delta(0, (worksheet.flows_ai56||0), 0.001); end
  def test_flows_aj56; assert_in_delta(0, (worksheet.flows_aj56||0), 0.001); end
  def test_flows_ak56; assert_in_delta(0, (worksheet.flows_ak56||0), 0.001); end
  def test_flows_al56; assert_in_delta(0, (worksheet.flows_al56||0), 0.001); end
  def test_flows_am56; assert_in_delta(0, (worksheet.flows_am56||0), 0.001); end
  def test_flows_c57; assert_equal("H2", worksheet.flows_c57); end
  def test_flows_d57; assert_equal("Road transport", worksheet.flows_d57); end
  def test_flows_e57; assert_in_delta(0, (worksheet.flows_e57||0), 0.001); end
  def test_flows_f57; assert_in_delta(0, (worksheet.flows_f57||0), 0.001); end
  def test_flows_g57; assert_in_delta(0, (worksheet.flows_g57||0), 0.001); end
  def test_flows_h57; assert_in_delta(0, (worksheet.flows_h57||0), 0.001); end
  def test_flows_i57; assert_in_delta(0, (worksheet.flows_i57||0), 0.001); end
  def test_flows_j57; assert_in_delta(0, (worksheet.flows_j57||0), 0.001); end
  def test_flows_k57; assert_in_delta(0, (worksheet.flows_k57||0), 0.001); end
  def test_flows_l57; assert_in_delta(0, (worksheet.flows_l57||0), 0.001); end
  def test_flows_m57; assert_in_delta(0, (worksheet.flows_m57||0), 0.001); end
  def test_flows_n57; assert_in_delta(0, (worksheet.flows_n57||0), 0.001); end
  def test_flows_c58; assert_equal("Pumped heat", worksheet.flows_c58); end
  def test_flows_d58; assert_equal("Heating and cooling - homes", worksheet.flows_d58); end
  def test_flows_e58; assert_in_delta(0, (worksheet.flows_e58||0), 0.001); end
  def test_flows_f58; assert_in_delta(0, (worksheet.flows_f58||0), 0.001); end
  def test_flows_g58; assert_in_delta(0, (worksheet.flows_g58||0), 0.001); end
  def test_flows_h58; assert_in_epsilon(7.292895246126461, worksheet.flows_h58, 0.001); end
  def test_flows_i58; assert_in_epsilon(12.54380245346458, worksheet.flows_i58, 0.001); end
  def test_flows_j58; assert_in_epsilon(15.923449250898809, worksheet.flows_j58, 0.001); end
  def test_flows_k58; assert_in_epsilon(17.5866722338505, worksheet.flows_k58, 0.001); end
  def test_flows_l58; assert_in_epsilon(17.706535730634066, worksheet.flows_l58, 0.001); end
  def test_flows_m58; assert_in_epsilon(16.42797044836294, worksheet.flows_m58, 0.001); end
  def test_flows_n58; assert_in_epsilon(13.857966658735341, worksheet.flows_n58, 0.001); end
  def test_flows_c59; assert_equal("Pumped heat", worksheet.flows_c59); end
  def test_flows_d59; assert_equal("Heating and cooling - commercial", worksheet.flows_d59); end
  def test_flows_e59; assert_in_delta(0, (worksheet.flows_e59||0), 0.001); end
  def test_flows_f59; assert_in_delta(0, (worksheet.flows_f59||0), 0.001); end
  def test_flows_g59; assert_in_delta(0, (worksheet.flows_g59||0), 0.001); end
  def test_flows_h59; assert_in_epsilon(7.041804152839384, worksheet.flows_h59, 0.001); end
  def test_flows_i59; assert_in_epsilon(13.71616867969561, worksheet.flows_i59, 0.001); end
  def test_flows_j59; assert_in_epsilon(20.086710008783456, worksheet.flows_j59, 0.001); end
  def test_flows_k59; assert_in_epsilon(26.215049276261592, worksheet.flows_k59, 0.001); end
  def test_flows_l59; assert_in_epsilon(32.16134167163053, worksheet.flows_l59, 0.001); end
  def test_flows_m59; assert_in_epsilon(37.98479359421491, worksheet.flows_m59, 0.001); end
  def test_flows_n59; assert_in_epsilon(43.74417166276982, worksheet.flows_n59, 0.001); end
  def test_flows_c60; assert_equal("CHP", worksheet.flows_c60); end
  def test_flows_d60; assert_equal("Heating and cooling - homes", worksheet.flows_d60); end
  def test_flows_e60; assert_in_delta(0, (worksheet.flows_e60||0), 0.001); end
  def test_flows_f60; assert_in_delta(0, (worksheet.flows_f60||0), 0.001); end
  def test_flows_g60; assert_in_delta(0, (worksheet.flows_g60||0), 0.001); end
  def test_flows_h60; assert_in_epsilon(12.743326983791762, worksheet.flows_h60, 0.001); end
  def test_flows_i60; assert_in_epsilon(21.925385648959846, worksheet.flows_i60, 0.001); end
  def test_flows_j60; assert_in_epsilon(27.802235856611624, worksheet.flows_j60, 0.001); end
  def test_flows_k60; assert_in_epsilon(30.60769863673687, worksheet.flows_k60, 0.001); end
  def test_flows_l60; assert_in_epsilon(30.612919340708075, worksheet.flows_l60, 0.001); end
  def test_flows_m60; assert_in_epsilon(28.044555391405268, worksheet.flows_m60, 0.001); end
  def test_flows_n60; assert_in_epsilon(23.067243217563245, worksheet.flows_n60, 0.001); end
  def test_flows_c61; assert_equal("CHP", worksheet.flows_c61); end
  def test_flows_d61; assert_equal("Heating and cooling - commercial", worksheet.flows_d61); end
  def test_flows_e61; assert_in_delta(0, (worksheet.flows_e61||0), 0.001); end
  def test_flows_f61; assert_in_delta(0, (worksheet.flows_f61||0), 0.001); end
  def test_flows_g61; assert_in_delta(0, (worksheet.flows_g61||0), 0.001); end
  def test_flows_h61; assert_in_delta(0, (worksheet.flows_h61||0), 0.001); end
  def test_flows_i61; assert_in_delta(0, (worksheet.flows_i61||0), 0.001); end
  def test_flows_j61; assert_in_delta(0, (worksheet.flows_j61||0), 0.001); end
  def test_flows_k61; assert_in_delta(0, (worksheet.flows_k61||0), 0.001); end
  def test_flows_l61; assert_in_delta(0, (worksheet.flows_l61||0), 0.001); end
  def test_flows_m61; assert_in_delta(0, (worksheet.flows_m61||0), 0.001); end
  def test_flows_n61; assert_in_delta(0, (worksheet.flows_n61||0), 0.001); end
  def test_flows_c62; assert_equal("District heating", worksheet.flows_c62); end
  def test_flows_d62; assert_equal("Heating and cooling - homes", worksheet.flows_d62); end
  def test_flows_e62; assert_in_delta(0, (worksheet.flows_e62||0), 0.001); end
  def test_flows_f62; assert_in_delta(0, (worksheet.flows_f62||0), 0.001); end
  def test_flows_g62; assert_in_delta(0.021214285714285717, worksheet.flows_g62, 0.001); end
  def test_flows_h62; assert_in_epsilon(3.9334729275871663, worksheet.flows_h62, 0.001); end
  def test_flows_i62; assert_in_epsilon(6.761691249880589, worksheet.flows_i62, 0.001); end
  def test_flows_j62; assert_in_epsilon(8.58469905142498, worksheet.flows_j62, 0.001); end
  def test_flows_k62; assert_in_epsilon(9.476102361225154, worksheet.flows_k62, 0.001); end
  def test_flows_l62; assert_in_epsilon(9.519144004898896, worksheet.flows_l62, 0.001); end
  def test_flows_m62; assert_in_epsilon(8.780526845786529, worksheet.flows_m62, 0.001); end
  def test_flows_n62; assert_in_epsilon(9.171324316477659, worksheet.flows_n62, 0.001); end
  def test_flows_c63; assert_equal("District heating", worksheet.flows_c63); end
  def test_flows_d63; assert_equal("Heating and cooling - commercial", worksheet.flows_d63); end
  def test_flows_e63; assert_in_delta(0, (worksheet.flows_e63||0), 0.001); end
  def test_flows_f63; assert_in_delta(0, (worksheet.flows_f63||0), 0.001); end
  def test_flows_g63; assert_in_delta(0, (worksheet.flows_g63||0), 0.001); end
  def test_flows_h63; assert_in_delta(0, (worksheet.flows_h63||0), 0.001); end
  def test_flows_i63; assert_in_delta(0, (worksheet.flows_i63||0), 0.001); end
  def test_flows_j63; assert_in_delta(0, (worksheet.flows_j63||0), 0.001); end
  def test_flows_k63; assert_in_delta(0, (worksheet.flows_k63||0), 0.001); end
  def test_flows_l63; assert_in_delta(0, (worksheet.flows_l63||0), 0.001); end
  def test_flows_m63; assert_in_delta(0, (worksheet.flows_m63||0), 0.001); end
  def test_flows_n63; assert_in_delta(0, (worksheet.flows_n63||0), 0.001); end
  def test_flows_c64; assert_equal("District heating", worksheet.flows_c64); end
  def test_flows_d64; assert_equal("Industry", worksheet.flows_d64); end
  def test_flows_e64; assert_in_epsilon(8.813193136590819, worksheet.flows_e64, 0.001); end
  def test_flows_f64; assert_in_epsilon(8.580264640887874, worksheet.flows_f64, 0.001); end
  def test_flows_g64; assert_in_epsilon(8.245237915945754, worksheet.flows_g64, 0.001); end
  def test_flows_h64; assert_in_epsilon(7.9304468118575615, worksheet.flows_h64, 0.001); end
  def test_flows_i64; assert_in_epsilon(7.639951092217712, worksheet.flows_i64, 0.001); end
  def test_flows_j64; assert_in_epsilon(7.371088605420492, worksheet.flows_j64, 0.001); end
  def test_flows_k64; assert_in_epsilon(7.121296092992179, worksheet.flows_k64, 0.001); end
  def test_flows_l64; assert_in_epsilon(6.888428374831989, worksheet.flows_l64, 0.001); end
  def test_flows_m64; assert_in_epsilon(6.670676015722945, worksheet.flows_m64, 0.001); end
  def test_flows_n64; assert_in_epsilon(6.466500669297174, worksheet.flows_n64, 0.001); end
  def test_flows_c65; assert_equal("Electricity grid", worksheet.flows_c65); end
  def test_flows_d65; assert_equal("Heating and cooling - homes", worksheet.flows_d65); end
  def test_flows_e65; assert_in_epsilon(31.0254990420838, worksheet.flows_e65, 0.001); end
  def test_flows_f65; assert_in_epsilon(25.055789161987267, worksheet.flows_f65, 0.001); end
  def test_flows_g65; assert_in_epsilon(16.916439970953, worksheet.flows_g65, 0.001); end
  def test_flows_h65; assert_in_epsilon(16.357333051617584, worksheet.flows_h65, 0.001); end
  def test_flows_i65; assert_in_epsilon(15.565206166572953, worksheet.flows_i65, 0.001); end
  def test_flows_j65; assert_in_epsilon(14.51169341030608, worksheet.flows_j65, 0.001); end
  def test_flows_k65; assert_in_epsilon(13.214247427677442, worksheet.flows_k65, 0.001); end
  def test_flows_l65; assert_in_epsilon(11.696547591832068, worksheet.flows_l65, 0.001); end
  def test_flows_m65; assert_in_epsilon(9.941883525486983, worksheet.flows_m65, 0.001); end
  def test_flows_n65; assert_in_epsilon(7.753173409526754, worksheet.flows_n65, 0.001); end
  def test_flows_c66; assert_equal("Solid", worksheet.flows_c66); end
  def test_flows_d66; assert_equal("Heating and cooling - homes", worksheet.flows_d66); end
  def test_flows_e66; assert_in_epsilon(14.264597260728184, worksheet.flows_e66, 0.001); end
  def test_flows_f66; assert_in_epsilon(11.49384942313591, worksheet.flows_f66, 0.001); end
  def test_flows_g66; assert_in_epsilon(7.696052860208277, worksheet.flows_g66, 0.001); end
  def test_flows_h66; assert_in_epsilon(11.23366984313831, worksheet.flows_h66, 0.001); end
  def test_flows_i66; assert_in_epsilon(13.566166029573115, worksheet.flows_i66, 0.001); end
  def test_flows_j66; assert_in_epsilon(14.767029102831447, worksheet.flows_j66, 0.001); end
  def test_flows_k66; assert_in_epsilon(14.916565881490762, worksheet.flows_k66, 0.001); end
  def test_flows_l66; assert_in_epsilon(14.11462989185199, worksheet.flows_l66, 0.001); end
  def test_flows_m66; assert_in_epsilon(12.43911612441282, worksheet.flows_m66, 0.001); end
  def test_flows_n66; assert_in_epsilon(9.942777248949678, worksheet.flows_n66, 0.001); end
  def test_flows_c67; assert_equal("Liquid", worksheet.flows_c67); end
  def test_flows_d67; assert_equal("Heating and cooling - homes", worksheet.flows_d67); end
  def test_flows_e67; assert_in_epsilon(12.794020223539713, worksheet.flows_e67, 0.001); end
  def test_flows_f67; assert_in_epsilon(10.308916492915714, worksheet.flows_f67, 0.001); end
  def test_flows_g67; assert_in_epsilon(6.902645348846599, worksheet.flows_g67, 0.001); end
  def test_flows_h67; assert_in_epsilon(5.149015612998369, worksheet.flows_h67, 0.001); end
  def test_flows_i67; assert_in_epsilon(3.69128332718419, worksheet.flows_i67, 0.001); end
  def test_flows_j67; assert_in_epsilon(2.496367910550519, worksheet.flows_j67, 0.001); end
  def test_flows_k67; assert_in_epsilon(1.5459024001243729, worksheet.flows_k67, 0.001); end
  def test_flows_l67; assert_in_delta(0.8246219104594927, worksheet.flows_l67, 0.001); end
  def test_flows_m67; assert_in_delta(0.31476572831152216, worksheet.flows_m67, 0.001); end
  def test_flows_n67; assert_in_delta(0, (worksheet.flows_n67||0), 0.001); end
  def test_flows_c68; assert_equal("Gas", worksheet.flows_c68); end
  def test_flows_d68; assert_equal("Heating and cooling - homes", worksheet.flows_d68); end
  def test_flows_e68; assert_in_epsilon(324.6552003579533, worksheet.flows_e68, 0.001); end
  def test_flows_f68; assert_in_epsilon(310.2020419273092, worksheet.flows_f68, 0.001); end
  def test_flows_g68; assert_in_epsilon(274.1685400513792, worksheet.flows_g68, 0.001); end
  def test_flows_h68; assert_in_epsilon(204.51551861249953, worksheet.flows_h68, 0.001); end
  def test_flows_i68; assert_in_epsilon(146.6153495629314, worksheet.flows_i68, 0.001); end
  def test_flows_j68; assert_in_epsilon(99.15409395632827, worksheet.flows_j68, 0.001); end
  def test_flows_k68; assert_in_epsilon(61.402228085619946, worksheet.flows_k68, 0.001); end
  def test_flows_l68; assert_in_epsilon(32.75344072585682, worksheet.flows_l68, 0.001); end
  def test_flows_m68; assert_in_epsilon(12.502288011044833, worksheet.flows_m68, 0.001); end
  def test_flows_n68; assert_in_delta(0, (worksheet.flows_n68||0), 0.001); end
  def test_flows_c69; assert_equal("Electricity grid", worksheet.flows_c69); end
  def test_flows_d69; assert_equal("Heating and cooling - commercial", worksheet.flows_d69); end
  def test_flows_e69; assert_in_epsilon(28.551697890247862, worksheet.flows_e69, 0.001); end
  def test_flows_f69; assert_in_epsilon(27.67598233502796, worksheet.flows_f69, 0.001); end
  def test_flows_g69; assert_in_epsilon(25.622593678781335, worksheet.flows_g69, 0.001); end
  def test_flows_h69; assert_in_epsilon(26.070919424435566, worksheet.flows_h69, 0.001); end
  def test_flows_i69; assert_in_epsilon(26.645959007913262, worksheet.flows_i69, 0.001); end
  def test_flows_j69; assert_in_epsilon(27.349752170583066, worksheet.flows_j69, 0.001); end
  def test_flows_k69; assert_in_epsilon(28.18576294225938, worksheet.flows_k69, 0.001); end
  def test_flows_l69; assert_in_epsilon(29.158883159556222, worksheet.flows_l69, 0.001); end
  def test_flows_m69; assert_in_epsilon(30.275450308029814, worksheet.flows_m69, 0.001); end
  def test_flows_n69; assert_in_epsilon(31.54327949039369, worksheet.flows_n69, 0.001); end
  def test_flows_c70; assert_equal("Solid", worksheet.flows_c70); end
  def test_flows_d70; assert_equal("Heating and cooling - commercial", worksheet.flows_d70); end
  def test_flows_e70; assert_in_delta(0, (worksheet.flows_e70||0), 0.001); end
  def test_flows_f70; assert_in_delta(0, (worksheet.flows_f70||0), 0.001); end
  def test_flows_g70; assert_in_delta(0, (worksheet.flows_g70||0), 0.001); end
  def test_flows_h70; assert_in_delta(0, (worksheet.flows_h70||0), 0.001); end
  def test_flows_i70; assert_in_delta(0, (worksheet.flows_i70||0), 0.001); end
  def test_flows_j70; assert_in_delta(0, (worksheet.flows_j70||0), 0.001); end
  def test_flows_k70; assert_in_delta(0, (worksheet.flows_k70||0), 0.001); end
  def test_flows_l70; assert_in_delta(0, (worksheet.flows_l70||0), 0.001); end
  def test_flows_m70; assert_in_delta(0, (worksheet.flows_m70||0), 0.001); end
  def test_flows_n70; assert_in_delta(0, (worksheet.flows_n70||0), 0.001); end
  def test_flows_c71; assert_equal("Liquid", worksheet.flows_c71); end
  def test_flows_d71; assert_equal("Heating and cooling - commercial", worksheet.flows_d71); end
  def test_flows_e71; assert_in_epsilon(9.080594910929866, worksheet.flows_e71, 0.001); end
  def test_flows_f71; assert_in_epsilon(8.909441053262125, worksheet.flows_f71, 0.001); end
  def test_flows_g71; assert_in_epsilon(8.214220834308549, worksheet.flows_g71, 0.001); end
  def test_flows_h71; assert_in_epsilon(6.848792699594636, worksheet.flows_h71, 0.001); end
  def test_flows_i71; assert_in_epsilon(5.565221332979472, worksheet.flows_i71, 0.001); end
  def test_flows_j71; assert_in_epsilon(4.352419014588807, worksheet.flows_j71, 0.001); end
  def test_flows_k71; assert_in_epsilon(3.199718843817366, worksheet.flows_k71, 0.001); end
  def test_flows_l71; assert_in_epsilon(2.096784703485458, worksheet.flows_l71, 0.001); end
  def test_flows_m71; assert_in_epsilon(1.0335236429739016, worksheet.flows_m71, 0.001); end
  def test_flows_n71; assert_in_delta(0, (worksheet.flows_n71||0), 0.001); end
  def test_flows_c72; assert_equal("Gas", worksheet.flows_c72); end
  def test_flows_d72; assert_equal("Heating and cooling - commercial", worksheet.flows_d72); end
  def test_flows_e72; assert_in_epsilon(78.26235982624942, worksheet.flows_e72, 0.001); end
  def test_flows_f72; assert_in_epsilon(76.78724669480462, worksheet.flows_f72, 0.001); end
  def test_flows_g72; assert_in_epsilon(74.9428879863531, worksheet.flows_g72, 0.001); end
  def test_flows_h72; assert_in_epsilon(62.49813821201373, worksheet.flows_h72, 0.001); end
  def test_flows_i72; assert_in_epsilon(50.79957529629567, worksheet.flows_i72, 0.001); end
  def test_flows_j72; assert_in_epsilon(39.74615702410077, worksheet.flows_j72, 0.001); end
  def test_flows_k72; assert_in_epsilon(29.24067722811602, worksheet.flows_k72, 0.001); end
  def test_flows_l72; assert_in_epsilon(19.188945321768852, worksheet.flows_l72, 0.001); end
  def test_flows_m72; assert_in_epsilon(9.498987882353585, worksheet.flows_m72, 0.001); end
  def test_flows_n72; assert_in_delta(0.08026608473685735, worksheet.flows_n72, 0.001); end
  def test_flows_c73; assert_equal("Electricity grid", worksheet.flows_c73); end
  def test_flows_d73; assert_equal("Lighting & appliances - homes", worksheet.flows_d73); end
  def test_flows_e73; assert_in_epsilon(86.77241318670144, worksheet.flows_e73, 0.001); end
  def test_flows_f73; assert_in_epsilon(68.60632289887154, worksheet.flows_f73, 0.001); end
  def test_flows_g73; assert_in_epsilon(63.34611117132493, worksheet.flows_g73, 0.001); end
  def test_flows_h73; assert_in_epsilon(58.94833160938116, worksheet.flows_h73, 0.001); end
  def test_flows_i73; assert_in_epsilon(55.33496908712056, worksheet.flows_i73, 0.001); end
  def test_flows_j73; assert_in_epsilon(52.27836250880297, worksheet.flows_j73, 0.001); end
  def test_flows_k73; assert_in_epsilon(49.12775427531447, worksheet.flows_k73, 0.001); end
  def test_flows_l73; assert_in_epsilon(46.218326067678426, worksheet.flows_l73, 0.001); end
  def test_flows_m73; assert_in_epsilon(43.65507420591371, worksheet.flows_m73, 0.001); end
  def test_flows_n73; assert_in_epsilon(41.408506920998974, worksheet.flows_n73, 0.001); end
  def test_flows_c74; assert_equal("Gas", worksheet.flows_c74); end
  def test_flows_d74; assert_equal("Lighting & appliances - homes", worksheet.flows_d74); end
  def test_flows_e74; assert_in_epsilon(8.019888051023099, worksheet.flows_e74, 0.001); end
  def test_flows_f74; assert_in_epsilon(7.860208196102438, worksheet.flows_f74, 0.001); end
  def test_flows_g74; assert_in_epsilon(7.591737651258967, worksheet.flows_g74, 0.001); end
  def test_flows_h74; assert_in_epsilon(7.355986933086322, worksheet.flows_h74, 0.001); end
  def test_flows_i74; assert_in_epsilon(7.157135302033003, worksheet.flows_i74, 0.001); end
  def test_flows_j74; assert_in_epsilon(6.977513670316239, worksheet.flows_j74, 0.001); end
  def test_flows_k74; assert_in_epsilon(6.730399214705635, worksheet.flows_k74, 0.001); end
  def test_flows_l74; assert_in_epsilon(6.464472245815158, worksheet.flows_l74, 0.001); end
  def test_flows_m74; assert_in_epsilon(6.200319258923932, worksheet.flows_m74, 0.001); end
  def test_flows_n74; assert_in_epsilon(5.939165783614253, worksheet.flows_n74, 0.001); end
  def test_flows_c75; assert_equal("Electricity grid", worksheet.flows_c75); end
  def test_flows_d75; assert_equal("Lighting & appliances - commercial", worksheet.flows_d75); end
  def test_flows_e75; assert_in_epsilon(72.6348790796996, worksheet.flows_e75, 0.001); end
  def test_flows_f75; assert_in_epsilon(72.40051137801733, worksheet.flows_f75, 0.001); end
  def test_flows_g75; assert_in_epsilon(69.40555995124195, worksheet.flows_g75, 0.001); end
  def test_flows_h75; assert_in_epsilon(66.82338578202129, worksheet.flows_h75, 0.001); end
  def test_flows_i75; assert_in_epsilon(64.6151830492934, worksheet.flows_i75, 0.001); end
  def test_flows_j75; assert_in_epsilon(62.7467333098353, worksheet.flows_j75, 0.001); end
  def test_flows_k75; assert_in_epsilon(61.187909360380345, worksheet.flows_k75, 0.001); end
  def test_flows_l75; assert_in_epsilon(59.91223683079552, worksheet.flows_l75, 0.001); end
  def test_flows_m75; assert_in_epsilon(58.89650672260337, worksheet.flows_m75, 0.001); end
  def test_flows_n75; assert_in_epsilon(58.12043293759403, worksheet.flows_n75, 0.001); end
  def test_flows_c76; assert_equal("Gas", worksheet.flows_c76); end
  def test_flows_d76; assert_equal("Lighting & appliances - commercial", worksheet.flows_d76); end
  def test_flows_e76; assert_in_epsilon(8.985416804102144, worksheet.flows_e76, 0.001); end
  def test_flows_f76; assert_in_epsilon(8.30008379511199, worksheet.flows_f76, 0.001); end
  def test_flows_g76; assert_in_epsilon(7.012196838700215, worksheet.flows_g76, 0.001); end
  def test_flows_h76; assert_in_epsilon(5.803244623386738, worksheet.flows_h76, 0.001); end
  def test_flows_i76; assert_in_epsilon(4.66931529239573, worksheet.flows_i76, 0.001); end
  def test_flows_j76; assert_in_epsilon(3.606672895273148, worksheet.flows_j76, 0.001); end
  def test_flows_k76; assert_in_epsilon(2.611749908496183, worksheet.flows_k76, 0.001); end
  def test_flows_l76; assert_in_epsilon(1.6811400627171766, worksheet.flows_l76, 0.001); end
  def test_flows_m76; assert_in_delta(0.8115914643891077, worksheet.flows_m76, 0.001); end
  def test_flows_n76; assert_in_delta(0, (worksheet.flows_n76||0), 0.001); end
  def test_flows_c77; assert_equal("Electricity grid", worksheet.flows_c77); end
  def test_flows_d77; assert_equal("Industry", worksheet.flows_d77); end
  def test_flows_e77; assert_in_epsilon(122.78056381550303, worksheet.flows_e77, 0.001); end
  def test_flows_f77; assert_in_epsilon(128.03316041659025, worksheet.flows_f77, 0.001); end
  def test_flows_g77; assert_in_epsilon(136.51282817721147, worksheet.flows_g77, 0.001); end
  def test_flows_h77; assert_in_epsilon(144.2985603490017, worksheet.flows_h77, 0.001); end
  def test_flows_i77; assert_in_epsilon(151.51527292510877, worksheet.flows_i77, 0.001); end
  def test_flows_j77; assert_in_epsilon(157.70214697821498, worksheet.flows_j77, 0.001); end
  def test_flows_k77; assert_in_epsilon(163.90872303569807, worksheet.flows_k77, 0.001); end
  def test_flows_l77; assert_in_epsilon(177.68844482224443, worksheet.flows_l77, 0.001); end
  def test_flows_m77; assert_in_epsilon(190.52436284021965, worksheet.flows_m77, 0.001); end
  def test_flows_n77; assert_in_epsilon(202.4915257756853, worksheet.flows_n77, 0.001); end
  def test_flows_c78; assert_equal("Solid", worksheet.flows_c78); end
  def test_flows_d78; assert_equal("Industry", worksheet.flows_d78); end
  def test_flows_e78; assert_in_epsilon(54.597961583125404, worksheet.flows_e78, 0.001); end
  def test_flows_f78; assert_in_epsilon(52.13384793943286, worksheet.flows_f78, 0.001); end
  def test_flows_g78; assert_in_epsilon(48.24725714250683, worksheet.flows_g78, 0.001); end
  def test_flows_h78; assert_in_epsilon(44.61900216260067, worksheet.flows_h78, 0.001); end
  def test_flows_i78; assert_in_epsilon(41.22822205390206, worksheet.flows_i78, 0.001); end
  def test_flows_j78; assert_in_epsilon(38.032912411681515, worksheet.flows_j78, 0.001); end
  def test_flows_k78; assert_in_epsilon(35.061685871872236, worksheet.flows_k78, 0.001); end
  def test_flows_l78; assert_in_epsilon(32.27573580859457, worksheet.flows_l78, 0.001); end
  def test_flows_m78; assert_in_epsilon(29.6606246005017, worksheet.flows_m78, 0.001); end
  def test_flows_n78; assert_in_epsilon(27.203178325346226, worksheet.flows_n78, 0.001); end
  def test_flows_c79; assert_equal("Liquid", worksheet.flows_c79); end
  def test_flows_d79; assert_equal("Industry", worksheet.flows_d79); end
  def test_flows_e79; assert_in_epsilon(137.88972002131388, worksheet.flows_e79, 0.001); end
  def test_flows_f79; assert_in_epsilon(131.52786819582624, worksheet.flows_f79, 0.001); end
  def test_flows_g79; assert_in_epsilon(123.86667785474494, worksheet.flows_g79, 0.001); end
  def test_flows_h79; assert_in_epsilon(116.71342039509662, worksheet.flows_h79, 0.001); end
  def test_flows_i79; assert_in_epsilon(110.41464487330897, worksheet.flows_i79, 0.001); end
  def test_flows_j79; assert_in_epsilon(104.84313364843544, worksheet.flows_j79, 0.001); end
  def test_flows_k79; assert_in_epsilon(99.87431308571709, worksheet.flows_k79, 0.001); end
  def test_flows_l79; assert_in_epsilon(95.40884286418405, worksheet.flows_l79, 0.001); end
  def test_flows_m79; assert_in_epsilon(91.36715763963576, worksheet.flows_m79, 0.001); end
  def test_flows_n79; assert_in_epsilon(87.68522154612481, worksheet.flows_n79, 0.001); end
  def test_flows_c80; assert_equal("Gas", worksheet.flows_c80); end
  def test_flows_d80; assert_equal("Industry", worksheet.flows_d80); end
  def test_flows_e80; assert_in_epsilon(216.87688137738803, worksheet.flows_e80, 0.001); end
  def test_flows_f80; assert_in_epsilon(195.85072830247464, worksheet.flows_f80, 0.001); end
  def test_flows_g80; assert_in_epsilon(170.57023966636663, worksheet.flows_g80, 0.001); end
  def test_flows_h80; assert_in_epsilon(147.02445415793585, worksheet.flows_h80, 0.001); end
  def test_flows_i80; assert_in_epsilon(126.51703796712054, worksheet.flows_i80, 0.001); end
  def test_flows_j80; assert_in_epsilon(108.53455259757338, worksheet.flows_j80, 0.001); end
  def test_flows_k80; assert_in_epsilon(92.71343420849803, worksheet.flows_k80, 0.001); end
  def test_flows_l80; assert_in_epsilon(70.62134315033842, worksheet.flows_l80, 0.001); end
  def test_flows_m80; assert_in_epsilon(50.519901606171196, worksheet.flows_m80, 0.001); end
  def test_flows_n80; assert_in_epsilon(32.134049272176156, worksheet.flows_n80, 0.001); end
  def test_flows_c81; assert_equal("Electricity grid", worksheet.flows_c81); end
  def test_flows_d81; assert_equal("Agriculture", worksheet.flows_d81); end
  def test_flows_e81; assert_in_epsilon(4.172844, worksheet.flows_e81, 0.001); end
  def test_flows_f81; assert_in_epsilon(4.257578873526973, worksheet.flows_f81, 0.001); end
  def test_flows_g81; assert_in_epsilon(4.30803595634908, worksheet.flows_g81, 0.001); end
  def test_flows_h81; assert_in_epsilon(4.3587080303481045, worksheet.flows_h81, 0.001); end
  def test_flows_i81; assert_in_epsilon(4.40959247768784, worksheet.flows_i81, 0.001); end
  def test_flows_j81; assert_in_epsilon(4.540038760993973, worksheet.flows_j81, 0.001); end
  def test_flows_k81; assert_in_epsilon(4.659453575048139, worksheet.flows_k81, 0.001); end
  def test_flows_l81; assert_in_epsilon(4.7790730986427805, worksheet.flows_l81, 0.001); end
  def test_flows_m81; assert_in_epsilon(4.898894839135851, worksheet.flows_m81, 0.001); end
  def test_flows_n81; assert_in_epsilon(5.018916334236913, worksheet.flows_n81, 0.001); end
  def test_flows_c82; assert_equal("Solid", worksheet.flows_c82); end
  def test_flows_d82; assert_equal("Agriculture", worksheet.flows_d82); end
  def test_flows_e82; assert_in_delta(0.8345688, worksheet.flows_e82, 0.001); end
  def test_flows_f82; assert_in_delta(0.8515157747053945, worksheet.flows_f82, 0.001); end
  def test_flows_g82; assert_in_delta(0.8616071912698161, worksheet.flows_g82, 0.001); end
  def test_flows_h82; assert_in_delta(0.8717416060696209, worksheet.flows_h82, 0.001); end
  def test_flows_i82; assert_in_delta(0.8819184955375681, worksheet.flows_i82, 0.001); end
  def test_flows_j82; assert_in_delta(0.9080077521987946, worksheet.flows_j82, 0.001); end
  def test_flows_k82; assert_in_delta(0.9318907150096277, worksheet.flows_k82, 0.001); end
  def test_flows_l82; assert_in_delta(0.9558146197285561, worksheet.flows_l82, 0.001); end
  def test_flows_m82; assert_in_delta(0.9797789678271701, worksheet.flows_m82, 0.001); end
  def test_flows_n82; assert_in_epsilon(1.0037832668473825, worksheet.flows_n82, 0.001); end
  def test_flows_c83; assert_equal("Liquid", worksheet.flows_c83); end
  def test_flows_d83; assert_equal("Agriculture", worksheet.flows_d83); end
  def test_flows_e83; assert_in_epsilon(3.4425963, worksheet.flows_e83, 0.001); end
  def test_flows_f83; assert_in_epsilon(3.5125025706597524, worksheet.flows_f83, 0.001); end
  def test_flows_g83; assert_in_epsilon(3.5541296639879913, worksheet.flows_g83, 0.001); end
  def test_flows_h83; assert_in_epsilon(3.5959341250371866, worksheet.flows_h83, 0.001); end
  def test_flows_i83; assert_in_epsilon(3.6379137940924684, worksheet.flows_i83, 0.001); end
  def test_flows_j83; assert_in_epsilon(3.745531977820028, worksheet.flows_j83, 0.001); end
  def test_flows_k83; assert_in_epsilon(3.8440491994147146, worksheet.flows_k83, 0.001); end
  def test_flows_l83; assert_in_epsilon(3.942735306380294, worksheet.flows_l83, 0.001); end
  def test_flows_m83; assert_in_epsilon(4.041588242287077, worksheet.flows_m83, 0.001); end
  def test_flows_n83; assert_in_epsilon(4.140605975745453, worksheet.flows_n83, 0.001); end
  def test_flows_c84; assert_equal("Gas", worksheet.flows_c84); end
  def test_flows_d84; assert_equal("Agriculture", worksheet.flows_d84); end
  def test_flows_e84; assert_in_epsilon(1.9821009, worksheet.flows_e84, 0.001); end
  def test_flows_f84; assert_in_epsilon(2.022349964925312, worksheet.flows_f84, 0.001); end
  def test_flows_g84; assert_in_epsilon(2.046317079265813, worksheet.flows_g84, 0.001); end
  def test_flows_h84; assert_in_epsilon(2.07038631441535, worksheet.flows_h84, 0.001); end
  def test_flows_i84; assert_in_epsilon(2.094556426901724, worksheet.flows_i84, 0.001); end
  def test_flows_j84; assert_in_epsilon(2.156518411472137, worksheet.flows_j84, 0.001); end
  def test_flows_k84; assert_in_epsilon(2.213240448147866, worksheet.flows_k84, 0.001); end
  def test_flows_l84; assert_in_epsilon(2.2700597218553207, worksheet.flows_l84, 0.001); end
  def test_flows_m84; assert_in_epsilon(2.326975048589529, worksheet.flows_m84, 0.001); end
  def test_flows_n84; assert_in_epsilon(2.3839852587625336, worksheet.flows_n84, 0.001); end
  def test_flows_c85; assert_equal("Electricity grid", worksheet.flows_c85); end
  def test_flows_d85; assert_equal("Road transport", worksheet.flows_d85); end
  def test_flows_e85; assert_in_delta(0, (worksheet.flows_e85||0), 0.001); end
  def test_flows_f85; assert_in_delta(0, (worksheet.flows_f85||0), 0.001); end
  def test_flows_g85; assert_in_epsilon(1.1356716837180456, worksheet.flows_g85, 0.001); end
  def test_flows_h85; assert_in_epsilon(2.0964659848361165, worksheet.flows_h85, 0.001); end
  def test_flows_i85; assert_in_epsilon(14.379006913273095, worksheet.flows_i85, 0.001); end
  def test_flows_j85; assert_in_epsilon(23.793635785104634, worksheet.flows_j85, 0.001); end
  def test_flows_k85; assert_in_epsilon(23.290163395091877, worksheet.flows_k85, 0.001); end
  def test_flows_l85; assert_in_epsilon(22.717768479548184, worksheet.flows_l85, 0.001); end
  def test_flows_m85; assert_in_epsilon(24.15084295410362, worksheet.flows_m85, 0.001); end
  def test_flows_n85; assert_in_epsilon(25.283688304629347, worksheet.flows_n85, 0.001); end
  def test_flows_c86; assert_equal("Liquid", worksheet.flows_c86); end
  def test_flows_d86; assert_equal("Road transport", worksheet.flows_d86); end
  def test_flows_e86; assert_in_epsilon(490.85404977847907, worksheet.flows_e86, 0.001); end
  def test_flows_f86; assert_in_epsilon(444.05739657200286, worksheet.flows_f86, 0.001); end
  def test_flows_g86; assert_in_epsilon(390.7657229114268, worksheet.flows_g86, 0.001); end
  def test_flows_h86; assert_in_epsilon(324.53788558975134, worksheet.flows_h86, 0.001); end
  def test_flows_i86; assert_in_epsilon(221.42674494305987, worksheet.flows_i86, 0.001); end
  def test_flows_j86; assert_in_epsilon(139.14526444185844, worksheet.flows_j86, 0.001); end
  def test_flows_k86; assert_in_epsilon(120.20962487215897, worksheet.flows_k86, 0.001); end
  def test_flows_l86; assert_in_epsilon(103.09623336444903, worksheet.flows_l86, 0.001); end
  def test_flows_m86; assert_in_epsilon(82.58429829484191, worksheet.flows_m86, 0.001); end
  def test_flows_n86; assert_in_epsilon(65.06996428783847, worksheet.flows_n86, 0.001); end
  def test_flows_c87; assert_equal("Electricity grid", worksheet.flows_c87); end
  def test_flows_d87; assert_equal("Rail transport", worksheet.flows_d87); end
  def test_flows_e87; assert_in_epsilon(8.681592457134547, worksheet.flows_e87, 0.001); end
  def test_flows_f87; assert_in_epsilon(8.446542694773242, worksheet.flows_f87, 0.001); end
  def test_flows_g87; assert_in_epsilon(8.740316157605896, worksheet.flows_g87, 0.001); end
  def test_flows_h87; assert_in_epsilon(9.4498541468281, worksheet.flows_h87, 0.001); end
  def test_flows_i87; assert_in_epsilon(9.949116324153792, worksheet.flows_i87, 0.001); end
  def test_flows_j87; assert_in_epsilon(10.61497561817753, worksheet.flows_j87, 0.001); end
  def test_flows_k87; assert_in_epsilon(11.129901733606655, worksheet.flows_k87, 0.001); end
  def test_flows_l87; assert_in_epsilon(11.598793227003435, worksheet.flows_l87, 0.001); end
  def test_flows_m87; assert_in_epsilon(12.01875724111863, worksheet.flows_m87, 0.001); end
  def test_flows_n87; assert_in_epsilon(12.383241364759705, worksheet.flows_n87, 0.001); end
  def test_flows_c88; assert_equal("Liquid", worksheet.flows_c88); end
  def test_flows_d88; assert_equal("Rail transport", worksheet.flows_d88); end
  def test_flows_e88; assert_in_epsilon(7.1708543458911045, worksheet.flows_e88, 0.001); end
  def test_flows_f88; assert_in_epsilon(10.189374857484774, worksheet.flows_f88, 0.001); end
  def test_flows_g88; assert_in_epsilon(10.996859249377051, worksheet.flows_g88, 0.001); end
  def test_flows_h88; assert_in_epsilon(10.101674863793152, worksheet.flows_h88, 0.001); end
  def test_flows_i88; assert_in_epsilon(9.596116641885052, worksheet.flows_i88, 0.001); end
  def test_flows_j88; assert_in_epsilon(8.209879756443936, worksheet.flows_j88, 0.001); end
  def test_flows_k88; assert_in_epsilon(6.97520425929125, worksheet.flows_k88, 0.001); end
  def test_flows_l88; assert_in_epsilon(5.623604152219279, worksheet.flows_l88, 0.001); end
  def test_flows_m88; assert_in_epsilon(4.2139686154265, worksheet.flows_m88, 0.001); end
  def test_flows_n88; assert_in_epsilon(2.7977241941276887, worksheet.flows_n88, 0.001); end
  def test_flows_c89; assert_equal("Liquid", worksheet.flows_c89); end
  def test_flows_d89; assert_equal("Domestic aviation", worksheet.flows_d89); end
  def test_flows_e89; assert_in_epsilon(9.019834608709552, worksheet.flows_e89, 0.001); end
  def test_flows_f89; assert_in_epsilon(8.4601255326889, worksheet.flows_f89, 0.001); end
  def test_flows_g89; assert_in_epsilon(7.569213924506803, worksheet.flows_g89, 0.001); end
  def test_flows_h89; assert_in_epsilon(6.730421134036203, worksheet.flows_h89, 0.001); end
  def test_flows_i89; assert_in_epsilon(5.9329174348258995, worksheet.flows_i89, 0.001); end
  def test_flows_j89; assert_in_epsilon(5.168912153603201, worksheet.flows_j89, 0.001); end
  def test_flows_k89; assert_in_epsilon(4.44373056794585, worksheet.flows_k89, 0.001); end
  def test_flows_l89; assert_in_epsilon(3.7683975653289035, worksheet.flows_l89, 0.001); end
  def test_flows_m89; assert_in_epsilon(3.146702306458619, worksheet.flows_m89, 0.001); end
  def test_flows_n89; assert_in_epsilon(2.577874210646388, worksheet.flows_n89, 0.001); end
  def test_flows_c90; assert_equal("Liquid", worksheet.flows_c90); end
  def test_flows_d90; assert_equal("National navigation", worksheet.flows_d90); end
  def test_flows_e90; assert_in_epsilon(18.817339999999998, worksheet.flows_e90, 0.001); end
  def test_flows_f90; assert_in_epsilon(27.144937170003814, worksheet.flows_f90, 0.001); end
  def test_flows_g90; assert_in_epsilon(27.32305556984198, worksheet.flows_g90, 0.001); end
  def test_flows_h90; assert_in_epsilon(27.858606532706467, worksheet.flows_h90, 0.001); end
  def test_flows_i90; assert_in_epsilon(28.582641909901167, worksheet.flows_i90, 0.001); end
  def test_flows_j90; assert_in_epsilon(29.635401755478146, worksheet.flows_j90, 0.001); end
  def test_flows_k90; assert_in_epsilon(30.699187307229483, worksheet.flows_k90, 0.001); end
  def test_flows_l90; assert_in_epsilon(31.774954722510824, worksheet.flows_l90, 0.001); end
  def test_flows_m90; assert_in_epsilon(32.86371234516199, worksheet.flows_m90, 0.001); end
  def test_flows_n90; assert_in_epsilon(33.96652500925593, worksheet.flows_n90, 0.001); end
  def test_flows_c91; assert_equal("Liquid", worksheet.flows_c91); end
  def test_flows_d91; assert_equal("International aviation", worksheet.flows_d91); end
  def test_flows_e91; assert_in_epsilon(152.8, worksheet.flows_e91, 0.001); end
  def test_flows_f91; assert_in_epsilon(145.27906976744188, worksheet.flows_f91, 0.001); end
  def test_flows_g91; assert_in_epsilon(132.74418604651166, worksheet.flows_g91, 0.001); end
  def test_flows_h91; assert_in_epsilon(120.20930232558142, worksheet.flows_h91, 0.001); end
  def test_flows_i91; assert_in_epsilon(107.67441860465118, worksheet.flows_i91, 0.001); end
  def test_flows_j91; assert_in_epsilon(95.13953488372094, worksheet.flows_j91, 0.001); end
  def test_flows_k91; assert_in_epsilon(82.6046511627907, worksheet.flows_k91, 0.001); end
  def test_flows_l91; assert_in_epsilon(70.06976744186046, worksheet.flows_l91, 0.001); end
  def test_flows_m91; assert_in_epsilon(57.534883720930225, worksheet.flows_m91, 0.001); end
  def test_flows_n91; assert_in_epsilon(45, worksheet.flows_n91, 0.001); end
  def test_flows_c92; assert_equal("Liquid", worksheet.flows_c92); end
  def test_flows_d92; assert_equal("International shipping", worksheet.flows_d92); end
  def test_flows_e92; assert_in_epsilon(54.1581570872572, worksheet.flows_e92, 0.001); end
  def test_flows_f92; assert_in_epsilon(57.28499215184298, worksheet.flows_f92, 0.001); end
  def test_flows_g92; assert_in_epsilon(52.37642070782899, worksheet.flows_g92, 0.001); end
  def test_flows_h92; assert_in_epsilon(42.384644676983896, worksheet.flows_h92, 0.001); end
  def test_flows_i92; assert_in_epsilon(39.88547771236235, worksheet.flows_i92, 0.001); end
  def test_flows_j92; assert_in_epsilon(37.53367155646424, worksheet.flows_j92, 0.001); end
  def test_flows_k92; assert_in_epsilon(35.32053723081991, worksheet.flows_k92, 0.001); end
  def test_flows_l92; assert_in_epsilon(33.23789809363531, worksheet.flows_l92, 0.001); end
  def test_flows_m92; assert_in_epsilon(31.278059630386895, worksheet.flows_m92, 0.001); end
  def test_flows_n92; assert_in_epsilon(29.43378102568326, worksheet.flows_n92, 0.001); end
  def test_flows_c93; assert_equal("Electricity grid", worksheet.flows_c93); end
  def test_flows_d93; assert_equal("Geosequestration", worksheet.flows_d93); end
  def test_flows_e93; assert_in_delta(0, (worksheet.flows_e93||0), 0.001); end
  def test_flows_f93; assert_in_delta(0, (worksheet.flows_f93||0), 0.001); end
  def test_flows_g93; assert_in_delta(0, (worksheet.flows_g93||0), 0.001); end
  def test_flows_h93; assert_in_delta(0, (worksheet.flows_h93||0), 0.001); end
  def test_flows_i93; assert_in_delta(0, (worksheet.flows_i93||0), 0.001); end
  def test_flows_j93; assert_in_delta(0, (worksheet.flows_j93||0), 0.001); end
  def test_flows_k93; assert_in_delta(0, (worksheet.flows_k93||0), 0.001); end
  def test_flows_l93; assert_in_delta(0, (worksheet.flows_l93||0), 0.001); end
  def test_flows_m93; assert_in_delta(0, (worksheet.flows_m93||0), 0.001); end
  def test_flows_n93; assert_in_delta(0, (worksheet.flows_n93||0), 0.001); end
  def test_flows_c94; assert_equal("Gas", worksheet.flows_c94); end
  def test_flows_d94; assert_equal("Losses", worksheet.flows_d94); end
  def test_flows_e94; assert_in_epsilon(11.149962569548768, worksheet.flows_e94, 0.001); end
  def test_flows_f94; assert_in_epsilon(10.174826228627898, worksheet.flows_f94, 0.001); end
  def test_flows_g94; assert_in_epsilon(8.681120246513807, worksheet.flows_g94, 0.001); end
  def test_flows_h94; assert_in_epsilon(6.446655450496468, worksheet.flows_h94, 0.001); end
  def test_flows_i94; assert_in_epsilon(4.41521522024591, worksheet.flows_i94, 0.001); end
  def test_flows_j94; assert_in_epsilon(2.7885418409442186, worksheet.flows_j94, 0.001); end
  def test_flows_k94; assert_in_epsilon(2.0277412328527276, worksheet.flows_k94, 0.001); end
  def test_flows_l94; assert_in_epsilon(1.2799727758261745, worksheet.flows_l94, 0.001); end
  def test_flows_m94; assert_in_delta(0.5564749621040282, worksheet.flows_m94, 0.001); end
  def test_flows_n94; assert_in_delta(0, (worksheet.flows_n94||0), 0.001); end
  def test_costpercapita_b1; assert_equal("£/Capita/yr", worksheet.costpercapita_b1); end
  def test_costpercapita_e1; assert_equal("C1.Low", worksheet.costpercapita_e1); end
  def test_costpercapita_f1; assert_equal("Low estimate of capital costs", worksheet.costpercapita_f1); end
  def test_costpercapita_o1; assert_equal("C2.Low", worksheet.costpercapita_o1); end
  def test_costpercapita_p1; assert_equal("Low estimate of operating costs", worksheet.costpercapita_p1); end
  def test_costpercapita_y1; assert_equal("C3.Low", worksheet.costpercapita_y1); end
  def test_costpercapita_z1; assert_equal("Low estimate of fuel costs", worksheet.costpercapita_z1); end
  def test_costpercapita_ai1; assert_equal("Low estimate of total cost", worksheet.costpercapita_ai1); end
  def test_costpercapita_as1; assert_equal("Cashflow capital basis", worksheet.costpercapita_as1); end
  def test_costpercapita_av1; assert_equal("Loan", worksheet.costpercapita_av1); end
  def test_costpercapita_ay1; assert_equal("Finance cost for capital spent in that period", worksheet.costpercapita_ay1); end
  def test_costpercapita_bi1; assert_equal("Finance cost for outstanding capital", worksheet.costpercapita_bi1); end
  def test_costpercapita_bs1; assert_equal("Total cost (amortised capital)", worksheet.costpercapita_bs1); end
  def test_costpercapita_cc1; assert_equal("Amortised Capital", worksheet.costpercapita_cc1); end
  def test_costpercapita_cf1; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cf1); end
  def test_costpercapita_cp1; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cp1); end
  def test_costpercapita_a2; assert_equal("Code", worksheet.costpercapita_a2); end
  def test_costpercapita_b2; assert_equal("Description", worksheet.costpercapita_b2); end
  def test_costpercapita_c2; assert_equal("Category", worksheet.costpercapita_c2); end
  def test_costpercapita_e2; assert_equal("2010", worksheet.costpercapita_e2); end
  def test_costpercapita_f2; assert_equal("2015", worksheet.costpercapita_f2); end
  def test_costpercapita_g2; assert_equal("2020", worksheet.costpercapita_g2); end
  def test_costpercapita_h2; assert_equal("2025", worksheet.costpercapita_h2); end
  def test_costpercapita_i2; assert_equal("2030", worksheet.costpercapita_i2); end
  def test_costpercapita_j2; assert_equal("2035", worksheet.costpercapita_j2); end
  def test_costpercapita_k2; assert_equal("2040", worksheet.costpercapita_k2); end
  def test_costpercapita_l2; assert_equal("2045", worksheet.costpercapita_l2); end
  def test_costpercapita_m2; assert_equal("2050", worksheet.costpercapita_m2); end
  def test_costpercapita_o2; assert_equal("2010", worksheet.costpercapita_o2); end
  def test_costpercapita_p2; assert_equal("2015", worksheet.costpercapita_p2); end
  def test_costpercapita_q2; assert_equal("2020", worksheet.costpercapita_q2); end
  def test_costpercapita_r2; assert_equal("2025", worksheet.costpercapita_r2); end
  def test_costpercapita_s2; assert_equal("2030", worksheet.costpercapita_s2); end
  def test_costpercapita_t2; assert_equal("2035", worksheet.costpercapita_t2); end
  def test_costpercapita_u2; assert_equal("2040", worksheet.costpercapita_u2); end
  def test_costpercapita_v2; assert_equal("2045", worksheet.costpercapita_v2); end
  def test_costpercapita_w2; assert_equal("2050", worksheet.costpercapita_w2); end
  def test_costpercapita_y2; assert_equal("2010", worksheet.costpercapita_y2); end
  def test_costpercapita_z2; assert_equal("2015", worksheet.costpercapita_z2); end
  def test_costpercapita_aa2; assert_equal("2020", worksheet.costpercapita_aa2); end
  def test_costpercapita_ab2; assert_equal("2025", worksheet.costpercapita_ab2); end
  def test_costpercapita_ac2; assert_equal("2030", worksheet.costpercapita_ac2); end
  def test_costpercapita_ad2; assert_equal("2035", worksheet.costpercapita_ad2); end
  def test_costpercapita_ae2; assert_equal("2040", worksheet.costpercapita_ae2); end
  def test_costpercapita_af2; assert_equal("2045", worksheet.costpercapita_af2); end
  def test_costpercapita_ag2; assert_equal("2050", worksheet.costpercapita_ag2); end
  def test_costpercapita_ai2; assert_equal("2010", worksheet.costpercapita_ai2); end
  def test_costpercapita_aj2; assert_equal("2015", worksheet.costpercapita_aj2); end
  def test_costpercapita_ak2; assert_equal("2020", worksheet.costpercapita_ak2); end
  def test_costpercapita_al2; assert_equal("2025", worksheet.costpercapita_al2); end
  def test_costpercapita_am2; assert_equal("2030", worksheet.costpercapita_am2); end
  def test_costpercapita_an2; assert_equal("2035", worksheet.costpercapita_an2); end
  def test_costpercapita_ao2; assert_equal("2040", worksheet.costpercapita_ao2); end
  def test_costpercapita_ap2; assert_equal("2045", worksheet.costpercapita_ap2); end
  def test_costpercapita_aq2; assert_equal("2050", worksheet.costpercapita_aq2); end
  def test_costpercapita_as2; assert_equal("Mean", worksheet.costpercapita_as2); end
  def test_costpercapita_at2; assert_equal("NPV", worksheet.costpercapita_at2); end
  def test_costpercapita_av2; assert_equal("Rate", worksheet.costpercapita_av2); end
  def test_costpercapita_aw2; assert_equal("Years", worksheet.costpercapita_aw2); end
  def test_costpercapita_ay2; assert_in_epsilon(2010, worksheet.costpercapita_ay2, 0.001); end
  def test_costpercapita_az2; assert_in_epsilon(2015, worksheet.costpercapita_az2, 0.001); end
  def test_costpercapita_ba2; assert_in_epsilon(2020, worksheet.costpercapita_ba2, 0.001); end
  def test_costpercapita_bb2; assert_in_epsilon(2025, worksheet.costpercapita_bb2, 0.001); end
  def test_costpercapita_bc2; assert_in_epsilon(2030, worksheet.costpercapita_bc2, 0.001); end
  def test_costpercapita_bd2; assert_in_epsilon(2035, worksheet.costpercapita_bd2, 0.001); end
  def test_costpercapita_be2; assert_in_epsilon(2040, worksheet.costpercapita_be2, 0.001); end
  def test_costpercapita_bf2; assert_in_epsilon(2045, worksheet.costpercapita_bf2, 0.001); end
  def test_costpercapita_bg2; assert_in_epsilon(2050, worksheet.costpercapita_bg2, 0.001); end
  def test_costpercapita_bi2; assert_in_epsilon(2010, worksheet.costpercapita_bi2, 0.001); end
  def test_costpercapita_bj2; assert_in_epsilon(2015, worksheet.costpercapita_bj2, 0.001); end
  def test_costpercapita_bk2; assert_in_epsilon(2020, worksheet.costpercapita_bk2, 0.001); end
  def test_costpercapita_bl2; assert_in_epsilon(2025, worksheet.costpercapita_bl2, 0.001); end
  def test_costpercapita_bm2; assert_in_epsilon(2030, worksheet.costpercapita_bm2, 0.001); end
  def test_costpercapita_bn2; assert_in_epsilon(2035, worksheet.costpercapita_bn2, 0.001); end
  def test_costpercapita_bo2; assert_in_epsilon(2040, worksheet.costpercapita_bo2, 0.001); end
  def test_costpercapita_bp2; assert_in_epsilon(2045, worksheet.costpercapita_bp2, 0.001); end
  def test_costpercapita_bq2; assert_in_epsilon(2050, worksheet.costpercapita_bq2, 0.001); end
  def test_costpercapita_bs2; assert_equal("2010", worksheet.costpercapita_bs2); end
  def test_costpercapita_bt2; assert_equal("2015", worksheet.costpercapita_bt2); end
  def test_costpercapita_bu2; assert_equal("2020", worksheet.costpercapita_bu2); end
  def test_costpercapita_bv2; assert_equal("2025", worksheet.costpercapita_bv2); end
  def test_costpercapita_bw2; assert_equal("2030", worksheet.costpercapita_bw2); end
  def test_costpercapita_bx2; assert_equal("2035", worksheet.costpercapita_bx2); end
  def test_costpercapita_by2; assert_equal("2040", worksheet.costpercapita_by2); end
  def test_costpercapita_bz2; assert_equal("2045", worksheet.costpercapita_bz2); end
  def test_costpercapita_ca2; assert_equal("2050", worksheet.costpercapita_ca2); end
  def test_costpercapita_cc2; assert_equal("Mean", worksheet.costpercapita_cc2); end
  def test_costpercapita_cd2; assert_equal("NPV", worksheet.costpercapita_cd2); end
  def test_costpercapita_cf2; assert_equal("2010", worksheet.costpercapita_cf2); end
  def test_costpercapita_cg2; assert_equal("2015", worksheet.costpercapita_cg2); end
  def test_costpercapita_ch2; assert_equal("2020", worksheet.costpercapita_ch2); end
  def test_costpercapita_ci2; assert_equal("2025", worksheet.costpercapita_ci2); end
  def test_costpercapita_cj2; assert_equal("2030", worksheet.costpercapita_cj2); end
  def test_costpercapita_ck2; assert_equal("2035", worksheet.costpercapita_ck2); end
  def test_costpercapita_cl2; assert_equal("2040", worksheet.costpercapita_cl2); end
  def test_costpercapita_cm2; assert_equal("2045", worksheet.costpercapita_cm2); end
  def test_costpercapita_cn2; assert_equal("2050", worksheet.costpercapita_cn2); end
  def test_costpercapita_cp2; assert_equal("Mean", worksheet.costpercapita_cp2); end
  def test_costpercapita_cq2; assert_equal("NPV", worksheet.costpercapita_cq2); end
  def test_costpercapita_a3; assert_equal("I.a", worksheet.costpercapita_a3); end
  def test_costpercapita_b3; assert_equal("Conventional thermal plant", worksheet.costpercapita_b3); end
  def test_costpercapita_c3; assert_equal("Electricity", worksheet.costpercapita_c3); end
  def test_costpercapita_y3; assert_in_delta(0, (worksheet.costpercapita_y3||0), 0.001); end
  def test_costpercapita_z3; assert_in_delta(0, (worksheet.costpercapita_z3||0), 0.001); end
  def test_costpercapita_aa3; assert_in_delta(0, (worksheet.costpercapita_aa3||0), 0.001); end
  def test_costpercapita_ab3; assert_in_delta(0, (worksheet.costpercapita_ab3||0), 0.001); end
  def test_costpercapita_ac3; assert_in_delta(0, (worksheet.costpercapita_ac3||0), 0.001); end
  def test_costpercapita_ad3; assert_in_delta(0, (worksheet.costpercapita_ad3||0), 0.001); end
  def test_costpercapita_ae3; assert_in_delta(0, (worksheet.costpercapita_ae3||0), 0.001); end
  def test_costpercapita_af3; assert_in_delta(0, (worksheet.costpercapita_af3||0), 0.001); end
  def test_costpercapita_ag3; assert_in_delta(0, (worksheet.costpercapita_ag3||0), 0.001); end
  def test_costpercapita_av3; assert_in_delta(0, (worksheet.costpercapita_av3||0), 0.001); end
  def test_costpercapita_aw3; assert_in_epsilon(20, worksheet.costpercapita_aw3, 0.001); end
  def test_costpercapita_bt3; assert_in_epsilon(17.152507832694305, worksheet.costpercapita_bt3, 0.001); end
  def test_costpercapita_bu3; assert_in_epsilon(12.930674065300996, worksheet.costpercapita_bu3, 0.001); end
  def test_costpercapita_bv3; assert_in_epsilon(8.241082811914445, worksheet.costpercapita_bv3, 0.001); end
  def test_costpercapita_bw3; assert_in_delta(0.9198851142984, worksheet.costpercapita_bw3, 0.001); end
  def test_costpercapita_bx3; assert_in_delta(0, (worksheet.costpercapita_bx3||0), 0.001); end
  def test_costpercapita_by3; assert_in_delta(0, (worksheet.costpercapita_by3||0), 0.001); end
  def test_costpercapita_bz3; assert_in_delta(0, (worksheet.costpercapita_bz3||0), 0.001); end
  def test_costpercapita_ca3; assert_in_delta(0, (worksheet.costpercapita_ca3||0), 0.001); end
  def test_costpercapita_bs3; assert_in_epsilon(21.303420922916203, worksheet.costpercapita_bs3, 0.001); end
  def test_costpercapita_cd3; assert_in_epsilon(166.25380768334088, worksheet.costpercapita_cd3, 0.001); end
  def test_costpercapita_cg3; assert_in_epsilon(-1.7960374483004664, worksheet.costpercapita_cg3, 0.001); end
  def test_costpercapita_ch3; assert_in_delta(0.5790795013697237, worksheet.costpercapita_ch3, 0.001); end
  def test_costpercapita_ci3; assert_in_delta(0.56114918784979, worksheet.costpercapita_ci3, 0.001); end
  def test_costpercapita_cj3; assert_in_delta(0.5458185061278162, worksheet.costpercapita_cj3, 0.001); end
  def test_costpercapita_ck3; assert_in_delta(0, (worksheet.costpercapita_ck3||0), 0.001); end
  def test_costpercapita_cl3; assert_in_delta(0, (worksheet.costpercapita_cl3||0), 0.001); end
  def test_costpercapita_cm3; assert_in_delta(0, (worksheet.costpercapita_cm3||0), 0.001); end
  def test_costpercapita_cn3; assert_in_delta(0, (worksheet.costpercapita_cn3||0), 0.001); end
  def test_costpercapita_cf3; assert_in_delta(0, (worksheet.costpercapita_cf3||0), 0.001); end
  def test_costpercapita_cq3; assert_in_epsilon(-2.4622026941980435, worksheet.costpercapita_cq3, 0.001); end
  def test_costpercapita_aj3; assert_in_epsilon(18.94854528099477, worksheet.costpercapita_aj3, 0.001); end
  def test_costpercapita_ak3; assert_in_epsilon(12.351594563931274, worksheet.costpercapita_ak3, 0.001); end
  def test_costpercapita_al3; assert_in_epsilon(7.679933624064655, worksheet.costpercapita_al3, 0.001); end
  def test_costpercapita_am3; assert_in_delta(0.3740666081705839, worksheet.costpercapita_am3, 0.001); end
  def test_costpercapita_an3; assert_in_delta(0, (worksheet.costpercapita_an3||0), 0.001); end
  def test_costpercapita_ao3; assert_in_delta(0, (worksheet.costpercapita_ao3||0), 0.001); end
  def test_costpercapita_ap3; assert_in_delta(0, (worksheet.costpercapita_ap3||0), 0.001); end
  def test_costpercapita_aq3; assert_in_delta(0, (worksheet.costpercapita_aq3||0), 0.001); end
  def test_costpercapita_ai3; assert_in_epsilon(21.303420922916203, worksheet.costpercapita_ai3, 0.001); end
  def test_costpercapita_at3; assert_in_epsilon(168.7160103775389, worksheet.costpercapita_at3, 0.001); end
  def test_costpercapita_cr3; assert_equal("ok", worksheet.costpercapita_cr3); end
  def test_costpercapita_a4; assert_equal("I.b", worksheet.costpercapita_a4); end
  def test_costpercapita_b4; assert_equal("Combustion + CCS", worksheet.costpercapita_b4); end
  def test_costpercapita_c4; assert_equal("Electricity", worksheet.costpercapita_c4); end
  def test_costpercapita_y4; assert_in_delta(0, (worksheet.costpercapita_y4||0), 0.001); end
  def test_costpercapita_z4; assert_in_delta(0, (worksheet.costpercapita_z4||0), 0.001); end
  def test_costpercapita_aa4; assert_in_delta(0, (worksheet.costpercapita_aa4||0), 0.001); end
  def test_costpercapita_ab4; assert_in_delta(0, (worksheet.costpercapita_ab4||0), 0.001); end
  def test_costpercapita_ac4; assert_in_delta(0, (worksheet.costpercapita_ac4||0), 0.001); end
  def test_costpercapita_ad4; assert_in_delta(0, (worksheet.costpercapita_ad4||0), 0.001); end
  def test_costpercapita_ae4; assert_in_delta(0, (worksheet.costpercapita_ae4||0), 0.001); end
  def test_costpercapita_af4; assert_in_delta(0, (worksheet.costpercapita_af4||0), 0.001); end
  def test_costpercapita_ag4; assert_in_delta(0, (worksheet.costpercapita_ag4||0), 0.001); end
  def test_costpercapita_av4; assert_in_delta(0, (worksheet.costpercapita_av4||0), 0.001); end
  def test_costpercapita_aw4; assert_in_epsilon(30, worksheet.costpercapita_aw4, 0.001); end
  def test_costpercapita_bt4; assert_in_delta(0.6114742054688955, worksheet.costpercapita_bt4, 0.001); end
  def test_costpercapita_bu4; assert_in_epsilon(1.153795017851899, worksheet.costpercapita_bu4, 0.001); end
  def test_costpercapita_bv4; assert_in_epsilon(1.0737853274677764, worksheet.costpercapita_bv4, 0.001); end
  def test_costpercapita_bw4; assert_in_epsilon(1.0444493479286945, worksheet.costpercapita_bw4, 0.001); end
  def test_costpercapita_bx4; assert_in_epsilon(1.0198466167936504, worksheet.costpercapita_bx4, 0.001); end
  def test_costpercapita_by4; assert_in_delta(0.9980969739184453, worksheet.costpercapita_by4, 0.001); end
  def test_costpercapita_bz4; assert_in_delta(0.6875046683678613, worksheet.costpercapita_bz4, 0.001); end
  def test_costpercapita_ca4; assert_in_delta(0.4102124245321459, worksheet.costpercapita_ca4, 0.001); end
  def test_costpercapita_bs4; assert_in_delta(0, (worksheet.costpercapita_bs4||0), 0.001); end
  def test_costpercapita_cd4; assert_in_epsilon(18.029067700335876, worksheet.costpercapita_cd4, 0.001); end
  def test_costpercapita_cg4; assert_in_epsilon(-1.7021585974852689, worksheet.costpercapita_cg4, 0.001); end
  def test_costpercapita_ch4; assert_in_epsilon(-1.1971203084278645, worksheet.costpercapita_ch4, 0.001); end
  def test_costpercapita_ci4; assert_in_delta(0.6149195690387185, worksheet.costpercapita_ci4, 0.001); end
  def test_costpercapita_cj4; assert_in_delta(0.5981198722706115, worksheet.costpercapita_cj4, 0.001); end
  def test_costpercapita_ck4; assert_in_delta(0.5840307424978909, worksheet.costpercapita_ck4, 0.001); end
  def test_costpercapita_cl4; assert_in_delta(0.5715754772959472, worksheet.costpercapita_cl4, 0.001); end
  def test_costpercapita_cm4; assert_in_delta(0.26949139072681294, worksheet.costpercapita_cm4, 0.001); end
  def test_costpercapita_cn4; assert_in_delta(-3.203051376803319e-17, worksheet.costpercapita_cn4, 0.001); end
  def test_costpercapita_cf4; assert_in_delta(0, (worksheet.costpercapita_cf4||0), 0.001); end
  def test_costpercapita_cq4; assert_in_epsilon(-5.403026335838662, worksheet.costpercapita_cq4, 0.001); end
  def test_costpercapita_aj4; assert_in_epsilon(2.313632802954164, worksheet.costpercapita_aj4, 0.001); end
  def test_costpercapita_ak4; assert_in_epsilon(2.3509153262797637, worksheet.costpercapita_ak4, 0.001); end
  def test_costpercapita_al4; assert_in_delta(0.4588657584290579, worksheet.costpercapita_al4, 0.001); end
  def test_costpercapita_am4; assert_in_delta(0.44632947565808306, worksheet.costpercapita_am4, 0.001); end
  def test_costpercapita_an4; assert_in_delta(0.4358158742957596, worksheet.costpercapita_an4, 0.001); end
  def test_costpercapita_ao4; assert_in_delta(0.42652149662249816, worksheet.costpercapita_ao4, 0.001); end
  def test_costpercapita_ap4; assert_in_delta(0.41801327764104834, worksheet.costpercapita_ap4, 0.001); end
  def test_costpercapita_aq4; assert_in_delta(0.41021242453214596, worksheet.costpercapita_aq4, 0.001); end
  def test_costpercapita_ai4; assert_in_delta(0, (worksheet.costpercapita_ai4||0), 0.001); end
  def test_costpercapita_at4; assert_in_epsilon(23.43209403617454, worksheet.costpercapita_at4, 0.001); end
  def test_costpercapita_cr4; assert_equal("ok", worksheet.costpercapita_cr4); end
  def test_costpercapita_a5; assert_equal("II.a", worksheet.costpercapita_a5); end
  def test_costpercapita_b5; assert_equal("Nuclear power", worksheet.costpercapita_b5); end
  def test_costpercapita_c5; assert_equal("Electricity", worksheet.costpercapita_c5); end
  def test_costpercapita_av5; assert_in_delta(0, (worksheet.costpercapita_av5||0), 0.001); end
  def test_costpercapita_aw5; assert_in_epsilon(30, worksheet.costpercapita_aw5, 0.001); end
  def test_costpercapita_bt5; assert_in_epsilon(3.0003247343913517, worksheet.costpercapita_bt5, 0.001); end
  def test_costpercapita_bu5; assert_in_epsilon(1.5578387932380309, worksheet.costpercapita_bu5, 0.001); end
  def test_costpercapita_bv5; assert_in_delta(0.5032008970320883, worksheet.costpercapita_bv5, 0.001); end
  def test_costpercapita_bw5; assert_in_delta(0.4894533714869285, worksheet.costpercapita_bw5, 0.001); end
  def test_costpercapita_bx5; assert_in_delta(0, (worksheet.costpercapita_bx5||0), 0.001); end
  def test_costpercapita_by5; assert_in_delta(0, (worksheet.costpercapita_by5||0), 0.001); end
  def test_costpercapita_bz5; assert_in_delta(0, (worksheet.costpercapita_bz5||0), 0.001); end
  def test_costpercapita_ca5; assert_in_delta(0, (worksheet.costpercapita_ca5||0), 0.001); end
  def test_costpercapita_bs5; assert_in_epsilon(3.9920808013308497, worksheet.costpercapita_bs5, 0.001); end
  def test_costpercapita_cd5; assert_in_epsilon(24.876643844952078, worksheet.costpercapita_cd5, 0.001); end
  def test_costpercapita_cg5; assert_in_delta(0, (worksheet.costpercapita_cg5||0), 0.001); end
  def test_costpercapita_ch5; assert_in_delta(0, (worksheet.costpercapita_ch5||0), 0.001); end
  def test_costpercapita_ci5; assert_in_delta(0, (worksheet.costpercapita_ci5||0), 0.001); end
  def test_costpercapita_cj5; assert_in_delta(0, (worksheet.costpercapita_cj5||0), 0.001); end
  def test_costpercapita_ck5; assert_in_delta(0, (worksheet.costpercapita_ck5||0), 0.001); end
  def test_costpercapita_cl5; assert_in_delta(0, (worksheet.costpercapita_cl5||0), 0.001); end
  def test_costpercapita_cm5; assert_in_delta(0, (worksheet.costpercapita_cm5||0), 0.001); end
  def test_costpercapita_cn5; assert_in_delta(0, (worksheet.costpercapita_cn5||0), 0.001); end
  def test_costpercapita_cf5; assert_in_delta(0, (worksheet.costpercapita_cf5||0), 0.001); end
  def test_costpercapita_cq5; assert_in_delta(0, (worksheet.costpercapita_cq5||0), 0.001); end
  def test_costpercapita_aj5; assert_in_epsilon(3.0003247343913517, worksheet.costpercapita_aj5, 0.001); end
  def test_costpercapita_ak5; assert_in_epsilon(1.5578387932380309, worksheet.costpercapita_ak5, 0.001); end
  def test_costpercapita_al5; assert_in_delta(0.5032008970320883, worksheet.costpercapita_al5, 0.001); end
  def test_costpercapita_am5; assert_in_delta(0.4894533714869285, worksheet.costpercapita_am5, 0.001); end
  def test_costpercapita_an5; assert_in_delta(0, (worksheet.costpercapita_an5||0), 0.001); end
  def test_costpercapita_ao5; assert_in_delta(0, (worksheet.costpercapita_ao5||0), 0.001); end
  def test_costpercapita_ap5; assert_in_delta(0, (worksheet.costpercapita_ap5||0), 0.001); end
  def test_costpercapita_aq5; assert_in_delta(0, (worksheet.costpercapita_aq5||0), 0.001); end
  def test_costpercapita_ai5; assert_in_epsilon(3.9920808013308497, worksheet.costpercapita_ai5, 0.001); end
  def test_costpercapita_at5; assert_in_epsilon(24.876643844952078, worksheet.costpercapita_at5, 0.001); end
  def test_costpercapita_cr5; assert_equal("ok", worksheet.costpercapita_cr5); end
  def test_costpercapita_a6; assert_equal("III.a.1", worksheet.costpercapita_a6); end
  def test_costpercapita_b6; assert_equal("Onshore wind", worksheet.costpercapita_b6); end
  def test_costpercapita_c6; assert_equal("Electricity", worksheet.costpercapita_c6); end
  def test_costpercapita_y6; assert_in_delta(0, (worksheet.costpercapita_y6||0), 0.001); end
  def test_costpercapita_z6; assert_in_delta(0, (worksheet.costpercapita_z6||0), 0.001); end
  def test_costpercapita_aa6; assert_in_delta(0, (worksheet.costpercapita_aa6||0), 0.001); end
  def test_costpercapita_ab6; assert_in_delta(0, (worksheet.costpercapita_ab6||0), 0.001); end
  def test_costpercapita_ac6; assert_in_delta(0, (worksheet.costpercapita_ac6||0), 0.001); end
  def test_costpercapita_ad6; assert_in_delta(0, (worksheet.costpercapita_ad6||0), 0.001); end
  def test_costpercapita_ae6; assert_in_delta(0, (worksheet.costpercapita_ae6||0), 0.001); end
  def test_costpercapita_af6; assert_in_delta(0, (worksheet.costpercapita_af6||0), 0.001); end
  def test_costpercapita_ag6; assert_in_delta(0, (worksheet.costpercapita_ag6||0), 0.001); end
  def test_costpercapita_av6; assert_in_delta(0, (worksheet.costpercapita_av6||0), 0.001); end
  def test_costpercapita_aw6; assert_in_epsilon(20, worksheet.costpercapita_aw6, 0.001); end
  def test_costpercapita_bt6; assert_in_epsilon(3.8294550013213313, worksheet.costpercapita_bt6, 0.001); end
  def test_costpercapita_bu6; assert_in_epsilon(5.773139252868097, worksheet.costpercapita_bu6, 0.001); end
  def test_costpercapita_bv6; assert_in_epsilon(7.468066439333403, worksheet.costpercapita_bv6, 0.001); end
  def test_costpercapita_bw6; assert_in_epsilon(5.8539482999707015, worksheet.costpercapita_bw6, 0.001); end
  def test_costpercapita_bx6; assert_in_epsilon(3.7994158130324993, worksheet.costpercapita_bx6, 0.001); end
  def test_costpercapita_by6; assert_in_epsilon(1.854726019989939, worksheet.costpercapita_by6, 0.001); end
  def test_costpercapita_bz6; assert_in_delta(0.0031025874384912016, worksheet.costpercapita_bz6, 0.001); end
  def test_costpercapita_ca6; assert_in_delta(0.0030446877731940174, worksheet.costpercapita_ca6, 0.001); end
  def test_costpercapita_bs6; assert_in_epsilon(1.7336488917022368, worksheet.costpercapita_bs6, 0.001); end
  def test_costpercapita_cd6; assert_in_epsilon(86.66799770805154, worksheet.costpercapita_cd6, 0.001); end
  def test_costpercapita_cg6; assert_in_epsilon(-4.311747441368259, worksheet.costpercapita_cg6, 0.001); end
  def test_costpercapita_ch6; assert_in_epsilon(-2.3371717448742735, worksheet.costpercapita_ch6, 0.001); end
  def test_costpercapita_ci6; assert_in_delta(-0.5011760947896047, worksheet.costpercapita_ci6, 0.001); end
  def test_costpercapita_cj6; assert_in_epsilon(5.032364838044888, worksheet.costpercapita_cj6, 0.001); end
  def test_costpercapita_ck6; assert_in_epsilon(3.2635172444040204, worksheet.costpercapita_ck6, 0.001); end
  def test_costpercapita_cl6; assert_in_epsilon(1.5909082569457031, worksheet.costpercapita_cl6, 0.001); end
  def test_costpercapita_cm6; assert_in_delta(0, (worksheet.costpercapita_cm6||0), 0.001); end
  def test_costpercapita_cn6; assert_in_delta(0, (worksheet.costpercapita_cn6||0), 0.001); end
  def test_costpercapita_cf6; assert_in_epsilon(-7.322850153076424, worksheet.costpercapita_cf6, 0.001); end
  def test_costpercapita_cq6; assert_in_epsilon(-12.870546806878203, worksheet.costpercapita_cq6, 0.001); end
  def test_costpercapita_aj6; assert_in_epsilon(8.141202442689591, worksheet.costpercapita_aj6, 0.001); end
  def test_costpercapita_ak6; assert_in_epsilon(8.11031099774237, worksheet.costpercapita_ak6, 0.001); end
  def test_costpercapita_al6; assert_in_epsilon(7.969242534123008, worksheet.costpercapita_al6, 0.001); end
  def test_costpercapita_am6; assert_in_delta(0.8215834619258144, worksheet.costpercapita_am6, 0.001); end
  def test_costpercapita_an6; assert_in_delta(0.535898568628479, worksheet.costpercapita_an6, 0.001); end
  def test_costpercapita_ao6; assert_in_delta(0.26381776304423576, worksheet.costpercapita_ao6, 0.001); end
  def test_costpercapita_ap6; assert_in_delta(0.0031025874384912016, worksheet.costpercapita_ap6, 0.001); end
  def test_costpercapita_aq6; assert_in_delta(0.0030446877731940174, worksheet.costpercapita_aq6, 0.001); end
  def test_costpercapita_ai6; assert_in_epsilon(9.056499044778661, worksheet.costpercapita_ai6, 0.001); end
  def test_costpercapita_at6; assert_in_epsilon(99.53854451492977, worksheet.costpercapita_at6, 0.001); end
  def test_costpercapita_cr6; assert_equal("ok", worksheet.costpercapita_cr6); end
  def test_costpercapita_a7; assert_equal("III.a.2", worksheet.costpercapita_a7); end
  def test_costpercapita_b7; assert_equal("Offshore wind", worksheet.costpercapita_b7); end
  def test_costpercapita_c7; assert_equal("Electricity", worksheet.costpercapita_c7); end
  def test_costpercapita_y7; assert_in_delta(0, (worksheet.costpercapita_y7||0), 0.001); end
  def test_costpercapita_z7; assert_in_delta(0, (worksheet.costpercapita_z7||0), 0.001); end
  def test_costpercapita_aa7; assert_in_delta(0, (worksheet.costpercapita_aa7||0), 0.001); end
  def test_costpercapita_ab7; assert_in_delta(0, (worksheet.costpercapita_ab7||0), 0.001); end
  def test_costpercapita_ac7; assert_in_delta(0, (worksheet.costpercapita_ac7||0), 0.001); end
  def test_costpercapita_ad7; assert_in_delta(0, (worksheet.costpercapita_ad7||0), 0.001); end
  def test_costpercapita_ae7; assert_in_delta(0, (worksheet.costpercapita_ae7||0), 0.001); end
  def test_costpercapita_af7; assert_in_delta(0, (worksheet.costpercapita_af7||0), 0.001); end
  def test_costpercapita_ag7; assert_in_delta(0, (worksheet.costpercapita_ag7||0), 0.001); end
  def test_costpercapita_av7; assert_in_delta(0, (worksheet.costpercapita_av7||0), 0.001); end
  def test_costpercapita_aw7; assert_in_epsilon(20, worksheet.costpercapita_aw7, 0.001); end
  def test_costpercapita_bt7; assert_in_epsilon(14.825311245591346, worksheet.costpercapita_bt7, 0.001); end
  def test_costpercapita_bu7; assert_in_epsilon(48.46542503948843, worksheet.costpercapita_bu7, 0.001); end
  def test_costpercapita_bv7; assert_in_epsilon(84.58667769626601, worksheet.costpercapita_bv7, 0.001); end
  def test_costpercapita_bw7; assert_in_epsilon(121.28625381352948, worksheet.costpercapita_bw7, 0.001); end
  def test_costpercapita_bx7; assert_in_epsilon(144.88553147250366, worksheet.costpercapita_bx7, 0.001); end
  def test_costpercapita_by7; assert_in_epsilon(145.3810093526453, worksheet.costpercapita_by7, 0.001); end
  def test_costpercapita_bz7; assert_in_epsilon(167.884254733651, worksheet.costpercapita_bz7, 0.001); end
  def test_costpercapita_ca7; assert_in_epsilon(125.89160370816272, worksheet.costpercapita_ca7, 0.001); end
  def test_costpercapita_bs7; assert_in_epsilon(2.4037001592497185, worksheet.costpercapita_bs7, 0.001); end
  def test_costpercapita_cd7; assert_in_epsilon(1784.1937454614838, worksheet.costpercapita_cd7, 0.001); end
  def test_costpercapita_cg7; assert_in_epsilon(-27.636144898763625, worksheet.costpercapita_cg7, 0.001); end
  def test_costpercapita_ch7; assert_in_epsilon(-67.73508770280344, worksheet.costpercapita_ch7, 0.001); end
  def test_costpercapita_ci7; assert_in_epsilon(-49.30916559124162, worksheet.costpercapita_ci7, 0.001); end
  def test_costpercapita_cj7; assert_in_epsilon(-29.902163676061793, worksheet.costpercapita_cj7, 0.001); end
  def test_costpercapita_ck7; assert_in_delta(-0.6393253172577971, worksheet.costpercapita_ck7, 0.001); end
  def test_costpercapita_cl7; assert_in_epsilon(9.712850175947555, worksheet.costpercapita_cl7, 0.001); end
  def test_costpercapita_cm7; assert_in_epsilon(42.97404866114137, worksheet.costpercapita_cm7, 0.001); end
  def test_costpercapita_cn7; assert_in_epsilon(18.455016330695923, worksheet.costpercapita_cn7, 0.001); end
  def test_costpercapita_cf7; assert_in_epsilon(-9.949524664506031, worksheet.costpercapita_cf7, 0.001); end
  def test_costpercapita_cq7; assert_in_epsilon(-482.2391731890191, worksheet.costpercapita_cq7, 0.001); end
  def test_costpercapita_aj7; assert_in_epsilon(42.461456144354976, worksheet.costpercapita_aj7, 0.001); end
  def test_costpercapita_ak7; assert_in_epsilon(116.20051274229188, worksheet.costpercapita_ak7, 0.001); end
  def test_costpercapita_al7; assert_in_epsilon(133.89584328750763, worksheet.costpercapita_al7, 0.001); end
  def test_costpercapita_am7; assert_in_epsilon(151.1884174895913, worksheet.costpercapita_am7, 0.001); end
  def test_costpercapita_an7; assert_in_epsilon(145.52485678976146, worksheet.costpercapita_an7, 0.001); end
  def test_costpercapita_ao7; assert_in_epsilon(135.66815917669774, worksheet.costpercapita_ao7, 0.001); end
  def test_costpercapita_ap7; assert_in_epsilon(124.91020607250964, worksheet.costpercapita_ap7, 0.001); end
  def test_costpercapita_aq7; assert_in_epsilon(107.4365873774668, worksheet.costpercapita_aq7, 0.001); end
  def test_costpercapita_ai7; assert_in_epsilon(12.35322482375575, worksheet.costpercapita_ai7, 0.001); end
  def test_costpercapita_at7; assert_in_epsilon(2266.432918650503, worksheet.costpercapita_at7, 0.001); end
  def test_costpercapita_cr7; assert_equal("ok", worksheet.costpercapita_cr7); end
  def test_costpercapita_a8; assert_equal("III.b", worksheet.costpercapita_a8); end
  def test_costpercapita_b8; assert_equal("Hydroelectric", worksheet.costpercapita_b8); end
  def test_costpercapita_c8; assert_equal("Electricity", worksheet.costpercapita_c8); end
  def test_costpercapita_y8; assert_in_delta(0, (worksheet.costpercapita_y8||0), 0.001); end
  def test_costpercapita_z8; assert_in_delta(0, (worksheet.costpercapita_z8||0), 0.001); end
  def test_costpercapita_aa8; assert_in_delta(0, (worksheet.costpercapita_aa8||0), 0.001); end
  def test_costpercapita_ab8; assert_in_delta(0, (worksheet.costpercapita_ab8||0), 0.001); end
  def test_costpercapita_ac8; assert_in_delta(0, (worksheet.costpercapita_ac8||0), 0.001); end
  def test_costpercapita_ad8; assert_in_delta(0, (worksheet.costpercapita_ad8||0), 0.001); end
  def test_costpercapita_ae8; assert_in_delta(0, (worksheet.costpercapita_ae8||0), 0.001); end
  def test_costpercapita_af8; assert_in_delta(0, (worksheet.costpercapita_af8||0), 0.001); end
  def test_costpercapita_ag8; assert_in_delta(0, (worksheet.costpercapita_ag8||0), 0.001); end
  def test_costpercapita_av8; assert_in_delta(0, (worksheet.costpercapita_av8||0), 0.001); end
  def test_costpercapita_aw8; assert_in_epsilon(30, worksheet.costpercapita_aw8, 0.001); end
  def test_costpercapita_bt8; assert_in_delta(0.4826400499629939, worksheet.costpercapita_bt8, 0.001); end
  def test_costpercapita_bu8; assert_in_delta(0.5337846168758523, worksheet.costpercapita_bu8, 0.001); end
  def test_costpercapita_bv8; assert_in_delta(0.5496930154086055, worksheet.costpercapita_bv8, 0.001); end
  def test_costpercapita_bw8; assert_in_delta(0.5662253804779303, worksheet.costpercapita_bw8, 0.001); end
  def test_costpercapita_bx8; assert_in_delta(0.5836944263853723, worksheet.costpercapita_bx8, 0.001); end
  def test_costpercapita_by8; assert_in_delta(0.45784487425805515, worksheet.costpercapita_by8, 0.001); end
  def test_costpercapita_bz8; assert_in_delta(0.4553469502684601, worksheet.costpercapita_bz8, 0.001); end
  def test_costpercapita_ca8; assert_in_delta(0.43087497628635757, worksheet.costpercapita_ca8, 0.001); end
  def test_costpercapita_bs8; assert_in_delta(0.42752661502535255, worksheet.costpercapita_bs8, 0.001); end
  def test_costpercapita_cd8; assert_in_epsilon(10.73617203247286, worksheet.costpercapita_cd8, 0.001); end
  def test_costpercapita_cg8; assert_in_delta(-0.10358257451280158, worksheet.costpercapita_cg8, 0.001); end
  def test_costpercapita_ch8; assert_in_delta(-0.04827879249863366, worksheet.costpercapita_ch8, 0.001); end
  def test_costpercapita_ci8; assert_in_delta(0.12928457768598273, worksheet.costpercapita_ci8, 0.001); end
  def test_costpercapita_cj8; assert_in_delta(0.15021797078519106, worksheet.costpercapita_cj8, 0.001); end
  def test_costpercapita_ck8; assert_in_delta(0.1705686484021528, worksheet.costpercapita_ck8, 0.001); end
  def test_costpercapita_cl8; assert_in_delta(0.04675939370379979, worksheet.costpercapita_cl8, 0.001); end
  def test_costpercapita_cm8; assert_in_delta(0.045826640808056325, worksheet.costpercapita_cm8, 0.001); end
  def test_costpercapita_cn8; assert_in_delta(0.022485718085464644, worksheet.costpercapita_cn8, 0.001); end
  def test_costpercapita_cf8; assert_in_epsilon(-1.5334605447494543, worksheet.costpercapita_cf8, 0.001); end
  def test_costpercapita_cq8; assert_in_delta(-0.8329426620366875, worksheet.costpercapita_cq8, 0.001); end
  def test_costpercapita_aj8; assert_in_delta(0.5862226244757954, worksheet.costpercapita_aj8, 0.001); end
  def test_costpercapita_ak8; assert_in_delta(0.582063409374486, worksheet.costpercapita_ak8, 0.001); end
  def test_costpercapita_al8; assert_in_delta(0.42040843772262276, worksheet.costpercapita_al8, 0.001); end
  def test_costpercapita_am8; assert_in_delta(0.41600740969273914, worksheet.costpercapita_am8, 0.001); end
  def test_costpercapita_an8; assert_in_delta(0.4131257779832194, worksheet.costpercapita_an8, 0.001); end
  def test_costpercapita_ao8; assert_in_delta(0.41108548055425537, worksheet.costpercapita_ao8, 0.001); end
  def test_costpercapita_ap8; assert_in_delta(0.4095203094604038, worksheet.costpercapita_ap8, 0.001); end
  def test_costpercapita_aq8; assert_in_delta(0.40838925820089295, worksheet.costpercapita_aq8, 0.001); end
  def test_costpercapita_ai8; assert_in_epsilon(1.960987159774807, worksheet.costpercapita_ai8, 0.001); end
  def test_costpercapita_at8; assert_in_epsilon(11.569114694509548, worksheet.costpercapita_at8, 0.001); end
  def test_costpercapita_cr8; assert_equal("ok", worksheet.costpercapita_cr8); end
  def test_costpercapita_a9; assert_equal("III.c", worksheet.costpercapita_a9); end
  def test_costpercapita_b9; assert_equal("Wave and Tidal", worksheet.costpercapita_b9); end
  def test_costpercapita_c9; assert_equal("Electricity", worksheet.costpercapita_c9); end
  def test_costpercapita_y9; assert_in_delta(0, (worksheet.costpercapita_y9||0), 0.001); end
  def test_costpercapita_z9; assert_in_delta(0, (worksheet.costpercapita_z9||0), 0.001); end
  def test_costpercapita_aa9; assert_in_delta(0, (worksheet.costpercapita_aa9||0), 0.001); end
  def test_costpercapita_ab9; assert_in_delta(0, (worksheet.costpercapita_ab9||0), 0.001); end
  def test_costpercapita_ac9; assert_in_delta(0, (worksheet.costpercapita_ac9||0), 0.001); end
  def test_costpercapita_ad9; assert_in_delta(0, (worksheet.costpercapita_ad9||0), 0.001); end
  def test_costpercapita_ae9; assert_in_delta(0, (worksheet.costpercapita_ae9||0), 0.001); end
  def test_costpercapita_af9; assert_in_delta(0, (worksheet.costpercapita_af9||0), 0.001); end
  def test_costpercapita_ag9; assert_in_delta(0, (worksheet.costpercapita_ag9||0), 0.001); end
  def test_costpercapita_av9; assert_in_delta(0, (worksheet.costpercapita_av9||0), 0.001); end
  def test_costpercapita_aw9; assert_in_epsilon(30, worksheet.costpercapita_aw9, 0.001); end
  def test_costpercapita_bt9; assert_in_delta(0.06874241953027921, worksheet.costpercapita_bt9, 0.001); end
  def test_costpercapita_bu9; assert_in_delta(0.5960866747125201, worksheet.costpercapita_bu9, 0.001); end
  def test_costpercapita_bv9; assert_in_epsilon(1.0105802246862532, worksheet.costpercapita_bv9, 0.001); end
  def test_costpercapita_bw9; assert_in_epsilon(1.9783588282006324, worksheet.costpercapita_bw9, 0.001); end
  def test_costpercapita_bx9; assert_in_epsilon(4.20313672599088, worksheet.costpercapita_bx9, 0.001); end
  def test_costpercapita_by9; assert_in_epsilon(8.544969133646589, worksheet.costpercapita_by9, 0.001); end
  def test_costpercapita_bz9; assert_in_epsilon(15.349769474960244, worksheet.costpercapita_bz9, 0.001); end
  def test_costpercapita_ca9; assert_in_epsilon(17.27656039883106, worksheet.costpercapita_ca9, 0.001); end
  def test_costpercapita_bs9; assert_in_delta(0.00300675903989454, worksheet.costpercapita_bs9, 0.001); end
  def test_costpercapita_cd9; assert_in_epsilon(80.99487508245592, worksheet.costpercapita_cd9, 0.001); end
  def test_costpercapita_cg9; assert_in_delta(-0.2606891272949551, worksheet.costpercapita_cg9, 0.001); end
  def test_costpercapita_ch9; assert_in_epsilon(-2.1600864657818697, worksheet.costpercapita_ch9, 0.001); end
  def test_costpercapita_ci9; assert_in_epsilon(-1.1700027134704838, worksheet.costpercapita_ci9, 0.001); end
  def test_costpercapita_cj9; assert_in_epsilon(-3.123694387155383, worksheet.costpercapita_cj9, 0.001); end
  def test_costpercapita_ck9; assert_in_epsilon(-6.5472838489192196, worksheet.costpercapita_ck9, 0.001); end
  def test_costpercapita_cl9; assert_in_epsilon(-12.71032561172027, worksheet.costpercapita_cl9, 0.001); end
  def test_costpercapita_cm9; assert_in_epsilon(-13.103236915010392, worksheet.costpercapita_cm9, 0.001); end
  def test_costpercapita_cn9; assert_in_epsilon(2.45149660222711, worksheet.costpercapita_cn9, 0.001); end
  def test_costpercapita_cf9; assert_in_delta(-0.02201559161414307, worksheet.costpercapita_cf9, 0.001); end
  def test_costpercapita_cq9; assert_in_epsilon(-73.49713214034014, worksheet.costpercapita_cq9, 0.001); end
  def test_costpercapita_aj9; assert_in_delta(0.3294315468252343, worksheet.costpercapita_aj9, 0.001); end
  def test_costpercapita_ak9; assert_in_epsilon(2.75617314049439, worksheet.costpercapita_ak9, 0.001); end
  def test_costpercapita_al9; assert_in_epsilon(2.180582938156737, worksheet.costpercapita_al9, 0.001); end
  def test_costpercapita_am9; assert_in_epsilon(5.102053215356015, worksheet.costpercapita_am9, 0.001); end
  def test_costpercapita_an9; assert_in_epsilon(10.750420574910098, worksheet.costpercapita_an9, 0.001); end
  def test_costpercapita_ao9; assert_in_epsilon(21.25529474536686, worksheet.costpercapita_ao9, 0.001); end
  def test_costpercapita_ap9; assert_in_epsilon(28.453006389970636, worksheet.costpercapita_ap9, 0.001); end
  def test_costpercapita_aq9; assert_in_epsilon(14.825063796603947, worksheet.costpercapita_aq9, 0.001); end
  def test_costpercapita_ai9; assert_in_delta(0.02502235065403761, worksheet.costpercapita_ai9, 0.001); end
  def test_costpercapita_at9; assert_in_epsilon(154.49200722279608, worksheet.costpercapita_at9, 0.001); end
  def test_costpercapita_cr9; assert_equal("ok", worksheet.costpercapita_cr9); end
  def test_costpercapita_a10; assert_equal("III.d", worksheet.costpercapita_a10); end
  def test_costpercapita_b10; assert_equal("Geothermal", worksheet.costpercapita_b10); end
  def test_costpercapita_c10; assert_equal("Electricity", worksheet.costpercapita_c10); end
  def test_costpercapita_y10; assert_in_delta(0, (worksheet.costpercapita_y10||0), 0.001); end
  def test_costpercapita_z10; assert_in_delta(0, (worksheet.costpercapita_z10||0), 0.001); end
  def test_costpercapita_aa10; assert_in_delta(0, (worksheet.costpercapita_aa10||0), 0.001); end
  def test_costpercapita_ab10; assert_in_delta(0, (worksheet.costpercapita_ab10||0), 0.001); end
  def test_costpercapita_ac10; assert_in_delta(0, (worksheet.costpercapita_ac10||0), 0.001); end
  def test_costpercapita_ad10; assert_in_delta(0, (worksheet.costpercapita_ad10||0), 0.001); end
  def test_costpercapita_ae10; assert_in_delta(0, (worksheet.costpercapita_ae10||0), 0.001); end
  def test_costpercapita_af10; assert_in_delta(0, (worksheet.costpercapita_af10||0), 0.001); end
  def test_costpercapita_ag10; assert_in_delta(0, (worksheet.costpercapita_ag10||0), 0.001); end
  def test_costpercapita_av10; assert_in_delta(0, (worksheet.costpercapita_av10||0), 0.001); end
  def test_costpercapita_aw10; assert_in_epsilon(25, worksheet.costpercapita_aw10, 0.001); end
  def test_costpercapita_bt10; assert_in_delta(0.047734638092074747, worksheet.costpercapita_bt10, 0.001); end
  def test_costpercapita_bu10; assert_in_delta(0.35655044269439906, worksheet.costpercapita_bu10, 0.001); end
  def test_costpercapita_bv10; assert_in_epsilon(2.652234687897283, worksheet.costpercapita_bv10, 0.001); end
  def test_costpercapita_bw10; assert_in_epsilon(8.97358694425923, worksheet.costpercapita_bw10, 0.001); end
  def test_costpercapita_bx10; assert_in_epsilon(8.762207859821691, worksheet.costpercapita_bx10, 0.001); end
  def test_costpercapita_by10; assert_in_epsilon(8.56709047061204, worksheet.costpercapita_by10, 0.001); end
  def test_costpercapita_bz10; assert_in_epsilon(11.898709331587742, worksheet.costpercapita_bz10, 0.001); end
  def test_costpercapita_ca10; assert_in_epsilon(11.348248691816302, worksheet.costpercapita_ca10, 0.001); end
  def test_costpercapita_bs10; assert_in_delta(0, (worksheet.costpercapita_bs10||0), 0.001); end
  def test_costpercapita_cd10; assert_in_epsilon(99.05565253637445, worksheet.costpercapita_cd10, 0.001); end
  def test_costpercapita_cg10; assert_in_delta(-0.12224544525846294, worksheet.costpercapita_cg10, 0.001); end
  def test_costpercapita_ch10; assert_in_delta(-0.746843801750766, worksheet.costpercapita_ch10, 0.001); end
  def test_costpercapita_ci10; assert_in_epsilon(-5.404495337399476, worksheet.costpercapita_ci10, 0.001); end
  def test_costpercapita_cj10; assert_in_epsilon(-13.553123607788555, worksheet.costpercapita_cj10, 0.001); end
  def test_costpercapita_ck10; assert_in_epsilon(5.234174591713161, worksheet.costpercapita_ck10, 0.001); end
  def test_costpercapita_cl10; assert_in_epsilon(5.0224212872518965, worksheet.costpercapita_cl10, 0.001); end
  def test_costpercapita_cm10; assert_in_epsilon(7.859137832619467, worksheet.costpercapita_cm10, 0.001); end
  def test_costpercapita_cn10; assert_in_epsilon(3.388012782948416, worksheet.costpercapita_cn10, 0.001); end
  def test_costpercapita_cf10; assert_in_delta(0, (worksheet.costpercapita_cf10||0), 0.001); end
  def test_costpercapita_cq10; assert_in_epsilon(-16.759428932010575, worksheet.costpercapita_cq10, 0.001); end
  def test_costpercapita_aj10; assert_in_delta(0.1699800833505377, worksheet.costpercapita_aj10, 0.001); end
  def test_costpercapita_ak10; assert_in_epsilon(1.1033942444451652, worksheet.costpercapita_ak10, 0.001); end
  def test_costpercapita_al10; assert_in_epsilon(8.056730025296758, worksheet.costpercapita_al10, 0.001); end
  def test_costpercapita_am10; assert_in_epsilon(22.526710552047785, worksheet.costpercapita_am10, 0.001); end
  def test_costpercapita_an10; assert_in_epsilon(3.52803326810853, worksheet.costpercapita_an10, 0.001); end
  def test_costpercapita_ao10; assert_in_epsilon(3.544669183360143, worksheet.costpercapita_ao10, 0.001); end
  def test_costpercapita_ap10; assert_in_epsilon(4.039571498968277, worksheet.costpercapita_ap10, 0.001); end
  def test_costpercapita_aq10; assert_in_epsilon(7.960235908867886, worksheet.costpercapita_aq10, 0.001); end
  def test_costpercapita_ai10; assert_in_delta(0, (worksheet.costpercapita_ai10||0), 0.001); end
  def test_costpercapita_at10; assert_in_epsilon(115.81508146838503, worksheet.costpercapita_at10, 0.001); end
  def test_costpercapita_cr10; assert_equal("ok", worksheet.costpercapita_cr10); end
  def test_costpercapita_a11; assert_equal("IV.a", worksheet.costpercapita_a11); end
  def test_costpercapita_b11; assert_equal("Distributed solar PV", worksheet.costpercapita_b11); end
  def test_costpercapita_c11; assert_equal("Electricity", worksheet.costpercapita_c11); end
  def test_costpercapita_y11; assert_in_delta(0, (worksheet.costpercapita_y11||0), 0.001); end
  def test_costpercapita_z11; assert_in_delta(0, (worksheet.costpercapita_z11||0), 0.001); end
  def test_costpercapita_aa11; assert_in_delta(0, (worksheet.costpercapita_aa11||0), 0.001); end
  def test_costpercapita_ab11; assert_in_delta(0, (worksheet.costpercapita_ab11||0), 0.001); end
  def test_costpercapita_ac11; assert_in_delta(0, (worksheet.costpercapita_ac11||0), 0.001); end
  def test_costpercapita_ad11; assert_in_delta(0, (worksheet.costpercapita_ad11||0), 0.001); end
  def test_costpercapita_ae11; assert_in_delta(0, (worksheet.costpercapita_ae11||0), 0.001); end
  def test_costpercapita_af11; assert_in_delta(0, (worksheet.costpercapita_af11||0), 0.001); end
  def test_costpercapita_ag11; assert_in_delta(0, (worksheet.costpercapita_ag11||0), 0.001); end
  def test_costpercapita_av11; assert_in_delta(0, (worksheet.costpercapita_av11||0), 0.001); end
  def test_costpercapita_aw11; assert_in_epsilon(25, worksheet.costpercapita_aw11, 0.001); end
  def test_costpercapita_bt11; assert_in_epsilon(52.12442346661959, worksheet.costpercapita_bt11, 0.001); end
  def test_costpercapita_bu11; assert_in_epsilon(77.11770683602, worksheet.costpercapita_bu11, 0.001); end
  def test_costpercapita_bv11; assert_in_epsilon(97.21210290104221, worksheet.costpercapita_bv11, 0.001); end
  def test_costpercapita_bw11; assert_in_epsilon(113.12610512867383, worksheet.costpercapita_bw11, 0.001); end
  def test_costpercapita_bx11; assert_in_epsilon(115.7231936709736, worksheet.costpercapita_bx11, 0.001); end
  def test_costpercapita_by11; assert_in_epsilon(115.62344325982048, worksheet.costpercapita_by11, 0.001); end
  def test_costpercapita_bz11; assert_in_epsilon(135.5928648436877, worksheet.costpercapita_bz11, 0.001); end
  def test_costpercapita_ca11; assert_in_epsilon(134.9138932828866, worksheet.costpercapita_ca11, 0.001); end
  def test_costpercapita_bs11; assert_in_epsilon(21.616220280953776, worksheet.costpercapita_bs11, 0.001); end
  def test_costpercapita_cd11; assert_in_epsilon(1926.795358223559, worksheet.costpercapita_cd11, 0.001); end
  def test_costpercapita_cg11; assert_in_epsilon(-102.75210777897502, worksheet.costpercapita_cg11, 0.001); end
  def test_costpercapita_ch11; assert_in_epsilon(-55.54231188584221, worksheet.costpercapita_ch11, 0.001); end
  def test_costpercapita_ci11; assert_in_epsilon(-14.72506345205076, worksheet.costpercapita_ci11, 0.001); end
  def test_costpercapita_cj11; assert_in_epsilon(20.408385701212698, worksheet.costpercapita_cj11, 0.001); end
  def test_costpercapita_ck11; assert_in_epsilon(-2.8570741560703654, worksheet.costpercapita_ck11, 0.001); end
  def test_costpercapita_cl11; assert_in_epsilon(-31.15274117951444, worksheet.costpercapita_cl11, 0.001); end
  def test_costpercapita_cm11; assert_in_epsilon(-7.4781925893439585, worksheet.costpercapita_cm11, 0.001); end
  def test_costpercapita_cn11; assert_in_epsilon(25.588242378978048, worksheet.costpercapita_cn11, 0.001); end
  def test_costpercapita_cf11; assert_in_epsilon(-156.87246087904276, worksheet.costpercapita_cf11, 0.001); end
  def test_costpercapita_cq11; assert_in_epsilon(-818.0970439551759, worksheet.costpercapita_cq11, 0.001); end
  def test_costpercapita_aj11; assert_in_epsilon(154.8765312455946, worksheet.costpercapita_aj11, 0.001); end
  def test_costpercapita_ak11; assert_in_epsilon(132.66001872186223, worksheet.costpercapita_ak11, 0.001); end
  def test_costpercapita_al11; assert_in_epsilon(111.93716635309298, worksheet.costpercapita_al11, 0.001); end
  def test_costpercapita_am11; assert_in_epsilon(92.71771942746113, worksheet.costpercapita_am11, 0.001); end
  def test_costpercapita_an11; assert_in_epsilon(118.58026782704397, worksheet.costpercapita_an11, 0.001); end
  def test_costpercapita_ao11; assert_in_epsilon(146.7761844393349, worksheet.costpercapita_ao11, 0.001); end
  def test_costpercapita_ap11; assert_in_epsilon(143.07105743303165, worksheet.costpercapita_ap11, 0.001); end
  def test_costpercapita_aq11; assert_in_epsilon(109.32565090390854, worksheet.costpercapita_aq11, 0.001); end
  def test_costpercapita_ai11; assert_in_epsilon(178.48868115999653, worksheet.costpercapita_ai11, 0.001); end
  def test_costpercapita_at11; assert_in_epsilon(2744.8924021787343, worksheet.costpercapita_at11, 0.001); end
  def test_costpercapita_cr11; assert_equal("ok", worksheet.costpercapita_cr11); end
  def test_costpercapita_a12; assert_equal("IV.b", worksheet.costpercapita_a12); end
  def test_costpercapita_b12; assert_equal("Distributed solar thermal", worksheet.costpercapita_b12); end
  def test_costpercapita_c12; assert_equal("Buildings", worksheet.costpercapita_c12); end
  def test_costpercapita_y12; assert_in_delta(0, (worksheet.costpercapita_y12||0), 0.001); end
  def test_costpercapita_z12; assert_in_delta(0, (worksheet.costpercapita_z12||0), 0.001); end
  def test_costpercapita_aa12; assert_in_delta(0, (worksheet.costpercapita_aa12||0), 0.001); end
  def test_costpercapita_ab12; assert_in_delta(0, (worksheet.costpercapita_ab12||0), 0.001); end
  def test_costpercapita_ac12; assert_in_delta(0, (worksheet.costpercapita_ac12||0), 0.001); end
  def test_costpercapita_ad12; assert_in_delta(0, (worksheet.costpercapita_ad12||0), 0.001); end
  def test_costpercapita_ae12; assert_in_delta(0, (worksheet.costpercapita_ae12||0), 0.001); end
  def test_costpercapita_af12; assert_in_delta(0, (worksheet.costpercapita_af12||0), 0.001); end
  def test_costpercapita_ag12; assert_in_delta(0, (worksheet.costpercapita_ag12||0), 0.001); end
  def test_costpercapita_av12; assert_in_delta(0, (worksheet.costpercapita_av12||0), 0.001); end
  def test_costpercapita_aw12; assert_in_epsilon(20, worksheet.costpercapita_aw12, 0.001); end
  def test_costpercapita_bt12; assert_in_epsilon(6.996187687750036, worksheet.costpercapita_bt12, 0.001); end
  def test_costpercapita_bu12; assert_in_epsilon(16.104354744997096, worksheet.costpercapita_bu12, 0.001); end
  def test_costpercapita_bv12; assert_in_epsilon(28.534151612830584, worksheet.costpercapita_bv12, 0.001); end
  def test_costpercapita_bw12; assert_in_epsilon(45.03415531204976, worksheet.costpercapita_bw12, 0.001); end
  def test_costpercapita_bx12; assert_in_epsilon(64.0842567916584, worksheet.costpercapita_bx12, 0.001); end
  def test_costpercapita_by12; assert_in_epsilon(86.41971786868409, worksheet.costpercapita_by12, 0.001); end
  def test_costpercapita_bz12; assert_in_epsilon(129.24002114017483, worksheet.costpercapita_bz12, 0.001); end
  def test_costpercapita_ca12; assert_in_epsilon(139.03792423413947, worksheet.costpercapita_ca12, 0.001); end
  def test_costpercapita_bs12; assert_in_epsilon(1.2928443649373884, worksheet.costpercapita_bs12, 0.001); end
  def test_costpercapita_cd12; assert_in_epsilon(958.5778675858643, worksheet.costpercapita_cd12, 0.001); end
  def test_costpercapita_cg12; assert_in_epsilon(-15.987712133359086, worksheet.costpercapita_cg12, 0.001); end
  def test_costpercapita_ch12; assert_in_epsilon(-21.244482464305236, worksheet.costpercapita_ch12, 0.001); end
  def test_costpercapita_ci12; assert_in_epsilon(-23.17962298466496, worksheet.costpercapita_ci12, 0.001); end
  def test_costpercapita_cj12; assert_in_epsilon(-28.643387606991496, worksheet.costpercapita_cj12, 0.001); end
  def test_costpercapita_ck12; assert_in_epsilon(-36.8203202443677, worksheet.costpercapita_ck12, 0.001); end
  def test_costpercapita_cl12; assert_in_epsilon(-42.03014843975577, worksheet.costpercapita_cl12, 0.001); end
  def test_costpercapita_cm12; assert_in_epsilon(-27.04323831197386, worksheet.costpercapita_cm12, 0.001); end
  def test_costpercapita_cn12; assert_in_epsilon(-45.232149559247276, worksheet.costpercapita_cn12, 0.001); end
  def test_costpercapita_cf12; assert_in_epsilon(-7.326118067978535, worksheet.costpercapita_cf12, 0.001); end
  def test_costpercapita_cq12; assert_in_epsilon(-545.3760586068835, worksheet.costpercapita_cq12, 0.001); end
  def test_costpercapita_aj12; assert_in_epsilon(22.983899821109123, worksheet.costpercapita_aj12, 0.001); end
  def test_costpercapita_ak12; assert_in_epsilon(37.34883720930233, worksheet.costpercapita_ak12, 0.001); end
  def test_costpercapita_al12; assert_in_epsilon(51.713774597495544, worksheet.costpercapita_al12, 0.001); end
  def test_costpercapita_am12; assert_in_epsilon(73.67754291904126, worksheet.costpercapita_am12, 0.001); end
  def test_costpercapita_an12; assert_in_epsilon(100.9045770360261, worksheet.costpercapita_an12, 0.001); end
  def test_costpercapita_ao12; assert_in_epsilon(128.44986630843985, worksheet.costpercapita_ao12, 0.001); end
  def test_costpercapita_ap12; assert_in_epsilon(156.28325945214868, worksheet.costpercapita_ap12, 0.001); end
  def test_costpercapita_aq12; assert_in_epsilon(184.27007379338673, worksheet.costpercapita_aq12, 0.001); end
  def test_costpercapita_ai12; assert_in_epsilon(8.618962432915923, worksheet.costpercapita_ai12, 0.001); end
  def test_costpercapita_at12; assert_in_epsilon(1503.9539261927475, worksheet.costpercapita_at12, 0.001); end
  def test_costpercapita_cr12; assert_equal("ok", worksheet.costpercapita_cr12); end
  def test_costpercapita_a13; assert_equal("IV.c", worksheet.costpercapita_a13); end
  def test_costpercapita_b13; assert_equal("Micro wind", worksheet.costpercapita_b13); end
  def test_costpercapita_c13; assert_equal("Electricity", worksheet.costpercapita_c13); end
  def test_costpercapita_y13; assert_in_delta(0, (worksheet.costpercapita_y13||0), 0.001); end
  def test_costpercapita_z13; assert_in_delta(0, (worksheet.costpercapita_z13||0), 0.001); end
  def test_costpercapita_aa13; assert_in_delta(0, (worksheet.costpercapita_aa13||0), 0.001); end
  def test_costpercapita_ab13; assert_in_delta(0, (worksheet.costpercapita_ab13||0), 0.001); end
  def test_costpercapita_ac13; assert_in_delta(0, (worksheet.costpercapita_ac13||0), 0.001); end
  def test_costpercapita_ad13; assert_in_delta(0, (worksheet.costpercapita_ad13||0), 0.001); end
  def test_costpercapita_ae13; assert_in_delta(0, (worksheet.costpercapita_ae13||0), 0.001); end
  def test_costpercapita_af13; assert_in_delta(0, (worksheet.costpercapita_af13||0), 0.001); end
  def test_costpercapita_ag13; assert_in_delta(0, (worksheet.costpercapita_ag13||0), 0.001); end
  def test_costpercapita_av13; assert_in_delta(0, (worksheet.costpercapita_av13||0), 0.001); end
  def test_costpercapita_aw13; assert_in_epsilon(25, worksheet.costpercapita_aw13, 0.001); end
  def test_costpercapita_bt13; assert_in_epsilon(1.0896249560241, worksheet.costpercapita_bt13, 0.001); end
  def test_costpercapita_bu13; assert_in_epsilon(1.6487106660570467, worksheet.costpercapita_bu13, 0.001); end
  def test_costpercapita_bv13; assert_in_epsilon(1.597660854975602, worksheet.costpercapita_bv13, 0.001); end
  def test_costpercapita_bw13; assert_in_epsilon(1.5540125158215519, worksheet.costpercapita_bw13, 0.001); end
  def test_costpercapita_bx13; assert_in_epsilon(1.4690235405363472, worksheet.costpercapita_bx13, 0.001); end
  def test_costpercapita_by13; assert_in_delta(0.5357173654156266, worksheet.costpercapita_by13, 0.001); end
  def test_costpercapita_bz13; assert_in_delta(0, (worksheet.costpercapita_bz13||0), 0.001); end
  def test_costpercapita_ca13; assert_in_delta(0, (worksheet.costpercapita_ca13||0), 0.001); end
  def test_costpercapita_bs13; assert_in_delta(0.056202376789291235, worksheet.costpercapita_bs13, 0.001); end
  def test_costpercapita_cd13; assert_in_epsilon(23.22288665069576, worksheet.costpercapita_cd13, 0.001); end
  def test_costpercapita_cg13; assert_in_epsilon(-4.086754326483446, worksheet.costpercapita_cg13, 0.001); end
  def test_costpercapita_ch13; assert_in_epsilon(-1.3250794128144778, worksheet.costpercapita_ch13, 0.001); end
  def test_costpercapita_ci13; assert_in_epsilon(1.597660854975602, worksheet.costpercapita_ci13, 0.001); end
  def test_costpercapita_cj13; assert_in_epsilon(1.5540125158215519, worksheet.costpercapita_cj13, 0.001); end
  def test_costpercapita_ck13; assert_in_epsilon(1.4690235405363472, worksheet.costpercapita_ck13, 0.001); end
  def test_costpercapita_cl13; assert_in_delta(0.5357173654156266, worksheet.costpercapita_cl13, 0.001); end
  def test_costpercapita_cm13; assert_in_delta(0, (worksheet.costpercapita_cm13||0), 0.001); end
  def test_costpercapita_cn13; assert_in_delta(0, (worksheet.costpercapita_cn13||0), 0.001); end
  def test_costpercapita_cf13; assert_in_delta(-0.4121507631214691, worksheet.costpercapita_cf13, 0.001); end
  def test_costpercapita_cq13; assert_in_epsilon(-9.57820745066112, worksheet.costpercapita_cq13, 0.001); end
  def test_costpercapita_aj13; assert_in_epsilon(5.176379282507545, worksheet.costpercapita_aj13, 0.001); end
  def test_costpercapita_ak13; assert_in_epsilon(2.9737900788715246, worksheet.costpercapita_ak13, 0.001); end
  def test_costpercapita_al13; assert_in_delta(0, (worksheet.costpercapita_al13||0), 0.001); end
  def test_costpercapita_am13; assert_in_delta(0, (worksheet.costpercapita_am13||0), 0.001); end
  def test_costpercapita_an13; assert_in_delta(0, (worksheet.costpercapita_an13||0), 0.001); end
  def test_costpercapita_ao13; assert_in_delta(0, (worksheet.costpercapita_ao13||0), 0.001); end
  def test_costpercapita_ap13; assert_in_delta(0, (worksheet.costpercapita_ap13||0), 0.001); end
  def test_costpercapita_aq13; assert_in_delta(0, (worksheet.costpercapita_aq13||0), 0.001); end
  def test_costpercapita_ai13; assert_in_delta(0.46835313991076033, worksheet.costpercapita_ai13, 0.001); end
  def test_costpercapita_at13; assert_in_epsilon(32.80109410135688, worksheet.costpercapita_at13, 0.001); end
  def test_costpercapita_cr13; assert_equal("ok", worksheet.costpercapita_cr13); end
  def test_costpercapita_a14; assert_equal("V.a", worksheet.costpercapita_a14); end
  def test_costpercapita_b14; assert_equal("Biomatter to fuel conversion", worksheet.costpercapita_b14); end
  def test_costpercapita_c14; assert_equal("Bioenergy", worksheet.costpercapita_c14); end
  def test_costpercapita_y14; assert_in_delta(0, (worksheet.costpercapita_y14||0), 0.001); end
  def test_costpercapita_z14; assert_in_delta(0, (worksheet.costpercapita_z14||0), 0.001); end
  def test_costpercapita_aa14; assert_in_delta(0, (worksheet.costpercapita_aa14||0), 0.001); end
  def test_costpercapita_ab14; assert_in_delta(0, (worksheet.costpercapita_ab14||0), 0.001); end
  def test_costpercapita_ac14; assert_in_delta(0, (worksheet.costpercapita_ac14||0), 0.001); end
  def test_costpercapita_ad14; assert_in_delta(0, (worksheet.costpercapita_ad14||0), 0.001); end
  def test_costpercapita_ae14; assert_in_delta(0, (worksheet.costpercapita_ae14||0), 0.001); end
  def test_costpercapita_af14; assert_in_delta(0, (worksheet.costpercapita_af14||0), 0.001); end
  def test_costpercapita_ag14; assert_in_delta(0, (worksheet.costpercapita_ag14||0), 0.001); end
  def test_costpercapita_av14; assert_in_delta(0, (worksheet.costpercapita_av14||0), 0.001); end
  def test_costpercapita_aw14; assert_in_epsilon(30, worksheet.costpercapita_aw14, 0.001); end
  def test_costpercapita_bt14; assert_in_epsilon(4.290835529826615, worksheet.costpercapita_bt14, 0.001); end
  def test_costpercapita_bu14; assert_in_epsilon(5.498289604389141, worksheet.costpercapita_bu14, 0.001); end
  def test_costpercapita_bv14; assert_in_epsilon(7.187487617333068, worksheet.costpercapita_bv14, 0.001); end
  def test_costpercapita_bw14; assert_in_epsilon(8.635533765261906, worksheet.costpercapita_bw14, 0.001); end
  def test_costpercapita_bx14; assert_in_epsilon(10.278070434089893, worksheet.costpercapita_bx14, 0.001); end
  def test_costpercapita_by14; assert_in_epsilon(12.015854060245186, worksheet.costpercapita_by14, 0.001); end
  def test_costpercapita_bz14; assert_in_epsilon(14.440027753665925, worksheet.costpercapita_bz14, 0.001); end
  def test_costpercapita_ca14; assert_in_epsilon(16.127229739299732, worksheet.costpercapita_ca14, 0.001); end
  def test_costpercapita_bs14; assert_in_epsilon(3.348058868562641, worksheet.costpercapita_bs14, 0.001); end
  def test_costpercapita_cd14; assert_in_epsilon(170.76827018560488, worksheet.costpercapita_cd14, 0.001); end
  def test_costpercapita_cg14; assert_in_epsilon(-1.8167703008160756, worksheet.costpercapita_cg14, 0.001); end
  def test_costpercapita_ch14; assert_in_epsilon(-1.5580130361783868, worksheet.costpercapita_ch14, 0.001); end
  def test_costpercapita_ci14; assert_in_epsilon(-1.34954616206353, worksheet.costpercapita_ci14, 0.001); end
  def test_costpercapita_cj14; assert_in_epsilon(-1.1115401601018482, worksheet.costpercapita_cj14, 0.001); end
  def test_costpercapita_ck14; assert_in_epsilon(-1.0309804184189266, worksheet.costpercapita_ck14, 0.001); end
  def test_costpercapita_cl14; assert_in_epsilon(-1.3047317851869777, worksheet.costpercapita_cl14, 0.001); end
  def test_costpercapita_cm14; assert_in_epsilon(-1.4360290803389095, worksheet.costpercapita_cm14, 0.001); end
  def test_costpercapita_cn14; assert_in_epsilon(1.2855556904647738, worksheet.costpercapita_cn14, 0.001); end
  def test_costpercapita_cf14; assert_in_epsilon(-2.009846720938128, worksheet.costpercapita_cf14, 0.001); end
  def test_costpercapita_cq14; assert_in_epsilon(-27.00965034951755, worksheet.costpercapita_cq14, 0.001); end
  def test_costpercapita_aj14; assert_in_epsilon(6.10760583064269, worksheet.costpercapita_aj14, 0.001); end
  def test_costpercapita_ak14; assert_in_epsilon(7.056302640567528, worksheet.costpercapita_ak14, 0.001); end
  def test_costpercapita_al14; assert_in_epsilon(8.537033779396598, worksheet.costpercapita_al14, 0.001); end
  def test_costpercapita_am14; assert_in_epsilon(9.747073925363754, worksheet.costpercapita_am14, 0.001); end
  def test_costpercapita_an14; assert_in_epsilon(11.309050852508818, worksheet.costpercapita_an14, 0.001); end
  def test_costpercapita_ao14; assert_in_epsilon(13.320585845432163, worksheet.costpercapita_ao14, 0.001); end
  def test_costpercapita_ap14; assert_in_epsilon(15.876056834004837, worksheet.costpercapita_ap14, 0.001); end
  def test_costpercapita_aq14; assert_in_epsilon(14.841674048834957, worksheet.costpercapita_aq14, 0.001); end
  def test_costpercapita_ai14; assert_in_epsilon(5.357905589500769, worksheet.costpercapita_ai14, 0.001); end
  def test_costpercapita_at14; assert_in_epsilon(197.7779205351224, worksheet.costpercapita_at14, 0.001); end
  def test_costpercapita_cr14; assert_equal("ok", worksheet.costpercapita_cr14); end
  def test_costpercapita_a15; assert_equal("V.b", worksheet.costpercapita_a15); end
  def test_costpercapita_b15; assert_equal("Bioenergy imports", worksheet.costpercapita_b15); end
  def test_costpercapita_c15; assert_equal("Bioenergy", worksheet.costpercapita_c15); end
  def test_costpercapita_e15; assert_in_delta(0, (worksheet.costpercapita_e15||0), 0.001); end
  def test_costpercapita_f15; assert_in_delta(0, (worksheet.costpercapita_f15||0), 0.001); end
  def test_costpercapita_g15; assert_in_delta(0, (worksheet.costpercapita_g15||0), 0.001); end
  def test_costpercapita_h15; assert_in_delta(0, (worksheet.costpercapita_h15||0), 0.001); end
  def test_costpercapita_i15; assert_in_delta(0, (worksheet.costpercapita_i15||0), 0.001); end
  def test_costpercapita_j15; assert_in_delta(0, (worksheet.costpercapita_j15||0), 0.001); end
  def test_costpercapita_k15; assert_in_delta(0, (worksheet.costpercapita_k15||0), 0.001); end
  def test_costpercapita_l15; assert_in_delta(0, (worksheet.costpercapita_l15||0), 0.001); end
  def test_costpercapita_m15; assert_in_delta(0, (worksheet.costpercapita_m15||0), 0.001); end
  def test_costpercapita_o15; assert_in_delta(0, (worksheet.costpercapita_o15||0), 0.001); end
  def test_costpercapita_p15; assert_in_delta(0, (worksheet.costpercapita_p15||0), 0.001); end
  def test_costpercapita_q15; assert_in_delta(0, (worksheet.costpercapita_q15||0), 0.001); end
  def test_costpercapita_r15; assert_in_delta(0, (worksheet.costpercapita_r15||0), 0.001); end
  def test_costpercapita_s15; assert_in_delta(0, (worksheet.costpercapita_s15||0), 0.001); end
  def test_costpercapita_t15; assert_in_delta(0, (worksheet.costpercapita_t15||0), 0.001); end
  def test_costpercapita_u15; assert_in_delta(0, (worksheet.costpercapita_u15||0), 0.001); end
  def test_costpercapita_v15; assert_in_delta(0, (worksheet.costpercapita_v15||0), 0.001); end
  def test_costpercapita_w15; assert_in_delta(0, (worksheet.costpercapita_w15||0), 0.001); end
  def test_costpercapita_av15; assert_in_delta(0, (worksheet.costpercapita_av15||0), 0.001); end
  def test_costpercapita_aw15; assert_in_epsilon(5, worksheet.costpercapita_aw15, 0.001); end
  def test_costpercapita_ay15; assert_in_delta(0, (worksheet.costpercapita_ay15||0), 0.001); end
  def test_costpercapita_az15; assert_in_delta(0, (worksheet.costpercapita_az15||0), 0.001); end
  def test_costpercapita_ba15; assert_in_delta(0, (worksheet.costpercapita_ba15||0), 0.001); end
  def test_costpercapita_bb15; assert_in_delta(0, (worksheet.costpercapita_bb15||0), 0.001); end
  def test_costpercapita_bc15; assert_in_delta(0, (worksheet.costpercapita_bc15||0), 0.001); end
  def test_costpercapita_bd15; assert_in_delta(0, (worksheet.costpercapita_bd15||0), 0.001); end
  def test_costpercapita_be15; assert_in_delta(0, (worksheet.costpercapita_be15||0), 0.001); end
  def test_costpercapita_bf15; assert_in_delta(0, (worksheet.costpercapita_bf15||0), 0.001); end
  def test_costpercapita_bg15; assert_in_delta(0, (worksheet.costpercapita_bg15||0), 0.001); end
  def test_costpercapita_bi15; assert_in_delta(0, (worksheet.costpercapita_bi15||0), 0.001); end
  def test_costpercapita_bj15; assert_in_delta(0, (worksheet.costpercapita_bj15||0), 0.001); end
  def test_costpercapita_bk15; assert_in_delta(0, (worksheet.costpercapita_bk15||0), 0.001); end
  def test_costpercapita_bl15; assert_in_delta(0, (worksheet.costpercapita_bl15||0), 0.001); end
  def test_costpercapita_bm15; assert_in_delta(0, (worksheet.costpercapita_bm15||0), 0.001); end
  def test_costpercapita_bn15; assert_in_delta(0, (worksheet.costpercapita_bn15||0), 0.001); end
  def test_costpercapita_bo15; assert_in_delta(0, (worksheet.costpercapita_bo15||0), 0.001); end
  def test_costpercapita_bp15; assert_in_delta(0, (worksheet.costpercapita_bp15||0), 0.001); end
  def test_costpercapita_bq15; assert_in_delta(0, (worksheet.costpercapita_bq15||0), 0.001); end
  def test_costpercapita_cf15; assert_in_delta(0, (worksheet.costpercapita_cf15||0), 0.001); end
  def test_costpercapita_cg15; assert_in_delta(0, (worksheet.costpercapita_cg15||0), 0.001); end
  def test_costpercapita_ch15; assert_in_delta(0, (worksheet.costpercapita_ch15||0), 0.001); end
  def test_costpercapita_ci15; assert_in_delta(0, (worksheet.costpercapita_ci15||0), 0.001); end
  def test_costpercapita_cj15; assert_in_delta(0, (worksheet.costpercapita_cj15||0), 0.001); end
  def test_costpercapita_ck15; assert_in_delta(0, (worksheet.costpercapita_ck15||0), 0.001); end
  def test_costpercapita_cl15; assert_in_delta(0, (worksheet.costpercapita_cl15||0), 0.001); end
  def test_costpercapita_cm15; assert_in_delta(0, (worksheet.costpercapita_cm15||0), 0.001); end
  def test_costpercapita_cn15; assert_in_delta(0, (worksheet.costpercapita_cn15||0), 0.001); end
  def test_costpercapita_cp15; assert_in_delta(0, (worksheet.costpercapita_cp15||0), 0.001); end
  def test_costpercapita_cq15; assert_in_delta(0, (worksheet.costpercapita_cq15||0), 0.001); end
  def test_costpercapita_bt15; assert_in_epsilon(1.112223303813976, worksheet.costpercapita_bt15, 0.001); end
  def test_costpercapita_bu15; assert_in_delta(0.9221238599681264, worksheet.costpercapita_bu15, 0.001); end
  def test_costpercapita_bv15; assert_in_delta(0.7446430842599925, worksheet.costpercapita_bv15, 0.001); end
  def test_costpercapita_bw15; assert_in_delta(0.5794394569566704, worksheet.costpercapita_bw15, 0.001); end
  def test_costpercapita_bx15; assert_in_delta(0.42434276802360144, worksheet.costpercapita_bx15, 0.001); end
  def test_costpercapita_by15; assert_in_delta(0.2768620468308644, worksheet.costpercapita_by15, 0.001); end
  def test_costpercapita_bz15; assert_in_delta(0.13566961169205746, worksheet.costpercapita_bz15, 0.001); end
  def test_costpercapita_ca15; assert_in_delta(0, (worksheet.costpercapita_ca15||0), 0.001); end
  def test_costpercapita_bs15; assert_in_epsilon(1.3144566461502731, worksheet.costpercapita_bs15, 0.001); end
  def test_costpercapita_cd15; assert_in_epsilon(14.543179796510623, worksheet.costpercapita_cd15, 0.001); end
  def test_costpercapita_aj15; assert_in_epsilon(1.112223303813976, worksheet.costpercapita_aj15, 0.001); end
  def test_costpercapita_ak15; assert_in_delta(0.9221238599681264, worksheet.costpercapita_ak15, 0.001); end
  def test_costpercapita_al15; assert_in_delta(0.7446430842599925, worksheet.costpercapita_al15, 0.001); end
  def test_costpercapita_am15; assert_in_delta(0.5794394569566704, worksheet.costpercapita_am15, 0.001); end
  def test_costpercapita_an15; assert_in_delta(0.42434276802360144, worksheet.costpercapita_an15, 0.001); end
  def test_costpercapita_ao15; assert_in_delta(0.2768620468308644, worksheet.costpercapita_ao15, 0.001); end
  def test_costpercapita_ap15; assert_in_delta(0.13566961169205746, worksheet.costpercapita_ap15, 0.001); end
  def test_costpercapita_aq15; assert_in_delta(0, (worksheet.costpercapita_aq15||0), 0.001); end
  def test_costpercapita_ai15; assert_in_epsilon(1.3144566461502731, worksheet.costpercapita_ai15, 0.001); end
  def test_costpercapita_at15; assert_in_epsilon(14.543179796510623, worksheet.costpercapita_at15, 0.001); end
  def test_costpercapita_cr15; assert_equal("ok", worksheet.costpercapita_cr15); end
  def test_costpercapita_a16; assert_equal("VI.a.Bioenergy", worksheet.costpercapita_a16); end
  def test_costpercapita_b16; assert_equal("Agriculture and land use", worksheet.costpercapita_b16); end
  def test_costpercapita_c16; assert_equal("Bioenergy", worksheet.costpercapita_c16); end
  def test_costpercapita_e16; assert_in_delta(0, (worksheet.costpercapita_e16||0), 0.001); end
  def test_costpercapita_f16; assert_in_delta(0, (worksheet.costpercapita_f16||0), 0.001); end
  def test_costpercapita_g16; assert_in_delta(0, (worksheet.costpercapita_g16||0), 0.001); end
  def test_costpercapita_h16; assert_in_delta(0, (worksheet.costpercapita_h16||0), 0.001); end
  def test_costpercapita_i16; assert_in_delta(0, (worksheet.costpercapita_i16||0), 0.001); end
  def test_costpercapita_j16; assert_in_delta(0, (worksheet.costpercapita_j16||0), 0.001); end
  def test_costpercapita_k16; assert_in_delta(0, (worksheet.costpercapita_k16||0), 0.001); end
  def test_costpercapita_l16; assert_in_delta(0, (worksheet.costpercapita_l16||0), 0.001); end
  def test_costpercapita_m16; assert_in_delta(0, (worksheet.costpercapita_m16||0), 0.001); end
  def test_costpercapita_o16; assert_in_delta(0, (worksheet.costpercapita_o16||0), 0.001); end
  def test_costpercapita_p16; assert_in_delta(0, (worksheet.costpercapita_p16||0), 0.001); end
  def test_costpercapita_q16; assert_in_delta(0, (worksheet.costpercapita_q16||0), 0.001); end
  def test_costpercapita_r16; assert_in_delta(0, (worksheet.costpercapita_r16||0), 0.001); end
  def test_costpercapita_s16; assert_in_delta(0, (worksheet.costpercapita_s16||0), 0.001); end
  def test_costpercapita_t16; assert_in_delta(0, (worksheet.costpercapita_t16||0), 0.001); end
  def test_costpercapita_u16; assert_in_delta(0, (worksheet.costpercapita_u16||0), 0.001); end
  def test_costpercapita_v16; assert_in_delta(0, (worksheet.costpercapita_v16||0), 0.001); end
  def test_costpercapita_w16; assert_in_delta(0, (worksheet.costpercapita_w16||0), 0.001); end
  def test_costpercapita_av16; assert_in_delta(0, (worksheet.costpercapita_av16||0), 0.001); end
  def test_costpercapita_aw16; assert_in_epsilon(5, worksheet.costpercapita_aw16, 0.001); end
  def test_costpercapita_ay16; assert_in_delta(0, (worksheet.costpercapita_ay16||0), 0.001); end
  def test_costpercapita_az16; assert_in_delta(0, (worksheet.costpercapita_az16||0), 0.001); end
  def test_costpercapita_ba16; assert_in_delta(0, (worksheet.costpercapita_ba16||0), 0.001); end
  def test_costpercapita_bb16; assert_in_delta(0, (worksheet.costpercapita_bb16||0), 0.001); end
  def test_costpercapita_bc16; assert_in_delta(0, (worksheet.costpercapita_bc16||0), 0.001); end
  def test_costpercapita_bd16; assert_in_delta(0, (worksheet.costpercapita_bd16||0), 0.001); end
  def test_costpercapita_be16; assert_in_delta(0, (worksheet.costpercapita_be16||0), 0.001); end
  def test_costpercapita_bf16; assert_in_delta(0, (worksheet.costpercapita_bf16||0), 0.001); end
  def test_costpercapita_bg16; assert_in_delta(0, (worksheet.costpercapita_bg16||0), 0.001); end
  def test_costpercapita_bi16; assert_in_delta(0, (worksheet.costpercapita_bi16||0), 0.001); end
  def test_costpercapita_bj16; assert_in_delta(0, (worksheet.costpercapita_bj16||0), 0.001); end
  def test_costpercapita_bk16; assert_in_delta(0, (worksheet.costpercapita_bk16||0), 0.001); end
  def test_costpercapita_bl16; assert_in_delta(0, (worksheet.costpercapita_bl16||0), 0.001); end
  def test_costpercapita_bm16; assert_in_delta(0, (worksheet.costpercapita_bm16||0), 0.001); end
  def test_costpercapita_bn16; assert_in_delta(0, (worksheet.costpercapita_bn16||0), 0.001); end
  def test_costpercapita_bo16; assert_in_delta(0, (worksheet.costpercapita_bo16||0), 0.001); end
  def test_costpercapita_bp16; assert_in_delta(0, (worksheet.costpercapita_bp16||0), 0.001); end
  def test_costpercapita_bq16; assert_in_delta(0, (worksheet.costpercapita_bq16||0), 0.001); end
  def test_costpercapita_cf16; assert_in_delta(0, (worksheet.costpercapita_cf16||0), 0.001); end
  def test_costpercapita_cg16; assert_in_delta(0, (worksheet.costpercapita_cg16||0), 0.001); end
  def test_costpercapita_ch16; assert_in_delta(0, (worksheet.costpercapita_ch16||0), 0.001); end
  def test_costpercapita_ci16; assert_in_delta(0, (worksheet.costpercapita_ci16||0), 0.001); end
  def test_costpercapita_cj16; assert_in_delta(0, (worksheet.costpercapita_cj16||0), 0.001); end
  def test_costpercapita_ck16; assert_in_delta(0, (worksheet.costpercapita_ck16||0), 0.001); end
  def test_costpercapita_cl16; assert_in_delta(0, (worksheet.costpercapita_cl16||0), 0.001); end
  def test_costpercapita_cm16; assert_in_delta(0, (worksheet.costpercapita_cm16||0), 0.001); end
  def test_costpercapita_cn16; assert_in_delta(0, (worksheet.costpercapita_cn16||0), 0.001); end
  def test_costpercapita_cp16; assert_in_delta(0, (worksheet.costpercapita_cp16||0), 0.001); end
  def test_costpercapita_cq16; assert_in_delta(0, (worksheet.costpercapita_cq16||0), 0.001); end
  def test_costpercapita_bt16; assert_in_epsilon(4.4521867960402455, worksheet.costpercapita_bt16, 0.001); end
  def test_costpercapita_bu16; assert_in_epsilon(9.075898729391174, worksheet.costpercapita_bu16, 0.001); end
  def test_costpercapita_bv16; assert_in_epsilon(14.014250463234104, worksheet.costpercapita_bv16, 0.001); end
  def test_costpercapita_bw16; assert_in_epsilon(19.953752904935214, worksheet.costpercapita_bw16, 0.001); end
  def test_costpercapita_bx16; assert_in_epsilon(25.0135162741293, worksheet.costpercapita_bx16, 0.001); end
  def test_costpercapita_by16; assert_in_epsilon(31.045720440546607, worksheet.costpercapita_by16, 0.001); end
  def test_costpercapita_bz16; assert_in_epsilon(37.604935215521216, worksheet.costpercapita_bz16, 0.001); end
  def test_costpercapita_ca16; assert_in_epsilon(44.3156802545963, worksheet.costpercapita_ca16, 0.001); end
  def test_costpercapita_bs16; assert_in_epsilon(1.6398685987698778, worksheet.costpercapita_bs16, 0.001); end
  def test_costpercapita_cd16; assert_in_epsilon(369.27204240626264, worksheet.costpercapita_cd16, 0.001); end
  def test_costpercapita_aj16; assert_in_epsilon(4.4521867960402455, worksheet.costpercapita_aj16, 0.001); end
  def test_costpercapita_ak16; assert_in_epsilon(9.075898729391174, worksheet.costpercapita_ak16, 0.001); end
  def test_costpercapita_al16; assert_in_epsilon(14.014250463234104, worksheet.costpercapita_al16, 0.001); end
  def test_costpercapita_am16; assert_in_epsilon(19.953752904935214, worksheet.costpercapita_am16, 0.001); end
  def test_costpercapita_an16; assert_in_epsilon(25.0135162741293, worksheet.costpercapita_an16, 0.001); end
  def test_costpercapita_ao16; assert_in_epsilon(31.045720440546607, worksheet.costpercapita_ao16, 0.001); end
  def test_costpercapita_ap16; assert_in_epsilon(37.604935215521216, worksheet.costpercapita_ap16, 0.001); end
  def test_costpercapita_aq16; assert_in_epsilon(44.3156802545963, worksheet.costpercapita_aq16, 0.001); end
  def test_costpercapita_ai16; assert_in_epsilon(1.6398685987698778, worksheet.costpercapita_ai16, 0.001); end
  def test_costpercapita_at16; assert_in_epsilon(369.27204240626264, worksheet.costpercapita_at16, 0.001); end
  def test_costpercapita_cr16; assert_equal("ok", worksheet.costpercapita_cr16); end
  def test_costpercapita_a17; assert_equal("VI.a.Emissions", worksheet.costpercapita_a17); end
  def test_costpercapita_b17; assert_equal("Agriculture and land use", worksheet.costpercapita_b17); end
  def test_costpercapita_c17; assert_equal("Bioenergy", worksheet.costpercapita_c17); end
  def test_costpercapita_e17; assert_in_delta(0, (worksheet.costpercapita_e17||0), 0.001); end
  def test_costpercapita_f17; assert_in_delta(0, (worksheet.costpercapita_f17||0), 0.001); end
  def test_costpercapita_g17; assert_in_delta(0, (worksheet.costpercapita_g17||0), 0.001); end
  def test_costpercapita_h17; assert_in_delta(0, (worksheet.costpercapita_h17||0), 0.001); end
  def test_costpercapita_i17; assert_in_delta(0, (worksheet.costpercapita_i17||0), 0.001); end
  def test_costpercapita_j17; assert_in_delta(0, (worksheet.costpercapita_j17||0), 0.001); end
  def test_costpercapita_k17; assert_in_delta(0, (worksheet.costpercapita_k17||0), 0.001); end
  def test_costpercapita_l17; assert_in_delta(0, (worksheet.costpercapita_l17||0), 0.001); end
  def test_costpercapita_m17; assert_in_delta(0, (worksheet.costpercapita_m17||0), 0.001); end
  def test_costpercapita_y17; assert_in_delta(0, (worksheet.costpercapita_y17||0), 0.001); end
  def test_costpercapita_z17; assert_in_delta(0, (worksheet.costpercapita_z17||0), 0.001); end
  def test_costpercapita_aa17; assert_in_delta(0, (worksheet.costpercapita_aa17||0), 0.001); end
  def test_costpercapita_ab17; assert_in_delta(0, (worksheet.costpercapita_ab17||0), 0.001); end
  def test_costpercapita_ac17; assert_in_delta(0, (worksheet.costpercapita_ac17||0), 0.001); end
  def test_costpercapita_ad17; assert_in_delta(0, (worksheet.costpercapita_ad17||0), 0.001); end
  def test_costpercapita_ae17; assert_in_delta(0, (worksheet.costpercapita_ae17||0), 0.001); end
  def test_costpercapita_af17; assert_in_delta(0, (worksheet.costpercapita_af17||0), 0.001); end
  def test_costpercapita_ag17; assert_in_delta(0, (worksheet.costpercapita_ag17||0), 0.001); end
  def test_costpercapita_av17; assert_in_delta(0, (worksheet.costpercapita_av17||0), 0.001); end
  def test_costpercapita_aw17; assert_in_epsilon(5, worksheet.costpercapita_aw17, 0.001); end
  def test_costpercapita_ay17; assert_in_delta(0, (worksheet.costpercapita_ay17||0), 0.001); end
  def test_costpercapita_az17; assert_in_delta(0, (worksheet.costpercapita_az17||0), 0.001); end
  def test_costpercapita_ba17; assert_in_delta(0, (worksheet.costpercapita_ba17||0), 0.001); end
  def test_costpercapita_bb17; assert_in_delta(0, (worksheet.costpercapita_bb17||0), 0.001); end
  def test_costpercapita_bc17; assert_in_delta(0, (worksheet.costpercapita_bc17||0), 0.001); end
  def test_costpercapita_bd17; assert_in_delta(0, (worksheet.costpercapita_bd17||0), 0.001); end
  def test_costpercapita_be17; assert_in_delta(0, (worksheet.costpercapita_be17||0), 0.001); end
  def test_costpercapita_bf17; assert_in_delta(0, (worksheet.costpercapita_bf17||0), 0.001); end
  def test_costpercapita_bg17; assert_in_delta(0, (worksheet.costpercapita_bg17||0), 0.001); end
  def test_costpercapita_bi17; assert_in_delta(0, (worksheet.costpercapita_bi17||0), 0.001); end
  def test_costpercapita_bj17; assert_in_delta(0, (worksheet.costpercapita_bj17||0), 0.001); end
  def test_costpercapita_bk17; assert_in_delta(0, (worksheet.costpercapita_bk17||0), 0.001); end
  def test_costpercapita_bl17; assert_in_delta(0, (worksheet.costpercapita_bl17||0), 0.001); end
  def test_costpercapita_bm17; assert_in_delta(0, (worksheet.costpercapita_bm17||0), 0.001); end
  def test_costpercapita_bn17; assert_in_delta(0, (worksheet.costpercapita_bn17||0), 0.001); end
  def test_costpercapita_bo17; assert_in_delta(0, (worksheet.costpercapita_bo17||0), 0.001); end
  def test_costpercapita_bp17; assert_in_delta(0, (worksheet.costpercapita_bp17||0), 0.001); end
  def test_costpercapita_bq17; assert_in_delta(0, (worksheet.costpercapita_bq17||0), 0.001); end
  def test_costpercapita_cf17; assert_in_delta(0, (worksheet.costpercapita_cf17||0), 0.001); end
  def test_costpercapita_cg17; assert_in_delta(0, (worksheet.costpercapita_cg17||0), 0.001); end
  def test_costpercapita_ch17; assert_in_delta(0, (worksheet.costpercapita_ch17||0), 0.001); end
  def test_costpercapita_ci17; assert_in_delta(0, (worksheet.costpercapita_ci17||0), 0.001); end
  def test_costpercapita_cj17; assert_in_delta(0, (worksheet.costpercapita_cj17||0), 0.001); end
  def test_costpercapita_ck17; assert_in_delta(0, (worksheet.costpercapita_ck17||0), 0.001); end
  def test_costpercapita_cl17; assert_in_delta(0, (worksheet.costpercapita_cl17||0), 0.001); end
  def test_costpercapita_cm17; assert_in_delta(0, (worksheet.costpercapita_cm17||0), 0.001); end
  def test_costpercapita_cn17; assert_in_delta(0, (worksheet.costpercapita_cn17||0), 0.001); end
  def test_costpercapita_cp17; assert_in_delta(0, (worksheet.costpercapita_cp17||0), 0.001); end
  def test_costpercapita_cq17; assert_in_delta(0, (worksheet.costpercapita_cq17||0), 0.001); end
  def test_costpercapita_bt17; assert_in_delta(3.56296631660883e-06, worksheet.costpercapita_bt17, 0.001); end
  def test_costpercapita_bu17; assert_in_delta(8.422801279706587e-06, worksheet.costpercapita_bu17, 0.001); end
  def test_costpercapita_bv17; assert_in_delta(1.6194746574216773e-05, worksheet.costpercapita_bv17, 0.001); end
  def test_costpercapita_bw17; assert_in_delta(2.6026886937821877e-05, worksheet.costpercapita_bw17, 0.001); end
  def test_costpercapita_bx17; assert_in_delta(3.773809498070268e-05, worksheet.costpercapita_bx17, 0.001); end
  def test_costpercapita_by17; assert_in_delta(5.1131749719586335e-05, worksheet.costpercapita_by17, 0.001); end
  def test_costpercapita_bz17; assert_in_delta(6.602088677886481e-05, worksheet.costpercapita_bz17, 0.001); end
  def test_costpercapita_ca17; assert_in_delta(2.0070829396290667e-06, worksheet.costpercapita_ca17, 0.001); end
  def test_costpercapita_bs17; assert_in_delta(2.7233719118914287e-07, worksheet.costpercapita_bs17, 0.001); end
  def test_costpercapita_cd17; assert_in_delta(0.0004339015092764483, worksheet.costpercapita_cd17, 0.001); end
  def test_costpercapita_aj17; assert_in_delta(3.56296631660883e-06, worksheet.costpercapita_aj17, 0.001); end
  def test_costpercapita_ak17; assert_in_delta(8.422801279706587e-06, worksheet.costpercapita_ak17, 0.001); end
  def test_costpercapita_al17; assert_in_delta(1.6194746574216773e-05, worksheet.costpercapita_al17, 0.001); end
  def test_costpercapita_am17; assert_in_delta(2.6026886937821877e-05, worksheet.costpercapita_am17, 0.001); end
  def test_costpercapita_an17; assert_in_delta(3.773809498070268e-05, worksheet.costpercapita_an17, 0.001); end
  def test_costpercapita_ao17; assert_in_delta(5.1131749719586335e-05, worksheet.costpercapita_ao17, 0.001); end
  def test_costpercapita_ap17; assert_in_delta(6.602088677886481e-05, worksheet.costpercapita_ap17, 0.001); end
  def test_costpercapita_aq17; assert_in_delta(2.0070829396290667e-06, worksheet.costpercapita_aq17, 0.001); end
  def test_costpercapita_ai17; assert_in_delta(2.7233719118914287e-07, worksheet.costpercapita_ai17, 0.001); end
  def test_costpercapita_at17; assert_in_delta(0.0004339015092764483, worksheet.costpercapita_at17, 0.001); end
  def test_costpercapita_cr17; assert_equal("ok", worksheet.costpercapita_cr17); end
  def test_costpercapita_a18; assert_equal("VI.b.Bioenergy", worksheet.costpercapita_a18); end
  def test_costpercapita_b18; assert_equal("Energy from waste", worksheet.costpercapita_b18); end
  def test_costpercapita_c18; assert_equal("Bioenergy", worksheet.costpercapita_c18); end
  def test_costpercapita_y18; assert_in_delta(0, (worksheet.costpercapita_y18||0), 0.001); end
  def test_costpercapita_z18; assert_in_delta(0, (worksheet.costpercapita_z18||0), 0.001); end
  def test_costpercapita_aa18; assert_in_delta(0, (worksheet.costpercapita_aa18||0), 0.001); end
  def test_costpercapita_ab18; assert_in_delta(0, (worksheet.costpercapita_ab18||0), 0.001); end
  def test_costpercapita_ac18; assert_in_delta(0, (worksheet.costpercapita_ac18||0), 0.001); end
  def test_costpercapita_ad18; assert_in_delta(0, (worksheet.costpercapita_ad18||0), 0.001); end
  def test_costpercapita_ae18; assert_in_delta(0, (worksheet.costpercapita_ae18||0), 0.001); end
  def test_costpercapita_af18; assert_in_delta(0, (worksheet.costpercapita_af18||0), 0.001); end
  def test_costpercapita_ag18; assert_in_delta(0, (worksheet.costpercapita_ag18||0), 0.001); end
  def test_costpercapita_av18; assert_in_delta(0, (worksheet.costpercapita_av18||0), 0.001); end
  def test_costpercapita_aw18; assert_in_epsilon(15, worksheet.costpercapita_aw18, 0.001); end
  def test_costpercapita_bt18; assert_in_epsilon(8.237205244742395, worksheet.costpercapita_bt18, 0.001); end
  def test_costpercapita_bu18; assert_in_epsilon(11.491277612196019, worksheet.costpercapita_bu18, 0.001); end
  def test_costpercapita_bv18; assert_in_epsilon(11.872956433548486, worksheet.costpercapita_bv18, 0.001); end
  def test_costpercapita_bw18; assert_in_epsilon(11.241624585191163, worksheet.costpercapita_bw18, 0.001); end
  def test_costpercapita_bx18; assert_in_epsilon(10.522607491998096, worksheet.costpercapita_bx18, 0.001); end
  def test_costpercapita_by18; assert_in_epsilon(9.889130296704128, worksheet.costpercapita_by18, 0.001); end
  def test_costpercapita_bz18; assert_in_epsilon(9.325566659585514, worksheet.costpercapita_bz18, 0.001); end
  def test_costpercapita_ca18; assert_in_epsilon(8.797997438345833, worksheet.costpercapita_ca18, 0.001); end
  def test_costpercapita_bs18; assert_in_epsilon(4.710288929214129, worksheet.costpercapita_bs18, 0.001); end
  def test_costpercapita_cd18; assert_in_epsilon(209.6737933425519, worksheet.costpercapita_cd18, 0.001); end
  def test_costpercapita_cg18; assert_in_epsilon(-3.758569775940491, worksheet.costpercapita_cg18, 0.001); end
  def test_costpercapita_ch18; assert_in_delta(-0.8895859084853814, worksheet.costpercapita_ch18, 0.001); end
  def test_costpercapita_ci18; assert_in_delta(0.24853043506533729, worksheet.costpercapita_ci18, 0.001); end
  def test_costpercapita_cj18; assert_in_delta(0.2757891083875858, worksheet.costpercapita_cj18, 0.001); end
  def test_costpercapita_ck18; assert_in_delta(0.20999407428765277, worksheet.costpercapita_ck18, 0.001); end
  def test_costpercapita_cl18; assert_in_delta(0.17649865741188173, worksheet.costpercapita_cl18, 0.001); end
  def test_costpercapita_cm18; assert_in_delta(0.17297787536670006, worksheet.costpercapita_cm18, 0.001); end
  def test_costpercapita_cn18; assert_in_delta(0.1697498080563971, worksheet.costpercapita_cn18, 0.001); end
  def test_costpercapita_cf18; assert_in_epsilon(-6.888065701994826, worksheet.costpercapita_cf18, 0.001); end
  def test_costpercapita_cq18; assert_in_epsilon(-23.180104841660793, worksheet.costpercapita_cq18, 0.001); end
  def test_costpercapita_aj18; assert_in_epsilon(11.995775020682888, worksheet.costpercapita_aj18, 0.001); end
  def test_costpercapita_ak18; assert_in_epsilon(12.3808635206814, worksheet.costpercapita_ak18, 0.001); end
  def test_costpercapita_al18; assert_in_epsilon(11.624425998483149, worksheet.costpercapita_al18, 0.001); end
  def test_costpercapita_am18; assert_in_epsilon(10.965835476803578, worksheet.costpercapita_am18, 0.001); end
  def test_costpercapita_an18; assert_in_epsilon(10.312613417710443, worksheet.costpercapita_an18, 0.001); end
  def test_costpercapita_ao18; assert_in_epsilon(9.712631639292246, worksheet.costpercapita_ao18, 0.001); end
  def test_costpercapita_ap18; assert_in_epsilon(9.152588784218814, worksheet.costpercapita_ap18, 0.001); end
  def test_costpercapita_aq18; assert_in_epsilon(8.628247630289435, worksheet.costpercapita_aq18, 0.001); end
  def test_costpercapita_ai18; assert_in_epsilon(11.598354631208956, worksheet.costpercapita_ai18, 0.001); end
  def test_costpercapita_at18; assert_in_epsilon(232.8538981842127, worksheet.costpercapita_at18, 0.001); end
  def test_costpercapita_cr18; assert_equal("ok", worksheet.costpercapita_cr18); end
  def test_costpercapita_a19; assert_equal("VI.b.Waste", worksheet.costpercapita_a19); end
  def test_costpercapita_b19; assert_equal("Waste arising", worksheet.costpercapita_b19); end
  def test_costpercapita_c19; assert_equal("Bioenergy", worksheet.costpercapita_c19); end
  def test_costpercapita_y19; assert_in_delta(0, (worksheet.costpercapita_y19||0), 0.001); end
  def test_costpercapita_z19; assert_in_delta(0, (worksheet.costpercapita_z19||0), 0.001); end
  def test_costpercapita_aa19; assert_in_delta(0, (worksheet.costpercapita_aa19||0), 0.001); end
  def test_costpercapita_ab19; assert_in_delta(0, (worksheet.costpercapita_ab19||0), 0.001); end
  def test_costpercapita_ac19; assert_in_delta(0, (worksheet.costpercapita_ac19||0), 0.001); end
  def test_costpercapita_ad19; assert_in_delta(0, (worksheet.costpercapita_ad19||0), 0.001); end
  def test_costpercapita_ae19; assert_in_delta(0, (worksheet.costpercapita_ae19||0), 0.001); end
  def test_costpercapita_af19; assert_in_delta(0, (worksheet.costpercapita_af19||0), 0.001); end
  def test_costpercapita_ag19; assert_in_delta(0, (worksheet.costpercapita_ag19||0), 0.001); end
  def test_costpercapita_av19; assert_in_delta(0, (worksheet.costpercapita_av19||0), 0.001); end
  def test_costpercapita_aw19; assert_in_epsilon(15, worksheet.costpercapita_aw19, 0.001); end
  def test_costpercapita_bt19; assert_in_epsilon(71.69460531427282, worksheet.costpercapita_bt19, 0.001); end
  def test_costpercapita_bu19; assert_in_epsilon(83.37052422601927, worksheet.costpercapita_bu19, 0.001); end
  def test_costpercapita_bv19; assert_in_epsilon(86.99223071149774, worksheet.costpercapita_bv19, 0.001); end
  def test_costpercapita_bw19; assert_in_epsilon(85.87361960494995, worksheet.costpercapita_bw19, 0.001); end
  def test_costpercapita_bx19; assert_in_epsilon(83.71397544240959, worksheet.costpercapita_bx19, 0.001); end
  def test_costpercapita_by19; assert_in_epsilon(81.59176711754549, worksheet.costpercapita_by19, 0.001); end
  def test_costpercapita_bz19; assert_in_epsilon(79.25939514897537, worksheet.costpercapita_bz19, 0.001); end
  def test_costpercapita_ca19; assert_in_epsilon(76.91209404094657, worksheet.costpercapita_ca19, 0.001); end
  def test_costpercapita_bs19; assert_in_epsilon(60.299389967308066, worksheet.costpercapita_bs19, 0.001); end
  def test_costpercapita_cd19; assert_in_epsilon(1679.254480830283, worksheet.costpercapita_cd19, 0.001); end
  def test_costpercapita_cg19; assert_in_epsilon(-17.647898098158286, worksheet.costpercapita_cg19, 0.001); end
  def test_costpercapita_ch19; assert_in_epsilon(-7.604290333719666, worksheet.costpercapita_ch19, 0.001); end
  def test_costpercapita_ci19; assert_in_epsilon(-1.152745856340238, worksheet.costpercapita_ci19, 0.001); end
  def test_costpercapita_cj19; assert_in_delta(-0.6177849820078228, worksheet.costpercapita_cj19, 0.001); end
  def test_costpercapita_ck19; assert_in_delta(-0.5444409662725083, worksheet.costpercapita_ck19, 0.001); end
  def test_costpercapita_cl19; assert_in_delta(0.19703635328245808, worksheet.costpercapita_cl19, 0.001); end
  def test_costpercapita_cm19; assert_in_delta(0.246760740787023, worksheet.costpercapita_cm19, 0.001); end
  def test_costpercapita_cn19; assert_in_delta(0.08775381873148971, worksheet.costpercapita_cn19, 0.001); end
  def test_costpercapita_cf19; assert_in_epsilon(-28.198478171921455, worksheet.costpercapita_cf19, 0.001); end
  def test_costpercapita_cq19; assert_in_epsilon(-134.74597861283416, worksheet.costpercapita_cq19, 0.001); end
  def test_costpercapita_aj19; assert_in_epsilon(89.3425034124311, worksheet.costpercapita_aj19, 0.001); end
  def test_costpercapita_ak19; assert_in_epsilon(90.97481455973893, worksheet.costpercapita_ak19, 0.001); end
  def test_costpercapita_al19; assert_in_epsilon(88.14497656783799, worksheet.costpercapita_al19, 0.001); end
  def test_costpercapita_am19; assert_in_epsilon(86.49140458695777, worksheet.costpercapita_am19, 0.001); end
  def test_costpercapita_an19; assert_in_epsilon(84.2584164086821, worksheet.costpercapita_an19, 0.001); end
  def test_costpercapita_ao19; assert_in_epsilon(81.39473076426303, worksheet.costpercapita_ao19, 0.001); end
  def test_costpercapita_ap19; assert_in_epsilon(79.01263440818835, worksheet.costpercapita_ap19, 0.001); end
  def test_costpercapita_aq19; assert_in_epsilon(76.82434022221508, worksheet.costpercapita_aq19, 0.001); end
  def test_costpercapita_ai19; assert_in_epsilon(88.49786813922952, worksheet.costpercapita_ai19, 0.001); end
  def test_costpercapita_at19; assert_in_epsilon(1814.000459443117, worksheet.costpercapita_at19, 0.001); end
  def test_costpercapita_cr19; assert_equal("ok", worksheet.costpercapita_cr19); end
  def test_costpercapita_a20; assert_equal("VI.c", worksheet.costpercapita_a20); end
  def test_costpercapita_b20; assert_equal("Marine algae", worksheet.costpercapita_b20); end
  def test_costpercapita_c20; assert_equal("Bioenergy", worksheet.costpercapita_c20); end
  def test_costpercapita_e20; assert_in_delta(0, (worksheet.costpercapita_e20||0), 0.001); end
  def test_costpercapita_f20; assert_in_delta(0, (worksheet.costpercapita_f20||0), 0.001); end
  def test_costpercapita_g20; assert_in_delta(0, (worksheet.costpercapita_g20||0), 0.001); end
  def test_costpercapita_h20; assert_in_delta(0, (worksheet.costpercapita_h20||0), 0.001); end
  def test_costpercapita_i20; assert_in_delta(0, (worksheet.costpercapita_i20||0), 0.001); end
  def test_costpercapita_j20; assert_in_delta(0, (worksheet.costpercapita_j20||0), 0.001); end
  def test_costpercapita_k20; assert_in_delta(0, (worksheet.costpercapita_k20||0), 0.001); end
  def test_costpercapita_l20; assert_in_delta(0, (worksheet.costpercapita_l20||0), 0.001); end
  def test_costpercapita_m20; assert_in_delta(0, (worksheet.costpercapita_m20||0), 0.001); end
  def test_costpercapita_o20; assert_in_delta(0, (worksheet.costpercapita_o20||0), 0.001); end
  def test_costpercapita_p20; assert_in_delta(0, (worksheet.costpercapita_p20||0), 0.001); end
  def test_costpercapita_q20; assert_in_delta(0, (worksheet.costpercapita_q20||0), 0.001); end
  def test_costpercapita_r20; assert_in_delta(0, (worksheet.costpercapita_r20||0), 0.001); end
  def test_costpercapita_s20; assert_in_delta(0, (worksheet.costpercapita_s20||0), 0.001); end
  def test_costpercapita_t20; assert_in_delta(0, (worksheet.costpercapita_t20||0), 0.001); end
  def test_costpercapita_u20; assert_in_delta(0, (worksheet.costpercapita_u20||0), 0.001); end
  def test_costpercapita_v20; assert_in_delta(0, (worksheet.costpercapita_v20||0), 0.001); end
  def test_costpercapita_w20; assert_in_delta(0, (worksheet.costpercapita_w20||0), 0.001); end
  def test_costpercapita_av20; assert_in_delta(0, (worksheet.costpercapita_av20||0), 0.001); end
  def test_costpercapita_aw20; assert_in_epsilon(5, worksheet.costpercapita_aw20, 0.001); end
  def test_costpercapita_ay20; assert_in_delta(0, (worksheet.costpercapita_ay20||0), 0.001); end
  def test_costpercapita_az20; assert_in_delta(0, (worksheet.costpercapita_az20||0), 0.001); end
  def test_costpercapita_ba20; assert_in_delta(0, (worksheet.costpercapita_ba20||0), 0.001); end
  def test_costpercapita_bb20; assert_in_delta(0, (worksheet.costpercapita_bb20||0), 0.001); end
  def test_costpercapita_bc20; assert_in_delta(0, (worksheet.costpercapita_bc20||0), 0.001); end
  def test_costpercapita_bd20; assert_in_delta(0, (worksheet.costpercapita_bd20||0), 0.001); end
  def test_costpercapita_be20; assert_in_delta(0, (worksheet.costpercapita_be20||0), 0.001); end
  def test_costpercapita_bf20; assert_in_delta(0, (worksheet.costpercapita_bf20||0), 0.001); end
  def test_costpercapita_bg20; assert_in_delta(0, (worksheet.costpercapita_bg20||0), 0.001); end
  def test_costpercapita_bi20; assert_in_delta(0, (worksheet.costpercapita_bi20||0), 0.001); end
  def test_costpercapita_bj20; assert_in_delta(0, (worksheet.costpercapita_bj20||0), 0.001); end
  def test_costpercapita_bk20; assert_in_delta(0, (worksheet.costpercapita_bk20||0), 0.001); end
  def test_costpercapita_bl20; assert_in_delta(0, (worksheet.costpercapita_bl20||0), 0.001); end
  def test_costpercapita_bm20; assert_in_delta(0, (worksheet.costpercapita_bm20||0), 0.001); end
  def test_costpercapita_bn20; assert_in_delta(0, (worksheet.costpercapita_bn20||0), 0.001); end
  def test_costpercapita_bo20; assert_in_delta(0, (worksheet.costpercapita_bo20||0), 0.001); end
  def test_costpercapita_bp20; assert_in_delta(0, (worksheet.costpercapita_bp20||0), 0.001); end
  def test_costpercapita_bq20; assert_in_delta(0, (worksheet.costpercapita_bq20||0), 0.001); end
  def test_costpercapita_cf20; assert_in_delta(0, (worksheet.costpercapita_cf20||0), 0.001); end
  def test_costpercapita_cg20; assert_in_delta(0, (worksheet.costpercapita_cg20||0), 0.001); end
  def test_costpercapita_ch20; assert_in_delta(0, (worksheet.costpercapita_ch20||0), 0.001); end
  def test_costpercapita_ci20; assert_in_delta(0, (worksheet.costpercapita_ci20||0), 0.001); end
  def test_costpercapita_cj20; assert_in_delta(0, (worksheet.costpercapita_cj20||0), 0.001); end
  def test_costpercapita_ck20; assert_in_delta(0, (worksheet.costpercapita_ck20||0), 0.001); end
  def test_costpercapita_cl20; assert_in_delta(0, (worksheet.costpercapita_cl20||0), 0.001); end
  def test_costpercapita_cm20; assert_in_delta(0, (worksheet.costpercapita_cm20||0), 0.001); end
  def test_costpercapita_cn20; assert_in_delta(0, (worksheet.costpercapita_cn20||0), 0.001); end
  def test_costpercapita_cp20; assert_in_delta(0, (worksheet.costpercapita_cp20||0), 0.001); end
  def test_costpercapita_cq20; assert_in_delta(0, (worksheet.costpercapita_cq20||0), 0.001); end
  def test_costpercapita_bt20; assert_in_delta(0, (worksheet.costpercapita_bt20||0), 0.001); end
  def test_costpercapita_bu20; assert_in_delta(0.0003382341609226739, worksheet.costpercapita_bu20, 0.001); end
  def test_costpercapita_bv20; assert_in_delta(0.02185075040138372, worksheet.costpercapita_bv20, 0.001); end
  def test_costpercapita_bw20; assert_in_delta(0.10626892277573406, worksheet.costpercapita_bw20, 0.001); end
  def test_costpercapita_bx20; assert_in_delta(0.20753136871226646, worksheet.costpercapita_bx20, 0.001); end
  def test_costpercapita_by20; assert_in_delta(0.40621094916428396, worksheet.costpercapita_by20, 0.001); end
  def test_costpercapita_bz20; assert_in_delta(0.9952697086691628, worksheet.costpercapita_bz20, 0.001); end
  def test_costpercapita_ca20; assert_in_epsilon(2.289411168453889, worksheet.costpercapita_ca20, 0.001); end
  def test_costpercapita_bs20; assert_in_delta(0, (worksheet.costpercapita_bs20||0), 0.001); end
  def test_costpercapita_cd20; assert_in_epsilon(6.060192231462387, worksheet.costpercapita_cd20, 0.001); end
  def test_costpercapita_aj20; assert_in_delta(0, (worksheet.costpercapita_aj20||0), 0.001); end
  def test_costpercapita_ak20; assert_in_delta(0.0003382341609226739, worksheet.costpercapita_ak20, 0.001); end
  def test_costpercapita_al20; assert_in_delta(0.02185075040138372, worksheet.costpercapita_al20, 0.001); end
  def test_costpercapita_am20; assert_in_delta(0.10626892277573406, worksheet.costpercapita_am20, 0.001); end
  def test_costpercapita_an20; assert_in_delta(0.20753136871226646, worksheet.costpercapita_an20, 0.001); end
  def test_costpercapita_ao20; assert_in_delta(0.40621094916428396, worksheet.costpercapita_ao20, 0.001); end
  def test_costpercapita_ap20; assert_in_delta(0.9952697086691628, worksheet.costpercapita_ap20, 0.001); end
  def test_costpercapita_aq20; assert_in_epsilon(2.289411168453889, worksheet.costpercapita_aq20, 0.001); end
  def test_costpercapita_ai20; assert_in_delta(0, (worksheet.costpercapita_ai20||0), 0.001); end
  def test_costpercapita_at20; assert_in_epsilon(6.060192231462387, worksheet.costpercapita_at20, 0.001); end
  def test_costpercapita_cr20; assert_equal("ok", worksheet.costpercapita_cr20); end
  def test_costpercapita_a21; assert_equal("VII.a.Imports", worksheet.costpercapita_a21); end
  def test_costpercapita_b21; assert_equal("Electricity imports", worksheet.costpercapita_b21); end
  def test_costpercapita_c21; assert_equal("Electricity", worksheet.costpercapita_c21); end
  def test_costpercapita_y21; assert_in_delta(0, (worksheet.costpercapita_y21||0), 0.001); end
  def test_costpercapita_z21; assert_in_delta(0, (worksheet.costpercapita_z21||0), 0.001); end
  def test_costpercapita_aa21; assert_in_delta(0, (worksheet.costpercapita_aa21||0), 0.001); end
  def test_costpercapita_ab21; assert_in_delta(0, (worksheet.costpercapita_ab21||0), 0.001); end
  def test_costpercapita_ac21; assert_in_delta(0, (worksheet.costpercapita_ac21||0), 0.001); end
  def test_costpercapita_ad21; assert_in_delta(0, (worksheet.costpercapita_ad21||0), 0.001); end
  def test_costpercapita_ae21; assert_in_delta(0, (worksheet.costpercapita_ae21||0), 0.001); end
  def test_costpercapita_af21; assert_in_delta(0, (worksheet.costpercapita_af21||0), 0.001); end
  def test_costpercapita_ag21; assert_in_delta(0, (worksheet.costpercapita_ag21||0), 0.001); end
  def test_costpercapita_av21; assert_in_delta(0, (worksheet.costpercapita_av21||0), 0.001); end
  def test_costpercapita_aw21; assert_in_epsilon(5, worksheet.costpercapita_aw21, 0.001); end
  def test_costpercapita_bt21; assert_in_delta(0, (worksheet.costpercapita_bt21||0), 0.001); end
  def test_costpercapita_bu21; assert_in_delta(0, (worksheet.costpercapita_bu21||0), 0.001); end
  def test_costpercapita_bv21; assert_in_delta(0, (worksheet.costpercapita_bv21||0), 0.001); end
  def test_costpercapita_bw21; assert_in_delta(0, (worksheet.costpercapita_bw21||0), 0.001); end
  def test_costpercapita_bx21; assert_in_delta(0, (worksheet.costpercapita_bx21||0), 0.001); end
  def test_costpercapita_by21; assert_in_delta(0, (worksheet.costpercapita_by21||0), 0.001); end
  def test_costpercapita_bz21; assert_in_delta(0, (worksheet.costpercapita_bz21||0), 0.001); end
  def test_costpercapita_ca21; assert_in_delta(0, (worksheet.costpercapita_ca21||0), 0.001); end
  def test_costpercapita_bs21; assert_in_delta(0, (worksheet.costpercapita_bs21||0), 0.001); end
  def test_costpercapita_cd21; assert_in_delta(0, (worksheet.costpercapita_cd21||0), 0.001); end
  def test_costpercapita_cg21; assert_in_delta(0, (worksheet.costpercapita_cg21||0), 0.001); end
  def test_costpercapita_ch21; assert_in_delta(0, (worksheet.costpercapita_ch21||0), 0.001); end
  def test_costpercapita_ci21; assert_in_delta(0, (worksheet.costpercapita_ci21||0), 0.001); end
  def test_costpercapita_cj21; assert_in_delta(0, (worksheet.costpercapita_cj21||0), 0.001); end
  def test_costpercapita_ck21; assert_in_delta(0, (worksheet.costpercapita_ck21||0), 0.001); end
  def test_costpercapita_cl21; assert_in_delta(0, (worksheet.costpercapita_cl21||0), 0.001); end
  def test_costpercapita_cm21; assert_in_delta(0, (worksheet.costpercapita_cm21||0), 0.001); end
  def test_costpercapita_cn21; assert_in_delta(0, (worksheet.costpercapita_cn21||0), 0.001); end
  def test_costpercapita_cf21; assert_in_delta(0, (worksheet.costpercapita_cf21||0), 0.001); end
  def test_costpercapita_cq21; assert_in_delta(0, (worksheet.costpercapita_cq21||0), 0.001); end
  def test_costpercapita_aj21; assert_in_delta(0, (worksheet.costpercapita_aj21||0), 0.001); end
  def test_costpercapita_ak21; assert_in_delta(0, (worksheet.costpercapita_ak21||0), 0.001); end
  def test_costpercapita_al21; assert_in_delta(0, (worksheet.costpercapita_al21||0), 0.001); end
  def test_costpercapita_am21; assert_in_delta(0, (worksheet.costpercapita_am21||0), 0.001); end
  def test_costpercapita_an21; assert_in_delta(0, (worksheet.costpercapita_an21||0), 0.001); end
  def test_costpercapita_ao21; assert_in_delta(0, (worksheet.costpercapita_ao21||0), 0.001); end
  def test_costpercapita_ap21; assert_in_delta(0, (worksheet.costpercapita_ap21||0), 0.001); end
  def test_costpercapita_aq21; assert_in_delta(0, (worksheet.costpercapita_aq21||0), 0.001); end
  def test_costpercapita_ai21; assert_in_delta(0, (worksheet.costpercapita_ai21||0), 0.001); end
  def test_costpercapita_at21; assert_in_delta(0, (worksheet.costpercapita_at21||0), 0.001); end
  def test_costpercapita_cr21; assert_equal("ok", worksheet.costpercapita_cr21); end
  def test_costpercapita_a22; assert_equal("VII.a.Exports", worksheet.costpercapita_a22); end
  def test_costpercapita_b22; assert_equal("Electricity Exports", worksheet.costpercapita_b22); end
  def test_costpercapita_c22; assert_equal("Electricity", worksheet.costpercapita_c22); end
  def test_costpercapita_av22; assert_in_delta(0, (worksheet.costpercapita_av22||0), 0.001); end
  def test_costpercapita_aw22; assert_in_epsilon(5, worksheet.costpercapita_aw22, 0.001); end
  def test_costpercapita_bt22; assert_in_delta(-1.766855683391294e-14, worksheet.costpercapita_bt22, 0.001); end
  def test_costpercapita_bu22; assert_in_delta(-3.4180241924198217e-14, worksheet.costpercapita_bu22, 0.001); end
  def test_costpercapita_bv22; assert_in_delta(0, (worksheet.costpercapita_bv22||0), 0.001); end
  def test_costpercapita_bw22; assert_in_epsilon(-17.37706516644294, worksheet.costpercapita_bw22, 0.001); end
  def test_costpercapita_bx22; assert_in_epsilon(-44.095331042076, worksheet.costpercapita_bx22, 0.001); end
  def test_costpercapita_by22; assert_in_epsilon(-55.315196746680854, worksheet.costpercapita_by22, 0.001); end
  def test_costpercapita_bz22; assert_in_epsilon(-64.071080724354, worksheet.costpercapita_bz22, 0.001); end
  def test_costpercapita_ca22; assert_in_epsilon(-67.21558960420873, worksheet.costpercapita_ca22, 0.001); end
  def test_costpercapita_bs22; assert_in_delta(-1.827104583563191e-14, worksheet.costpercapita_bs22, 0.001); end
  def test_costpercapita_cd22; assert_in_epsilon(-423.0479639917099, worksheet.costpercapita_cd22, 0.001); end
  def test_costpercapita_cg22; assert_in_delta(0, (worksheet.costpercapita_cg22||0), 0.001); end
  def test_costpercapita_ch22; assert_in_delta(0, (worksheet.costpercapita_ch22||0), 0.001); end
  def test_costpercapita_ci22; assert_in_delta(0, (worksheet.costpercapita_ci22||0), 0.001); end
  def test_costpercapita_cj22; assert_in_delta(0, (worksheet.costpercapita_cj22||0), 0.001); end
  def test_costpercapita_ck22; assert_in_delta(0, (worksheet.costpercapita_ck22||0), 0.001); end
  def test_costpercapita_cl22; assert_in_delta(0, (worksheet.costpercapita_cl22||0), 0.001); end
  def test_costpercapita_cm22; assert_in_delta(0, (worksheet.costpercapita_cm22||0), 0.001); end
  def test_costpercapita_cn22; assert_in_delta(0, (worksheet.costpercapita_cn22||0), 0.001); end
  def test_costpercapita_cf22; assert_in_delta(0, (worksheet.costpercapita_cf22||0), 0.001); end
  def test_costpercapita_cq22; assert_in_delta(0, (worksheet.costpercapita_cq22||0), 0.001); end
  def test_costpercapita_aj22; assert_in_delta(-1.766855683391294e-14, worksheet.costpercapita_aj22, 0.001); end
  def test_costpercapita_ak22; assert_in_delta(-3.4180241924198217e-14, worksheet.costpercapita_ak22, 0.001); end
  def test_costpercapita_al22; assert_in_delta(0, (worksheet.costpercapita_al22||0), 0.001); end
  def test_costpercapita_am22; assert_in_epsilon(-17.37706516644294, worksheet.costpercapita_am22, 0.001); end
  def test_costpercapita_an22; assert_in_epsilon(-44.095331042076, worksheet.costpercapita_an22, 0.001); end
  def test_costpercapita_ao22; assert_in_epsilon(-55.315196746680854, worksheet.costpercapita_ao22, 0.001); end
  def test_costpercapita_ap22; assert_in_epsilon(-64.071080724354, worksheet.costpercapita_ap22, 0.001); end
  def test_costpercapita_aq22; assert_in_epsilon(-67.21558960420873, worksheet.costpercapita_aq22, 0.001); end
  def test_costpercapita_ai22; assert_in_delta(-1.827104583563191e-14, worksheet.costpercapita_ai22, 0.001); end
  def test_costpercapita_at22; assert_in_epsilon(-423.0479639917099, worksheet.costpercapita_at22, 0.001); end
  def test_costpercapita_cr22; assert_equal("ok", worksheet.costpercapita_cr22); end
  def test_costpercapita_a23; assert_equal("VII.b", worksheet.costpercapita_a23); end
  def test_costpercapita_b23; assert_equal("Electricity grid distribution", worksheet.costpercapita_b23); end
  def test_costpercapita_c23; assert_equal("Electricity", worksheet.costpercapita_c23); end
  def test_costpercapita_y23; assert_in_delta(0, (worksheet.costpercapita_y23||0), 0.001); end
  def test_costpercapita_z23; assert_in_delta(0, (worksheet.costpercapita_z23||0), 0.001); end
  def test_costpercapita_aa23; assert_in_delta(0, (worksheet.costpercapita_aa23||0), 0.001); end
  def test_costpercapita_ab23; assert_in_delta(0, (worksheet.costpercapita_ab23||0), 0.001); end
  def test_costpercapita_ac23; assert_in_delta(0, (worksheet.costpercapita_ac23||0), 0.001); end
  def test_costpercapita_ad23; assert_in_delta(0, (worksheet.costpercapita_ad23||0), 0.001); end
  def test_costpercapita_ae23; assert_in_delta(0, (worksheet.costpercapita_ae23||0), 0.001); end
  def test_costpercapita_af23; assert_in_delta(0, (worksheet.costpercapita_af23||0), 0.001); end
  def test_costpercapita_ag23; assert_in_delta(0, (worksheet.costpercapita_ag23||0), 0.001); end
  def test_costpercapita_av23; assert_in_delta(0, (worksheet.costpercapita_av23||0), 0.001); end
  def test_costpercapita_aw23; assert_in_epsilon(20, worksheet.costpercapita_aw23, 0.001); end
  def test_intermediate_output_ba132; assert_in_epsilon(103.84501498630223, worksheet.intermediate_output_ba132, 0.001); end
  def test_intermediate_output_az132; assert_in_epsilon(87.06478879632135, worksheet.intermediate_output_az132, 0.001); end
  def test_costpercapita_bt23; assert_in_epsilon(16.24550313419597, worksheet.costpercapita_bt23, 0.001); end
  def test_intermediate_output_bb132; assert_in_epsilon(135.3887948298913, worksheet.intermediate_output_bb132, 0.001); end
  def test_costpercapita_bu23; assert_in_epsilon(26.210432622698157, worksheet.costpercapita_bu23, 0.001); end
  def test_intermediate_output_bc132; assert_in_epsilon(171.12373482974778, worksheet.intermediate_output_bc132, 0.001); end
  def test_costpercapita_bv23; assert_in_epsilon(37.52962825957644, worksheet.costpercapita_bv23, 0.001); end
  def test_intermediate_output_bd132; assert_in_epsilon(201.56357719520176, worksheet.intermediate_output_bd132, 0.001); end
  def test_costpercapita_bw23; assert_in_epsilon(46.093068119467716, worksheet.costpercapita_bw23, 0.001); end
  def test_intermediate_output_be132; assert_in_epsilon(235.21548804569818, worksheet.intermediate_output_be132, 0.001); end
  def test_costpercapita_bx23; assert_in_epsilon(53.252196730792924, worksheet.costpercapita_bx23, 0.001); end
  def test_intermediate_output_bf132; assert_in_epsilon(267.7511038786654, worksheet.intermediate_output_bf132, 0.001); end
  def test_costpercapita_by23; assert_in_epsilon(58.625670455816895, worksheet.costpercapita_by23, 0.001); end
  def test_intermediate_output_bg132; assert_in_epsilon(300.57685155035927, worksheet.intermediate_output_bg132, 0.001); end
  def test_costpercapita_bz23; assert_in_epsilon(72.53267562405341, worksheet.costpercapita_bz23, 0.001); end
  def test_intermediate_output_bh132; assert_in_epsilon(327.7111143581938, worksheet.intermediate_output_bh132, 0.001); end
  def test_costpercapita_ca23; assert_in_epsilon(67.5397686906867, worksheet.costpercapita_ca23, 0.001); end
  def test_intermediate_output_ay132; assert_in_epsilon(77.37675546920683, worksheet.intermediate_output_ay132, 0.001); end
  def test_costpercapita_bs23; assert_in_epsilon(9.627813267805076, worksheet.costpercapita_bs23, 0.001); end
  def test_costpercapita_cd23; assert_in_epsilon(816.8392639485203, worksheet.costpercapita_cd23, 0.001); end
  def test_costpercapita_cg23; assert_in_epsilon(-14.348892949889946, worksheet.costpercapita_cg23, 0.001); end
  def test_costpercapita_ch23; assert_in_epsilon(-16.469205075595326, worksheet.costpercapita_ch23, 0.001); end
  def test_costpercapita_ci23; assert_in_epsilon(-13.046221894041928, worksheet.costpercapita_ci23, 0.001); end
  def test_costpercapita_cj23; assert_in_epsilon(-7.1961075904250915, worksheet.costpercapita_cj23, 0.001); end
  def test_costpercapita_ck23; assert_in_epsilon(-6.7394067415396455, worksheet.costpercapita_ck23, 0.001); end
  def test_costpercapita_cl23; assert_in_epsilon(-6.0041199522299555, worksheet.costpercapita_cl23, 0.001); end
  def test_costpercapita_cm23; assert_in_epsilon(2.810811219718737, worksheet.costpercapita_cm23, 0.001); end
  def test_costpercapita_cn23; assert_in_epsilon(-3.8792074982651874, worksheet.costpercapita_cn23, 0.001); end
  def test_costpercapita_cf23; assert_in_epsilon(-14.912150232024032, worksheet.costpercapita_cf23, 0.001); end
  def test_costpercapita_cq23; assert_in_epsilon(-216.4913904339124, worksheet.costpercapita_cq23, 0.001); end
  def test_costpercapita_aj23; assert_in_epsilon(30.594396084085915, worksheet.costpercapita_aj23, 0.001); end
  def test_costpercapita_ak23; assert_in_epsilon(42.67963769829348, worksheet.costpercapita_ak23, 0.001); end
  def test_costpercapita_al23; assert_in_epsilon(50.57585015361837, worksheet.costpercapita_al23, 0.001); end
  def test_costpercapita_am23; assert_in_epsilon(53.28917570989281, worksheet.costpercapita_am23, 0.001); end
  def test_costpercapita_an23; assert_in_epsilon(59.99160347233258, worksheet.costpercapita_an23, 0.001); end
  def test_costpercapita_ao23; assert_in_epsilon(64.62979040804684, worksheet.costpercapita_ao23, 0.001); end
  def test_costpercapita_ap23; assert_in_epsilon(69.72186440433468, worksheet.costpercapita_ap23, 0.001); end
  def test_costpercapita_aq23; assert_in_epsilon(71.41897618895187, worksheet.costpercapita_aq23, 0.001); end
  def test_costpercapita_ai23; assert_in_epsilon(24.53996349982911, worksheet.costpercapita_ai23, 0.001); end
  def test_costpercapita_at23; assert_in_epsilon(1033.3306543824328, worksheet.costpercapita_at23, 0.001); end
  def test_costpercapita_cr23; assert_equal("ok", worksheet.costpercapita_cr23); end
  def test_costpercapita_a24; assert_equal("VII.c", worksheet.costpercapita_a24); end
  def test_costpercapita_b24; assert_equal("Storage, demand shifting, backup", worksheet.costpercapita_b24); end
  def test_costpercapita_c24; assert_equal("Electricity", worksheet.costpercapita_c24); end
  def test_costpercapita_y24; assert_in_delta(0, (worksheet.costpercapita_y24||0), 0.001); end
  def test_costpercapita_z24; assert_in_delta(0, (worksheet.costpercapita_z24||0), 0.001); end
  def test_costpercapita_aa24; assert_in_delta(0, (worksheet.costpercapita_aa24||0), 0.001); end
  def test_costpercapita_ab24; assert_in_delta(0, (worksheet.costpercapita_ab24||0), 0.001); end
  def test_costpercapita_ac24; assert_in_delta(0, (worksheet.costpercapita_ac24||0), 0.001); end
  def test_costpercapita_ad24; assert_in_delta(0, (worksheet.costpercapita_ad24||0), 0.001); end
  def test_costpercapita_ae24; assert_in_delta(0, (worksheet.costpercapita_ae24||0), 0.001); end
  def test_costpercapita_af24; assert_in_delta(0, (worksheet.costpercapita_af24||0), 0.001); end
  def test_costpercapita_ag24; assert_in_delta(0, (worksheet.costpercapita_ag24||0), 0.001); end
  def test_costpercapita_av24; assert_in_delta(0, (worksheet.costpercapita_av24||0), 0.001); end
  def test_costpercapita_aw24; assert_in_epsilon(15, worksheet.costpercapita_aw24, 0.001); end
  def test_costpercapita_bt24; assert_in_delta(0.9457350447770619, worksheet.costpercapita_bt24, 0.001); end
  def test_costpercapita_bu24; assert_in_epsilon(4.987424006014882, worksheet.costpercapita_bu24, 0.001); end
  def test_costpercapita_bv24; assert_in_epsilon(13.24177988822121, worksheet.costpercapita_bv24, 0.001); end
  def test_costpercapita_bw24; assert_in_epsilon(16.16117997961085, worksheet.costpercapita_bw24, 0.001); end
  def test_costpercapita_bx24; assert_in_epsilon(15.468771699143806, worksheet.costpercapita_bx24, 0.001); end
  def test_costpercapita_by24; assert_in_epsilon(9.089921872812395, worksheet.costpercapita_by24, 0.001); end
  def test_costpercapita_bz24; assert_in_epsilon(8.102675264239291, worksheet.costpercapita_bz24, 0.001); end
  def test_costpercapita_ca24; assert_in_epsilon(4.711278112168816, worksheet.costpercapita_ca24, 0.001); end
  def test_costpercapita_bs24; assert_in_delta(0.5538687646229019, worksheet.costpercapita_bs24, 0.001); end
  def test_costpercapita_cd24; assert_in_epsilon(169.95981318461583, worksheet.costpercapita_cd24, 0.001); end
  def test_costpercapita_cg24; assert_in_delta(-0.8112624866817741, worksheet.costpercapita_cg24, 0.001); end
  def test_costpercapita_ch24; assert_in_epsilon(-6.041460442192203, worksheet.costpercapita_ch24, 0.001); end
  def test_costpercapita_ci24; assert_in_epsilon(-9.298827379664962, worksheet.costpercapita_ci24, 0.001); end
  def test_costpercapita_cj24; assert_in_epsilon(1.5733234546424946, worksheet.costpercapita_cj24, 0.001); end
  def test_costpercapita_ck24; assert_in_epsilon(2.9425317985496147, worksheet.costpercapita_ck24, 0.001); end
  def test_costpercapita_cl24; assert_in_epsilon(7.039631367021904, worksheet.costpercapita_cl24, 0.001); end
  def test_costpercapita_cm24; assert_in_delta(-0.9927788502828497, worksheet.costpercapita_cm24, 0.001); end
  def test_costpercapita_cn24; assert_in_epsilon(2.1072195229472745, worksheet.costpercapita_cn24, 0.001); end
  def test_costpercapita_cf24; assert_in_delta(0, (worksheet.costpercapita_cf24||0), 0.001); end
  def test_costpercapita_cq24; assert_in_epsilon(-28.594671190254523, worksheet.costpercapita_cq24, 0.001); end
  def test_costpercapita_aj24; assert_in_epsilon(1.756997531458836, worksheet.costpercapita_aj24, 0.001); end
  def test_costpercapita_ak24; assert_in_epsilon(11.028884448207085, worksheet.costpercapita_ak24, 0.001); end
  def test_costpercapita_al24; assert_in_epsilon(22.54060726788617, worksheet.costpercapita_al24, 0.001); end
  def test_costpercapita_am24; assert_in_epsilon(14.587856524968357, worksheet.costpercapita_am24, 0.001); end
  def test_costpercapita_an24; assert_in_epsilon(12.526239900594192, worksheet.costpercapita_an24, 0.001); end
  def test_costpercapita_ao24; assert_in_epsilon(2.0502905057904917, worksheet.costpercapita_ao24, 0.001); end
  def test_costpercapita_ap24; assert_in_epsilon(9.095454114522143, worksheet.costpercapita_ap24, 0.001); end
  def test_costpercapita_aq24; assert_in_epsilon(2.604058589221541, worksheet.costpercapita_aq24, 0.001); end
  def test_costpercapita_ai24; assert_in_delta(0.5538687646229019, worksheet.costpercapita_ai24, 0.001); end
  def test_costpercapita_at24; assert_in_epsilon(198.5544843748703, worksheet.costpercapita_at24, 0.001); end
  def test_costpercapita_cr24; assert_equal("ok", worksheet.costpercapita_cr24); end
  def test_costpercapita_a25; assert_equal("VIII.a", worksheet.costpercapita_a25); end
  def test_costpercapita_b25; assert_equal("H2 Production", worksheet.costpercapita_b25); end
  def test_costpercapita_c25; assert_equal("Transport", worksheet.costpercapita_c25); end
  def test_costpercapita_y25; assert_in_delta(0, (worksheet.costpercapita_y25||0), 0.001); end
  def test_costpercapita_z25; assert_in_delta(0, (worksheet.costpercapita_z25||0), 0.001); end
  def test_costpercapita_aa25; assert_in_delta(0, (worksheet.costpercapita_aa25||0), 0.001); end
  def test_costpercapita_ab25; assert_in_delta(0, (worksheet.costpercapita_ab25||0), 0.001); end
  def test_costpercapita_ac25; assert_in_delta(0, (worksheet.costpercapita_ac25||0), 0.001); end
  def test_costpercapita_ad25; assert_in_delta(0, (worksheet.costpercapita_ad25||0), 0.001); end
  def test_costpercapita_ae25; assert_in_delta(0, (worksheet.costpercapita_ae25||0), 0.001); end
  def test_costpercapita_af25; assert_in_delta(0, (worksheet.costpercapita_af25||0), 0.001); end
  def test_costpercapita_ag25; assert_in_delta(0, (worksheet.costpercapita_ag25||0), 0.001); end
  def test_costpercapita_av25; assert_in_delta(0, (worksheet.costpercapita_av25||0), 0.001); end
  def test_costpercapita_aw25; assert_in_epsilon(25, worksheet.costpercapita_aw25, 0.001); end
  def test_costpercapita_bt25; assert_in_delta(0, (worksheet.costpercapita_bt25||0), 0.001); end
  def test_costpercapita_bu25; assert_in_delta(0, (worksheet.costpercapita_bu25||0), 0.001); end
  def test_costpercapita_bv25; assert_in_delta(0, (worksheet.costpercapita_bv25||0), 0.001); end
  def test_costpercapita_bw25; assert_in_delta(0, (worksheet.costpercapita_bw25||0), 0.001); end
  def test_costpercapita_bx25; assert_in_delta(0, (worksheet.costpercapita_bx25||0), 0.001); end
  def test_costpercapita_by25; assert_in_delta(0, (worksheet.costpercapita_by25||0), 0.001); end
  def test_costpercapita_bz25; assert_in_delta(0, (worksheet.costpercapita_bz25||0), 0.001); end
  def test_costpercapita_ca25; assert_in_delta(0, (worksheet.costpercapita_ca25||0), 0.001); end
  def test_costpercapita_bs25; assert_in_delta(0, (worksheet.costpercapita_bs25||0), 0.001); end
  def test_costpercapita_cd25; assert_in_delta(0, (worksheet.costpercapita_cd25||0), 0.001); end
  def test_costpercapita_cg25; assert_in_delta(0, (worksheet.costpercapita_cg25||0), 0.001); end
  def test_costpercapita_ch25; assert_in_delta(0, (worksheet.costpercapita_ch25||0), 0.001); end
  def test_costpercapita_ci25; assert_in_delta(0, (worksheet.costpercapita_ci25||0), 0.001); end
  def test_costpercapita_cj25; assert_in_delta(0, (worksheet.costpercapita_cj25||0), 0.001); end
  def test_costpercapita_ck25; assert_in_delta(0, (worksheet.costpercapita_ck25||0), 0.001); end
  def test_costpercapita_cl25; assert_in_delta(0, (worksheet.costpercapita_cl25||0), 0.001); end
  def test_costpercapita_cm25; assert_in_delta(0, (worksheet.costpercapita_cm25||0), 0.001); end
  def test_costpercapita_cn25; assert_in_delta(0, (worksheet.costpercapita_cn25||0), 0.001); end
  def test_costpercapita_cf25; assert_in_delta(0, (worksheet.costpercapita_cf25||0), 0.001); end
  def test_costpercapita_cq25; assert_in_delta(0, (worksheet.costpercapita_cq25||0), 0.001); end
  def test_costpercapita_aj25; assert_in_delta(0, (worksheet.costpercapita_aj25||0), 0.001); end
  def test_costpercapita_ak25; assert_in_delta(0, (worksheet.costpercapita_ak25||0), 0.001); end
  def test_costpercapita_al25; assert_in_delta(0, (worksheet.costpercapita_al25||0), 0.001); end
  def test_costpercapita_am25; assert_in_delta(0, (worksheet.costpercapita_am25||0), 0.001); end
  def test_costpercapita_an25; assert_in_delta(0, (worksheet.costpercapita_an25||0), 0.001); end
  def test_costpercapita_ao25; assert_in_delta(0, (worksheet.costpercapita_ao25||0), 0.001); end
  def test_costpercapita_ap25; assert_in_delta(0, (worksheet.costpercapita_ap25||0), 0.001); end
  def test_costpercapita_aq25; assert_in_delta(0, (worksheet.costpercapita_aq25||0), 0.001); end
  def test_costpercapita_ai25; assert_in_delta(0, (worksheet.costpercapita_ai25||0), 0.001); end
  def test_costpercapita_at25; assert_in_delta(0, (worksheet.costpercapita_at25||0), 0.001); end
  def test_costpercapita_cr25; assert_equal("ok", worksheet.costpercapita_cr25); end
  def test_costpercapita_a26; assert_equal("IX.a.Heating", worksheet.costpercapita_a26); end
  def test_costpercapita_b26; assert_equal("Domestic heating", worksheet.costpercapita_b26); end
  def test_costpercapita_c26; assert_equal("Buildings", worksheet.costpercapita_c26); end
  def test_costpercapita_e26; assert_in_epsilon(130.79124439658293, worksheet.costpercapita_e26, 0.001); end
  def test_costpercapita_o26; assert_in_epsilon(76.04603865996127, worksheet.costpercapita_o26, 0.001); end
  def test_costpercapita_p26; assert_in_epsilon(76.24766025366601, worksheet.costpercapita_p26, 0.001); end
  def test_costpercapita_y26; assert_in_delta(0, (worksheet.costpercapita_y26||0), 0.001); end
  def test_costpercapita_z26; assert_in_delta(0, (worksheet.costpercapita_z26||0), 0.001); end
  def test_costpercapita_aa26; assert_in_delta(0, (worksheet.costpercapita_aa26||0), 0.001); end
  def test_costpercapita_ab26; assert_in_delta(0, (worksheet.costpercapita_ab26||0), 0.001); end
  def test_costpercapita_ac26; assert_in_delta(0, (worksheet.costpercapita_ac26||0), 0.001); end
  def test_costpercapita_ad26; assert_in_delta(0, (worksheet.costpercapita_ad26||0), 0.001); end
  def test_costpercapita_ae26; assert_in_delta(0, (worksheet.costpercapita_ae26||0), 0.001); end
  def test_costpercapita_af26; assert_in_delta(0, (worksheet.costpercapita_af26||0), 0.001); end
  def test_costpercapita_ag26; assert_in_delta(0, (worksheet.costpercapita_ag26||0), 0.001); end
  def test_costpercapita_ai26; assert_in_epsilon(206.8372830565442, worksheet.costpercapita_ai26, 0.001); end
  def test_costpercapita_av26; assert_in_delta(0, (worksheet.costpercapita_av26||0), 0.001); end
  def test_costpercapita_aw26; assert_in_epsilon(15, worksheet.costpercapita_aw26, 0.001); end
  def test_costpercapita_ay26; assert_in_epsilon(26.158248879316588, worksheet.costpercapita_ay26, 0.001); end
  def test_costpercapita_bi26; assert_in_epsilon(26.158248879316588, worksheet.costpercapita_bi26, 0.001); end
  def test_costpercapita_bs26; assert_in_epsilon(102.20428753927786, worksheet.costpercapita_bs26, 0.001); end
  def test_costpercapita_cf26; assert_in_epsilon(-104.63299551726635, worksheet.costpercapita_cf26, 0.001); end
  def test_costpercapita_bt26; assert_in_epsilon(128.9926033731206, worksheet.costpercapita_bt26, 0.001); end
  def test_costpercapita_bu26; assert_in_epsilon(200.38887248357062, worksheet.costpercapita_bu26, 0.001); end
  def test_costpercapita_bv26; assert_in_epsilon(251.05749059257963, worksheet.costpercapita_bv26, 0.001); end
  def test_costpercapita_bw26; assert_in_epsilon(311.6581743890271, worksheet.costpercapita_bw26, 0.001); end
  def test_costpercapita_bx26; assert_in_epsilon(342.00186708820286, worksheet.costpercapita_bx26, 0.001); end
  def test_costpercapita_by26; assert_in_epsilon(378.29515686029345, worksheet.costpercapita_by26, 0.001); end
  def test_costpercapita_bz26; assert_in_epsilon(416.7313944454622, worksheet.costpercapita_bz26, 0.001); end
  def test_costpercapita_ca26; assert_in_epsilon(457.8402543143094, worksheet.costpercapita_ca26, 0.001); end
  def test_costpercapita_cd26; assert_in_epsilon(5532.679231622793, worksheet.costpercapita_cd26, 0.001); end
  def test_costpercapita_cg26; assert_in_epsilon(-29.602849805804027, worksheet.costpercapita_cg26, 0.001); end
  def test_costpercapita_ch26; assert_in_epsilon(-92.75615266243668, worksheet.costpercapita_ch26, 0.001); end
  def test_costpercapita_ci26; assert_in_epsilon(-58.50670806180223, worksheet.costpercapita_ci26, 0.001); end
  def test_costpercapita_cj26; assert_in_epsilon(-35.59330252101646, worksheet.costpercapita_cj26, 0.001); end
  def test_costpercapita_ck26; assert_in_epsilon(-41.37263408819816, worksheet.costpercapita_ck26, 0.001); end
  def test_costpercapita_cl26; assert_in_epsilon(-40.563707535150684, worksheet.costpercapita_cl26, 0.001); end
  def test_costpercapita_cm26; assert_in_epsilon(-46.57675754246441, worksheet.costpercapita_cm26, 0.001); end
  def test_costpercapita_cn26; assert_in_epsilon(-49.7549705150041, worksheet.costpercapita_cn26, 0.001); end
  def test_costpercapita_cq26; assert_in_epsilon(-1119.4070200393596, worksheet.costpercapita_cq26, 0.001); end
  def test_costpercapita_aj26; assert_in_epsilon(158.59545317892466, worksheet.costpercapita_aj26, 0.001); end
  def test_costpercapita_ak26; assert_in_epsilon(293.1450251460073, worksheet.costpercapita_ak26, 0.001); end
  def test_costpercapita_al26; assert_in_epsilon(309.5641986543818, worksheet.costpercapita_al26, 0.001); end
  def test_costpercapita_am26; assert_in_epsilon(347.2514769100436, worksheet.costpercapita_am26, 0.001); end
  def test_costpercapita_an26; assert_in_epsilon(383.37450117640105, worksheet.costpercapita_an26, 0.001); end
  def test_costpercapita_ao26; assert_in_epsilon(418.85886439544413, worksheet.costpercapita_ao26, 0.001); end
  def test_costpercapita_ap26; assert_in_epsilon(463.3081519879265, worksheet.costpercapita_ap26, 0.001); end
  def test_costpercapita_aq26; assert_in_epsilon(507.59522482931345, worksheet.costpercapita_aq26, 0.001); end
  def test_costpercapita_at26; assert_in_epsilon(6652.086251662153, worksheet.costpercapita_at26, 0.001); end
  def test_costpercapita_cr26; assert_equal("ok", worksheet.costpercapita_cr26); end
  def test_costpercapita_a27; assert_equal("IX.a.Insulation", worksheet.costpercapita_a27); end
  def test_costpercapita_b27; assert_equal("Domestic insulation", worksheet.costpercapita_b27); end
  def test_costpercapita_c27; assert_equal("Buildings", worksheet.costpercapita_c27); end
  def test_costpercapita_o27; assert_in_delta(0, (worksheet.costpercapita_o27||0), 0.001); end
  def test_costpercapita_p27; assert_in_delta(0, (worksheet.costpercapita_p27||0), 0.001); end
  def test_costpercapita_q27; assert_in_delta(0, (worksheet.costpercapita_q27||0), 0.001); end
  def test_costpercapita_r27; assert_in_delta(0, (worksheet.costpercapita_r27||0), 0.001); end
  def test_costpercapita_s27; assert_in_delta(0, (worksheet.costpercapita_s27||0), 0.001); end
  def test_costpercapita_t27; assert_in_delta(0, (worksheet.costpercapita_t27||0), 0.001); end
  def test_costpercapita_u27; assert_in_delta(0, (worksheet.costpercapita_u27||0), 0.001); end
  def test_costpercapita_v27; assert_in_delta(0, (worksheet.costpercapita_v27||0), 0.001); end
  def test_costpercapita_w27; assert_in_delta(0, (worksheet.costpercapita_w27||0), 0.001); end
  def test_costpercapita_y27; assert_in_delta(0, (worksheet.costpercapita_y27||0), 0.001); end
  def test_costpercapita_z27; assert_in_delta(0, (worksheet.costpercapita_z27||0), 0.001); end
  def test_costpercapita_aa27; assert_in_delta(0, (worksheet.costpercapita_aa27||0), 0.001); end
  def test_costpercapita_ab27; assert_in_delta(0, (worksheet.costpercapita_ab27||0), 0.001); end
  def test_costpercapita_ac27; assert_in_delta(0, (worksheet.costpercapita_ac27||0), 0.001); end
  def test_costpercapita_ad27; assert_in_delta(0, (worksheet.costpercapita_ad27||0), 0.001); end
  def test_costpercapita_ae27; assert_in_delta(0, (worksheet.costpercapita_ae27||0), 0.001); end
  def test_costpercapita_af27; assert_in_delta(0, (worksheet.costpercapita_af27||0), 0.001); end
  def test_costpercapita_ag27; assert_in_delta(0, (worksheet.costpercapita_ag27||0), 0.001); end
  def test_costpercapita_av27; assert_in_delta(0, (worksheet.costpercapita_av27||0), 0.001); end
  def test_costpercapita_aw27; assert_in_epsilon(30, worksheet.costpercapita_aw27, 0.001); end
  def test_costpercapita_bt27; assert_in_epsilon(48.66391141417208, worksheet.costpercapita_bt27, 0.001); end
  def test_costpercapita_bu27; assert_in_epsilon(77.04967012967278, worksheet.costpercapita_bu27, 0.001); end
  def test_costpercapita_bv27; assert_in_epsilon(102.67066310464608, worksheet.costpercapita_bv27, 0.001); end
  def test_costpercapita_bw27; assert_in_epsilon(125.12403543007336, worksheet.costpercapita_bw27, 0.001); end
  def test_costpercapita_bx27; assert_in_epsilon(144.60150535049274, worksheet.costpercapita_bx27, 0.001); end
  def test_costpercapita_by27; assert_in_epsilon(146.49876012379443, worksheet.costpercapita_by27, 0.001); end
  def test_costpercapita_bz27; assert_in_epsilon(159.7893413094359, worksheet.costpercapita_bz27, 0.001); end
  def test_costpercapita_ca27; assert_in_epsilon(148.54296473925197, worksheet.costpercapita_ca27, 0.001); end
  def test_costpercapita_bs27; assert_in_epsilon(18.7034441333024, worksheet.costpercapita_bs27, 0.001); end
  def test_costpercapita_cd27; assert_in_epsilon(2126.8596229397253, worksheet.costpercapita_cd27, 0.001); end
  def test_costpercapita_cg27; assert_in_epsilon(-134.79937646421808, worksheet.costpercapita_cg27, 0.001); end
  def test_costpercapita_ch27; assert_in_epsilon(-102.82388088269445, worksheet.costpercapita_ch27, 0.001); end
  def test_costpercapita_ci27; assert_in_epsilon(-65.36964783935152, worksheet.costpercapita_ci27, 0.001); end
  def test_costpercapita_cj27; assert_in_epsilon(-26.426067929654135, worksheet.costpercapita_cj27, 0.001); end
  def test_costpercapita_ck27; assert_in_epsilon(10.052383520797505, worksheet.costpercapita_ck27, 0.001); end
  def test_costpercapita_cl27; assert_in_epsilon(22.064779790653425, worksheet.costpercapita_cl27, 0.001); end
  def test_costpercapita_cm27; assert_in_epsilon(47.79451150628792, worksheet.costpercapita_cm27, 0.001); end
  def test_costpercapita_cn27; assert_in_epsilon(42.306885567537265, worksheet.costpercapita_cn27, 0.001); end
  def test_costpercapita_cf27; assert_in_epsilon(-168.3309971997216, worksheet.costpercapita_cf27, 0.001); end
  def test_costpercapita_cq27; assert_in_epsilon(-1171.6879317925655, worksheet.costpercapita_cq27, 0.001); end
  def test_costpercapita_aj27; assert_in_epsilon(183.46328787839016, worksheet.costpercapita_aj27, 0.001); end
  def test_costpercapita_ak27; assert_in_epsilon(179.87355101236724, worksheet.costpercapita_ak27, 0.001); end
  def test_costpercapita_al27; assert_in_epsilon(168.04031094399758, worksheet.costpercapita_al27, 0.001); end
  def test_costpercapita_am27; assert_in_epsilon(151.5501033597275, worksheet.costpercapita_am27, 0.001); end
  def test_costpercapita_an27; assert_in_epsilon(134.54912182969525, worksheet.costpercapita_an27, 0.001); end
  def test_costpercapita_ao27; assert_in_epsilon(124.43398033314101, worksheet.costpercapita_ao27, 0.001); end
  def test_costpercapita_ap27; assert_in_epsilon(111.994829803148, worksheet.costpercapita_ap27, 0.001); end
  def test_costpercapita_aq27; assert_in_epsilon(106.23607917171469, worksheet.costpercapita_aq27, 0.001); end
  def test_costpercapita_ai27; assert_in_epsilon(187.034441333024, worksheet.costpercapita_ai27, 0.001); end
  def test_costpercapita_at27; assert_in_epsilon(3298.547554732291, worksheet.costpercapita_at27, 0.001); end
  def test_costpercapita_cr27; assert_equal("ok", worksheet.costpercapita_cr27); end
  def test_costpercapita_a28; assert_equal("IX.c", worksheet.costpercapita_a28); end
  def test_costpercapita_b28; assert_equal("Commercial heating and cooling", worksheet.costpercapita_b28); end
  def test_costpercapita_c28; assert_equal("Buildings", worksheet.costpercapita_c28); end
  def test_costpercapita_y28; assert_in_delta(0, (worksheet.costpercapita_y28||0), 0.001); end
  def test_costpercapita_z28; assert_in_delta(0, (worksheet.costpercapita_z28||0), 0.001); end
  def test_costpercapita_aa28; assert_in_delta(0, (worksheet.costpercapita_aa28||0), 0.001); end
  def test_costpercapita_ab28; assert_in_delta(0, (worksheet.costpercapita_ab28||0), 0.001); end
  def test_costpercapita_ac28; assert_in_delta(0, (worksheet.costpercapita_ac28||0), 0.001); end
  def test_costpercapita_ad28; assert_in_delta(0, (worksheet.costpercapita_ad28||0), 0.001); end
  def test_costpercapita_ae28; assert_in_delta(0, (worksheet.costpercapita_ae28||0), 0.001); end
  def test_costpercapita_af28; assert_in_delta(0, (worksheet.costpercapita_af28||0), 0.001); end
  def test_costpercapita_ag28; assert_in_delta(0, (worksheet.costpercapita_ag28||0), 0.001); end
  def test_costpercapita_av28; assert_in_delta(0, (worksheet.costpercapita_av28||0), 0.001); end
  def test_costpercapita_aw28; assert_in_epsilon(15, worksheet.costpercapita_aw28, 0.001); end
  def test_costpercapita_bt28; assert_in_epsilon(23.72229879670241, worksheet.costpercapita_bt28, 0.001); end
  def test_costpercapita_bu28; assert_in_epsilon(35.28634556464443, worksheet.costpercapita_bu28, 0.001); end
  def test_costpercapita_bv28; assert_in_epsilon(41.095451719392884, worksheet.costpercapita_bv28, 0.001); end
  def test_costpercapita_bw28; assert_in_epsilon(39.68828690365667, worksheet.costpercapita_bw28, 0.001); end
  def test_costpercapita_bx28; assert_in_epsilon(37.23756367233837, worksheet.costpercapita_bx28, 0.001); end
  def test_costpercapita_by28; assert_in_epsilon(35.313472538654764, worksheet.costpercapita_by28, 0.001); end
  def test_costpercapita_bz28; assert_in_epsilon(33.842989245864146, worksheet.costpercapita_bz28, 0.001); end
  def test_costpercapita_ca28; assert_in_epsilon(32.760513374284685, worksheet.costpercapita_ca28, 0.001); end
  def test_costpercapita_bs28; assert_in_epsilon(11.766167358762253, worksheet.costpercapita_bs28, 0.001); end
  def test_costpercapita_cd28; assert_in_epsilon(696.2083854963594, worksheet.costpercapita_cd28, 0.001); end
  def test_costpercapita_cg28; assert_in_epsilon(-19.890964461918973, worksheet.costpercapita_cg28, 0.001); end
  def test_costpercapita_ch28; assert_in_epsilon(-9.556467035280942, worksheet.costpercapita_ch28, 0.001); end
  def test_costpercapita_ci28; assert_in_delta(-0.4299580035371993, worksheet.costpercapita_ci28, 0.001); end
  def test_costpercapita_cj28; assert_in_delta(0.9235742488528371, worksheet.costpercapita_cj28, 0.001); end
  def test_costpercapita_ck28; assert_in_delta(0.6346229126068558, worksheet.costpercapita_ck28, 0.001); end
  def test_costpercapita_cl28; assert_in_delta(0.2045513889360207, worksheet.costpercapita_cl28, 0.001); end
  def test_costpercapita_cm28; assert_in_delta(-0.08457878630376811, worksheet.costpercapita_cm28, 0.001); end
  def test_costpercapita_cn28; assert_in_delta(-0.2784703140694373, worksheet.costpercapita_cn28, 0.001); end
  def test_costpercapita_cf28; assert_in_epsilon(-20.95307772710932, worksheet.costpercapita_cf28, 0.001); end
  def test_costpercapita_cq28; assert_in_epsilon(-136.31957697443946, worksheet.costpercapita_cq28, 0.001); end
  def test_costpercapita_aj28; assert_in_epsilon(43.61326325862138, worksheet.costpercapita_aj28, 0.001); end
  def test_costpercapita_ak28; assert_in_epsilon(44.84281259992537, worksheet.costpercapita_ak28, 0.001); end
  def test_costpercapita_al28; assert_in_epsilon(41.52540972293007, worksheet.costpercapita_al28, 0.001); end
  def test_costpercapita_am28; assert_in_epsilon(38.76471265480383, worksheet.costpercapita_am28, 0.001); end
  def test_costpercapita_an28; assert_in_epsilon(36.60294075973151, worksheet.costpercapita_an28, 0.001); end
  def test_costpercapita_ao28; assert_in_epsilon(35.108921149718746, worksheet.costpercapita_ao28, 0.001); end
  def test_costpercapita_ap28; assert_in_epsilon(33.92756803216791, worksheet.costpercapita_ap28, 0.001); end
  def test_costpercapita_aq28; assert_in_epsilon(33.03898368835412, worksheet.costpercapita_aq28, 0.001); end
  def test_costpercapita_ai28; assert_in_epsilon(32.71924508587157, worksheet.costpercapita_ai28, 0.001); end
  def test_costpercapita_at28; assert_in_epsilon(832.5279624707985, worksheet.costpercapita_at28, 0.001); end
  def test_costpercapita_cr28; assert_equal("ok", worksheet.costpercapita_cr28); end
  def test_costpercapita_a29; assert_equal("X.a", worksheet.costpercapita_a29); end
  def test_costpercapita_b29; assert_equal("Domestic lighting, appliances, and cooking", worksheet.costpercapita_b29); end
  def test_costpercapita_c29; assert_equal("Buildings", worksheet.costpercapita_c29); end
  def test_costpercapita_o29; assert_in_delta(0, (worksheet.costpercapita_o29||0), 0.001); end
  def test_costpercapita_p29; assert_in_delta(0, (worksheet.costpercapita_p29||0), 0.001); end
  def test_costpercapita_q29; assert_in_delta(0, (worksheet.costpercapita_q29||0), 0.001); end
  def test_costpercapita_r29; assert_in_delta(0, (worksheet.costpercapita_r29||0), 0.001); end
  def test_costpercapita_s29; assert_in_delta(0, (worksheet.costpercapita_s29||0), 0.001); end
  def test_costpercapita_t29; assert_in_delta(0, (worksheet.costpercapita_t29||0), 0.001); end
  def test_costpercapita_u29; assert_in_delta(0, (worksheet.costpercapita_u29||0), 0.001); end
  def test_costpercapita_v29; assert_in_delta(0, (worksheet.costpercapita_v29||0), 0.001); end
  def test_costpercapita_w29; assert_in_delta(0, (worksheet.costpercapita_w29||0), 0.001); end
  def test_costpercapita_y29; assert_in_delta(0, (worksheet.costpercapita_y29||0), 0.001); end
  def test_costpercapita_z29; assert_in_delta(0, (worksheet.costpercapita_z29||0), 0.001); end
  def test_costpercapita_aa29; assert_in_delta(0, (worksheet.costpercapita_aa29||0), 0.001); end
  def test_costpercapita_ab29; assert_in_delta(0, (worksheet.costpercapita_ab29||0), 0.001); end
  def test_costpercapita_ac29; assert_in_delta(0, (worksheet.costpercapita_ac29||0), 0.001); end
  def test_costpercapita_ad29; assert_in_delta(0, (worksheet.costpercapita_ad29||0), 0.001); end
  def test_costpercapita_ae29; assert_in_delta(0, (worksheet.costpercapita_ae29||0), 0.001); end
  def test_costpercapita_af29; assert_in_delta(0, (worksheet.costpercapita_af29||0), 0.001); end
  def test_costpercapita_ag29; assert_in_delta(0, (worksheet.costpercapita_ag29||0), 0.001); end
  def test_costpercapita_av29; assert_in_delta(0, (worksheet.costpercapita_av29||0), 0.001); end
  def test_costpercapita_aw29; assert_in_epsilon(15, worksheet.costpercapita_aw29, 0.001); end
  def test_costpercapita_bt29; assert_in_epsilon(19.228038741529375, worksheet.costpercapita_bt29, 0.001); end
  def test_costpercapita_bu29; assert_in_epsilon(30.871632655255627, worksheet.costpercapita_bu29, 0.001); end
  def test_costpercapita_bv29; assert_in_epsilon(35.63358455169572, worksheet.costpercapita_bv29, 0.001); end
  def test_costpercapita_bw29; assert_in_epsilon(35.61208844315431, worksheet.costpercapita_bw29, 0.001); end
  def test_costpercapita_bx29; assert_in_epsilon(35.53610595426678, worksheet.costpercapita_bx29, 0.001); end
  def test_costpercapita_by29; assert_in_epsilon(35.41525345527526, worksheet.costpercapita_by29, 0.001); end
  def test_costpercapita_bz29; assert_in_epsilon(35.30714242749394, worksheet.costpercapita_bz29, 0.001); end
  def test_costpercapita_ca29; assert_in_epsilon(35.24232098516906, worksheet.costpercapita_ca29, 0.001); end
  def test_costpercapita_bs29; assert_in_epsilon(7.1863905090988, worksheet.costpercapita_bs29, 0.001); end
  def test_costpercapita_cd29; assert_in_epsilon(632.6375878471231, worksheet.costpercapita_cd29, 0.001); end
  def test_costpercapita_cg29; assert_in_epsilon(-17.607821129870093, worksheet.costpercapita_cg29, 0.001); end
  def test_costpercapita_ch29; assert_in_epsilon(-5.947620361298405, worksheet.costpercapita_ch29, 0.001); end
  def test_costpercapita_ci29; assert_in_epsilon(-1.0612723375958835, worksheet.costpercapita_ci29, 0.001); end
  def test_costpercapita_cj29; assert_in_delta(-0.8273893335105929, worksheet.costpercapita_cj29, 0.001); end
  def test_costpercapita_ck29; assert_in_delta(-0.6395016921383733, worksheet.costpercapita_ck29, 0.001); end
  def test_costpercapita_cl29; assert_in_delta(-0.6040904433306593, worksheet.costpercapita_cl29, 0.001); end
  def test_costpercapita_cm29; assert_in_delta(-0.6155780726922063, worksheet.costpercapita_cm29, 0.001); end
  def test_costpercapita_cn29; assert_in_delta(-0.5902438474106984, worksheet.costpercapita_cn29, 0.001); end
  def test_costpercapita_cf29; assert_in_epsilon(-28.745562036395203, worksheet.costpercapita_cf29, 0.001); end
  def test_costpercapita_cq29; assert_in_epsilon(-133.35787665297354, worksheet.costpercapita_cq29, 0.001); end
  def test_costpercapita_aj29; assert_in_epsilon(36.83585987139947, worksheet.costpercapita_aj29, 0.001); end
  def test_costpercapita_ak29; assert_in_epsilon(36.81925301655403, worksheet.costpercapita_ak29, 0.001); end
  def test_costpercapita_al29; assert_in_epsilon(36.69485688929161, worksheet.costpercapita_al29, 0.001); end
  def test_costpercapita_am29; assert_in_epsilon(36.4394777766649, worksheet.costpercapita_am29, 0.001); end
  def test_costpercapita_an29; assert_in_epsilon(36.175607646405155, worksheet.costpercapita_an29, 0.001); end
  def test_costpercapita_ao29; assert_in_epsilon(36.019343898605925, worksheet.costpercapita_ao29, 0.001); end
  def test_costpercapita_ap29; assert_in_epsilon(35.92272050018615, worksheet.costpercapita_ap29, 0.001); end
  def test_costpercapita_aq29; assert_in_epsilon(35.832564832579756, worksheet.costpercapita_aq29, 0.001); end
  def test_costpercapita_ai29; assert_in_epsilon(35.931952545494006, worksheet.costpercapita_ai29, 0.001); end
  def test_costpercapita_at29; assert_in_epsilon(765.9954645000968, worksheet.costpercapita_at29, 0.001); end
  def test_costpercapita_cr29; assert_equal("ok", worksheet.costpercapita_cr29); end
  def test_costpercapita_a30; assert_equal("X.b", worksheet.costpercapita_a30); end
  def test_costpercapita_b30; assert_equal("Commercial lighting, appliances, and catering", worksheet.costpercapita_b30); end
  def test_costpercapita_c30; assert_equal("Buildings", worksheet.costpercapita_c30); end
  def test_costpercapita_o30; assert_in_delta(0, (worksheet.costpercapita_o30||0), 0.001); end
  def test_costpercapita_p30; assert_in_delta(0, (worksheet.costpercapita_p30||0), 0.001); end
  def test_costpercapita_q30; assert_in_delta(0, (worksheet.costpercapita_q30||0), 0.001); end
  def test_costpercapita_r30; assert_in_delta(0, (worksheet.costpercapita_r30||0), 0.001); end
  def test_costpercapita_s30; assert_in_delta(0, (worksheet.costpercapita_s30||0), 0.001); end
  def test_costpercapita_t30; assert_in_delta(0, (worksheet.costpercapita_t30||0), 0.001); end
  def test_costpercapita_u30; assert_in_delta(0, (worksheet.costpercapita_u30||0), 0.001); end
  def test_costpercapita_v30; assert_in_delta(0, (worksheet.costpercapita_v30||0), 0.001); end
  def test_costpercapita_w30; assert_in_delta(0, (worksheet.costpercapita_w30||0), 0.001); end
  def test_costpercapita_y30; assert_in_delta(0, (worksheet.costpercapita_y30||0), 0.001); end
  def test_costpercapita_z30; assert_in_delta(0, (worksheet.costpercapita_z30||0), 0.001); end
  def test_costpercapita_aa30; assert_in_delta(0, (worksheet.costpercapita_aa30||0), 0.001); end
  def test_costpercapita_ab30; assert_in_delta(0, (worksheet.costpercapita_ab30||0), 0.001); end
  def test_costpercapita_ac30; assert_in_delta(0, (worksheet.costpercapita_ac30||0), 0.001); end
  def test_costpercapita_ad30; assert_in_delta(0, (worksheet.costpercapita_ad30||0), 0.001); end
  def test_costpercapita_ae30; assert_in_delta(0, (worksheet.costpercapita_ae30||0), 0.001); end
  def test_costpercapita_af30; assert_in_delta(0, (worksheet.costpercapita_af30||0), 0.001); end
  def test_costpercapita_ag30; assert_in_delta(0, (worksheet.costpercapita_ag30||0), 0.001); end
  def test_costpercapita_av30; assert_in_delta(0, (worksheet.costpercapita_av30||0), 0.001); end
  def test_costpercapita_aw30; assert_in_epsilon(5, worksheet.costpercapita_aw30, 0.001); end
  def test_costpercapita_bt30; assert_in_epsilon(5.747406651212224, worksheet.costpercapita_bt30, 0.001); end
  def test_costpercapita_bu30; assert_in_epsilon(5.176831175177255, worksheet.costpercapita_bu30, 0.001); end
  def test_costpercapita_bv30; assert_in_epsilon(4.689170877184092, worksheet.costpercapita_bv30, 0.001); end
  def test_costpercapita_bw30; assert_in_epsilon(4.280376522940618, worksheet.costpercapita_bw30, 0.001); end
  def test_costpercapita_bx30; assert_in_epsilon(3.938601279606556, worksheet.costpercapita_bx30, 0.001); end
  def test_costpercapita_by30; assert_in_epsilon(3.647973266437034, worksheet.costpercapita_by30, 0.001); end
  def test_costpercapita_bz30; assert_in_epsilon(3.3984622447177264, worksheet.costpercapita_bz30, 0.001); end
  def test_costpercapita_ca30; assert_in_epsilon(3.1844160664926737, worksheet.costpercapita_ca30, 0.001); end
  def test_costpercapita_bs30; assert_in_epsilon(1.242311681679632, worksheet.costpercapita_bs30, 0.001); end
  def test_costpercapita_cd30; assert_in_epsilon(92.81310598826221, worksheet.costpercapita_cd30, 0.001); end
  def test_costpercapita_cg30; assert_in_delta(0, (worksheet.costpercapita_cg30||0), 0.001); end
  def test_costpercapita_ch30; assert_in_delta(0, (worksheet.costpercapita_ch30||0), 0.001); end
  def test_costpercapita_ci30; assert_in_delta(0, (worksheet.costpercapita_ci30||0), 0.001); end
  def test_costpercapita_cj30; assert_in_delta(0, (worksheet.costpercapita_cj30||0), 0.001); end
  def test_costpercapita_ck30; assert_in_delta(0, (worksheet.costpercapita_ck30||0), 0.001); end
  def test_costpercapita_cl30; assert_in_delta(0, (worksheet.costpercapita_cl30||0), 0.001); end
  def test_costpercapita_cm30; assert_in_delta(0, (worksheet.costpercapita_cm30||0), 0.001); end
  def test_costpercapita_cn30; assert_in_delta(0, (worksheet.costpercapita_cn30||0), 0.001); end
  def test_costpercapita_cf30; assert_in_delta(-0.8282077877864213, worksheet.costpercapita_cf30, 0.001); end
  def test_costpercapita_cq30; assert_in_delta(-0.8282077877864213, worksheet.costpercapita_cq30, 0.001); end
  def test_costpercapita_aj30; assert_in_epsilon(5.747406651212224, worksheet.costpercapita_aj30, 0.001); end
  def test_costpercapita_ak30; assert_in_epsilon(5.176831175177255, worksheet.costpercapita_ak30, 0.001); end
  def test_costpercapita_al30; assert_in_epsilon(4.689170877184092, worksheet.costpercapita_al30, 0.001); end
  def test_costpercapita_am30; assert_in_epsilon(4.280376522940618, worksheet.costpercapita_am30, 0.001); end
  def test_costpercapita_an30; assert_in_epsilon(3.938601279606556, worksheet.costpercapita_an30, 0.001); end
  def test_costpercapita_ao30; assert_in_epsilon(3.647973266437034, worksheet.costpercapita_ao30, 0.001); end
  def test_costpercapita_ap30; assert_in_epsilon(3.3984622447177264, worksheet.costpercapita_ap30, 0.001); end
  def test_costpercapita_aq30; assert_in_epsilon(3.1844160664926737, worksheet.costpercapita_aq30, 0.001); end
  def test_costpercapita_ai30; assert_in_epsilon(2.0705194694660536, worksheet.costpercapita_ai30, 0.001); end
  def test_costpercapita_at30; assert_in_epsilon(93.64131377604862, worksheet.costpercapita_at30, 0.001); end
  def test_costpercapita_cr30; assert_equal("ok", worksheet.costpercapita_cr30); end
  def test_costpercapita_a31; assert_equal("XI.a", worksheet.costpercapita_a31); end
  def test_costpercapita_b31; assert_equal("Industrial processes", worksheet.costpercapita_b31); end
  def test_costpercapita_c31; assert_equal("Industry", worksheet.costpercapita_c31); end
  def test_costpercapita_y31; assert_in_delta(0, (worksheet.costpercapita_y31||0), 0.001); end
  def test_costpercapita_z31; assert_in_delta(0, (worksheet.costpercapita_z31||0), 0.001); end
  def test_costpercapita_aa31; assert_in_delta(0, (worksheet.costpercapita_aa31||0), 0.001); end
  def test_costpercapita_ab31; assert_in_delta(0, (worksheet.costpercapita_ab31||0), 0.001); end
  def test_costpercapita_ac31; assert_in_delta(0, (worksheet.costpercapita_ac31||0), 0.001); end
  def test_costpercapita_ad31; assert_in_delta(0, (worksheet.costpercapita_ad31||0), 0.001); end
  def test_costpercapita_ae31; assert_in_delta(0, (worksheet.costpercapita_ae31||0), 0.001); end
  def test_costpercapita_af31; assert_in_delta(0, (worksheet.costpercapita_af31||0), 0.001); end
  def test_costpercapita_ag31; assert_in_delta(0, (worksheet.costpercapita_ag31||0), 0.001); end
  def test_costpercapita_av31; assert_in_delta(0, (worksheet.costpercapita_av31||0), 0.001); end
  def test_costpercapita_aw31; assert_in_epsilon(5, worksheet.costpercapita_aw31, 0.001); end
  def test_costpercapita_bt31; assert_in_epsilon(92.3515519847191, worksheet.costpercapita_bt31, 0.001); end
  def test_costpercapita_bu31; assert_in_epsilon(93.08912137751912, worksheet.costpercapita_bu31, 0.001); end
  def test_costpercapita_bv31; assert_in_epsilon(93.96968602135576, worksheet.costpercapita_bv31, 0.001); end
  def test_costpercapita_bw31; assert_in_epsilon(95.37624539969909, worksheet.costpercapita_bw31, 0.001); end
  def test_costpercapita_bx31; assert_in_epsilon(97.41955237382183, worksheet.costpercapita_bx31, 0.001); end
  def test_costpercapita_by31; assert_in_epsilon(100.06798447597404, worksheet.costpercapita_by31, 0.001); end
  def test_costpercapita_bz31; assert_in_epsilon(103.48357775325707, worksheet.costpercapita_bz31, 0.001); end
  def test_costpercapita_ca31; assert_in_epsilon(108.03748607600308, worksheet.costpercapita_ca31, 0.001); end
  def test_costpercapita_bs31; assert_in_epsilon(91.59494417008504, worksheet.costpercapita_bs31, 0.001); end
  def test_costpercapita_cd31; assert_in_epsilon(2017.0559894555465, worksheet.costpercapita_cd31, 0.001); end
  def test_costpercapita_cg31; assert_in_delta(0, (worksheet.costpercapita_cg31||0), 0.001); end
  def test_costpercapita_ch31; assert_in_delta(0, (worksheet.costpercapita_ch31||0), 0.001); end
  def test_costpercapita_ci31; assert_in_delta(0, (worksheet.costpercapita_ci31||0), 0.001); end
  def test_costpercapita_cj31; assert_in_delta(0, (worksheet.costpercapita_cj31||0), 0.001); end
  def test_costpercapita_ck31; assert_in_delta(0, (worksheet.costpercapita_ck31||0), 0.001); end
  def test_costpercapita_cl31; assert_in_delta(0, (worksheet.costpercapita_cl31||0), 0.001); end
  def test_costpercapita_cm31; assert_in_delta(0, (worksheet.costpercapita_cm31||0), 0.001); end
  def test_costpercapita_cn31; assert_in_delta(0, (worksheet.costpercapita_cn31||0), 0.001); end
  def test_costpercapita_cf31; assert_in_delta(-0.3409616467407002, worksheet.costpercapita_cf31, 0.001); end
  def test_costpercapita_cq31; assert_in_delta(-0.3409616467407002, worksheet.costpercapita_cq31, 0.001); end
  def test_costpercapita_aj31; assert_in_epsilon(92.3515519847191, worksheet.costpercapita_aj31, 0.001); end
  def test_costpercapita_ak31; assert_in_epsilon(93.08912137751912, worksheet.costpercapita_ak31, 0.001); end
  def test_costpercapita_al31; assert_in_epsilon(93.96968602135576, worksheet.costpercapita_al31, 0.001); end
  def test_costpercapita_am31; assert_in_epsilon(95.37624539969909, worksheet.costpercapita_am31, 0.001); end
  def test_costpercapita_an31; assert_in_epsilon(97.41955237382183, worksheet.costpercapita_an31, 0.001); end
  def test_costpercapita_ao31; assert_in_epsilon(100.06798447597404, worksheet.costpercapita_ao31, 0.001); end
  def test_costpercapita_ap31; assert_in_epsilon(103.48357775325707, worksheet.costpercapita_ap31, 0.001); end
  def test_costpercapita_aq31; assert_in_epsilon(108.03748607600308, worksheet.costpercapita_aq31, 0.001); end
  def test_costpercapita_ai31; assert_in_epsilon(91.93590581682575, worksheet.costpercapita_ai31, 0.001); end
  def test_costpercapita_at31; assert_in_epsilon(2017.3969511022872, worksheet.costpercapita_at31, 0.001); end
  def test_costpercapita_cr31; assert_equal("ok", worksheet.costpercapita_cr31); end
  def test_costpercapita_a32; assert_equal("XII.a.ICE", worksheet.costpercapita_a32); end
  def test_costpercapita_b32; assert_equal("Conventional cars and buses", worksheet.costpercapita_b32); end
  def test_costpercapita_c32; assert_equal("Transport", worksheet.costpercapita_c32); end
  def test_costpercapita_y32; assert_in_delta(0, (worksheet.costpercapita_y32||0), 0.001); end
  def test_costpercapita_z32; assert_in_delta(0, (worksheet.costpercapita_z32||0), 0.001); end
  def test_costpercapita_aa32; assert_in_delta(0, (worksheet.costpercapita_aa32||0), 0.001); end
  def test_costpercapita_ab32; assert_in_delta(0, (worksheet.costpercapita_ab32||0), 0.001); end
  def test_costpercapita_ac32; assert_in_delta(0, (worksheet.costpercapita_ac32||0), 0.001); end
  def test_costpercapita_ad32; assert_in_delta(0, (worksheet.costpercapita_ad32||0), 0.001); end
  def test_costpercapita_ae32; assert_in_delta(0, (worksheet.costpercapita_ae32||0), 0.001); end
  def test_costpercapita_af32; assert_in_delta(0, (worksheet.costpercapita_af32||0), 0.001); end
  def test_costpercapita_ag32; assert_in_delta(0, (worksheet.costpercapita_ag32||0), 0.001); end
  def test_costpercapita_av32; assert_in_delta(0, (worksheet.costpercapita_av32||0), 0.001); end
  def test_costpercapita_aw32; assert_in_epsilon(15, worksheet.costpercapita_aw32, 0.001); end
  def test_costpercapita_bt32; assert_in_epsilon(1014.0594077587739, worksheet.costpercapita_bt32, 0.001); end
  def test_costpercapita_bu32; assert_in_epsilon(1024.3429819391051, worksheet.costpercapita_bu32, 0.001); end
  def test_costpercapita_bv32; assert_in_epsilon(700.645448828547, worksheet.costpercapita_bv32, 0.001); end
  def test_costpercapita_bw32; assert_in_epsilon(352.33403153812475, worksheet.costpercapita_bw32, 0.001); end
  def test_costpercapita_bx32; assert_in_epsilon(193.69278682587208, worksheet.costpercapita_bx32, 0.001); end
  def test_costpercapita_by32; assert_in_epsilon(150.3150020018671, worksheet.costpercapita_by32, 0.001); end
  def test_costpercapita_bz32; assert_in_epsilon(125.99541300831055, worksheet.costpercapita_bz32, 0.001); end
  def test_costpercapita_ca32; assert_in_epsilon(64.20329380438967, worksheet.costpercapita_ca32, 0.001); end
  def test_costpercapita_bs32; assert_in_epsilon(994.4773082762468, worksheet.costpercapita_bs32, 0.001); end
  def test_costpercapita_cd32; assert_in_epsilon(12827.095858445273, worksheet.costpercapita_cd32, 0.001); end
  def test_costpercapita_cg32; assert_in_epsilon(-251.4741613394105, worksheet.costpercapita_cg32, 0.001); end
  def test_costpercapita_ch32; assert_in_epsilon(-27.014318311846978, worksheet.costpercapita_ch32, 0.001); end
  def test_costpercapita_ci32; assert_in_epsilon(248.21223190393357, worksheet.costpercapita_ci32, 0.001); end
  def test_costpercapita_cj32; assert_in_epsilon(197.50078569881143, worksheet.costpercapita_cj32, 0.001); end
  def test_costpercapita_ck32; assert_in_epsilon(-46.75017476422201, worksheet.costpercapita_ck32, 0.001); end
  def test_costpercapita_cl32; assert_in_epsilon(-28.019804032531646, worksheet.costpercapita_cl32, 0.001); end
  def test_costpercapita_cm32; assert_in_epsilon(52.94482173568367, worksheet.costpercapita_cm32, 0.001); end
  def test_costpercapita_cn32; assert_in_epsilon(41.48163545371885, worksheet.costpercapita_cn32, 0.001); end
  def test_costpercapita_cf32; assert_in_epsilon(-526.6071590120949, worksheet.costpercapita_cf32, 0.001); end
  def test_costpercapita_cq32; assert_in_epsilon(-456.45389084835926, worksheet.costpercapita_cq32, 0.001); end
  def test_costpercapita_aj32; assert_in_epsilon(1265.5335690981842, worksheet.costpercapita_aj32, 0.001); end
  def test_costpercapita_ak32; assert_in_epsilon(1051.3573002509522, worksheet.costpercapita_ak32, 0.001); end
  def test_costpercapita_al32; assert_in_epsilon(452.43321692461336, worksheet.costpercapita_al32, 0.001); end
  def test_costpercapita_am32; assert_in_epsilon(154.83324583931326, worksheet.costpercapita_am32, 0.001); end
  def test_costpercapita_an32; assert_in_epsilon(240.4429615900941, worksheet.costpercapita_an32, 0.001); end
  def test_costpercapita_ao32; assert_in_epsilon(178.33480603439875, worksheet.costpercapita_ao32, 0.001); end
  def test_costpercapita_ap32; assert_in_epsilon(73.05059127262689, worksheet.costpercapita_ap32, 0.001); end
  def test_costpercapita_aq32; assert_in_epsilon(22.721658350670815, worksheet.costpercapita_aq32, 0.001); end
  def test_costpercapita_ai32; assert_in_epsilon(1521.0844672883418, worksheet.costpercapita_ai32, 0.001); end
  def test_costpercapita_at32; assert_in_epsilon(13283.549749293628, worksheet.costpercapita_at32, 0.001); end
  def test_costpercapita_cr32; assert_equal("ok", worksheet.costpercapita_cr32); end
  def test_costpercapita_a33; assert_equal("XII.a.HEV", worksheet.costpercapita_a33); end
  def test_costpercapita_b33; assert_equal("Hybrid cars and buses", worksheet.costpercapita_b33); end
  def test_costpercapita_c33; assert_equal("Transport", worksheet.costpercapita_c33); end
  def test_costpercapita_y33; assert_in_delta(0, (worksheet.costpercapita_y33||0), 0.001); end
  def test_costpercapita_z33; assert_in_delta(0, (worksheet.costpercapita_z33||0), 0.001); end
  def test_costpercapita_aa33; assert_in_delta(0, (worksheet.costpercapita_aa33||0), 0.001); end
  def test_costpercapita_ab33; assert_in_delta(0, (worksheet.costpercapita_ab33||0), 0.001); end
  def test_costpercapita_ac33; assert_in_delta(0, (worksheet.costpercapita_ac33||0), 0.001); end
  def test_costpercapita_ad33; assert_in_delta(0, (worksheet.costpercapita_ad33||0), 0.001); end
  def test_costpercapita_ae33; assert_in_delta(0, (worksheet.costpercapita_ae33||0), 0.001); end
  def test_costpercapita_af33; assert_in_delta(0, (worksheet.costpercapita_af33||0), 0.001); end
  def test_costpercapita_ag33; assert_in_delta(0, (worksheet.costpercapita_ag33||0), 0.001); end
  def test_costpercapita_av33; assert_in_delta(0, (worksheet.costpercapita_av33||0), 0.001); end
  def test_costpercapita_aw33; assert_in_epsilon(15, worksheet.costpercapita_aw33, 0.001); end
  def test_costpercapita_bt33; assert_in_epsilon(27.688273958101362, worksheet.costpercapita_bt33, 0.001); end
  def test_costpercapita_bu33; assert_in_epsilon(53.75891093442004, worksheet.costpercapita_bu33, 0.001); end
  def test_costpercapita_bv33; assert_in_epsilon(357.9156633357524, worksheet.costpercapita_bv33, 0.001); end
  def test_costpercapita_bw33; assert_in_epsilon(589.0936253917808, worksheet.costpercapita_bw33, 0.001); end
  def test_costpercapita_bx33; assert_in_epsilon(514.2477177181034, worksheet.costpercapita_bx33, 0.001); end
  def test_costpercapita_by33; assert_in_epsilon(340.1841660884594, worksheet.costpercapita_by33, 0.001); end
  def test_costpercapita_bz33; assert_in_epsilon(183.5820916412844, worksheet.costpercapita_bz33, 0.001); end
  def test_costpercapita_ca33; assert_in_epsilon(129.777952703471, worksheet.costpercapita_ca33, 0.001); end
  def test_costpercapita_bs33; assert_in_delta(0.7361295033733191, worksheet.costpercapita_bs33, 0.001); end
  def test_costpercapita_cd33; assert_in_epsilon(5004.465163836777, worksheet.costpercapita_cd33, 0.001); end
  def test_costpercapita_cg33; assert_in_epsilon(-21.863801764732635, worksheet.costpercapita_cg33, 0.001); end
  def test_costpercapita_ch33; assert_in_epsilon(-17.843393448155435, worksheet.costpercapita_ch33, 0.001); end
  def test_costpercapita_ci33; assert_in_epsilon(-243.0985410096441, worksheet.costpercapita_ci33, 0.001); end
  def test_costpercapita_cj33; assert_in_epsilon(-173.41951316865973, worksheet.costpercapita_cj33, 0.001); end
  def test_costpercapita_ck33; assert_in_epsilon(180.25354660596642, worksheet.costpercapita_ck33, 0.001); end
  def test_costpercapita_cl33; assert_in_epsilon(132.2768941855046, worksheet.costpercapita_cl33, 0.001); end
  def test_costpercapita_cm33; assert_in_epsilon(1.6078793064951664, worksheet.costpercapita_cm33, 0.001); end
  def test_costpercapita_cn33; assert_in_epsilon(5.857291983180006, worksheet.costpercapita_cn33, 0.001); end
  def test_costpercapita_cf33; assert_in_epsilon(-1.2360215774511842, worksheet.costpercapita_cf33, 0.001); end
  def test_costpercapita_cq33; assert_in_epsilon(-690.5766781242456, worksheet.costpercapita_cq33, 0.001); end
  def test_costpercapita_aj33; assert_in_epsilon(49.552075722834, worksheet.costpercapita_aj33, 0.001); end
  def test_costpercapita_ak33; assert_in_epsilon(71.60230438257547, worksheet.costpercapita_ak33, 0.001); end
  def test_costpercapita_al33; assert_in_epsilon(601.0142043453965, worksheet.costpercapita_al33, 0.001); end
  def test_costpercapita_am33; assert_in_epsilon(762.5131385604406, worksheet.costpercapita_am33, 0.001); end
  def test_costpercapita_an33; assert_in_epsilon(333.994171112137, worksheet.costpercapita_an33, 0.001); end
  def test_costpercapita_ao33; assert_in_epsilon(207.90727190295476, worksheet.costpercapita_ao33, 0.001); end
  def test_costpercapita_ap33; assert_in_epsilon(181.9742123347892, worksheet.costpercapita_ap33, 0.001); end
  def test_costpercapita_aq33; assert_in_epsilon(123.920660720291, worksheet.costpercapita_aq33, 0.001); end
  def test_costpercapita_ai33; assert_in_epsilon(1.9721510808245033, worksheet.costpercapita_ai33, 0.001); end
  def test_costpercapita_at33; assert_in_epsilon(5695.041841961021, worksheet.costpercapita_at33, 0.001); end
  def test_costpercapita_cr33; assert_equal("ok", worksheet.costpercapita_cr33); end
  def test_costpercapita_a34; assert_equal("XII.a.EV", worksheet.costpercapita_a34); end
  def test_costpercapita_b34; assert_equal("Electric cars and buses", worksheet.costpercapita_b34); end
  def test_costpercapita_c34; assert_equal("Transport", worksheet.costpercapita_c34); end
  def test_costpercapita_y34; assert_in_delta(0, (worksheet.costpercapita_y34||0), 0.001); end
  def test_costpercapita_z34; assert_in_delta(0, (worksheet.costpercapita_z34||0), 0.001); end
  def test_costpercapita_aa34; assert_in_delta(0, (worksheet.costpercapita_aa34||0), 0.001); end
  def test_costpercapita_ab34; assert_in_delta(0, (worksheet.costpercapita_ab34||0), 0.001); end
  def test_costpercapita_ac34; assert_in_delta(0, (worksheet.costpercapita_ac34||0), 0.001); end
  def test_costpercapita_ad34; assert_in_delta(0, (worksheet.costpercapita_ad34||0), 0.001); end
  def test_costpercapita_ae34; assert_in_delta(0, (worksheet.costpercapita_ae34||0), 0.001); end
  def test_costpercapita_af34; assert_in_delta(0, (worksheet.costpercapita_af34||0), 0.001); end
  def test_costpercapita_ag34; assert_in_delta(0, (worksheet.costpercapita_ag34||0), 0.001); end
  def test_costpercapita_av34; assert_in_delta(0, (worksheet.costpercapita_av34||0), 0.001); end
  def test_costpercapita_aw34; assert_in_epsilon(15, worksheet.costpercapita_aw34, 0.001); end
  def test_costpercapita_bt34; assert_in_epsilon(19.91576143163026, worksheet.costpercapita_bt34, 0.001); end
  def test_costpercapita_bu34; assert_in_epsilon(37.9762894845532, worksheet.costpercapita_bu34, 0.001); end
  def test_costpercapita_bv34; assert_in_epsilon(100.80695941363905, worksheet.costpercapita_bv34, 0.001); end
  def test_costpercapita_bw34; assert_in_epsilon(145.58816443392476, worksheet.costpercapita_bw34, 0.001); end
  def test_costpercapita_bx34; assert_in_epsilon(215.72103284627727, worksheet.costpercapita_bx34, 0.001); end
  def test_costpercapita_by34; assert_in_epsilon(245.1549840532002, worksheet.costpercapita_by34, 0.001); end
  def test_costpercapita_bz34; assert_in_epsilon(253.62554850932003, worksheet.costpercapita_bz34, 0.001); end
  def test_costpercapita_ca34; assert_in_epsilon(225.49977724957589, worksheet.costpercapita_ca34, 0.001); end
  def test_costpercapita_bs34; assert_in_delta(0, (worksheet.costpercapita_bs34||0), 0.001); end
  def test_costpercapita_cd34; assert_in_epsilon(2466.9081727223106, worksheet.costpercapita_cd34, 0.001); end
  def test_costpercapita_cg34; assert_in_epsilon(-19.454965224243647, worksheet.costpercapita_cg34, 0.001); end
  def test_costpercapita_ch34; assert_in_epsilon(-14.127343836074816, worksheet.costpercapita_ch34, 0.001); end
  def test_costpercapita_ci34; assert_in_epsilon(-55.13717732863982, worksheet.costpercapita_ci34, 0.001); end
  def test_costpercapita_cj34; assert_in_epsilon(-37.20658561631824, worksheet.costpercapita_cj34, 0.001); end
  def test_costpercapita_ck34; assert_in_epsilon(-54.05099366044656, worksheet.costpercapita_ck34, 0.001); end
  def test_costpercapita_cl34; assert_in_epsilon(-31.29198158195933, worksheet.costpercapita_cl34, 0.001); end
  def test_costpercapita_cm34; assert_in_epsilon(-2.1943684083656807, worksheet.costpercapita_cm34, 0.001); end
  def test_costpercapita_cn34; assert_in_epsilon(7.561054700705348, worksheet.costpercapita_cn34, 0.001); end
  def test_costpercapita_cf34; assert_in_delta(0, (worksheet.costpercapita_cf34||0), 0.001); end
  def test_costpercapita_cq34; assert_in_epsilon(-553.4770907053928, worksheet.costpercapita_cq34, 0.001); end
  def test_costpercapita_aj34; assert_in_epsilon(39.3707266558739, worksheet.costpercapita_aj34, 0.001); end
  def test_costpercapita_ak34; assert_in_epsilon(52.10363332062801, worksheet.costpercapita_ak34, 0.001); end
  def test_costpercapita_al34; assert_in_epsilon(155.94413674227886, worksheet.costpercapita_al34, 0.001); end
  def test_costpercapita_am34; assert_in_epsilon(182.79475005024298, worksheet.costpercapita_am34, 0.001); end
  def test_costpercapita_an34; assert_in_epsilon(269.7720265067238, worksheet.costpercapita_an34, 0.001); end
  def test_costpercapita_ao34; assert_in_epsilon(276.44696563515953, worksheet.costpercapita_ao34, 0.001); end
  def test_costpercapita_ap34; assert_in_epsilon(255.8199169176857, worksheet.costpercapita_ap34, 0.001); end
  def test_costpercapita_aq34; assert_in_epsilon(217.9387225488705, worksheet.costpercapita_aq34, 0.001); end
  def test_costpercapita_ai34; assert_in_delta(0, (worksheet.costpercapita_ai34||0), 0.001); end
  def test_costpercapita_at34; assert_in_epsilon(3020.3852634277027, worksheet.costpercapita_at34, 0.001); end
  def test_costpercapita_cr34; assert_equal("ok", worksheet.costpercapita_cr34); end
  def test_costpercapita_a35; assert_equal("XII.a.FCV", worksheet.costpercapita_a35); end
  def test_costpercapita_b35; assert_equal("Fuel cell cars and buses", worksheet.costpercapita_b35); end
  def test_costpercapita_c35; assert_equal("Transport", worksheet.costpercapita_c35); end
  def test_costpercapita_y35; assert_in_delta(0, (worksheet.costpercapita_y35||0), 0.001); end
  def test_costpercapita_z35; assert_in_delta(0, (worksheet.costpercapita_z35||0), 0.001); end
  def test_costpercapita_aa35; assert_in_delta(0, (worksheet.costpercapita_aa35||0), 0.001); end
  def test_costpercapita_ab35; assert_in_delta(0, (worksheet.costpercapita_ab35||0), 0.001); end
  def test_costpercapita_ac35; assert_in_delta(0, (worksheet.costpercapita_ac35||0), 0.001); end
  def test_costpercapita_ad35; assert_in_delta(0, (worksheet.costpercapita_ad35||0), 0.001); end
  def test_costpercapita_ae35; assert_in_delta(0, (worksheet.costpercapita_ae35||0), 0.001); end
  def test_costpercapita_af35; assert_in_delta(0, (worksheet.costpercapita_af35||0), 0.001); end
  def test_costpercapita_ag35; assert_in_delta(0, (worksheet.costpercapita_ag35||0), 0.001); end
  def test_costpercapita_av35; assert_in_delta(0, (worksheet.costpercapita_av35||0), 0.001); end
  def test_costpercapita_aw35; assert_in_epsilon(15, worksheet.costpercapita_aw35, 0.001); end
  def test_costpercapita_bt35; assert_in_delta(0, (worksheet.costpercapita_bt35||0), 0.001); end
  def test_costpercapita_bu35; assert_in_delta(0, (worksheet.costpercapita_bu35||0), 0.001); end
  def test_costpercapita_bv35; assert_in_delta(0, (worksheet.costpercapita_bv35||0), 0.001); end
  def test_costpercapita_bw35; assert_in_delta(0, (worksheet.costpercapita_bw35||0), 0.001); end
  def test_costpercapita_bx35; assert_in_delta(0, (worksheet.costpercapita_bx35||0), 0.001); end
  def test_costpercapita_by35; assert_in_delta(0, (worksheet.costpercapita_by35||0), 0.001); end
  def test_costpercapita_bz35; assert_in_delta(0, (worksheet.costpercapita_bz35||0), 0.001); end
  def test_costpercapita_ca35; assert_in_delta(0, (worksheet.costpercapita_ca35||0), 0.001); end
  def test_costpercapita_bs35; assert_in_delta(0, (worksheet.costpercapita_bs35||0), 0.001); end
  def test_costpercapita_cd35; assert_in_delta(0, (worksheet.costpercapita_cd35||0), 0.001); end
  def test_costpercapita_cg35; assert_in_delta(0, (worksheet.costpercapita_cg35||0), 0.001); end
  def test_costpercapita_ch35; assert_in_delta(0, (worksheet.costpercapita_ch35||0), 0.001); end
  def test_costpercapita_ci35; assert_in_delta(0, (worksheet.costpercapita_ci35||0), 0.001); end
  def test_costpercapita_cj35; assert_in_delta(0, (worksheet.costpercapita_cj35||0), 0.001); end
  def test_costpercapita_ck35; assert_in_delta(0, (worksheet.costpercapita_ck35||0), 0.001); end
  def test_costpercapita_cl35; assert_in_delta(0, (worksheet.costpercapita_cl35||0), 0.001); end
  def test_costpercapita_cm35; assert_in_delta(0, (worksheet.costpercapita_cm35||0), 0.001); end
  def test_costpercapita_cn35; assert_in_delta(0, (worksheet.costpercapita_cn35||0), 0.001); end
  def test_costpercapita_cf35; assert_in_delta(0, (worksheet.costpercapita_cf35||0), 0.001); end
  def test_costpercapita_cq35; assert_in_delta(0, (worksheet.costpercapita_cq35||0), 0.001); end
  def test_costpercapita_aj35; assert_in_delta(0, (worksheet.costpercapita_aj35||0), 0.001); end
  def test_costpercapita_ak35; assert_in_delta(0, (worksheet.costpercapita_ak35||0), 0.001); end
  def test_costpercapita_al35; assert_in_delta(0, (worksheet.costpercapita_al35||0), 0.001); end
  def test_costpercapita_am35; assert_in_delta(0, (worksheet.costpercapita_am35||0), 0.001); end
  def test_costpercapita_an35; assert_in_delta(0, (worksheet.costpercapita_an35||0), 0.001); end
  def test_costpercapita_ao35; assert_in_delta(0, (worksheet.costpercapita_ao35||0), 0.001); end
  def test_costpercapita_ap35; assert_in_delta(0, (worksheet.costpercapita_ap35||0), 0.001); end
  def test_costpercapita_aq35; assert_in_delta(0, (worksheet.costpercapita_aq35||0), 0.001); end
  def test_costpercapita_ai35; assert_in_delta(0, (worksheet.costpercapita_ai35||0), 0.001); end
  def test_costpercapita_at35; assert_in_delta(0, (worksheet.costpercapita_at35||0), 0.001); end
  def test_costpercapita_cr35; assert_equal("ok", worksheet.costpercapita_cr35); end
  def test_costpercapita_a36; assert_equal("XII.a.Bike", worksheet.costpercapita_a36); end
  def test_costpercapita_b36; assert_equal("Bikes", worksheet.costpercapita_b36); end
  def test_costpercapita_c36; assert_equal("Transport", worksheet.costpercapita_c36); end
  def test_costpercapita_e36; assert_in_epsilon(14.66818348062713, worksheet.costpercapita_e36, 0.001); end
  def test_costpercapita_o36; assert_in_epsilon(12.000000000000002, worksheet.costpercapita_o36, 0.001); end
  def test_costpercapita_y36; assert_in_delta(0, (worksheet.costpercapita_y36||0), 0.001); end
  def test_costpercapita_z36; assert_in_delta(0, (worksheet.costpercapita_z36||0), 0.001); end
  def test_costpercapita_aa36; assert_in_delta(0, (worksheet.costpercapita_aa36||0), 0.001); end
  def test_costpercapita_ab36; assert_in_delta(0, (worksheet.costpercapita_ab36||0), 0.001); end
  def test_costpercapita_ac36; assert_in_delta(0, (worksheet.costpercapita_ac36||0), 0.001); end
  def test_costpercapita_ad36; assert_in_delta(0, (worksheet.costpercapita_ad36||0), 0.001); end
  def test_costpercapita_ae36; assert_in_delta(0, (worksheet.costpercapita_ae36||0), 0.001); end
  def test_costpercapita_af36; assert_in_delta(0, (worksheet.costpercapita_af36||0), 0.001); end
  def test_costpercapita_ag36; assert_in_delta(0, (worksheet.costpercapita_ag36||0), 0.001); end
  def test_costpercapita_ai36; assert_in_epsilon(26.668183480627132, worksheet.costpercapita_ai36, 0.001); end
  def test_costpercapita_av36; assert_in_delta(0, (worksheet.costpercapita_av36||0), 0.001); end
  def test_costpercapita_aw36; assert_in_epsilon(5, worksheet.costpercapita_aw36, 0.001); end
  def test_costpercapita_ay36; assert_in_epsilon(8.800910088376277, worksheet.costpercapita_ay36, 0.001); end
  def test_costpercapita_bi36; assert_in_epsilon(8.800910088376277, worksheet.costpercapita_bi36, 0.001); end
  def test_costpercapita_bs36; assert_in_epsilon(20.800910088376277, worksheet.costpercapita_bs36, 0.001); end
  def test_costpercapita_cf36; assert_in_epsilon(-5.867273392250853, worksheet.costpercapita_cf36, 0.001); end
  def test_costpercapita_bt36; assert_in_epsilon(31.060306806484274, worksheet.costpercapita_bt36, 0.001); end
  def test_costpercapita_bu36; assert_in_epsilon(36.46901854412784, worksheet.costpercapita_bu36, 0.001); end
  def test_costpercapita_bv36; assert_in_epsilon(38.293882106813015, worksheet.costpercapita_bv36, 0.001); end
  def test_costpercapita_bw36; assert_in_epsilon(40.16188395850272, worksheet.costpercapita_bw36, 0.001); end
  def test_costpercapita_bx36; assert_in_epsilon(41.624892223249084, worksheet.costpercapita_bx36, 0.001); end
  def test_costpercapita_by36; assert_in_epsilon(42.697448806299406, worksheet.costpercapita_by36, 0.001); end
  def test_costpercapita_bz36; assert_in_epsilon(43.37560802936581, worksheet.costpercapita_bz36, 0.001); end
  def test_costpercapita_ca36; assert_in_epsilon(43.653734359409675, worksheet.costpercapita_ca36, 0.001); end
  def test_costpercapita_cd36; assert_in_epsilon(784.6798099670167, worksheet.costpercapita_cd36, 0.001); end
  def test_costpercapita_cg36; assert_in_delta(0, (worksheet.costpercapita_cg36||0), 0.001); end
  def test_costpercapita_ch36; assert_in_delta(0, (worksheet.costpercapita_ch36||0), 0.001); end
  def test_costpercapita_ci36; assert_in_delta(0, (worksheet.costpercapita_ci36||0), 0.001); end
  def test_costpercapita_cj36; assert_in_delta(0, (worksheet.costpercapita_cj36||0), 0.001); end
  def test_costpercapita_ck36; assert_in_delta(0, (worksheet.costpercapita_ck36||0), 0.001); end
  def test_costpercapita_cl36; assert_in_delta(0, (worksheet.costpercapita_cl36||0), 0.001); end
  def test_costpercapita_cm36; assert_in_delta(0, (worksheet.costpercapita_cm36||0), 0.001); end
  def test_costpercapita_cn36; assert_in_delta(0, (worksheet.costpercapita_cn36||0), 0.001); end
  def test_costpercapita_cq36; assert_in_epsilon(-5.867273392250853, worksheet.costpercapita_cq36, 0.001); end
  def test_costpercapita_aj36; assert_in_epsilon(31.060306806484274, worksheet.costpercapita_aj36, 0.001); end
  def test_costpercapita_ak36; assert_in_epsilon(36.46901854412784, worksheet.costpercapita_ak36, 0.001); end
  def test_costpercapita_al36; assert_in_epsilon(38.293882106813015, worksheet.costpercapita_al36, 0.001); end
  def test_costpercapita_am36; assert_in_epsilon(40.16188395850272, worksheet.costpercapita_am36, 0.001); end
  def test_costpercapita_an36; assert_in_epsilon(41.624892223249084, worksheet.costpercapita_an36, 0.001); end
  def test_costpercapita_ao36; assert_in_epsilon(42.697448806299406, worksheet.costpercapita_ao36, 0.001); end
  def test_costpercapita_ap36; assert_in_epsilon(43.37560802936581, worksheet.costpercapita_ap36, 0.001); end
  def test_costpercapita_aq36; assert_in_epsilon(43.653734359409675, worksheet.costpercapita_aq36, 0.001); end
  def test_costpercapita_at36; assert_in_epsilon(790.5470833592675, worksheet.costpercapita_at36, 0.001); end
  def test_costpercapita_cr36; assert_equal("ok", worksheet.costpercapita_cr36); end
  def test_costpercapita_a37; assert_equal("XII.a.Rail", worksheet.costpercapita_a37); end
  def test_costpercapita_b37; assert_equal("Rail", worksheet.costpercapita_b37); end
  def test_costpercapita_c37; assert_equal("Transport", worksheet.costpercapita_c37); end
  def test_costpercapita_y37; assert_in_delta(0, (worksheet.costpercapita_y37||0), 0.001); end
  def test_costpercapita_z37; assert_in_delta(0, (worksheet.costpercapita_z37||0), 0.001); end
  def test_costpercapita_aa37; assert_in_delta(0, (worksheet.costpercapita_aa37||0), 0.001); end
  def test_costpercapita_ab37; assert_in_delta(0, (worksheet.costpercapita_ab37||0), 0.001); end
  def test_costpercapita_ac37; assert_in_delta(0, (worksheet.costpercapita_ac37||0), 0.001); end
  def test_costpercapita_ad37; assert_in_delta(0, (worksheet.costpercapita_ad37||0), 0.001); end
  def test_costpercapita_ae37; assert_in_delta(0, (worksheet.costpercapita_ae37||0), 0.001); end
  def test_costpercapita_af37; assert_in_delta(0, (worksheet.costpercapita_af37||0), 0.001); end
  def test_costpercapita_ag37; assert_in_delta(0, (worksheet.costpercapita_ag37||0), 0.001); end
  def test_costpercapita_av37; assert_in_delta(0, (worksheet.costpercapita_av37||0), 0.001); end
  def test_costpercapita_aw37; assert_in_epsilon(30, worksheet.costpercapita_aw37, 0.001); end
  def test_costpercapita_bt37; assert_in_epsilon(151.83234402428744, worksheet.costpercapita_bt37, 0.001); end
  def test_costpercapita_bu37; assert_in_epsilon(156.53244506436488, worksheet.costpercapita_bu37, 0.001); end
  def test_costpercapita_bv37; assert_in_epsilon(158.68771826066148, worksheet.costpercapita_bv37, 0.001); end
  def test_costpercapita_bw37; assert_in_epsilon(158.55705905656575, worksheet.costpercapita_bw37, 0.001); end
  def test_costpercapita_bx37; assert_in_epsilon(156.2443400777218, worksheet.costpercapita_bx37, 0.001); end
  def test_costpercapita_by37; assert_in_epsilon(151.71479505763207, worksheet.costpercapita_by37, 0.001); end
  def test_costpercapita_bz37; assert_in_epsilon(145.62034893688926, worksheet.costpercapita_bz37, 0.001); end
  def test_costpercapita_ca37; assert_in_epsilon(137.3182100916877, worksheet.costpercapita_ca37, 0.001); end
  def test_costpercapita_bs37; assert_in_epsilon(144.58773338159207, worksheet.costpercapita_bs37, 0.001); end
  def test_costpercapita_cd37; assert_in_epsilon(3217.2686852900447, worksheet.costpercapita_cd37, 0.001); end
  def test_costpercapita_cg37; assert_in_epsilon(-1.8672565725573844, worksheet.costpercapita_cg37, 0.001); end
  def test_costpercapita_ch37; assert_in_epsilon(-1.9078969169082007, worksheet.costpercapita_ch37, 0.001); end
  def test_costpercapita_ci37; assert_in_epsilon(-1.0793349899449924, worksheet.costpercapita_ci37, 0.001); end
  def test_costpercapita_cj37; assert_in_delta(-0.7916709404147269, worksheet.costpercapita_cj37, 0.001); end
  def test_costpercapita_ck37; assert_in_delta(-0.19576988670486156, worksheet.costpercapita_ck37, 0.001); end
  def test_costpercapita_cl37; assert_in_delta(0.07253720336870627, worksheet.costpercapita_cl37, 0.001); end
  def test_costpercapita_cm37; assert_in_delta(0.6127655141605247, worksheet.costpercapita_cm37, 0.001); end
  def test_costpercapita_cn37; assert_in_delta(0.6285680152116986, worksheet.costpercapita_cn37, 0.001); end
  def test_costpercapita_cf37; assert_in_epsilon(-2.2412337694800457, worksheet.costpercapita_cf37, 0.001); end
  def test_costpercapita_cq37; assert_in_epsilon(-20.585608118187487, worksheet.costpercapita_cq37, 0.001); end
  def test_costpercapita_aj37; assert_in_epsilon(153.69960059684482, worksheet.costpercapita_aj37, 0.001); end
  def test_costpercapita_ak37; assert_in_epsilon(158.44034198127306, worksheet.costpercapita_ak37, 0.001); end
  def test_costpercapita_al37; assert_in_epsilon(159.76705325060647, worksheet.costpercapita_al37, 0.001); end
  def test_costpercapita_am37; assert_in_epsilon(159.34872999698047, worksheet.costpercapita_am37, 0.001); end
  def test_costpercapita_an37; assert_in_epsilon(156.44010996442668, worksheet.costpercapita_an37, 0.001); end
  def test_costpercapita_ao37; assert_in_epsilon(151.64225785426336, worksheet.costpercapita_ao37, 0.001); end
  def test_costpercapita_ap37; assert_in_epsilon(145.00758342272874, worksheet.costpercapita_ap37, 0.001); end
  def test_costpercapita_aq37; assert_in_epsilon(136.689642076476, worksheet.costpercapita_aq37, 0.001); end
  def test_costpercapita_ai37; assert_in_epsilon(146.82896715107213, worksheet.costpercapita_ai37, 0.001); end
  def test_costpercapita_at37; assert_in_epsilon(3237.8542934082316, worksheet.costpercapita_at37, 0.001); end
  def test_costpercapita_cr37; assert_equal("ok", worksheet.costpercapita_cr37); end
  def test_costpercapita_a38; assert_equal("XII.a.Air", worksheet.costpercapita_a38); end
  def test_costpercapita_b38; assert_equal("Domestic aviation", worksheet.costpercapita_b38); end
  def test_costpercapita_c38; assert_equal("Transport", worksheet.costpercapita_c38); end
  def test_costpercapita_y38; assert_in_delta(0, (worksheet.costpercapita_y38||0), 0.001); end
  def test_costpercapita_z38; assert_in_delta(0, (worksheet.costpercapita_z38||0), 0.001); end
  def test_costpercapita_aa38; assert_in_delta(0, (worksheet.costpercapita_aa38||0), 0.001); end
  def test_costpercapita_ab38; assert_in_delta(0, (worksheet.costpercapita_ab38||0), 0.001); end
  def test_costpercapita_ac38; assert_in_delta(0, (worksheet.costpercapita_ac38||0), 0.001); end
  def test_costpercapita_ad38; assert_in_delta(0, (worksheet.costpercapita_ad38||0), 0.001); end
  def test_costpercapita_ae38; assert_in_delta(0, (worksheet.costpercapita_ae38||0), 0.001); end
  def test_costpercapita_af38; assert_in_delta(0, (worksheet.costpercapita_af38||0), 0.001); end
  def test_costpercapita_ag38; assert_in_delta(0, (worksheet.costpercapita_ag38||0), 0.001); end
  def test_costpercapita_av38; assert_in_delta(0, (worksheet.costpercapita_av38||0), 0.001); end
  def test_costpercapita_aw38; assert_in_epsilon(30, worksheet.costpercapita_aw38, 0.001); end
  def test_costpercapita_bt38; assert_in_epsilon(3.953375031316032, worksheet.costpercapita_bt38, 0.001); end
  def test_costpercapita_bu38; assert_in_epsilon(3.965597913546834, worksheet.costpercapita_bu38, 0.001); end
  def test_costpercapita_bv38; assert_in_epsilon(3.899386203399947, worksheet.costpercapita_bv38, 0.001); end
  def test_costpercapita_bw38; assert_in_epsilon(3.769662377231821, worksheet.costpercapita_bw38, 0.001); end
  def test_costpercapita_bx38; assert_in_epsilon(3.5928761212681852, worksheet.costpercapita_bx38, 0.001); end
  def test_costpercapita_by38; assert_in_epsilon(3.1216737354274753, worksheet.costpercapita_by38, 0.001); end
  def test_costpercapita_bz38; assert_in_epsilon(2.7022916307757754, worksheet.costpercapita_bz38, 0.001); end
  def test_costpercapita_ca38; assert_in_epsilon(2.166528969574805, worksheet.costpercapita_ca38, 0.001); end
  def test_costpercapita_bs38; assert_in_epsilon(3.8495342988661707, worksheet.costpercapita_bs38, 0.001); end
  def test_costpercapita_cd38; assert_in_epsilon(75.84594505939963, worksheet.costpercapita_cd38, 0.001); end
  def test_costpercapita_cg38; assert_in_epsilon(-1.8672846996436498, worksheet.costpercapita_cg38, 0.001); end
  def test_costpercapita_ch38; assert_in_epsilon(-1.0112699538000804, worksheet.costpercapita_ch38, 0.001); end
  def test_costpercapita_ci38; assert_in_delta(-0.2932476929361436, worksheet.costpercapita_ci38, 0.001); end
  def test_costpercapita_cj38; assert_in_delta(0.29719627423430145, worksheet.costpercapita_cj38, 0.001); end
  def test_costpercapita_ck38; assert_in_delta(0.7521570784841994, worksheet.costpercapita_ck38, 0.001); end
  def test_costpercapita_cl38; assert_in_delta(0.8182332246076275, worksheet.costpercapita_cl38, 0.001); end
  def test_costpercapita_cm38; assert_in_delta(0.8604843130370361, worksheet.costpercapita_cm38, 0.001); end
  def test_costpercapita_cn38; assert_in_delta(0.7230134884037278, worksheet.costpercapita_cn38, 0.001); end
  def test_costpercapita_cf38; assert_in_epsilon(-2.7897345016432133, worksheet.costpercapita_cf38, 0.001); end
  def test_costpercapita_cq38; assert_in_epsilon(-9.034085875586449, worksheet.costpercapita_cq38, 0.001); end
  def test_costpercapita_aj38; assert_in_epsilon(5.820659730959681, worksheet.costpercapita_aj38, 0.001); end
  def test_costpercapita_ak38; assert_in_epsilon(4.976867867346915, worksheet.costpercapita_ak38, 0.001); end
  def test_costpercapita_al38; assert_in_epsilon(4.1926338963360905, worksheet.costpercapita_al38, 0.001); end
  def test_costpercapita_am38; assert_in_epsilon(3.4724661029975192, worksheet.costpercapita_am38, 0.001); end
  def test_costpercapita_an38; assert_in_epsilon(2.8407190427839857, worksheet.costpercapita_an38, 0.001); end
  def test_costpercapita_ao38; assert_in_epsilon(2.303440510819848, worksheet.costpercapita_ao38, 0.001); end
  def test_costpercapita_ap38; assert_in_epsilon(1.8418073177387393, worksheet.costpercapita_ap38, 0.001); end
  def test_costpercapita_aq38; assert_in_epsilon(1.443515481171077, worksheet.costpercapita_aq38, 0.001); end
  def test_costpercapita_ai38; assert_in_epsilon(6.639268800509384, worksheet.costpercapita_ai38, 0.001); end
  def test_costpercapita_at38; assert_in_epsilon(84.88003093498607, worksheet.costpercapita_at38, 0.001); end
  def test_costpercapita_cr38; assert_equal("ok", worksheet.costpercapita_cr38); end
  def test_costpercapita_a39; assert_equal("XII.b", worksheet.costpercapita_a39); end
  def test_costpercapita_b39; assert_equal("Domestic freight", worksheet.costpercapita_b39); end
  def test_costpercapita_c39; assert_equal("Transport", worksheet.costpercapita_c39); end
  def test_costpercapita_y39; assert_in_delta(0, (worksheet.costpercapita_y39||0), 0.001); end
  def test_costpercapita_z39; assert_in_delta(0, (worksheet.costpercapita_z39||0), 0.001); end
  def test_costpercapita_aa39; assert_in_delta(0, (worksheet.costpercapita_aa39||0), 0.001); end
  def test_costpercapita_ab39; assert_in_delta(0, (worksheet.costpercapita_ab39||0), 0.001); end
  def test_costpercapita_ac39; assert_in_delta(0, (worksheet.costpercapita_ac39||0), 0.001); end
  def test_costpercapita_ad39; assert_in_delta(0, (worksheet.costpercapita_ad39||0), 0.001); end
  def test_costpercapita_ae39; assert_in_delta(0, (worksheet.costpercapita_ae39||0), 0.001); end
  def test_costpercapita_af39; assert_in_delta(0, (worksheet.costpercapita_af39||0), 0.001); end
  def test_costpercapita_ag39; assert_in_delta(0, (worksheet.costpercapita_ag39||0), 0.001); end
  def test_costpercapita_av39; assert_in_delta(0, (worksheet.costpercapita_av39||0), 0.001); end
  def test_costpercapita_aw39; assert_in_epsilon(10, worksheet.costpercapita_aw39, 0.001); end
  def test_costpercapita_bt39; assert_in_epsilon(158.39190290343322, worksheet.costpercapita_bt39, 0.001); end
  def test_costpercapita_bu39; assert_in_epsilon(165.28876333883036, worksheet.costpercapita_bu39, 0.001); end
  def test_costpercapita_bv39; assert_in_epsilon(149.25105388850332, worksheet.costpercapita_bv39, 0.001); end
  def test_costpercapita_bw39; assert_in_epsilon(136.9246234085196, worksheet.costpercapita_bw39, 0.001); end
  def test_costpercapita_bx39; assert_in_epsilon(125.98352954026066, worksheet.costpercapita_bx39, 0.001); end
  def test_costpercapita_by39; assert_in_epsilon(117.23827620052955, worksheet.costpercapita_by39, 0.001); end
  def test_costpercapita_bz39; assert_in_epsilon(111.18482402054065, worksheet.costpercapita_bz39, 0.001); end
  def test_costpercapita_ca39; assert_in_epsilon(102.20147742627164, worksheet.costpercapita_ca39, 0.001); end
  def test_costpercapita_bs39; assert_in_epsilon(110.30462322906094, worksheet.costpercapita_bs39, 0.001); end
  def test_costpercapita_cd39; assert_in_epsilon(2934.212883720681, worksheet.costpercapita_cd39, 0.001); end
  def test_costpercapita_cg39; assert_in_epsilon(-21.332122046589557, worksheet.costpercapita_cg39, 0.001); end
  def test_costpercapita_ch39; assert_in_epsilon(4.999609774434559, worksheet.costpercapita_ch39, 0.001); end
  def test_costpercapita_ci39; assert_in_epsilon(2.6103584587572946, worksheet.costpercapita_ci39, 0.001); end
  def test_costpercapita_cj39; assert_in_epsilon(2.3350553524491486, worksheet.costpercapita_cj39, 0.001); end
  def test_costpercapita_ck39; assert_in_epsilon(2.1367053215791465, worksheet.costpercapita_ck39, 0.001); end
  def test_costpercapita_cl39; assert_in_delta(0.6836424190786283, worksheet.costpercapita_cl39, 0.001); end
  def test_costpercapita_cm39; assert_in_delta(-0.8070063208353601, worksheet.costpercapita_cm39, 0.001); end
  def test_costpercapita_cn39; assert_in_epsilon(3.266033126607707, worksheet.costpercapita_cn39, 0.001); end
  def test_costpercapita_cf39; assert_in_epsilon(-36.70126790884605, worksheet.costpercapita_cf39, 0.001); end
  def test_costpercapita_cq39; assert_in_epsilon(-86.29930686044008, worksheet.costpercapita_cq39, 0.001); end
  def test_costpercapita_aj39; assert_in_epsilon(179.72402495002277, worksheet.costpercapita_aj39, 0.001); end
  def test_costpercapita_ak39; assert_in_epsilon(160.28915356439578, worksheet.costpercapita_ak39, 0.001); end
  def test_costpercapita_al39; assert_in_epsilon(146.64069542974602, worksheet.costpercapita_al39, 0.001); end
  def test_costpercapita_am39; assert_in_epsilon(134.58956805607045, worksheet.costpercapita_am39, 0.001); end
  def test_costpercapita_an39; assert_in_epsilon(123.84682421868149, worksheet.costpercapita_an39, 0.001); end
  def test_costpercapita_ao39; assert_in_epsilon(116.55463378145092, worksheet.costpercapita_ao39, 0.001); end
  def test_costpercapita_ap39; assert_in_epsilon(111.99183034137599, worksheet.costpercapita_ap39, 0.001); end
  def test_costpercapita_aq39; assert_in_epsilon(98.93544429966393, worksheet.costpercapita_aq39, 0.001); end
  def test_costpercapita_ai39; assert_in_epsilon(147.00589113790699, worksheet.costpercapita_ai39, 0.001); end
  def test_costpercapita_at39; assert_in_epsilon(3020.51219058112, worksheet.costpercapita_at39, 0.001); end
  def test_costpercapita_cr39; assert_equal("ok", worksheet.costpercapita_cr39); end
  def test_costpercapita_a40; assert_equal("XII.c", worksheet.costpercapita_a40); end
  def test_costpercapita_b40; assert_equal("International aviation", worksheet.costpercapita_b40); end
  def test_costpercapita_c40; assert_equal("Transport", worksheet.costpercapita_c40); end
  def test_costpercapita_e40; assert_in_delta(0, (worksheet.costpercapita_e40||0), 0.001); end
  def test_costpercapita_f40; assert_in_delta(0, (worksheet.costpercapita_f40||0), 0.001); end
  def test_costpercapita_g40; assert_in_delta(0, (worksheet.costpercapita_g40||0), 0.001); end
  def test_costpercapita_h40; assert_in_delta(0, (worksheet.costpercapita_h40||0), 0.001); end
  def test_costpercapita_i40; assert_in_delta(0, (worksheet.costpercapita_i40||0), 0.001); end
  def test_costpercapita_j40; assert_in_delta(0, (worksheet.costpercapita_j40||0), 0.001); end
  def test_costpercapita_k40; assert_in_delta(0, (worksheet.costpercapita_k40||0), 0.001); end
  def test_costpercapita_l40; assert_in_delta(0, (worksheet.costpercapita_l40||0), 0.001); end
  def test_costpercapita_m40; assert_in_delta(0, (worksheet.costpercapita_m40||0), 0.001); end
  def test_costpercapita_y40; assert_in_delta(0, (worksheet.costpercapita_y40||0), 0.001); end
  def test_costpercapita_z40; assert_in_delta(0, (worksheet.costpercapita_z40||0), 0.001); end
  def test_costpercapita_aa40; assert_in_delta(0, (worksheet.costpercapita_aa40||0), 0.001); end
  def test_costpercapita_ab40; assert_in_delta(0, (worksheet.costpercapita_ab40||0), 0.001); end
  def test_costpercapita_ac40; assert_in_delta(0, (worksheet.costpercapita_ac40||0), 0.001); end
  def test_costpercapita_ad40; assert_in_delta(0, (worksheet.costpercapita_ad40||0), 0.001); end
  def test_costpercapita_ae40; assert_in_delta(0, (worksheet.costpercapita_ae40||0), 0.001); end
  def test_costpercapita_af40; assert_in_delta(0, (worksheet.costpercapita_af40||0), 0.001); end
  def test_costpercapita_ag40; assert_in_delta(0, (worksheet.costpercapita_ag40||0), 0.001); end
  def test_costpercapita_av40; assert_in_delta(0, (worksheet.costpercapita_av40||0), 0.001); end
  def test_costpercapita_aw40; assert_in_epsilon(15, worksheet.costpercapita_aw40, 0.001); end
  def test_costpercapita_ay40; assert_in_delta(0, (worksheet.costpercapita_ay40||0), 0.001); end
  def test_costpercapita_az40; assert_in_delta(0, (worksheet.costpercapita_az40||0), 0.001); end
  def test_costpercapita_ba40; assert_in_delta(0, (worksheet.costpercapita_ba40||0), 0.001); end
  def test_costpercapita_bb40; assert_in_delta(0, (worksheet.costpercapita_bb40||0), 0.001); end
  def test_costpercapita_bc40; assert_in_delta(0, (worksheet.costpercapita_bc40||0), 0.001); end
  def test_costpercapita_bd40; assert_in_delta(0, (worksheet.costpercapita_bd40||0), 0.001); end
  def test_costpercapita_be40; assert_in_delta(0, (worksheet.costpercapita_be40||0), 0.001); end
  def test_costpercapita_bf40; assert_in_delta(0, (worksheet.costpercapita_bf40||0), 0.001); end
  def test_costpercapita_bg40; assert_in_delta(0, (worksheet.costpercapita_bg40||0), 0.001); end
  def test_costpercapita_bi40; assert_in_delta(0, (worksheet.costpercapita_bi40||0), 0.001); end
  def test_costpercapita_bj40; assert_in_delta(0, (worksheet.costpercapita_bj40||0), 0.001); end
  def test_costpercapita_bk40; assert_in_delta(0, (worksheet.costpercapita_bk40||0), 0.001); end
  def test_costpercapita_bl40; assert_in_delta(0, (worksheet.costpercapita_bl40||0), 0.001); end
  def test_costpercapita_bm40; assert_in_delta(0, (worksheet.costpercapita_bm40||0), 0.001); end
  def test_costpercapita_bn40; assert_in_delta(0, (worksheet.costpercapita_bn40||0), 0.001); end
  def test_costpercapita_bo40; assert_in_delta(0, (worksheet.costpercapita_bo40||0), 0.001); end
  def test_costpercapita_bp40; assert_in_delta(0, (worksheet.costpercapita_bp40||0), 0.001); end
  def test_costpercapita_bq40; assert_in_delta(0, (worksheet.costpercapita_bq40||0), 0.001); end
  def test_costpercapita_cf40; assert_in_delta(0, (worksheet.costpercapita_cf40||0), 0.001); end
  def test_costpercapita_cg40; assert_in_delta(0, (worksheet.costpercapita_cg40||0), 0.001); end
  def test_costpercapita_ch40; assert_in_delta(0, (worksheet.costpercapita_ch40||0), 0.001); end
  def test_costpercapita_ci40; assert_in_delta(0, (worksheet.costpercapita_ci40||0), 0.001); end
  def test_costpercapita_cj40; assert_in_delta(0, (worksheet.costpercapita_cj40||0), 0.001); end
  def test_costpercapita_ck40; assert_in_delta(0, (worksheet.costpercapita_ck40||0), 0.001); end
  def test_costpercapita_cl40; assert_in_delta(0, (worksheet.costpercapita_cl40||0), 0.001); end
  def test_costpercapita_cm40; assert_in_delta(0, (worksheet.costpercapita_cm40||0), 0.001); end
  def test_costpercapita_cn40; assert_in_delta(0, (worksheet.costpercapita_cn40||0), 0.001); end
  def test_costpercapita_cp40; assert_in_delta(0, (worksheet.costpercapita_cp40||0), 0.001); end
  def test_costpercapita_cq40; assert_in_delta(0, (worksheet.costpercapita_cq40||0), 0.001); end
  def test_costpercapita_bt40; assert_in_epsilon(16.995264105403493, worksheet.costpercapita_bt40, 0.001); end
  def test_costpercapita_bu40; assert_in_epsilon(51.260272035079076, worksheet.costpercapita_bu40, 0.001); end
  def test_costpercapita_bv40; assert_in_epsilon(67.40076500279213, worksheet.costpercapita_bv40, 0.001); end
  def test_costpercapita_bw40; assert_in_epsilon(73.70808659252967, worksheet.costpercapita_bw40, 0.001); end
  def test_costpercapita_bx40; assert_in_epsilon(167.70067583437094, worksheet.costpercapita_bx40, 0.001); end
  def test_costpercapita_by40; assert_in_epsilon(152.95641381148806, worksheet.costpercapita_by40, 0.001); end
  def test_costpercapita_bz40; assert_in_epsilon(230.55154071212598, worksheet.costpercapita_bz40, 0.001); end
  def test_costpercapita_ca40; assert_in_epsilon(159.1471315602158, worksheet.costpercapita_ca40, 0.001); end
  def test_costpercapita_bs40; assert_in_epsilon(-10.295675329529756, worksheet.costpercapita_bs40, 0.001); end
  def test_costpercapita_cd40; assert_in_epsilon(1821.833676009623, worksheet.costpercapita_cd40, 0.001); end
  def test_costpercapita_aj40; assert_in_epsilon(16.995264105403493, worksheet.costpercapita_aj40, 0.001); end
  def test_costpercapita_ak40; assert_in_epsilon(51.260272035079076, worksheet.costpercapita_ak40, 0.001); end
  def test_costpercapita_al40; assert_in_epsilon(67.40076500279213, worksheet.costpercapita_al40, 0.001); end
  def test_costpercapita_am40; assert_in_epsilon(73.70808659252967, worksheet.costpercapita_am40, 0.001); end
  def test_costpercapita_an40; assert_in_epsilon(167.70067583437094, worksheet.costpercapita_an40, 0.001); end
  def test_costpercapita_ao40; assert_in_epsilon(152.95641381148806, worksheet.costpercapita_ao40, 0.001); end
  def test_costpercapita_ap40; assert_in_epsilon(230.55154071212598, worksheet.costpercapita_ap40, 0.001); end
  def test_costpercapita_aq40; assert_in_epsilon(159.1471315602158, worksheet.costpercapita_aq40, 0.001); end
  def test_costpercapita_ai40; assert_in_epsilon(-10.295675329529756, worksheet.costpercapita_ai40, 0.001); end
  def test_costpercapita_at40; assert_in_epsilon(1821.833676009623, worksheet.costpercapita_at40, 0.001); end
  def test_costpercapita_cr40; assert_equal("ok", worksheet.costpercapita_cr40); end
  def test_costpercapita_a41; assert_equal("XII.e", worksheet.costpercapita_a41); end
  def test_costpercapita_b41; assert_equal("International shipping (maritime bunkers)", worksheet.costpercapita_b41); end
  def test_costpercapita_c41; assert_equal("Transport", worksheet.costpercapita_c41); end
  def test_costpercapita_e41; assert_in_delta(0, (worksheet.costpercapita_e41||0), 0.001); end
  def test_costpercapita_f41; assert_in_delta(0, (worksheet.costpercapita_f41||0), 0.001); end
  def test_costpercapita_g41; assert_in_delta(0, (worksheet.costpercapita_g41||0), 0.001); end
  def test_costpercapita_h41; assert_in_delta(0, (worksheet.costpercapita_h41||0), 0.001); end
  def test_costpercapita_i41; assert_in_delta(0, (worksheet.costpercapita_i41||0), 0.001); end
  def test_costpercapita_j41; assert_in_delta(0, (worksheet.costpercapita_j41||0), 0.001); end
  def test_costpercapita_k41; assert_in_delta(0, (worksheet.costpercapita_k41||0), 0.001); end
  def test_costpercapita_l41; assert_in_delta(0, (worksheet.costpercapita_l41||0), 0.001); end
  def test_costpercapita_m41; assert_in_delta(0, (worksheet.costpercapita_m41||0), 0.001); end
  def test_costpercapita_y41; assert_in_delta(0, (worksheet.costpercapita_y41||0), 0.001); end
  def test_costpercapita_z41; assert_in_delta(0, (worksheet.costpercapita_z41||0), 0.001); end
  def test_costpercapita_aa41; assert_in_delta(0, (worksheet.costpercapita_aa41||0), 0.001); end
  def test_costpercapita_ab41; assert_in_delta(0, (worksheet.costpercapita_ab41||0), 0.001); end
  def test_costpercapita_ac41; assert_in_delta(0, (worksheet.costpercapita_ac41||0), 0.001); end
  def test_costpercapita_ad41; assert_in_delta(0, (worksheet.costpercapita_ad41||0), 0.001); end
  def test_costpercapita_ae41; assert_in_delta(0, (worksheet.costpercapita_ae41||0), 0.001); end
  def test_costpercapita_af41; assert_in_delta(0, (worksheet.costpercapita_af41||0), 0.001); end
  def test_costpercapita_ag41; assert_in_delta(0, (worksheet.costpercapita_ag41||0), 0.001); end
  def test_costpercapita_av41; assert_in_delta(0, (worksheet.costpercapita_av41||0), 0.001); end
  def test_costpercapita_aw41; assert_in_epsilon(15, worksheet.costpercapita_aw41, 0.001); end
  def test_costpercapita_ay41; assert_in_delta(0, (worksheet.costpercapita_ay41||0), 0.001); end
  def test_costpercapita_az41; assert_in_delta(0, (worksheet.costpercapita_az41||0), 0.001); end
  def test_costpercapita_ba41; assert_in_delta(0, (worksheet.costpercapita_ba41||0), 0.001); end
  def test_costpercapita_bb41; assert_in_delta(0, (worksheet.costpercapita_bb41||0), 0.001); end
  def test_costpercapita_bc41; assert_in_delta(0, (worksheet.costpercapita_bc41||0), 0.001); end
  def test_costpercapita_bd41; assert_in_delta(0, (worksheet.costpercapita_bd41||0), 0.001); end
  def test_costpercapita_be41; assert_in_delta(0, (worksheet.costpercapita_be41||0), 0.001); end
  def test_costpercapita_bf41; assert_in_delta(0, (worksheet.costpercapita_bf41||0), 0.001); end
  def test_costpercapita_bg41; assert_in_delta(0, (worksheet.costpercapita_bg41||0), 0.001); end
  def test_costpercapita_bi41; assert_in_delta(0, (worksheet.costpercapita_bi41||0), 0.001); end
  def test_costpercapita_bj41; assert_in_delta(0, (worksheet.costpercapita_bj41||0), 0.001); end
  def test_costpercapita_bk41; assert_in_delta(0, (worksheet.costpercapita_bk41||0), 0.001); end
  def test_costpercapita_bl41; assert_in_delta(0, (worksheet.costpercapita_bl41||0), 0.001); end
  def test_costpercapita_bm41; assert_in_delta(0, (worksheet.costpercapita_bm41||0), 0.001); end
  def test_costpercapita_bn41; assert_in_delta(0, (worksheet.costpercapita_bn41||0), 0.001); end
  def test_costpercapita_bo41; assert_in_delta(0, (worksheet.costpercapita_bo41||0), 0.001); end
  def test_costpercapita_bp41; assert_in_delta(0, (worksheet.costpercapita_bp41||0), 0.001); end
  def test_costpercapita_bq41; assert_in_delta(0, (worksheet.costpercapita_bq41||0), 0.001); end
  def test_costpercapita_cf41; assert_in_delta(0, (worksheet.costpercapita_cf41||0), 0.001); end
  def test_costpercapita_cg41; assert_in_delta(0, (worksheet.costpercapita_cg41||0), 0.001); end
  def test_costpercapita_ch41; assert_in_delta(0, (worksheet.costpercapita_ch41||0), 0.001); end
  def test_costpercapita_ci41; assert_in_delta(0, (worksheet.costpercapita_ci41||0), 0.001); end
  def test_costpercapita_cj41; assert_in_delta(0, (worksheet.costpercapita_cj41||0), 0.001); end
  def test_costpercapita_ck41; assert_in_delta(0, (worksheet.costpercapita_ck41||0), 0.001); end
  def test_costpercapita_cl41; assert_in_delta(0, (worksheet.costpercapita_cl41||0), 0.001); end
  def test_costpercapita_cm41; assert_in_delta(0, (worksheet.costpercapita_cm41||0), 0.001); end
  def test_costpercapita_cn41; assert_in_delta(0, (worksheet.costpercapita_cn41||0), 0.001); end
  def test_costpercapita_cp41; assert_in_delta(0, (worksheet.costpercapita_cp41||0), 0.001); end
  def test_costpercapita_cq41; assert_in_delta(0, (worksheet.costpercapita_cq41||0), 0.001); end
  def test_costpercapita_bt41; assert_in_epsilon(2.2628595687100987, worksheet.costpercapita_bt41, 0.001); end
  def test_costpercapita_bu41; assert_in_epsilon(7.4058418875517225, worksheet.costpercapita_bu41, 0.001); end
  def test_costpercapita_bv41; assert_in_epsilon(12.499027516222807, worksheet.costpercapita_bv41, 0.001); end
  def test_costpercapita_bw41; assert_in_epsilon(19.001435831344192, worksheet.costpercapita_bw41, 0.001); end
  def test_costpercapita_bx41; assert_in_epsilon(23.254680335469203, worksheet.costpercapita_bx41, 0.001); end
  def test_costpercapita_by41; assert_in_epsilon(27.776029551673084, worksheet.costpercapita_by41, 0.001); end
  def test_costpercapita_bz41; assert_in_epsilon(32.60095997722088, worksheet.costpercapita_bz41, 0.001); end
  def test_costpercapita_ca41; assert_in_epsilon(37.78259474072222, worksheet.costpercapita_ca41, 0.001); end
  def test_costpercapita_bs41; assert_in_delta(0, (worksheet.costpercapita_bs41||0), 0.001); end
  def test_costpercapita_cd41; assert_in_epsilon(319.68568642179446, worksheet.costpercapita_cd41, 0.001); end
  def test_costpercapita_aj41; assert_in_epsilon(2.2628595687100987, worksheet.costpercapita_aj41, 0.001); end
  def test_costpercapita_ak41; assert_in_epsilon(7.4058418875517225, worksheet.costpercapita_ak41, 0.001); end
  def test_costpercapita_al41; assert_in_epsilon(12.499027516222807, worksheet.costpercapita_al41, 0.001); end
  def test_costpercapita_am41; assert_in_epsilon(19.001435831344192, worksheet.costpercapita_am41, 0.001); end
  def test_costpercapita_an41; assert_in_epsilon(23.254680335469203, worksheet.costpercapita_an41, 0.001); end
  def test_costpercapita_ao41; assert_in_epsilon(27.776029551673084, worksheet.costpercapita_ao41, 0.001); end
  def test_costpercapita_ap41; assert_in_epsilon(32.60095997722088, worksheet.costpercapita_ap41, 0.001); end
  def test_costpercapita_aq41; assert_in_epsilon(37.78259474072222, worksheet.costpercapita_aq41, 0.001); end
  def test_costpercapita_ai41; assert_in_delta(0, (worksheet.costpercapita_ai41||0), 0.001); end
  def test_costpercapita_at41; assert_in_epsilon(319.68568642179446, worksheet.costpercapita_at41, 0.001); end
  def test_costpercapita_cr41; assert_equal("ok", worksheet.costpercapita_cr41); end
  def test_costpercapita_a42; assert_equal("XIV.a", worksheet.costpercapita_a42); end
  def test_costpercapita_b42; assert_equal("Geosequestration", worksheet.costpercapita_b42); end
  def test_costpercapita_c42; assert_equal("Other", worksheet.costpercapita_c42); end
  def test_costpercapita_y42; assert_in_delta(0, (worksheet.costpercapita_y42||0), 0.001); end
  def test_costpercapita_z42; assert_in_delta(0, (worksheet.costpercapita_z42||0), 0.001); end
  def test_costpercapita_aa42; assert_in_delta(0, (worksheet.costpercapita_aa42||0), 0.001); end
  def test_costpercapita_ab42; assert_in_delta(0, (worksheet.costpercapita_ab42||0), 0.001); end
  def test_costpercapita_ac42; assert_in_delta(0, (worksheet.costpercapita_ac42||0), 0.001); end
  def test_costpercapita_ad42; assert_in_delta(0, (worksheet.costpercapita_ad42||0), 0.001); end
  def test_costpercapita_ae42; assert_in_delta(0, (worksheet.costpercapita_ae42||0), 0.001); end
  def test_costpercapita_af42; assert_in_delta(0, (worksheet.costpercapita_af42||0), 0.001); end
  def test_costpercapita_ag42; assert_in_delta(0, (worksheet.costpercapita_ag42||0), 0.001); end
  def test_costpercapita_av42; assert_in_delta(0, (worksheet.costpercapita_av42||0), 0.001); end
  def test_costpercapita_aw42; assert_in_epsilon(5, worksheet.costpercapita_aw42, 0.001); end
  def test_costpercapita_bt42; assert_in_delta(0, (worksheet.costpercapita_bt42||0), 0.001); end
  def test_costpercapita_bu42; assert_in_delta(0, (worksheet.costpercapita_bu42||0), 0.001); end
  def test_costpercapita_bv42; assert_in_delta(0, (worksheet.costpercapita_bv42||0), 0.001); end
  def test_costpercapita_bw42; assert_in_delta(0, (worksheet.costpercapita_bw42||0), 0.001); end
  def test_costpercapita_bx42; assert_in_delta(0, (worksheet.costpercapita_bx42||0), 0.001); end
  def test_costpercapita_by42; assert_in_delta(0, (worksheet.costpercapita_by42||0), 0.001); end
  def test_costpercapita_bz42; assert_in_delta(0, (worksheet.costpercapita_bz42||0), 0.001); end
  def test_costpercapita_ca42; assert_in_delta(0, (worksheet.costpercapita_ca42||0), 0.001); end
  def test_costpercapita_bs42; assert_in_delta(0, (worksheet.costpercapita_bs42||0), 0.001); end
  def test_costpercapita_cd42; assert_in_delta(0, (worksheet.costpercapita_cd42||0), 0.001); end
  def test_costpercapita_cg42; assert_in_delta(0, (worksheet.costpercapita_cg42||0), 0.001); end
  def test_costpercapita_ch42; assert_in_delta(0, (worksheet.costpercapita_ch42||0), 0.001); end
  def test_costpercapita_ci42; assert_in_delta(0, (worksheet.costpercapita_ci42||0), 0.001); end
  def test_costpercapita_cj42; assert_in_delta(0, (worksheet.costpercapita_cj42||0), 0.001); end
  def test_costpercapita_ck42; assert_in_delta(0, (worksheet.costpercapita_ck42||0), 0.001); end
  def test_costpercapita_cl42; assert_in_delta(0, (worksheet.costpercapita_cl42||0), 0.001); end
  def test_costpercapita_cm42; assert_in_delta(0, (worksheet.costpercapita_cm42||0), 0.001); end
  def test_costpercapita_cn42; assert_in_delta(0, (worksheet.costpercapita_cn42||0), 0.001); end
  def test_costpercapita_cf42; assert_in_delta(0, (worksheet.costpercapita_cf42||0), 0.001); end
  def test_costpercapita_cq42; assert_in_delta(0, (worksheet.costpercapita_cq42||0), 0.001); end
  def test_costpercapita_aj42; assert_in_delta(0, (worksheet.costpercapita_aj42||0), 0.001); end
  def test_costpercapita_ak42; assert_in_delta(0, (worksheet.costpercapita_ak42||0), 0.001); end
  def test_costpercapita_al42; assert_in_delta(0, (worksheet.costpercapita_al42||0), 0.001); end
  def test_costpercapita_am42; assert_in_delta(0, (worksheet.costpercapita_am42||0), 0.001); end
  def test_costpercapita_an42; assert_in_delta(0, (worksheet.costpercapita_an42||0), 0.001); end
  def test_costpercapita_ao42; assert_in_delta(0, (worksheet.costpercapita_ao42||0), 0.001); end
  def test_costpercapita_ap42; assert_in_delta(0, (worksheet.costpercapita_ap42||0), 0.001); end
  def test_costpercapita_aq42; assert_in_delta(0, (worksheet.costpercapita_aq42||0), 0.001); end
  def test_costpercapita_ai42; assert_in_delta(0, (worksheet.costpercapita_ai42||0), 0.001); end
  def test_costpercapita_at42; assert_in_delta(0, (worksheet.costpercapita_at42||0), 0.001); end
  def test_costpercapita_cr42; assert_equal("ok", worksheet.costpercapita_cr42); end
  def test_costpercapita_a43; assert_equal("XV.a", worksheet.costpercapita_a43); end
  def test_costpercapita_b43; assert_equal("Petroleum refineries", worksheet.costpercapita_b43); end
  def test_costpercapita_c43; assert_equal("Industry", worksheet.costpercapita_c43); end
  def test_costpercapita_y43; assert_in_delta(0, (worksheet.costpercapita_y43||0), 0.001); end
  def test_costpercapita_z43; assert_in_delta(0, (worksheet.costpercapita_z43||0), 0.001); end
  def test_costpercapita_aa43; assert_in_delta(0, (worksheet.costpercapita_aa43||0), 0.001); end
  def test_costpercapita_ab43; assert_in_delta(0, (worksheet.costpercapita_ab43||0), 0.001); end
  def test_costpercapita_ac43; assert_in_delta(0, (worksheet.costpercapita_ac43||0), 0.001); end
  def test_costpercapita_ad43; assert_in_delta(0, (worksheet.costpercapita_ad43||0), 0.001); end
  def test_costpercapita_ae43; assert_in_delta(0, (worksheet.costpercapita_ae43||0), 0.001); end
  def test_costpercapita_af43; assert_in_delta(0, (worksheet.costpercapita_af43||0), 0.001); end
  def test_costpercapita_ag43; assert_in_delta(0, (worksheet.costpercapita_ag43||0), 0.001); end
  def test_costpercapita_av43; assert_in_delta(0, (worksheet.costpercapita_av43||0), 0.001); end
  def test_costpercapita_aw43; assert_in_epsilon(15, worksheet.costpercapita_aw43, 0.001); end
  def test_costpercapita_bt43; assert_in_epsilon(13.407405849046294, worksheet.costpercapita_bt43, 0.001); end
  def test_costpercapita_bu43; assert_in_epsilon(13.680302968752592, worksheet.costpercapita_bu43, 0.001); end
  def test_costpercapita_bv43; assert_in_epsilon(13.174958290344575, worksheet.costpercapita_bv43, 0.001); end
  def test_costpercapita_bw43; assert_in_epsilon(12.322553999470323, worksheet.costpercapita_bw43, 0.001); end
  def test_costpercapita_bx43; assert_in_epsilon(11.649512442345943, worksheet.costpercapita_bx43, 0.001); end
  def test_costpercapita_by43; assert_in_epsilon(11.110682180962622, worksheet.costpercapita_by43, 0.001); end
  def test_costpercapita_bz43; assert_in_epsilon(10.668832459515128, worksheet.costpercapita_bz43, 0.001); end
  def test_costpercapita_ca43; assert_in_epsilon(10.302515545580444, worksheet.costpercapita_ca43, 0.001); end
  def test_costpercapita_bs43; assert_in_epsilon(13.072390389348598, worksheet.costpercapita_bs43, 0.001); end
  def test_costpercapita_cd43; assert_in_epsilon(262.78159693482553, worksheet.costpercapita_cd43, 0.001); end
  def test_costpercapita_cg43; assert_in_epsilon(-1.883937879562833, worksheet.costpercapita_cg43, 0.001); end
  def test_costpercapita_ch43; assert_in_delta(-0.34524977841387133, worksheet.costpercapita_ch43, 0.001); end
  def test_costpercapita_ci43; assert_in_delta(0.19429677424103087, worksheet.costpercapita_ci43, 0.001); end
  def test_costpercapita_cj43; assert_in_delta(0.15773179367522586, worksheet.costpercapita_cj43, 0.001); end
  def test_costpercapita_ck43; assert_in_delta(0.11970685704234228, worksheet.costpercapita_ck43, 0.001); end
  def test_costpercapita_cl43; assert_in_delta(0.09065148735976566, worksheet.costpercapita_cl43, 0.001); end
  def test_costpercapita_cm43; assert_in_delta(0.06874515776112332, worksheet.costpercapita_cm43, 0.001); end
  def test_costpercapita_cn43; assert_in_delta(0.052201006013522865, worksheet.costpercapita_cn43, 0.001); end
  def test_costpercapita_cf43; assert_in_epsilon(-3.641837959053661, worksheet.costpercapita_cf43, 0.001); end
  def test_costpercapita_cq43; assert_in_epsilon(-11.230926970731982, worksheet.costpercapita_cq43, 0.001); end
  def test_costpercapita_aj43; assert_in_epsilon(15.291343728609126, worksheet.costpercapita_aj43, 0.001); end
  def test_costpercapita_ak43; assert_in_epsilon(14.025552747166463, worksheet.costpercapita_ak43, 0.001); end
  def test_costpercapita_al43; assert_in_epsilon(12.980661516103543, worksheet.costpercapita_al43, 0.001); end
  def test_costpercapita_am43; assert_in_epsilon(12.164822205795097, worksheet.costpercapita_am43, 0.001); end
  def test_costpercapita_an43; assert_in_epsilon(11.5298055853036, worksheet.costpercapita_an43, 0.001); end
  def test_costpercapita_ao43; assert_in_epsilon(11.020030693602857, worksheet.costpercapita_ao43, 0.001); end
  def test_costpercapita_ap43; assert_in_epsilon(10.600087301754005, worksheet.costpercapita_ap43, 0.001); end
  def test_costpercapita_aq43; assert_in_epsilon(10.250314539566924, worksheet.costpercapita_aq43, 0.001); end
  def test_costpercapita_ai43; assert_in_epsilon(16.71422834840226, worksheet.costpercapita_ai43, 0.001); end
  def test_costpercapita_at43; assert_in_epsilon(274.0125239055575, worksheet.costpercapita_at43, 0.001); end
  def test_costpercapita_cr43; assert_equal("ok", worksheet.costpercapita_cr43); end
  def test_costpercapita_a44; assert_equal("XV.b.Coal", worksheet.costpercapita_a44); end
  def test_costpercapita_b44; assert_equal("Indigenous fossil-fuel production - Coal", worksheet.costpercapita_b44); end
  def test_costpercapita_c44; assert_equal("Fossil Fuels", worksheet.costpercapita_c44); end
  def test_costpercapita_e44; assert_in_delta(0, (worksheet.costpercapita_e44||0), 0.001); end
  def test_costpercapita_f44; assert_in_delta(0, (worksheet.costpercapita_f44||0), 0.001); end
  def test_costpercapita_g44; assert_in_delta(0, (worksheet.costpercapita_g44||0), 0.001); end
  def test_costpercapita_h44; assert_in_delta(0, (worksheet.costpercapita_h44||0), 0.001); end
  def test_costpercapita_i44; assert_in_delta(0, (worksheet.costpercapita_i44||0), 0.001); end
  def test_costpercapita_j44; assert_in_delta(0, (worksheet.costpercapita_j44||0), 0.001); end
  def test_costpercapita_k44; assert_in_delta(0, (worksheet.costpercapita_k44||0), 0.001); end
  def test_costpercapita_l44; assert_in_delta(0, (worksheet.costpercapita_l44||0), 0.001); end
  def test_costpercapita_m44; assert_in_delta(0, (worksheet.costpercapita_m44||0), 0.001); end
  def test_costpercapita_o44; assert_in_delta(0, (worksheet.costpercapita_o44||0), 0.001); end
  def test_costpercapita_p44; assert_in_delta(0, (worksheet.costpercapita_p44||0), 0.001); end
  def test_costpercapita_q44; assert_in_delta(0, (worksheet.costpercapita_q44||0), 0.001); end
  def test_costpercapita_r44; assert_in_delta(0, (worksheet.costpercapita_r44||0), 0.001); end
  def test_costpercapita_s44; assert_in_delta(0, (worksheet.costpercapita_s44||0), 0.001); end
  def test_costpercapita_t44; assert_in_delta(0, (worksheet.costpercapita_t44||0), 0.001); end
  def test_costpercapita_u44; assert_in_delta(0, (worksheet.costpercapita_u44||0), 0.001); end
  def test_costpercapita_v44; assert_in_delta(0, (worksheet.costpercapita_v44||0), 0.001); end
  def test_costpercapita_w44; assert_in_delta(0, (worksheet.costpercapita_w44||0), 0.001); end
  def test_costpercapita_av44; assert_in_delta(0, (worksheet.costpercapita_av44||0), 0.001); end
  def test_costpercapita_aw44; assert_in_epsilon(5, worksheet.costpercapita_aw44, 0.001); end
  def test_costpercapita_ay44; assert_in_delta(0, (worksheet.costpercapita_ay44||0), 0.001); end
  def test_costpercapita_az44; assert_in_delta(0, (worksheet.costpercapita_az44||0), 0.001); end
  def test_costpercapita_ba44; assert_in_delta(0, (worksheet.costpercapita_ba44||0), 0.001); end
  def test_costpercapita_bb44; assert_in_delta(0, (worksheet.costpercapita_bb44||0), 0.001); end
  def test_costpercapita_bc44; assert_in_delta(0, (worksheet.costpercapita_bc44||0), 0.001); end
  def test_costpercapita_bd44; assert_in_delta(0, (worksheet.costpercapita_bd44||0), 0.001); end
  def test_costpercapita_be44; assert_in_delta(0, (worksheet.costpercapita_be44||0), 0.001); end
  def test_costpercapita_bf44; assert_in_delta(0, (worksheet.costpercapita_bf44||0), 0.001); end
  def test_costpercapita_bg44; assert_in_delta(0, (worksheet.costpercapita_bg44||0), 0.001); end
  def test_costpercapita_bi44; assert_in_delta(0, (worksheet.costpercapita_bi44||0), 0.001); end
  def test_costpercapita_bj44; assert_in_delta(0, (worksheet.costpercapita_bj44||0), 0.001); end
  def test_costpercapita_bk44; assert_in_delta(0, (worksheet.costpercapita_bk44||0), 0.001); end
  def test_costpercapita_bl44; assert_in_delta(0, (worksheet.costpercapita_bl44||0), 0.001); end
  def test_costpercapita_bm44; assert_in_delta(0, (worksheet.costpercapita_bm44||0), 0.001); end
  def test_costpercapita_bn44; assert_in_delta(0, (worksheet.costpercapita_bn44||0), 0.001); end
  def test_costpercapita_bo44; assert_in_delta(0, (worksheet.costpercapita_bo44||0), 0.001); end
  def test_costpercapita_bp44; assert_in_delta(0, (worksheet.costpercapita_bp44||0), 0.001); end
  def test_costpercapita_bq44; assert_in_delta(0, (worksheet.costpercapita_bq44||0), 0.001); end
  def test_costpercapita_cf44; assert_in_delta(0, (worksheet.costpercapita_cf44||0), 0.001); end
  def test_costpercapita_cg44; assert_in_delta(0, (worksheet.costpercapita_cg44||0), 0.001); end
  def test_costpercapita_ch44; assert_in_delta(0, (worksheet.costpercapita_ch44||0), 0.001); end
  def test_costpercapita_ci44; assert_in_delta(0, (worksheet.costpercapita_ci44||0), 0.001); end
  def test_costpercapita_cj44; assert_in_delta(0, (worksheet.costpercapita_cj44||0), 0.001); end
  def test_costpercapita_ck44; assert_in_delta(0, (worksheet.costpercapita_ck44||0), 0.001); end
  def test_costpercapita_cl44; assert_in_delta(0, (worksheet.costpercapita_cl44||0), 0.001); end
  def test_costpercapita_cm44; assert_in_delta(0, (worksheet.costpercapita_cm44||0), 0.001); end
  def test_costpercapita_cn44; assert_in_delta(0, (worksheet.costpercapita_cn44||0), 0.001); end
  def test_costpercapita_cp44; assert_in_delta(0, (worksheet.costpercapita_cp44||0), 0.001); end
  def test_costpercapita_cq44; assert_in_delta(0, (worksheet.costpercapita_cq44||0), 0.001); end
  def test_costpercapita_bt44; assert_in_epsilon(15.45656653285251, worksheet.costpercapita_bt44, 0.001); end
  def test_costpercapita_bu44; assert_in_epsilon(14.409162417205268, worksheet.costpercapita_bu44, 0.001); end
  def test_costpercapita_bv44; assert_in_epsilon(13.438383117365467, worksheet.costpercapita_bv44, 0.001); end
  def test_costpercapita_bw44; assert_in_epsilon(6.280477805756656, worksheet.costpercapita_bw44, 0.001); end
  def test_costpercapita_bx44; assert_in_epsilon(6.132536780985016, worksheet.costpercapita_bx44, 0.001); end
  def test_costpercapita_by44; assert_in_epsilon(6.001751932843022, worksheet.costpercapita_by44, 0.001); end
  def test_costpercapita_bz44; assert_in_epsilon(5.8820294332238205, worksheet.costpercapita_bz44, 0.001); end
  def test_costpercapita_ca44; assert_in_epsilon(5.772260557340837, worksheet.costpercapita_ca44, 0.001); end
  def test_costpercapita_bs44; assert_in_epsilon(16.56242208548784, worksheet.costpercapita_bs44, 0.001); end
  def test_costpercapita_cd44; assert_in_epsilon(228.95126597509048, worksheet.costpercapita_cd44, 0.001); end
  def test_costpercapita_aj44; assert_in_epsilon(15.45656653285251, worksheet.costpercapita_aj44, 0.001); end
  def test_costpercapita_ak44; assert_in_epsilon(14.409162417205268, worksheet.costpercapita_ak44, 0.001); end
  def test_costpercapita_al44; assert_in_epsilon(13.438383117365467, worksheet.costpercapita_al44, 0.001); end
  def test_costpercapita_am44; assert_in_epsilon(6.280477805756656, worksheet.costpercapita_am44, 0.001); end
  def test_costpercapita_an44; assert_in_epsilon(6.132536780985016, worksheet.costpercapita_an44, 0.001); end
  def test_costpercapita_ao44; assert_in_epsilon(6.001751932843022, worksheet.costpercapita_ao44, 0.001); end
  def test_costpercapita_ap44; assert_in_epsilon(5.8820294332238205, worksheet.costpercapita_ap44, 0.001); end
  def test_costpercapita_aq44; assert_in_epsilon(5.772260557340837, worksheet.costpercapita_aq44, 0.001); end
  def test_costpercapita_ai44; assert_in_epsilon(16.56242208548784, worksheet.costpercapita_ai44, 0.001); end
  def test_costpercapita_at44; assert_in_epsilon(228.95126597509048, worksheet.costpercapita_at44, 0.001); end
  def test_costpercapita_cr44; assert_equal("ok", worksheet.costpercapita_cr44); end
  def test_costpercapita_a45; assert_equal("XV.b.Oil", worksheet.costpercapita_a45); end
  def test_costpercapita_b45; assert_equal("Indigenous fossil-fuel production - Oil", worksheet.costpercapita_b45); end
  def test_costpercapita_c45; assert_equal("Fossil Fuels", worksheet.costpercapita_c45); end
  def test_costpercapita_e45; assert_in_delta(0, (worksheet.costpercapita_e45||0), 0.001); end
  def test_costpercapita_f45; assert_in_delta(0, (worksheet.costpercapita_f45||0), 0.001); end
  def test_costpercapita_g45; assert_in_delta(0, (worksheet.costpercapita_g45||0), 0.001); end
  def test_costpercapita_h45; assert_in_delta(0, (worksheet.costpercapita_h45||0), 0.001); end
  def test_costpercapita_i45; assert_in_delta(0, (worksheet.costpercapita_i45||0), 0.001); end
  def test_costpercapita_j45; assert_in_delta(0, (worksheet.costpercapita_j45||0), 0.001); end
  def test_costpercapita_k45; assert_in_delta(0, (worksheet.costpercapita_k45||0), 0.001); end
  def test_costpercapita_l45; assert_in_delta(0, (worksheet.costpercapita_l45||0), 0.001); end
  def test_costpercapita_m45; assert_in_delta(0, (worksheet.costpercapita_m45||0), 0.001); end
  def test_costpercapita_o45; assert_in_delta(0, (worksheet.costpercapita_o45||0), 0.001); end
  def test_costpercapita_p45; assert_in_delta(0, (worksheet.costpercapita_p45||0), 0.001); end
  def test_costpercapita_q45; assert_in_delta(0, (worksheet.costpercapita_q45||0), 0.001); end
  def test_costpercapita_r45; assert_in_delta(0, (worksheet.costpercapita_r45||0), 0.001); end
  def test_costpercapita_s45; assert_in_delta(0, (worksheet.costpercapita_s45||0), 0.001); end
  def test_costpercapita_t45; assert_in_delta(0, (worksheet.costpercapita_t45||0), 0.001); end
  def test_costpercapita_u45; assert_in_delta(0, (worksheet.costpercapita_u45||0), 0.001); end
  def test_costpercapita_v45; assert_in_delta(0, (worksheet.costpercapita_v45||0), 0.001); end
  def test_costpercapita_w45; assert_in_delta(0, (worksheet.costpercapita_w45||0), 0.001); end
  def test_costpercapita_av45; assert_in_delta(0, (worksheet.costpercapita_av45||0), 0.001); end
  def test_costpercapita_aw45; assert_in_epsilon(5, worksheet.costpercapita_aw45, 0.001); end
  def test_costpercapita_ay45; assert_in_delta(0, (worksheet.costpercapita_ay45||0), 0.001); end
  def test_costpercapita_az45; assert_in_delta(0, (worksheet.costpercapita_az45||0), 0.001); end
  def test_costpercapita_ba45; assert_in_delta(0, (worksheet.costpercapita_ba45||0), 0.001); end
  def test_costpercapita_bb45; assert_in_delta(0, (worksheet.costpercapita_bb45||0), 0.001); end
  def test_costpercapita_bc45; assert_in_delta(0, (worksheet.costpercapita_bc45||0), 0.001); end
  def test_costpercapita_bd45; assert_in_delta(0, (worksheet.costpercapita_bd45||0), 0.001); end
  def test_costpercapita_be45; assert_in_delta(0, (worksheet.costpercapita_be45||0), 0.001); end
  def test_costpercapita_bf45; assert_in_delta(0, (worksheet.costpercapita_bf45||0), 0.001); end
  def test_costpercapita_bg45; assert_in_delta(0, (worksheet.costpercapita_bg45||0), 0.001); end
  def test_costpercapita_bi45; assert_in_delta(0, (worksheet.costpercapita_bi45||0), 0.001); end
  def test_costpercapita_bj45; assert_in_delta(0, (worksheet.costpercapita_bj45||0), 0.001); end
  def test_costpercapita_bk45; assert_in_delta(0, (worksheet.costpercapita_bk45||0), 0.001); end
  def test_costpercapita_bl45; assert_in_delta(0, (worksheet.costpercapita_bl45||0), 0.001); end
  def test_costpercapita_bm45; assert_in_delta(0, (worksheet.costpercapita_bm45||0), 0.001); end
  def test_costpercapita_bn45; assert_in_delta(0, (worksheet.costpercapita_bn45||0), 0.001); end
  def test_costpercapita_bo45; assert_in_delta(0, (worksheet.costpercapita_bo45||0), 0.001); end
  def test_costpercapita_bp45; assert_in_delta(0, (worksheet.costpercapita_bp45||0), 0.001); end
  def test_costpercapita_bq45; assert_in_delta(0, (worksheet.costpercapita_bq45||0), 0.001); end
  def test_costpercapita_cf45; assert_in_delta(0, (worksheet.costpercapita_cf45||0), 0.001); end
  def test_costpercapita_cg45; assert_in_delta(0, (worksheet.costpercapita_cg45||0), 0.001); end
  def test_costpercapita_ch45; assert_in_delta(0, (worksheet.costpercapita_ch45||0), 0.001); end
  def test_costpercapita_ci45; assert_in_delta(0, (worksheet.costpercapita_ci45||0), 0.001); end
  def test_costpercapita_cj45; assert_in_delta(0, (worksheet.costpercapita_cj45||0), 0.001); end
  def test_costpercapita_ck45; assert_in_delta(0, (worksheet.costpercapita_ck45||0), 0.001); end
  def test_costpercapita_cl45; assert_in_delta(0, (worksheet.costpercapita_cl45||0), 0.001); end
  def test_costpercapita_cm45; assert_in_delta(0, (worksheet.costpercapita_cm45||0), 0.001); end
  def test_costpercapita_cn45; assert_in_delta(0, (worksheet.costpercapita_cn45||0), 0.001); end
  def test_costpercapita_cp45; assert_in_delta(0, (worksheet.costpercapita_cp45||0), 0.001); end
  def test_costpercapita_cq45; assert_in_delta(0, (worksheet.costpercapita_cq45||0), 0.001); end
  def test_costpercapita_bt45; assert_in_epsilon(329.8293326445598, worksheet.costpercapita_bt45, 0.001); end
  def test_costpercapita_bu45; assert_in_epsilon(242.09714400965842, worksheet.costpercapita_bu45, 0.001); end
  def test_costpercapita_bv45; assert_in_epsilon(177.48292069161144, worksheet.costpercapita_bv45, 0.001); end
  def test_costpercapita_bw45; assert_in_epsilon(130.535125298674, worksheet.costpercapita_bw45, 0.001); end
  def test_costpercapita_bx45; assert_in_epsilon(98.62633463812801, worksheet.costpercapita_bx45, 0.001); end
  def test_costpercapita_by45; assert_in_epsilon(74.68765072184416, worksheet.costpercapita_by45, 0.001); end
  def test_costpercapita_bz45; assert_in_epsilon(56.6390522783596, worksheet.costpercapita_bz45, 0.001); end
  def test_costpercapita_ca45; assert_in_epsilon(43.00834567660168, worksheet.costpercapita_ca45, 0.001); end
  def test_costpercapita_bs45; assert_in_epsilon(432.41627381141154, worksheet.costpercapita_bs45, 0.001); end
  def test_costpercapita_cd45; assert_in_epsilon(4022.549373725438, worksheet.costpercapita_cd45, 0.001); end
  def test_costpercapita_aj45; assert_in_epsilon(329.8293326445598, worksheet.costpercapita_aj45, 0.001); end
  def test_costpercapita_ak45; assert_in_epsilon(242.09714400965842, worksheet.costpercapita_ak45, 0.001); end
  def test_costpercapita_al45; assert_in_epsilon(177.48292069161144, worksheet.costpercapita_al45, 0.001); end
  def test_costpercapita_am45; assert_in_epsilon(130.535125298674, worksheet.costpercapita_am45, 0.001); end
  def test_costpercapita_an45; assert_in_epsilon(98.62633463812801, worksheet.costpercapita_an45, 0.001); end
  def test_costpercapita_ao45; assert_in_epsilon(74.68765072184416, worksheet.costpercapita_ao45, 0.001); end
  def test_costpercapita_ap45; assert_in_epsilon(56.6390522783596, worksheet.costpercapita_ap45, 0.001); end
  def test_costpercapita_aq45; assert_in_epsilon(43.00834567660168, worksheet.costpercapita_aq45, 0.001); end
  def test_costpercapita_ai45; assert_in_epsilon(432.41627381141154, worksheet.costpercapita_ai45, 0.001); end
  def test_costpercapita_at45; assert_in_epsilon(4022.549373725438, worksheet.costpercapita_at45, 0.001); end
  def test_costpercapita_cr45; assert_equal("ok", worksheet.costpercapita_cr45); end
  def test_costpercapita_a46; assert_equal("XV.b.Gas", worksheet.costpercapita_a46); end
  def test_costpercapita_b46; assert_equal("Indigenous fossil-fuel production - Gas", worksheet.costpercapita_b46); end
  def test_costpercapita_c46; assert_equal("Fossil Fuels", worksheet.costpercapita_c46); end
  def test_costpercapita_e46; assert_in_delta(0, (worksheet.costpercapita_e46||0), 0.001); end
  def test_costpercapita_f46; assert_in_delta(0, (worksheet.costpercapita_f46||0), 0.001); end
  def test_costpercapita_g46; assert_in_delta(0, (worksheet.costpercapita_g46||0), 0.001); end
  def test_costpercapita_h46; assert_in_delta(0, (worksheet.costpercapita_h46||0), 0.001); end
  def test_costpercapita_i46; assert_in_delta(0, (worksheet.costpercapita_i46||0), 0.001); end
  def test_costpercapita_j46; assert_in_delta(0, (worksheet.costpercapita_j46||0), 0.001); end
  def test_costpercapita_k46; assert_in_delta(0, (worksheet.costpercapita_k46||0), 0.001); end
  def test_costpercapita_l46; assert_in_delta(0, (worksheet.costpercapita_l46||0), 0.001); end
  def test_costpercapita_m46; assert_in_delta(0, (worksheet.costpercapita_m46||0), 0.001); end
  def test_costpercapita_o46; assert_in_delta(0, (worksheet.costpercapita_o46||0), 0.001); end
  def test_costpercapita_p46; assert_in_delta(0, (worksheet.costpercapita_p46||0), 0.001); end
  def test_costpercapita_q46; assert_in_delta(0, (worksheet.costpercapita_q46||0), 0.001); end
  def test_costpercapita_r46; assert_in_delta(0, (worksheet.costpercapita_r46||0), 0.001); end
  def test_costpercapita_s46; assert_in_delta(0, (worksheet.costpercapita_s46||0), 0.001); end
  def test_costpercapita_t46; assert_in_delta(0, (worksheet.costpercapita_t46||0), 0.001); end
  def test_costpercapita_u46; assert_in_delta(0, (worksheet.costpercapita_u46||0), 0.001); end
  def test_costpercapita_v46; assert_in_delta(0, (worksheet.costpercapita_v46||0), 0.001); end
  def test_costpercapita_w46; assert_in_delta(0, (worksheet.costpercapita_w46||0), 0.001); end
  def test_costpercapita_av46; assert_in_delta(0, (worksheet.costpercapita_av46||0), 0.001); end
  def test_costpercapita_aw46; assert_in_epsilon(5, worksheet.costpercapita_aw46, 0.001); end
  def test_costpercapita_ay46; assert_in_delta(0, (worksheet.costpercapita_ay46||0), 0.001); end
  def test_costpercapita_az46; assert_in_delta(0, (worksheet.costpercapita_az46||0), 0.001); end
  def test_costpercapita_ba46; assert_in_delta(0, (worksheet.costpercapita_ba46||0), 0.001); end
  def test_costpercapita_bb46; assert_in_delta(0, (worksheet.costpercapita_bb46||0), 0.001); end
  def test_costpercapita_bc46; assert_in_delta(0, (worksheet.costpercapita_bc46||0), 0.001); end
  def test_costpercapita_bd46; assert_in_delta(0, (worksheet.costpercapita_bd46||0), 0.001); end
  def test_costpercapita_be46; assert_in_delta(0, (worksheet.costpercapita_be46||0), 0.001); end
  def test_costpercapita_bf46; assert_in_delta(0, (worksheet.costpercapita_bf46||0), 0.001); end
  def test_costpercapita_bg46; assert_in_delta(0, (worksheet.costpercapita_bg46||0), 0.001); end
  def test_costpercapita_bi46; assert_in_delta(0, (worksheet.costpercapita_bi46||0), 0.001); end
  def test_costpercapita_bj46; assert_in_delta(0, (worksheet.costpercapita_bj46||0), 0.001); end
  def test_costpercapita_bk46; assert_in_delta(0, (worksheet.costpercapita_bk46||0), 0.001); end
  def test_costpercapita_bl46; assert_in_delta(0, (worksheet.costpercapita_bl46||0), 0.001); end
  def test_costpercapita_bm46; assert_in_delta(0, (worksheet.costpercapita_bm46||0), 0.001); end
  def test_costpercapita_bn46; assert_in_delta(0, (worksheet.costpercapita_bn46||0), 0.001); end
  def test_costpercapita_bo46; assert_in_delta(0, (worksheet.costpercapita_bo46||0), 0.001); end
  def test_costpercapita_bp46; assert_in_delta(0, (worksheet.costpercapita_bp46||0), 0.001); end
  def test_costpercapita_bq46; assert_in_delta(0, (worksheet.costpercapita_bq46||0), 0.001); end
  def test_costpercapita_cf46; assert_in_delta(0, (worksheet.costpercapita_cf46||0), 0.001); end
  def test_costpercapita_cg46; assert_in_delta(0, (worksheet.costpercapita_cg46||0), 0.001); end
  def test_costpercapita_ch46; assert_in_delta(0, (worksheet.costpercapita_ch46||0), 0.001); end
  def test_costpercapita_ci46; assert_in_delta(0, (worksheet.costpercapita_ci46||0), 0.001); end
  def test_costpercapita_cj46; assert_in_delta(0, (worksheet.costpercapita_cj46||0), 0.001); end
  def test_costpercapita_ck46; assert_in_delta(0, (worksheet.costpercapita_ck46||0), 0.001); end
  def test_costpercapita_cl46; assert_in_delta(0, (worksheet.costpercapita_cl46||0), 0.001); end
  def test_costpercapita_cm46; assert_in_delta(0, (worksheet.costpercapita_cm46||0), 0.001); end
  def test_costpercapita_cn46; assert_in_delta(0, (worksheet.costpercapita_cn46||0), 0.001); end
  def test_costpercapita_cp46; assert_in_delta(0, (worksheet.costpercapita_cp46||0), 0.001); end
  def test_costpercapita_cq46; assert_in_delta(0, (worksheet.costpercapita_cq46||0), 0.001); end
  def test_costpercapita_bt46; assert_in_epsilon(112.9730770495155, worksheet.costpercapita_bt46, 0.001); end
  def test_costpercapita_bu46; assert_in_epsilon(84.90203013066098, worksheet.costpercapita_bu46, 0.001); end
  def test_costpercapita_bv46; assert_in_epsilon(64.01905763736185, worksheet.costpercapita_bv46, 0.001); end
  def test_costpercapita_bw46; assert_in_epsilon(48.45255635500387, worksheet.costpercapita_bw46, 0.001); end
  def test_costpercapita_bx46; assert_in_epsilon(36.60852223650431, worksheet.costpercapita_bx46, 0.001); end
  def test_costpercapita_by46; assert_in_epsilon(27.72286461090769, worksheet.costpercapita_by46, 0.001); end
  def test_costpercapita_bz46; assert_in_epsilon(21.023512760508325, worksheet.costpercapita_bz46, 0.001); end
  def test_costpercapita_ca46; assert_in_epsilon(15.964011892301023, worksheet.costpercapita_ca46, 0.001); end
  def test_costpercapita_bs46; assert_in_epsilon(151.2771269277196, worksheet.costpercapita_bs46, 0.001); end
  def test_costpercapita_cd46; assert_in_epsilon(1420.9422894853783, worksheet.costpercapita_cd46, 0.001); end
  def test_costpercapita_aj46; assert_in_epsilon(112.9730770495155, worksheet.costpercapita_aj46, 0.001); end
  def test_costpercapita_ak46; assert_in_epsilon(84.90203013066098, worksheet.costpercapita_ak46, 0.001); end
  def test_costpercapita_al46; assert_in_epsilon(64.01905763736185, worksheet.costpercapita_al46, 0.001); end
  def test_costpercapita_am46; assert_in_epsilon(48.45255635500387, worksheet.costpercapita_am46, 0.001); end
  def test_costpercapita_an46; assert_in_epsilon(36.60852223650431, worksheet.costpercapita_an46, 0.001); end
  def test_costpercapita_ao46; assert_in_epsilon(27.72286461090769, worksheet.costpercapita_ao46, 0.001); end
  def test_costpercapita_ap46; assert_in_epsilon(21.023512760508325, worksheet.costpercapita_ap46, 0.001); end
  def test_costpercapita_aq46; assert_in_epsilon(15.964011892301023, worksheet.costpercapita_aq46, 0.001); end
  def test_costpercapita_ai46; assert_in_epsilon(151.2771269277196, worksheet.costpercapita_ai46, 0.001); end
  def test_costpercapita_at46; assert_in_epsilon(1420.9422894853783, worksheet.costpercapita_at46, 0.001); end
  def test_costpercapita_cr46; assert_equal("ok", worksheet.costpercapita_cr46); end
  def test_costpercapita_a47; assert_equal("XVI.a", worksheet.costpercapita_a47); end
  def test_costpercapita_b47; assert_equal("Fossil fuel transfers", worksheet.costpercapita_b47); end
  def test_costpercapita_c47; assert_equal("Fossil Fuels", worksheet.costpercapita_c47); end
  def test_costpercapita_y47; assert_in_delta(0, (worksheet.costpercapita_y47||0), 0.001); end
  def test_costpercapita_z47; assert_in_delta(0, (worksheet.costpercapita_z47||0), 0.001); end
  def test_costpercapita_aa47; assert_in_delta(0, (worksheet.costpercapita_aa47||0), 0.001); end
  def test_costpercapita_ab47; assert_in_delta(0, (worksheet.costpercapita_ab47||0), 0.001); end
  def test_costpercapita_ac47; assert_in_delta(0, (worksheet.costpercapita_ac47||0), 0.001); end
  def test_costpercapita_ad47; assert_in_delta(0, (worksheet.costpercapita_ad47||0), 0.001); end
  def test_costpercapita_ae47; assert_in_delta(0, (worksheet.costpercapita_ae47||0), 0.001); end
  def test_costpercapita_af47; assert_in_delta(0, (worksheet.costpercapita_af47||0), 0.001); end
  def test_costpercapita_ag47; assert_in_delta(0, (worksheet.costpercapita_ag47||0), 0.001); end
  def test_costpercapita_av47; assert_in_delta(0, (worksheet.costpercapita_av47||0), 0.001); end
  def test_costpercapita_aw47; assert_in_epsilon(15, worksheet.costpercapita_aw47, 0.001); end
  def test_costpercapita_bt47; assert_in_epsilon(5.66493071661578, worksheet.costpercapita_bt47, 0.001); end
  def test_costpercapita_bu47; assert_in_epsilon(8.27963429261662, worksheet.costpercapita_bu47, 0.001); end
  def test_costpercapita_bv47; assert_in_epsilon(7.941042269431988, worksheet.costpercapita_bv47, 0.001); end
  def test_costpercapita_bw47; assert_in_epsilon(5.964081229365048, worksheet.costpercapita_bw47, 0.001); end
  def test_costpercapita_bx47; assert_in_epsilon(4.067894440327175, worksheet.costpercapita_bx47, 0.001); end
  def test_costpercapita_by47; assert_in_epsilon(2.6921150239177667, worksheet.costpercapita_by47, 0.001); end
  def test_costpercapita_bz47; assert_in_epsilon(1.7415682036648235, worksheet.costpercapita_bz47, 0.001); end
  def test_costpercapita_ca47; assert_in_epsilon(1.082384920754476, worksheet.costpercapita_ca47, 0.001); end
  def test_costpercapita_bs47; assert_in_epsilon(2.3456909495303444, worksheet.costpercapita_bs47, 0.001); end
  def test_costpercapita_cd47; assert_in_epsilon(111.74181469658335, worksheet.costpercapita_cd47, 0.001); end
  def test_costpercapita_cg47; assert_in_epsilon(-4.566215200258781, worksheet.costpercapita_cg47, 0.001); end
  def test_costpercapita_ch47; assert_in_delta(-0.16084142562721557, worksheet.costpercapita_ch47, 0.001); end
  def test_costpercapita_ci47; assert_in_epsilon(1.8682650275385366, worksheet.costpercapita_ci47, 0.001); end
  def test_costpercapita_cj47; assert_in_epsilon(1.919232722320216, worksheet.costpercapita_cj47, 0.001); end
  def test_costpercapita_ck47; assert_in_epsilon(1.5726971460673809, worksheet.costpercapita_ck47, 0.001); end
  def test_costpercapita_cl47; assert_in_delta(0.9169129274483615, worksheet.costpercapita_cl47, 0.001); end
  def test_costpercapita_cm47; assert_in_delta(0.6440338718182674, worksheet.costpercapita_cm47, 0.001); end
  def test_costpercapita_cn47; assert_in_delta(0.6147679545711829, worksheet.costpercapita_cn47, 0.001); end
  def test_costpercapita_cf47; assert_in_epsilon(-9.250452812460123, worksheet.costpercapita_cf47, 0.001); end
  def test_costpercapita_cq47; assert_in_epsilon(-11.87993811297461, worksheet.costpercapita_cq47, 0.001); end
  def test_costpercapita_aj47; assert_in_epsilon(10.23114591687456, worksheet.costpercapita_aj47, 0.001); end
  def test_costpercapita_ak47; assert_in_epsilon(8.440475718243837, worksheet.costpercapita_ak47, 0.001); end
  def test_costpercapita_al47; assert_in_epsilon(6.0727772418934505, worksheet.costpercapita_al47, 0.001); end
  def test_costpercapita_am47; assert_in_epsilon(4.044848507044832, worksheet.costpercapita_am47, 0.001); end
  def test_costpercapita_an47; assert_in_epsilon(2.4951972942597944, worksheet.costpercapita_an47, 0.001); end
  def test_costpercapita_ao47; assert_in_epsilon(1.7752020964694053, worksheet.costpercapita_ao47, 0.001); end
  def test_costpercapita_ap47; assert_in_epsilon(1.097534331846556, worksheet.costpercapita_ap47, 0.001); end
  def test_costpercapita_aq47; assert_in_delta(0.4676169661832931, worksheet.costpercapita_aq47, 0.001); end
  def test_costpercapita_ai47; assert_in_epsilon(11.596143761990469, worksheet.costpercapita_ai47, 0.001); end
  def test_costpercapita_at47; assert_in_epsilon(123.62175280955793, worksheet.costpercapita_at47, 0.001); end
  def test_costpercapita_cr47; assert_equal("ok", worksheet.costpercapita_cr47); end
  def test_costpercapita_a48; assert_equal("XVI.b.Coal", worksheet.costpercapita_a48); end
  def test_costpercapita_b48; assert_equal("Balancing imports - Coal", worksheet.costpercapita_b48); end
  def test_costpercapita_c48; assert_equal("Fossil Fuels", worksheet.costpercapita_c48); end
  def test_costpercapita_e48; assert_in_delta(0, (worksheet.costpercapita_e48||0), 0.001); end
  def test_costpercapita_f48; assert_in_delta(0, (worksheet.costpercapita_f48||0), 0.001); end
  def test_costpercapita_g48; assert_in_delta(0, (worksheet.costpercapita_g48||0), 0.001); end
  def test_costpercapita_h48; assert_in_delta(0, (worksheet.costpercapita_h48||0), 0.001); end
  def test_costpercapita_i48; assert_in_delta(0, (worksheet.costpercapita_i48||0), 0.001); end
  def test_costpercapita_j48; assert_in_delta(0, (worksheet.costpercapita_j48||0), 0.001); end
  def test_costpercapita_k48; assert_in_delta(0, (worksheet.costpercapita_k48||0), 0.001); end
  def test_costpercapita_l48; assert_in_delta(0, (worksheet.costpercapita_l48||0), 0.001); end
  def test_costpercapita_m48; assert_in_delta(0, (worksheet.costpercapita_m48||0), 0.001); end
  def test_costpercapita_o48; assert_in_delta(0, (worksheet.costpercapita_o48||0), 0.001); end
  def test_costpercapita_p48; assert_in_delta(0, (worksheet.costpercapita_p48||0), 0.001); end
  def test_costpercapita_q48; assert_in_delta(0, (worksheet.costpercapita_q48||0), 0.001); end
  def test_costpercapita_r48; assert_in_delta(0, (worksheet.costpercapita_r48||0), 0.001); end
  def test_costpercapita_s48; assert_in_delta(0, (worksheet.costpercapita_s48||0), 0.001); end
  def test_costpercapita_t48; assert_in_delta(0, (worksheet.costpercapita_t48||0), 0.001); end
  def test_costpercapita_u48; assert_in_delta(0, (worksheet.costpercapita_u48||0), 0.001); end
  def test_costpercapita_v48; assert_in_delta(0, (worksheet.costpercapita_v48||0), 0.001); end
  def test_costpercapita_w48; assert_in_delta(0, (worksheet.costpercapita_w48||0), 0.001); end
  def test_costpercapita_av48; assert_in_delta(0, (worksheet.costpercapita_av48||0), 0.001); end
  def test_costpercapita_aw48; assert_in_epsilon(5, worksheet.costpercapita_aw48, 0.001); end
  def test_costpercapita_ay48; assert_in_delta(0, (worksheet.costpercapita_ay48||0), 0.001); end
  def test_costpercapita_az48; assert_in_delta(0, (worksheet.costpercapita_az48||0), 0.001); end
  def test_costpercapita_ba48; assert_in_delta(0, (worksheet.costpercapita_ba48||0), 0.001); end
  def test_costpercapita_bb48; assert_in_delta(0, (worksheet.costpercapita_bb48||0), 0.001); end
  def test_costpercapita_bc48; assert_in_delta(0, (worksheet.costpercapita_bc48||0), 0.001); end
  def test_costpercapita_bd48; assert_in_delta(0, (worksheet.costpercapita_bd48||0), 0.001); end
  def test_costpercapita_be48; assert_in_delta(0, (worksheet.costpercapita_be48||0), 0.001); end
  def test_costpercapita_bf48; assert_in_delta(0, (worksheet.costpercapita_bf48||0), 0.001); end
  def test_costpercapita_bg48; assert_in_delta(0, (worksheet.costpercapita_bg48||0), 0.001); end
  def test_costpercapita_bi48; assert_in_delta(0, (worksheet.costpercapita_bi48||0), 0.001); end
  def test_costpercapita_bj48; assert_in_delta(0, (worksheet.costpercapita_bj48||0), 0.001); end
  def test_costpercapita_bk48; assert_in_delta(0, (worksheet.costpercapita_bk48||0), 0.001); end
  def test_costpercapita_bl48; assert_in_delta(0, (worksheet.costpercapita_bl48||0), 0.001); end
  def test_costpercapita_bm48; assert_in_delta(0, (worksheet.costpercapita_bm48||0), 0.001); end
  def test_costpercapita_bn48; assert_in_delta(0, (worksheet.costpercapita_bn48||0), 0.001); end
  def test_costpercapita_bo48; assert_in_delta(0, (worksheet.costpercapita_bo48||0), 0.001); end
  def test_costpercapita_bp48; assert_in_delta(0, (worksheet.costpercapita_bp48||0), 0.001); end
  def test_costpercapita_bq48; assert_in_delta(0, (worksheet.costpercapita_bq48||0), 0.001); end
  def test_costpercapita_cf48; assert_in_delta(0, (worksheet.costpercapita_cf48||0), 0.001); end
  def test_costpercapita_cg48; assert_in_delta(0, (worksheet.costpercapita_cg48||0), 0.001); end
  def test_costpercapita_ch48; assert_in_delta(0, (worksheet.costpercapita_ch48||0), 0.001); end
  def test_costpercapita_ci48; assert_in_delta(0, (worksheet.costpercapita_ci48||0), 0.001); end
  def test_costpercapita_cj48; assert_in_delta(0, (worksheet.costpercapita_cj48||0), 0.001); end
  def test_costpercapita_ck48; assert_in_delta(0, (worksheet.costpercapita_ck48||0), 0.001); end
  def test_costpercapita_cl48; assert_in_delta(0, (worksheet.costpercapita_cl48||0), 0.001); end
  def test_costpercapita_cm48; assert_in_delta(0, (worksheet.costpercapita_cm48||0), 0.001); end
  def test_costpercapita_cn48; assert_in_delta(0, (worksheet.costpercapita_cn48||0), 0.001); end
  def test_costpercapita_cp48; assert_in_delta(0, (worksheet.costpercapita_cp48||0), 0.001); end
  def test_costpercapita_cq48; assert_in_delta(0, (worksheet.costpercapita_cq48||0), 0.001); end
  def test_costpercapita_bt48; assert_in_epsilon(25.513943776324588, worksheet.costpercapita_bt48, 0.001); end
  def test_costpercapita_bu48; assert_in_epsilon(11.516240533318388, worksheet.costpercapita_bu48, 0.001); end
  def test_costpercapita_bv48; assert_in_epsilon(-3.5448146297514818, worksheet.costpercapita_bv48, 0.001); end
  def test_costpercapita_bw48; assert_in_epsilon(-5.527697690607601, worksheet.costpercapita_bw48, 0.001); end
  def test_costpercapita_bx48; assert_in_epsilon(-5.2513562783053125, worksheet.costpercapita_bx48, 0.001); end
  def test_costpercapita_by48; assert_in_epsilon(-5.65192745063948, worksheet.costpercapita_by48, 0.001); end
  def test_costpercapita_bz48; assert_in_epsilon(-6.429476812372706, worksheet.costpercapita_bz48, 0.001); end
  def test_costpercapita_ca48; assert_in_epsilon(-6.258930896435121, worksheet.costpercapita_ca48, 0.001); end
  def test_costpercapita_bs48; assert_in_epsilon(37.55568640361976, worksheet.costpercapita_bs48, 0.001); end
  def test_costpercapita_cd48; assert_in_epsilon(121.96191694494796, worksheet.costpercapita_cd48, 0.001); end
  def test_costpercapita_aj48; assert_in_epsilon(25.513943776324588, worksheet.costpercapita_aj48, 0.001); end
  def test_costpercapita_ak48; assert_in_epsilon(11.516240533318388, worksheet.costpercapita_ak48, 0.001); end
  def test_costpercapita_al48; assert_in_epsilon(-3.5448146297514818, worksheet.costpercapita_al48, 0.001); end
  def test_costpercapita_am48; assert_in_epsilon(-5.527697690607601, worksheet.costpercapita_am48, 0.001); end
  def test_costpercapita_an48; assert_in_epsilon(-5.2513562783053125, worksheet.costpercapita_an48, 0.001); end
  def test_costpercapita_ao48; assert_in_epsilon(-5.65192745063948, worksheet.costpercapita_ao48, 0.001); end
  def test_costpercapita_ap48; assert_in_epsilon(-6.429476812372706, worksheet.costpercapita_ap48, 0.001); end
  def test_costpercapita_aq48; assert_in_epsilon(-6.258930896435121, worksheet.costpercapita_aq48, 0.001); end
  def test_costpercapita_ai48; assert_in_epsilon(37.55568640361976, worksheet.costpercapita_ai48, 0.001); end
  def test_costpercapita_at48; assert_in_epsilon(121.96191694494796, worksheet.costpercapita_at48, 0.001); end
  def test_costpercapita_cr48; assert_equal("ok", worksheet.costpercapita_cr48); end
  def test_costpercapita_a49; assert_equal("XVI.b.Oil", worksheet.costpercapita_a49); end
  def test_costpercapita_b49; assert_equal("Balancing imports - Oil", worksheet.costpercapita_b49); end
  def test_costpercapita_c49; assert_equal("Fossil Fuels", worksheet.costpercapita_c49); end
  def test_costpercapita_e49; assert_in_delta(0, (worksheet.costpercapita_e49||0), 0.001); end
  def test_costpercapita_f49; assert_in_delta(0, (worksheet.costpercapita_f49||0), 0.001); end
  def test_costpercapita_g49; assert_in_delta(0, (worksheet.costpercapita_g49||0), 0.001); end
  def test_costpercapita_h49; assert_in_delta(0, (worksheet.costpercapita_h49||0), 0.001); end
  def test_costpercapita_i49; assert_in_delta(0, (worksheet.costpercapita_i49||0), 0.001); end
  def test_costpercapita_j49; assert_in_delta(0, (worksheet.costpercapita_j49||0), 0.001); end
  def test_costpercapita_k49; assert_in_delta(0, (worksheet.costpercapita_k49||0), 0.001); end
  def test_costpercapita_l49; assert_in_delta(0, (worksheet.costpercapita_l49||0), 0.001); end
  def test_costpercapita_m49; assert_in_delta(0, (worksheet.costpercapita_m49||0), 0.001); end
  def test_costpercapita_o49; assert_in_delta(0, (worksheet.costpercapita_o49||0), 0.001); end
  def test_costpercapita_p49; assert_in_delta(0, (worksheet.costpercapita_p49||0), 0.001); end
  def test_costpercapita_q49; assert_in_delta(0, (worksheet.costpercapita_q49||0), 0.001); end
  def test_costpercapita_r49; assert_in_delta(0, (worksheet.costpercapita_r49||0), 0.001); end
  def test_costpercapita_s49; assert_in_delta(0, (worksheet.costpercapita_s49||0), 0.001); end
  def test_costpercapita_t49; assert_in_delta(0, (worksheet.costpercapita_t49||0), 0.001); end
  def test_costpercapita_u49; assert_in_delta(0, (worksheet.costpercapita_u49||0), 0.001); end
  def test_costpercapita_v49; assert_in_delta(0, (worksheet.costpercapita_v49||0), 0.001); end
  def test_costpercapita_w49; assert_in_delta(0, (worksheet.costpercapita_w49||0), 0.001); end
  def test_costpercapita_av49; assert_in_delta(0, (worksheet.costpercapita_av49||0), 0.001); end
  def test_costpercapita_aw49; assert_in_epsilon(5, worksheet.costpercapita_aw49, 0.001); end
  def test_costpercapita_ay49; assert_in_delta(0, (worksheet.costpercapita_ay49||0), 0.001); end
  def test_costpercapita_az49; assert_in_delta(0, (worksheet.costpercapita_az49||0), 0.001); end
  def test_costpercapita_ba49; assert_in_delta(0, (worksheet.costpercapita_ba49||0), 0.001); end
  def test_costpercapita_bb49; assert_in_delta(0, (worksheet.costpercapita_bb49||0), 0.001); end
  def test_costpercapita_bc49; assert_in_delta(0, (worksheet.costpercapita_bc49||0), 0.001); end
  def test_costpercapita_bd49; assert_in_delta(0, (worksheet.costpercapita_bd49||0), 0.001); end
  def test_costpercapita_be49; assert_in_delta(0, (worksheet.costpercapita_be49||0), 0.001); end
  def test_costpercapita_bf49; assert_in_delta(0, (worksheet.costpercapita_bf49||0), 0.001); end
  def test_costpercapita_bg49; assert_in_delta(0, (worksheet.costpercapita_bg49||0), 0.001); end
  def test_costpercapita_bi49; assert_in_delta(0, (worksheet.costpercapita_bi49||0), 0.001); end
  def test_costpercapita_bj49; assert_in_delta(0, (worksheet.costpercapita_bj49||0), 0.001); end
  def test_costpercapita_bk49; assert_in_delta(0, (worksheet.costpercapita_bk49||0), 0.001); end
  def test_costpercapita_bl49; assert_in_delta(0, (worksheet.costpercapita_bl49||0), 0.001); end
  def test_costpercapita_bm49; assert_in_delta(0, (worksheet.costpercapita_bm49||0), 0.001); end
  def test_costpercapita_bn49; assert_in_delta(0, (worksheet.costpercapita_bn49||0), 0.001); end
  def test_costpercapita_bo49; assert_in_delta(0, (worksheet.costpercapita_bo49||0), 0.001); end
  def test_costpercapita_bp49; assert_in_delta(0, (worksheet.costpercapita_bp49||0), 0.001); end
  def test_costpercapita_bq49; assert_in_delta(0, (worksheet.costpercapita_bq49||0), 0.001); end
  def test_costpercapita_cf49; assert_in_delta(0, (worksheet.costpercapita_cf49||0), 0.001); end
  def test_costpercapita_cg49; assert_in_delta(0, (worksheet.costpercapita_cg49||0), 0.001); end
  def test_costpercapita_ch49; assert_in_delta(0, (worksheet.costpercapita_ch49||0), 0.001); end
  def test_costpercapita_ci49; assert_in_delta(0, (worksheet.costpercapita_ci49||0), 0.001); end
  def test_costpercapita_cj49; assert_in_delta(0, (worksheet.costpercapita_cj49||0), 0.001); end
  def test_costpercapita_ck49; assert_in_delta(0, (worksheet.costpercapita_ck49||0), 0.001); end
  def test_costpercapita_cl49; assert_in_delta(0, (worksheet.costpercapita_cl49||0), 0.001); end
  def test_costpercapita_cm49; assert_in_delta(0, (worksheet.costpercapita_cm49||0), 0.001); end
  def test_costpercapita_cn49; assert_in_delta(0, (worksheet.costpercapita_cn49||0), 0.001); end
  def test_costpercapita_cp49; assert_in_delta(0, (worksheet.costpercapita_cp49||0), 0.001); end
  def test_costpercapita_cq49; assert_in_delta(0, (worksheet.costpercapita_cq49||0), 0.001); end
  def test_costpercapita_bt49; assert_in_epsilon(51.0183830911233, worksheet.costpercapita_bt49, 0.001); end
  def test_costpercapita_bu49; assert_in_epsilon(64.28620160558573, worksheet.costpercapita_bu49, 0.001); end
  def test_costpercapita_bv49; assert_in_epsilon(47.10755604078084, worksheet.costpercapita_bv49, 0.001); end
  def test_costpercapita_bw49; assert_in_epsilon(28.05079379308239, worksheet.costpercapita_bw49, 0.001); end
  def test_costpercapita_bx49; assert_in_epsilon(28.21564086502875, worksheet.costpercapita_bx49, 0.001); end
  def test_costpercapita_by49; assert_in_epsilon(22.216734816870865, worksheet.costpercapita_by49, 0.001); end
  def test_costpercapita_bz49; assert_in_epsilon(9.586044126358326, worksheet.costpercapita_bz49, 0.001); end
  def test_costpercapita_ca49; assert_in_epsilon(-6.053897113437314, worksheet.costpercapita_ca49, 0.001); end
  def test_costpercapita_bs49; assert_in_epsilon(25.305851963681697, worksheet.costpercapita_bs49, 0.001); end
  def test_costpercapita_cd49; assert_in_epsilon(785.0113338743499, worksheet.costpercapita_cd49, 0.001); end
  def test_costpercapita_aj49; assert_in_epsilon(51.0183830911233, worksheet.costpercapita_aj49, 0.001); end
  def test_costpercapita_ak49; assert_in_epsilon(64.28620160558573, worksheet.costpercapita_ak49, 0.001); end
  def test_costpercapita_al49; assert_in_epsilon(47.10755604078084, worksheet.costpercapita_al49, 0.001); end
  def test_costpercapita_am49; assert_in_epsilon(28.05079379308239, worksheet.costpercapita_am49, 0.001); end
  def test_costpercapita_an49; assert_in_epsilon(28.21564086502875, worksheet.costpercapita_an49, 0.001); end
  def test_costpercapita_ao49; assert_in_epsilon(22.216734816870865, worksheet.costpercapita_ao49, 0.001); end
  def test_costpercapita_ap49; assert_in_epsilon(9.586044126358326, worksheet.costpercapita_ap49, 0.001); end
  def test_costpercapita_aq49; assert_in_epsilon(-6.053897113437314, worksheet.costpercapita_aq49, 0.001); end
  def test_costpercapita_ai49; assert_in_epsilon(25.305851963681697, worksheet.costpercapita_ai49, 0.001); end
  def test_costpercapita_at49; assert_in_epsilon(785.0113338743499, worksheet.costpercapita_at49, 0.001); end
  def test_costpercapita_cr49; assert_equal("ok", worksheet.costpercapita_cr49); end
  def test_costpercapita_a50; assert_equal("XVI.b.Gas", worksheet.costpercapita_a50); end
  def test_costpercapita_b50; assert_equal("Balancing imports - Gas", worksheet.costpercapita_b50); end
  def test_costpercapita_c50; assert_equal("Fossil Fuels", worksheet.costpercapita_c50); end
  def test_costpercapita_e50; assert_in_delta(0, (worksheet.costpercapita_e50||0), 0.001); end
  def test_costpercapita_f50; assert_in_delta(0, (worksheet.costpercapita_f50||0), 0.001); end
  def test_costpercapita_g50; assert_in_delta(0, (worksheet.costpercapita_g50||0), 0.001); end
  def test_costpercapita_h50; assert_in_delta(0, (worksheet.costpercapita_h50||0), 0.001); end
  def test_costpercapita_i50; assert_in_delta(0, (worksheet.costpercapita_i50||0), 0.001); end
  def test_costpercapita_j50; assert_in_delta(0, (worksheet.costpercapita_j50||0), 0.001); end
  def test_costpercapita_k50; assert_in_delta(0, (worksheet.costpercapita_k50||0), 0.001); end
  def test_costpercapita_l50; assert_in_delta(0, (worksheet.costpercapita_l50||0), 0.001); end
  def test_costpercapita_m50; assert_in_delta(0, (worksheet.costpercapita_m50||0), 0.001); end
  def test_costpercapita_o50; assert_in_delta(0, (worksheet.costpercapita_o50||0), 0.001); end
  def test_costpercapita_p50; assert_in_delta(0, (worksheet.costpercapita_p50||0), 0.001); end
  def test_costpercapita_q50; assert_in_delta(0, (worksheet.costpercapita_q50||0), 0.001); end
  def test_costpercapita_r50; assert_in_delta(0, (worksheet.costpercapita_r50||0), 0.001); end
  def test_costpercapita_s50; assert_in_delta(0, (worksheet.costpercapita_s50||0), 0.001); end
  def test_costpercapita_t50; assert_in_delta(0, (worksheet.costpercapita_t50||0), 0.001); end
  def test_costpercapita_u50; assert_in_delta(0, (worksheet.costpercapita_u50||0), 0.001); end
  def test_costpercapita_v50; assert_in_delta(0, (worksheet.costpercapita_v50||0), 0.001); end
  def test_costpercapita_w50; assert_in_delta(0, (worksheet.costpercapita_w50||0), 0.001); end
  def test_costpercapita_av50; assert_in_delta(0, (worksheet.costpercapita_av50||0), 0.001); end
  def test_costpercapita_aw50; assert_in_epsilon(5, worksheet.costpercapita_aw50, 0.001); end
  def test_costpercapita_ay50; assert_in_delta(0, (worksheet.costpercapita_ay50||0), 0.001); end
  def test_costpercapita_az50; assert_in_delta(0, (worksheet.costpercapita_az50||0), 0.001); end
  def test_costpercapita_ba50; assert_in_delta(0, (worksheet.costpercapita_ba50||0), 0.001); end
  def test_costpercapita_bb50; assert_in_delta(0, (worksheet.costpercapita_bb50||0), 0.001); end
  def test_costpercapita_bc50; assert_in_delta(0, (worksheet.costpercapita_bc50||0), 0.001); end
  def test_costpercapita_bd50; assert_in_delta(0, (worksheet.costpercapita_bd50||0), 0.001); end
  def test_costpercapita_be50; assert_in_delta(0, (worksheet.costpercapita_be50||0), 0.001); end
  def test_costpercapita_bf50; assert_in_delta(0, (worksheet.costpercapita_bf50||0), 0.001); end
  def test_costpercapita_bg50; assert_in_delta(0, (worksheet.costpercapita_bg50||0), 0.001); end
  def test_costpercapita_bi50; assert_in_delta(0, (worksheet.costpercapita_bi50||0), 0.001); end
  def test_costpercapita_bj50; assert_in_delta(0, (worksheet.costpercapita_bj50||0), 0.001); end
  def test_costpercapita_bk50; assert_in_delta(0, (worksheet.costpercapita_bk50||0), 0.001); end
  def test_costpercapita_bl50; assert_in_delta(0, (worksheet.costpercapita_bl50||0), 0.001); end
  def test_costpercapita_bm50; assert_in_delta(0, (worksheet.costpercapita_bm50||0), 0.001); end
  def test_costpercapita_bn50; assert_in_delta(0, (worksheet.costpercapita_bn50||0), 0.001); end
  def test_costpercapita_bo50; assert_in_delta(0, (worksheet.costpercapita_bo50||0), 0.001); end
  def test_costpercapita_bp50; assert_in_delta(0, (worksheet.costpercapita_bp50||0), 0.001); end
  def test_costpercapita_bq50; assert_in_delta(0, (worksheet.costpercapita_bq50||0), 0.001); end
  def test_costpercapita_cf50; assert_in_delta(0, (worksheet.costpercapita_cf50||0), 0.001); end
  def test_costpercapita_cg50; assert_in_delta(0, (worksheet.costpercapita_cg50||0), 0.001); end
  def test_costpercapita_ch50; assert_in_delta(0, (worksheet.costpercapita_ch50||0), 0.001); end
  def test_costpercapita_ci50; assert_in_delta(0, (worksheet.costpercapita_ci50||0), 0.001); end
  def test_costpercapita_cj50; assert_in_delta(0, (worksheet.costpercapita_cj50||0), 0.001); end
  def test_costpercapita_ck50; assert_in_delta(0, (worksheet.costpercapita_ck50||0), 0.001); end
  def test_costpercapita_cl50; assert_in_delta(0, (worksheet.costpercapita_cl50||0), 0.001); end
  def test_costpercapita_cm50; assert_in_delta(0, (worksheet.costpercapita_cm50||0), 0.001); end
  def test_costpercapita_cn50; assert_in_delta(0, (worksheet.costpercapita_cn50||0), 0.001); end
  def test_costpercapita_cp50; assert_in_delta(0, (worksheet.costpercapita_cp50||0), 0.001); end
  def test_costpercapita_cq50; assert_in_delta(0, (worksheet.costpercapita_cq50||0), 0.001); end
  def test_costpercapita_bt50; assert_in_epsilon(60.602956894951255, worksheet.costpercapita_bt50, 0.001); end
  def test_costpercapita_bu50; assert_in_epsilon(40.48113914646239, worksheet.costpercapita_bu50, 0.001); end
  def test_costpercapita_bv50; assert_in_epsilon(19.662515807879934, worksheet.costpercapita_bv50, 0.001); end
  def test_costpercapita_bw50; assert_in_epsilon(3.2419647661685964, worksheet.costpercapita_bw50, 0.001); end
  def test_costpercapita_bx50; assert_in_delta(0.09665792130743532, worksheet.costpercapita_bx50, 0.001); end
  def test_costpercapita_by50; assert_in_epsilon(-5.047543829379372, worksheet.costpercapita_by50, 0.001); end
  def test_costpercapita_bz50; assert_in_epsilon(-11.361947583991878, worksheet.costpercapita_bz50, 0.001); end
  def test_costpercapita_ca50; assert_in_epsilon(-15.964011892301023, worksheet.costpercapita_ca50, 0.001); end
  def test_costpercapita_bs50; assert_in_epsilon(57.913740413014594, worksheet.costpercapita_bs50, 0.001); end
  def test_costpercapita_cd50; assert_in_epsilon(475.95453422722926, worksheet.costpercapita_cd50, 0.001); end
  def test_costpercapita_aj50; assert_in_epsilon(60.602956894951255, worksheet.costpercapita_aj50, 0.001); end
  def test_costpercapita_ak50; assert_in_epsilon(40.48113914646239, worksheet.costpercapita_ak50, 0.001); end
  def test_costpercapita_al50; assert_in_epsilon(19.662515807879934, worksheet.costpercapita_al50, 0.001); end
  def test_costpercapita_am50; assert_in_epsilon(3.2419647661685964, worksheet.costpercapita_am50, 0.001); end
  def test_costpercapita_an50; assert_in_delta(0.09665792130743532, worksheet.costpercapita_an50, 0.001); end
  def test_costpercapita_ao50; assert_in_epsilon(-5.047543829379372, worksheet.costpercapita_ao50, 0.001); end
  def test_costpercapita_ap50; assert_in_epsilon(-11.361947583991878, worksheet.costpercapita_ap50, 0.001); end
  def test_costpercapita_aq50; assert_in_epsilon(-15.964011892301023, worksheet.costpercapita_aq50, 0.001); end
  def test_costpercapita_ai50; assert_in_epsilon(57.913740413014594, worksheet.costpercapita_ai50, 0.001); end
  def test_costpercapita_at50; assert_in_epsilon(475.95453422722926, worksheet.costpercapita_at50, 0.001); end
  def test_costpercapita_cr50; assert_equal("ok", worksheet.costpercapita_cr50); end
  def test_costpercapita_a51; assert_equal("XVII.a", worksheet.costpercapita_a51); end
  def test_costpercapita_b51; assert_equal("District heating effective demand", worksheet.costpercapita_b51); end
  def test_costpercapita_c51; assert_equal("Buildings", worksheet.costpercapita_c51); end
  def test_costpercapita_y51; assert_in_delta(0, (worksheet.costpercapita_y51||0), 0.001); end
  def test_costpercapita_z51; assert_in_delta(0, (worksheet.costpercapita_z51||0), 0.001); end
  def test_costpercapita_aa51; assert_in_delta(0, (worksheet.costpercapita_aa51||0), 0.001); end
  def test_costpercapita_ab51; assert_in_delta(0, (worksheet.costpercapita_ab51||0), 0.001); end
  def test_costpercapita_ac51; assert_in_delta(0, (worksheet.costpercapita_ac51||0), 0.001); end
  def test_costpercapita_ad51; assert_in_delta(0, (worksheet.costpercapita_ad51||0), 0.001); end
  def test_costpercapita_ae51; assert_in_delta(0, (worksheet.costpercapita_ae51||0), 0.001); end
  def test_costpercapita_af51; assert_in_delta(0, (worksheet.costpercapita_af51||0), 0.001); end
  def test_costpercapita_ag51; assert_in_delta(0, (worksheet.costpercapita_ag51||0), 0.001); end
  def test_costpercapita_av51; assert_in_delta(0, (worksheet.costpercapita_av51||0), 0.001); end
  def test_costpercapita_aw51; assert_in_epsilon(15, worksheet.costpercapita_aw51, 0.001); end
  def test_costpercapita_bt51; assert_in_delta(0.24770059107599113, worksheet.costpercapita_bt51, 0.001); end
  def test_costpercapita_bu51; assert_in_delta(0.5588337849448188, worksheet.costpercapita_bu51, 0.001); end
  def test_costpercapita_bv51; assert_in_delta(0.7337606865864335, worksheet.costpercapita_bv51, 0.001); end
  def test_costpercapita_bw51; assert_in_delta(0.8641716500574989, worksheet.costpercapita_bw51, 0.001); end
  def test_costpercapita_bx51; assert_in_delta(0.7597400028863297, worksheet.costpercapita_bx51, 0.001); end
  def test_costpercapita_by51; assert_in_delta(0.6508671795953695, worksheet.costpercapita_by51, 0.001); end
  def test_costpercapita_bz51; assert_in_delta(0.5682182112702936, worksheet.costpercapita_bz51, 0.001); end
  def test_costpercapita_ca51; assert_in_delta(0.5319840956148607, worksheet.costpercapita_ca51, 0.001); end
  def test_costpercapita_bs51; assert_in_delta(0.1705576018974535, worksheet.costpercapita_bs51, 0.001); end
  def test_costpercapita_cd51; assert_in_epsilon(11.900737669695456, worksheet.costpercapita_cd51, 0.001); end
  def test_costpercapita_cg51; assert_in_delta(-0.08326090496519246, worksheet.costpercapita_cg51, 0.001); end
  def test_costpercapita_ch51; assert_in_delta(-0.40819777156668435, worksheet.costpercapita_ch51, 0.001); end
  def test_costpercapita_ci51; assert_in_delta(-0.14724145475622688, worksheet.costpercapita_ci51, 0.001); end
  def test_costpercapita_cj51; assert_in_delta(0.08628676598540243, worksheet.costpercapita_cj51, 0.001); end
  def test_costpercapita_ck51; assert_in_delta(0.09950392192155788, worksheet.costpercapita_ck51, 0.001); end
  def test_costpercapita_cl51; assert_in_delta(0.08983267911321353, worksheet.costpercapita_cl51, 0.001); end
  def test_costpercapita_cm51; assert_in_delta(0.030556156037873684, worksheet.costpercapita_cm51, 0.001); end
  def test_costpercapita_cn51; assert_in_delta(-0.0011442086946745417, worksheet.costpercapita_cn51, 0.001); end
  def test_costpercapita_cf51; assert_in_delta(-0.3636208957473795, worksheet.costpercapita_cf51, 0.001); end
  def test_costpercapita_cq51; assert_in_epsilon(-1.9676564078196117, worksheet.costpercapita_cq51, 0.001); end
  def test_costpercapita_aj51; assert_in_delta(0.33096149604118363, worksheet.costpercapita_aj51, 0.001); end
  def test_costpercapita_ak51; assert_in_delta(0.9670315565115033, worksheet.costpercapita_ak51, 0.001); end
  def test_costpercapita_al51; assert_in_delta(0.8810021413426603, worksheet.costpercapita_al51, 0.001); end
  def test_costpercapita_am51; assert_in_delta(0.7778848840720964, worksheet.costpercapita_am51, 0.001); end
  def test_costpercapita_an51; assert_in_delta(0.6602360809647718, worksheet.costpercapita_an51, 0.001); end
  def test_costpercapita_ao51; assert_in_delta(0.561034500482156, worksheet.costpercapita_ao51, 0.001); end
  def test_costpercapita_ap51; assert_in_delta(0.5376620552324198, worksheet.costpercapita_ap51, 0.001); end
  def test_costpercapita_aq51; assert_in_delta(0.5331283043095353, worksheet.costpercapita_aq51, 0.001); end
  def test_costpercapita_ai51; assert_in_delta(0.5341784976448329, worksheet.costpercapita_ai51, 0.001); end
  def test_costpercapita_at51; assert_in_epsilon(13.868394077515065, worksheet.costpercapita_at51, 0.001); end
  def test_costpercapita_cr51; assert_equal("ok", worksheet.costpercapita_cr51); end
  def test_costpercapita_a52; assert_equal("XVIII.a", worksheet.costpercapita_a52); end
  def test_costpercapita_b52; assert_equal("Storage of captured CO2", worksheet.costpercapita_b52); end
  def test_costpercapita_c52; assert_equal("Other", worksheet.costpercapita_c52); end
  def test_costpercapita_y52; assert_in_delta(0, (worksheet.costpercapita_y52||0), 0.001); end
  def test_costpercapita_z52; assert_in_delta(0, (worksheet.costpercapita_z52||0), 0.001); end
  def test_costpercapita_aa52; assert_in_delta(0, (worksheet.costpercapita_aa52||0), 0.001); end
  def test_costpercapita_ab52; assert_in_delta(0, (worksheet.costpercapita_ab52||0), 0.001); end
  def test_costpercapita_ac52; assert_in_delta(0, (worksheet.costpercapita_ac52||0), 0.001); end
  def test_costpercapita_ad52; assert_in_delta(0, (worksheet.costpercapita_ad52||0), 0.001); end
  def test_costpercapita_ae52; assert_in_delta(0, (worksheet.costpercapita_ae52||0), 0.001); end
  def test_costpercapita_af52; assert_in_delta(0, (worksheet.costpercapita_af52||0), 0.001); end
  def test_costpercapita_ag52; assert_in_delta(0, (worksheet.costpercapita_ag52||0), 0.001); end
  def test_costpercapita_av52; assert_in_delta(0, (worksheet.costpercapita_av52||0), 0.001); end
  def test_costpercapita_aw52; assert_in_epsilon(15, worksheet.costpercapita_aw52, 0.001); end
  def test_costpercapita_bt52; assert_in_delta(0.5413742605469473, worksheet.costpercapita_bt52, 0.001); end
  def test_costpercapita_bu52; assert_in_epsilon(1.7719888859588102, worksheet.costpercapita_bu52, 0.001); end
  def test_costpercapita_bv52; assert_in_epsilon(2.8804504213715205, worksheet.costpercapita_bv52, 0.001); end
  def test_costpercapita_bw52; assert_in_epsilon(3.5308862683347244, worksheet.costpercapita_bw52, 0.001); end
  def test_costpercapita_bx52; assert_in_epsilon(3.6113454529721634, worksheet.costpercapita_bx52, 0.001); end
  def test_costpercapita_by52; assert_in_epsilon(3.8712913592842626, worksheet.costpercapita_by52, 0.001); end
  def test_costpercapita_bz52; assert_in_epsilon(4.38397637138422, worksheet.costpercapita_bz52, 0.001); end
  def test_costpercapita_ca52; assert_in_epsilon(5.313541138890592, worksheet.costpercapita_ca52, 0.001); end
  def test_costpercapita_bs52; assert_in_delta(0, (worksheet.costpercapita_bs52||0), 0.001); end
  def test_costpercapita_cd52; assert_in_epsilon(54.34594961667932, worksheet.costpercapita_cd52, 0.001); end
  def test_costpercapita_cg52; assert_in_delta(-0.9891588738032768, worksheet.costpercapita_cg52, 0.001); end
  def test_costpercapita_ch52; assert_in_epsilon(-1.8851840478281547, worksheet.costpercapita_ch52, 0.001); end
  def test_costpercapita_ci52; assert_in_delta(-0.7147529023426258, worksheet.costpercapita_ci52, 0.001); end
  def test_costpercapita_cj52; assert_in_delta(-0.10750569691681777, worksheet.costpercapita_cj52, 0.001); end
  def test_costpercapita_ck52; assert_in_delta(-0.23332014163904682, worksheet.costpercapita_ck52, 0.001); end
  def test_costpercapita_cl52; assert_in_delta(-0.45951191739384967, worksheet.costpercapita_cl52, 0.001); end
  def test_costpercapita_cm52; assert_in_delta(-0.7636698358954535, worksheet.costpercapita_cm52, 0.001); end
  def test_costpercapita_cn52; assert_in_epsilon(-1.2883935959826573, worksheet.costpercapita_cn52, 0.001); end
  def test_costpercapita_cf52; assert_in_delta(0, (worksheet.costpercapita_cf52||0), 0.001); end
  def test_costpercapita_cq52; assert_in_epsilon(-17.443227114941376, worksheet.costpercapita_cq52, 0.001); end
  def test_costpercapita_aj52; assert_in_epsilon(1.5305331343502242, worksheet.costpercapita_aj52, 0.001); end
  def test_costpercapita_ak52; assert_in_epsilon(3.6571729337869647, worksheet.costpercapita_ak52, 0.001); end
  def test_costpercapita_al52; assert_in_epsilon(3.5952033237141463, worksheet.costpercapita_al52, 0.001); end
  def test_costpercapita_am52; assert_in_epsilon(3.638391965251542, worksheet.costpercapita_am52, 0.001); end
  def test_costpercapita_an52; assert_in_epsilon(3.84466559461121, worksheet.costpercapita_an52, 0.001); end
  def test_costpercapita_ao52; assert_in_epsilon(4.330803276678112, worksheet.costpercapita_ao52, 0.001); end
  def test_costpercapita_ap52; assert_in_epsilon(5.147646207279673, worksheet.costpercapita_ap52, 0.001); end
  def test_costpercapita_aq52; assert_in_epsilon(6.601934734873249, worksheet.costpercapita_aq52, 0.001); end
  def test_costpercapita_ai52; assert_in_delta(0, (worksheet.costpercapita_ai52||0), 0.001); end
  def test_costpercapita_at52; assert_in_epsilon(71.78917673162069, worksheet.costpercapita_at52, 0.001); end
  def test_costpercapita_cr52; assert_equal("ok", worksheet.costpercapita_cr52); end
  def test_costpercapita_a53; assert_equal("Total", worksheet.costpercapita_a53); end
  def test_costpercapita_b53; assert_equal("Total", worksheet.costpercapita_b53); end
  def test_costpercapita_c53; assert_equal("Total", worksheet.costpercapita_c53); end
  def test_costpercapita_e53; assert_in_epsilon(1404.9695777582313, worksheet.costpercapita_e53, 0.001); end
  def test_costpercapita_f53; assert_in_epsilon(1394.2081772655977, worksheet.costpercapita_f53, 0.001); end
  def test_costpercapita_g53; assert_in_epsilon(1541.4622042308633, worksheet.costpercapita_g53, 0.001); end
  def test_costpercapita_h53; assert_in_epsilon(1620.275808287369, worksheet.costpercapita_h53, 0.001); end
  def test_costpercapita_i53; assert_in_epsilon(1598.938097755158, worksheet.costpercapita_i53, 0.001); end
  def test_costpercapita_j53; assert_in_epsilon(1515.7693994018787, worksheet.costpercapita_j53, 0.001); end
  def test_costpercapita_k53; assert_in_epsilon(1513.744023409359, worksheet.costpercapita_k53, 0.001); end
  def test_costpercapita_l53; assert_in_epsilon(1514.083903272264, worksheet.costpercapita_l53, 0.001); end
  def test_costpercapita_m53; assert_in_epsilon(1438.6109850013195, worksheet.costpercapita_m53, 0.001); end
  def test_costpercapita_o53; assert_in_epsilon(1386.8457764576829, worksheet.costpercapita_o53, 0.001); end
  def test_costpercapita_p53; assert_in_epsilon(1296.3616052484938, worksheet.costpercapita_p53, 0.001); end
  def test_costpercapita_q53; assert_in_epsilon(1214.4709555690947, worksheet.costpercapita_q53, 0.001); end
  def test_costpercapita_r53; assert_in_epsilon(1202.121572287586, worksheet.costpercapita_r53, 0.001); end
  def test_costpercapita_s53; assert_in_epsilon(1148.5757306747978, worksheet.costpercapita_s53, 0.001); end
  def test_costpercapita_t53; assert_in_epsilon(1113.8088485535388, worksheet.costpercapita_t53, 0.001); end
  def test_costpercapita_u53; assert_in_epsilon(986.6030614536973, worksheet.costpercapita_u53, 0.001); end
  def test_costpercapita_v53; assert_in_epsilon(971.9947888582351, worksheet.costpercapita_v53, 0.001); end
  def test_costpercapita_w53; assert_in_epsilon(814.3564251828985, worksheet.costpercapita_w53, 0.001); end
  def test_costpercapita_y53; assert_in_epsilon(724.2624168917187, worksheet.costpercapita_y53, 0.001); end
  def test_costpercapita_z53; assert_in_epsilon(601.1836693610641, worksheet.costpercapita_z53, 0.001); end
  def test_costpercapita_aa53; assert_in_epsilon(467.8146405017654, worksheet.costpercapita_aa53, 0.001); end
  def test_costpercapita_ab53; assert_in_epsilon(332.9865333500785, worksheet.costpercapita_ab53, 0.001); end
  def test_costpercapita_ac53; assert_in_epsilon(214.33468937211657, worksheet.costpercapita_ac53, 0.001); end
  def test_costpercapita_ad53; assert_in_epsilon(145.9783955324374, worksheet.costpercapita_ad53, 0.001); end
  def test_costpercapita_ae53; assert_in_epsilon(96.34312749230779, worksheet.costpercapita_ae53, 0.001); end
  def test_costpercapita_af53; assert_in_epsilon(50.00400801361391, worksheet.costpercapita_af53, 0.001); end
  def test_costpercapita_ag53; assert_in_epsilon(15.857280042911531, worksheet.costpercapita_ag53, 0.001); end
  def test_costpercapita_ai53; assert_in_epsilon(3516.077771107633, worksheet.costpercapita_ai53, 0.001); end
  def test_costpercapita_aj53; assert_in_epsilon(3291.7534518751563, worksheet.costpercapita_aj53, 0.001); end
  def test_costpercapita_ak53; assert_in_epsilon(3223.747800301723, worksheet.costpercapita_ak53, 0.001); end
  def test_costpercapita_al53; assert_in_epsilon(3155.3839139250335, worksheet.costpercapita_al53, 0.001); end
  def test_costpercapita_am53; assert_in_epsilon(2961.8485178020724, worksheet.costpercapita_am53, 0.001); end
  def test_costpercapita_an53; assert_in_epsilon(2775.556643487855, worksheet.costpercapita_an53, 0.001); end
  def test_costpercapita_ao53; assert_in_epsilon(2596.6902123553646, worksheet.costpercapita_ao53, 0.001); end
  def test_costpercapita_ap53; assert_in_epsilon(2536.082700144113, worksheet.costpercapita_ap53, 0.001); end
  def test_costpercapita_aq53; assert_in_epsilon(2268.82469022713, worksheet.costpercapita_aq53, 0.001); end
  def test_costpercapita_as53; assert_in_epsilon(2925.1073001362315, worksheet.costpercapita_as53, 0.001); end
  def test_costpercapita_at53; assert_in_epsilon(63063.01301394417, worksheet.costpercapita_at53, 0.001); end
  def test_costpercapita_ay53; assert_in_epsilon(256.99205252321656, worksheet.costpercapita_ay53, 0.001); end
  def test_costpercapita_az53; assert_in_epsilon(431.47132917636173, worksheet.costpercapita_az53, 0.001); end
  def test_costpercapita_ba53; assert_in_epsilon(476.41534190550624, worksheet.costpercapita_ba53, 0.001); end
  def test_costpercapita_bb53; assert_in_epsilon(504.29669145431313, worksheet.costpercapita_bb53, 0.001); end
  def test_costpercapita_bc53; assert_in_epsilon(498.04147052776403, worksheet.costpercapita_bc53, 0.001); end
  def test_costpercapita_bd53; assert_in_epsilon(469.52236146865863, worksheet.costpercapita_bd53, 0.001); end
  def test_costpercapita_be53; assert_in_epsilon(463.95262390547003, worksheet.costpercapita_be53, 0.001); end
  def test_costpercapita_bf53; assert_in_epsilon(465.02622992134275, worksheet.costpercapita_bf53, 0.001); end
  def test_costpercapita_bg53; assert_in_epsilon(446.91442462183494, worksheet.costpercapita_bg53, 0.001); end
  def test_costpercapita_bi53; assert_in_epsilon(256.99205252321656, worksheet.costpercapita_bi53, 0.001); end
  def test_costpercapita_bj53; assert_in_epsilon(669.7824275147311, worksheet.costpercapita_bj53, 0.001); end
  def test_costpercapita_bk53; assert_in_epsilon(1086.354059699466, worksheet.costpercapita_bk53, 0.001); end
  def test_costpercapita_bl53; assert_in_epsilon(1331.3377559901767, worksheet.costpercapita_bl53, 0.001); end
  def test_costpercapita_bm53; assert_in_epsilon(1473.7761553617568, worksheet.costpercapita_bm53, 0.001); end
  def test_costpercapita_bn53; assert_in_epsilon(1526.84333748054, worksheet.costpercapita_bn53, 0.001); end
  def test_costpercapita_bo53; assert_in_epsilon(1501.7142945709327, worksheet.costpercapita_bo53, 0.001); end
  def test_costpercapita_bp53; assert_in_epsilon(1571.9313204812063, worksheet.costpercapita_bp53, 0.001); end
  def test_costpercapita_bq53; assert_in_epsilon(1493.6333894117297, worksheet.costpercapita_bq53, 0.001); end
  def test_costpercapita_bs53; assert_in_epsilon(2368.1002458726175, worksheet.costpercapita_bs53, 0.001); end
  def test_costpercapita_bt53; assert_in_epsilon(2567.32770212429, worksheet.costpercapita_bt53, 0.001); end
  def test_costpercapita_bu53; assert_in_epsilon(2768.639655770326, worksheet.costpercapita_bu53, 0.001); end
  def test_costpercapita_bv53; assert_in_epsilon(2866.445861627841, worksheet.costpercapita_bv53, 0.001); end
  def test_costpercapita_bw53; assert_in_epsilon(2836.6865754086716, worksheet.costpercapita_bw53, 0.001); end
  def test_costpercapita_bx53; assert_in_epsilon(2786.630581566516, worksheet.costpercapita_bx53, 0.001); end
  def test_costpercapita_by53; assert_in_epsilon(2584.660483516938, worksheet.costpercapita_by53, 0.001); end
  def test_costpercapita_bz53; assert_in_epsilon(2593.9301173530553, worksheet.costpercapita_bz53, 0.001); end
  def test_costpercapita_ca53; assert_in_epsilon(2323.847094637539, worksheet.costpercapita_ca53, 0.001); end
  def test_costpercapita_cc53; assert_in_epsilon(2632.9187019864216, worksheet.costpercapita_cc53, 0.001); end
  def test_costpercapita_cd53; assert_in_epsilon(56239.118198318145, worksheet.costpercapita_cd53, 0.001); end
  def test_costpercapita_cf53; assert_in_epsilon(-1147.9775252350146, worksheet.costpercapita_cf53, 0.001); end
  def test_costpercapita_cg53; assert_in_epsilon(-724.4257497508667, worksheet.costpercapita_cg53, 0.001); end
  def test_costpercapita_ch53; assert_in_epsilon(-455.10814453139733, worksheet.costpercapita_ch53, 0.001); end
  def test_costpercapita_ci53; assert_in_epsilon(-288.93805229719237, worksheet.costpercapita_ci53, 0.001); end
  def test_costpercapita_cj53; assert_in_epsilon(-125.16194239340128, worksheet.costpercapita_cj53, 0.001); end
  def test_costpercapita_ck53; assert_in_epsilon(11.07393807866109, worksheet.costpercapita_ck53, 0.001); end
  def test_costpercapita_cl53; assert_in_epsilon(-12.029728838426479, worksheet.costpercapita_cl53, 0.001); end
  def test_costpercapita_cm53; assert_in_epsilon(57.84741720894291, worksheet.costpercapita_cm53, 0.001); end
  def test_costpercapita_cn53; assert_in_epsilon(55.02240441041019, worksheet.costpercapita_cn53, 0.001); end
  def test_costpercapita_cp53; assert_in_epsilon(-292.1885981498093, worksheet.costpercapita_cp53, 0.001); end
  def test_costpercapita_cq53; assert_in_epsilon(-6823.894815626017, worksheet.costpercapita_cq53, 0.001); end
  def test_costpercapita_cr53; assert_equal("ok", worksheet.costpercapita_cr53); end
  def test_costpercapita_b55; assert_equal("£/Capita/yr", worksheet.costpercapita_b55); end
  def test_costpercapita_e55; assert_equal("C1.Point", worksheet.costpercapita_e55); end
  def test_costpercapita_f55; assert_equal("Point estimate of capital costs", worksheet.costpercapita_f55); end
  def test_costpercapita_o55; assert_equal("C2.Point", worksheet.costpercapita_o55); end
  def test_costpercapita_p55; assert_equal("Point estimate of operating costs", worksheet.costpercapita_p55); end
  def test_costpercapita_y55; assert_equal("C3.Point", worksheet.costpercapita_y55); end
  def test_costpercapita_z55; assert_equal("Point estimate of fuel costs", worksheet.costpercapita_z55); end
  def test_costpercapita_ai55; assert_equal("Point estimate of total cost", worksheet.costpercapita_ai55); end
  def test_costpercapita_as55; assert_equal("Cashflow capital basis", worksheet.costpercapita_as55); end
  def test_costpercapita_av55; assert_equal("Loan", worksheet.costpercapita_av55); end
  def test_costpercapita_ay55; assert_equal("Finance cost for capital spent in that period", worksheet.costpercapita_ay55); end
  def test_costpercapita_bi55; assert_equal("Finance cost for outstanding capital", worksheet.costpercapita_bi55); end
  def test_costpercapita_br55; assert_equal("Total cost (amortised capital)", worksheet.costpercapita_br55); end
  def test_costpercapita_cc55; assert_equal("Amortised Capital", worksheet.costpercapita_cc55); end
  def test_costpercapita_cf55; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cf55); end
  def test_costpercapita_cp55; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cp55); end
  def test_costpercapita_a56; assert_equal("Code", worksheet.costpercapita_a56); end
  def test_costpercapita_b56; assert_equal("Description", worksheet.costpercapita_b56); end
  def test_costpercapita_c56; assert_equal("Category", worksheet.costpercapita_c56); end
  def test_costpercapita_e56; assert_equal("2010", worksheet.costpercapita_e56); end
  def test_costpercapita_f56; assert_equal("2015", worksheet.costpercapita_f56); end
  def test_costpercapita_g56; assert_equal("2020", worksheet.costpercapita_g56); end
  def test_costpercapita_h56; assert_equal("2025", worksheet.costpercapita_h56); end
  def test_costpercapita_i56; assert_equal("2030", worksheet.costpercapita_i56); end
  def test_costpercapita_j56; assert_equal("2035", worksheet.costpercapita_j56); end
  def test_costpercapita_k56; assert_equal("2040", worksheet.costpercapita_k56); end
  def test_costpercapita_l56; assert_equal("2045", worksheet.costpercapita_l56); end
  def test_costpercapita_m56; assert_equal("2050", worksheet.costpercapita_m56); end
  def test_costpercapita_o56; assert_equal("2010", worksheet.costpercapita_o56); end
  def test_costpercapita_p56; assert_equal("2015", worksheet.costpercapita_p56); end
  def test_costpercapita_q56; assert_equal("2020", worksheet.costpercapita_q56); end
  def test_costpercapita_r56; assert_equal("2025", worksheet.costpercapita_r56); end
  def test_costpercapita_s56; assert_equal("2030", worksheet.costpercapita_s56); end
  def test_costpercapita_t56; assert_equal("2035", worksheet.costpercapita_t56); end
  def test_costpercapita_u56; assert_equal("2040", worksheet.costpercapita_u56); end
  def test_costpercapita_v56; assert_equal("2045", worksheet.costpercapita_v56); end
  def test_costpercapita_w56; assert_equal("2050", worksheet.costpercapita_w56); end
  def test_costpercapita_y56; assert_equal("2010", worksheet.costpercapita_y56); end
  def test_costpercapita_z56; assert_equal("2015", worksheet.costpercapita_z56); end
  def test_costpercapita_aa56; assert_equal("2020", worksheet.costpercapita_aa56); end
  def test_costpercapita_ab56; assert_equal("2025", worksheet.costpercapita_ab56); end
  def test_costpercapita_ac56; assert_equal("2030", worksheet.costpercapita_ac56); end
  def test_costpercapita_ad56; assert_equal("2035", worksheet.costpercapita_ad56); end
  def test_costpercapita_ae56; assert_equal("2040", worksheet.costpercapita_ae56); end
  def test_costpercapita_af56; assert_equal("2045", worksheet.costpercapita_af56); end
  def test_costpercapita_ag56; assert_equal("2050", worksheet.costpercapita_ag56); end
  def test_costpercapita_ai56; assert_equal("2010", worksheet.costpercapita_ai56); end
  def test_costpercapita_aj56; assert_equal("2015", worksheet.costpercapita_aj56); end
  def test_costpercapita_ak56; assert_equal("2020", worksheet.costpercapita_ak56); end
  def test_costpercapita_al56; assert_equal("2025", worksheet.costpercapita_al56); end
  def test_costpercapita_am56; assert_equal("2030", worksheet.costpercapita_am56); end
  def test_costpercapita_an56; assert_equal("2035", worksheet.costpercapita_an56); end
  def test_costpercapita_ao56; assert_equal("2040", worksheet.costpercapita_ao56); end
  def test_costpercapita_ap56; assert_equal("2045", worksheet.costpercapita_ap56); end
  def test_costpercapita_aq56; assert_equal("2050", worksheet.costpercapita_aq56); end
  def test_costpercapita_as56; assert_equal("Mean", worksheet.costpercapita_as56); end
  def test_costpercapita_at56; assert_equal("NPV", worksheet.costpercapita_at56); end
  def test_costpercapita_av56; assert_equal("Rate", worksheet.costpercapita_av56); end
  def test_costpercapita_aw56; assert_equal("Years", worksheet.costpercapita_aw56); end
  def test_costpercapita_ay56; assert_in_epsilon(2010, worksheet.costpercapita_ay56, 0.001); end
  def test_costpercapita_az56; assert_in_epsilon(2015, worksheet.costpercapita_az56, 0.001); end
  def test_costpercapita_ba56; assert_in_epsilon(2020, worksheet.costpercapita_ba56, 0.001); end
  def test_costpercapita_bb56; assert_in_epsilon(2025, worksheet.costpercapita_bb56, 0.001); end
  def test_costpercapita_bc56; assert_in_epsilon(2030, worksheet.costpercapita_bc56, 0.001); end
  def test_costpercapita_bd56; assert_in_epsilon(2035, worksheet.costpercapita_bd56, 0.001); end
  def test_costpercapita_be56; assert_in_epsilon(2040, worksheet.costpercapita_be56, 0.001); end
  def test_costpercapita_bf56; assert_in_epsilon(2045, worksheet.costpercapita_bf56, 0.001); end
  def test_costpercapita_bg56; assert_in_epsilon(2050, worksheet.costpercapita_bg56, 0.001); end
  def test_costpercapita_bi56; assert_in_epsilon(2010, worksheet.costpercapita_bi56, 0.001); end
  def test_costpercapita_bj56; assert_in_epsilon(2015, worksheet.costpercapita_bj56, 0.001); end
  def test_costpercapita_bk56; assert_in_epsilon(2020, worksheet.costpercapita_bk56, 0.001); end
  def test_costpercapita_bl56; assert_in_epsilon(2025, worksheet.costpercapita_bl56, 0.001); end
  def test_costpercapita_bm56; assert_in_epsilon(2030, worksheet.costpercapita_bm56, 0.001); end
  def test_costpercapita_bn56; assert_in_epsilon(2035, worksheet.costpercapita_bn56, 0.001); end
  def test_costpercapita_bo56; assert_in_epsilon(2040, worksheet.costpercapita_bo56, 0.001); end
  def test_costpercapita_bp56; assert_in_epsilon(2045, worksheet.costpercapita_bp56, 0.001); end
  def test_costpercapita_bq56; assert_in_epsilon(2050, worksheet.costpercapita_bq56, 0.001); end
  def test_costpercapita_bs56; assert_equal("2010", worksheet.costpercapita_bs56); end
  def test_costpercapita_bt56; assert_equal("2015", worksheet.costpercapita_bt56); end
  def test_costpercapita_bu56; assert_equal("2020", worksheet.costpercapita_bu56); end
  def test_costpercapita_bv56; assert_equal("2025", worksheet.costpercapita_bv56); end
  def test_costpercapita_bw56; assert_equal("2030", worksheet.costpercapita_bw56); end
  def test_costpercapita_bx56; assert_equal("2035", worksheet.costpercapita_bx56); end
  def test_costpercapita_by56; assert_equal("2040", worksheet.costpercapita_by56); end
  def test_costpercapita_bz56; assert_equal("2045", worksheet.costpercapita_bz56); end
  def test_costpercapita_ca56; assert_equal("2050", worksheet.costpercapita_ca56); end
  def test_costpercapita_cc56; assert_equal("Mean", worksheet.costpercapita_cc56); end
  def test_costpercapita_cd56; assert_equal("NPV", worksheet.costpercapita_cd56); end
  def test_costpercapita_cf56; assert_equal("2010", worksheet.costpercapita_cf56); end
  def test_costpercapita_cg56; assert_equal("2015", worksheet.costpercapita_cg56); end
  def test_costpercapita_ch56; assert_equal("2020", worksheet.costpercapita_ch56); end
  def test_costpercapita_ci56; assert_equal("2025", worksheet.costpercapita_ci56); end
  def test_costpercapita_cj56; assert_equal("2030", worksheet.costpercapita_cj56); end
  def test_costpercapita_ck56; assert_equal("2035", worksheet.costpercapita_ck56); end
  def test_costpercapita_cl56; assert_equal("2040", worksheet.costpercapita_cl56); end
  def test_costpercapita_cm56; assert_equal("2045", worksheet.costpercapita_cm56); end
  def test_costpercapita_cn56; assert_equal("2050", worksheet.costpercapita_cn56); end
  def test_costpercapita_cp56; assert_equal("Mean", worksheet.costpercapita_cp56); end
  def test_costpercapita_cq56; assert_equal("NPV", worksheet.costpercapita_cq56); end
  def test_costpercapita_a57; assert_equal("I.a", worksheet.costpercapita_a57); end
  def test_costpercapita_b57; assert_equal("Conventional thermal plant", worksheet.costpercapita_b57); end
  def test_costpercapita_c57; assert_equal("Electricity", worksheet.costpercapita_c57); end
  def test_costpercapita_y57; assert_in_delta(0, (worksheet.costpercapita_y57||0), 0.001); end
  def test_costpercapita_z57; assert_in_delta(0, (worksheet.costpercapita_z57||0), 0.001); end
  def test_costpercapita_aa57; assert_in_delta(0, (worksheet.costpercapita_aa57||0), 0.001); end
  def test_costpercapita_ab57; assert_in_delta(0, (worksheet.costpercapita_ab57||0), 0.001); end
  def test_costpercapita_ac57; assert_in_delta(0, (worksheet.costpercapita_ac57||0), 0.001); end
  def test_costpercapita_ad57; assert_in_delta(0, (worksheet.costpercapita_ad57||0), 0.001); end
  def test_costpercapita_ae57; assert_in_delta(0, (worksheet.costpercapita_ae57||0), 0.001); end
  def test_costpercapita_af57; assert_in_delta(0, (worksheet.costpercapita_af57||0), 0.001); end
  def test_costpercapita_ag57; assert_in_delta(0, (worksheet.costpercapita_ag57||0), 0.001); end
  def test_costpercapita_av57; assert_in_delta(0.07, worksheet.costpercapita_av57, 0.001); end
  def test_costpercapita_aw57; assert_in_epsilon(20, worksheet.costpercapita_aw57, 0.001); end
  def test_costpercapita_bt57; assert_in_epsilon(40.56161281481946, worksheet.costpercapita_bt57, 0.001); end
  def test_costpercapita_bu57; assert_in_epsilon(30.13312285746333, worksheet.costpercapita_bu57, 0.001); end
  def test_costpercapita_bv57; assert_in_epsilon(18.882852707375434, worksheet.costpercapita_bv57, 0.001); end
  def test_costpercapita_bw57; assert_in_epsilon(2.2401478693328953, worksheet.costpercapita_bw57, 0.001); end
  def test_costpercapita_bx57; assert_in_delta(0, (worksheet.costpercapita_bx57||0), 0.001); end
  def test_costpercapita_by57; assert_in_delta(0, (worksheet.costpercapita_by57||0), 0.001); end
  def test_costpercapita_bz57; assert_in_delta(0, (worksheet.costpercapita_bz57||0), 0.001); end
  def test_costpercapita_ca57; assert_in_delta(0, (worksheet.costpercapita_ca57||0), 0.001); end
  def test_costpercapita_bs57; assert_in_epsilon(50.97725853549229, worksheet.costpercapita_bs57, 0.001); end
  def test_costpercapita_cd57; assert_in_epsilon(390.52999270140214, worksheet.costpercapita_cd57, 0.001); end
  def test_costpercapita_cg57; assert_in_epsilon(-1.642530073884659, worksheet.costpercapita_cg57, 0.001); end
  def test_costpercapita_ch57; assert_in_epsilon(1.4200506179307655, worksheet.costpercapita_ch57, 0.001); end
  def test_costpercapita_ci57; assert_in_epsilon(1.376080916476219, worksheet.costpercapita_ci57, 0.001); end
  def test_costpercapita_cj57; assert_in_epsilon(1.338486175165062, worksheet.costpercapita_cj57, 0.001); end
  def test_costpercapita_ck57; assert_in_delta(0, (worksheet.costpercapita_ck57||0), 0.001); end
  def test_costpercapita_cl57; assert_in_delta(0, (worksheet.costpercapita_cl57||0), 0.001); end
  def test_costpercapita_cm57; assert_in_delta(0, (worksheet.costpercapita_cm57||0), 0.001); end
  def test_costpercapita_cn57; assert_in_delta(0, (worksheet.costpercapita_cn57||0), 0.001); end
  def test_costpercapita_cf57; assert_in_delta(0, (worksheet.costpercapita_cf57||0), 0.001); end
  def test_costpercapita_cq57; assert_in_epsilon(5.588908147184737, worksheet.costpercapita_cq57, 0.001); end
  def test_costpercapita_aj57; assert_in_epsilon(42.204142888704126, worksheet.costpercapita_aj57, 0.001); end
  def test_costpercapita_ak57; assert_in_epsilon(28.713072239532565, worksheet.costpercapita_ak57, 0.001); end
  def test_costpercapita_al57; assert_in_epsilon(17.50677179089921, worksheet.costpercapita_al57, 0.001); end
  def test_costpercapita_am57; assert_in_delta(0.9016616941678334, worksheet.costpercapita_am57, 0.001); end
  def test_costpercapita_an57; assert_in_delta(0, (worksheet.costpercapita_an57||0), 0.001); end
  def test_costpercapita_ao57; assert_in_delta(0, (worksheet.costpercapita_ao57||0), 0.001); end
  def test_costpercapita_ap57; assert_in_delta(0, (worksheet.costpercapita_ap57||0), 0.001); end
  def test_costpercapita_aq57; assert_in_delta(0, (worksheet.costpercapita_aq57||0), 0.001); end
  def test_costpercapita_ai57; assert_in_epsilon(50.97725853549229, worksheet.costpercapita_ai57, 0.001); end
  def test_costpercapita_at57; assert_in_epsilon(384.9410845542174, worksheet.costpercapita_at57, 0.001); end
  def test_costpercapita_cr57; assert_equal("ok", worksheet.costpercapita_cr57); end
  def test_costpercapita_a58; assert_equal("I.b", worksheet.costpercapita_a58); end
  def test_costpercapita_b58; assert_equal("Combustion + CCS", worksheet.costpercapita_b58); end
  def test_costpercapita_c58; assert_equal("Electricity", worksheet.costpercapita_c58); end
  def test_costpercapita_y58; assert_in_delta(0, (worksheet.costpercapita_y58||0), 0.001); end
  def test_costpercapita_z58; assert_in_delta(0, (worksheet.costpercapita_z58||0), 0.001); end
  def test_costpercapita_aa58; assert_in_delta(0, (worksheet.costpercapita_aa58||0), 0.001); end
  def test_costpercapita_ab58; assert_in_delta(0, (worksheet.costpercapita_ab58||0), 0.001); end
  def test_costpercapita_ac58; assert_in_delta(0, (worksheet.costpercapita_ac58||0), 0.001); end
  def test_costpercapita_ad58; assert_in_delta(0, (worksheet.costpercapita_ad58||0), 0.001); end
  def test_costpercapita_ae58; assert_in_delta(0, (worksheet.costpercapita_ae58||0), 0.001); end
  def test_costpercapita_af58; assert_in_delta(0, (worksheet.costpercapita_af58||0), 0.001); end
  def test_costpercapita_ag58; assert_in_delta(0, (worksheet.costpercapita_ag58||0), 0.001); end
  def test_costpercapita_av58; assert_in_delta(0.07, worksheet.costpercapita_av58, 0.001); end
  def test_costpercapita_aw58; assert_in_epsilon(30, worksheet.costpercapita_aw58, 0.001); end
  def test_costpercapita_bt58; assert_in_epsilon(2.8071116440810617, worksheet.costpercapita_bt58, 0.001); end
  def test_costpercapita_bu58; assert_in_epsilon(4.597568258107718, worksheet.costpercapita_bu58, 0.001); end
  def test_costpercapita_bv58; assert_in_epsilon(4.457864156515941, worksheet.costpercapita_bv58, 0.001); end
  def test_costpercapita_bw58; assert_in_epsilon(4.338803938777534, worksheet.costpercapita_bw58, 0.001); end
  def test_costpercapita_bx58; assert_in_epsilon(4.237316372969296, worksheet.costpercapita_bx58, 0.001); end
  def test_costpercapita_by58; assert_in_epsilon(4.14765043800892, worksheet.costpercapita_by58, 0.001); end
  def test_costpercapita_bz58; assert_in_epsilon(2.4552110673820398, worksheet.costpercapita_bz58, 0.001); end
  def test_costpercapita_ca58; assert_in_epsilon(1.471752389600752, worksheet.costpercapita_ca58, 0.001); end
  def test_costpercapita_bs58; assert_in_delta(0, (worksheet.costpercapita_bs58||0), 0.001); end
  def test_costpercapita_cd58; assert_in_epsilon(74.39829514639692, worksheet.costpercapita_cd58, 0.001); end
  def test_costpercapita_cg58; assert_in_epsilon(-2.7949360259089384, worksheet.costpercapita_cg58, 0.001); end
  def test_costpercapita_ch58; assert_in_delta(0.21667460228140234, worksheet.costpercapita_ch58, 0.001); end
  def test_costpercapita_ci58; assert_in_epsilon(2.819317305124344, worksheet.costpercapita_ci58, 0.001); end
  def test_costpercapita_cj58; assert_in_epsilon(2.742293124721032, worksheet.costpercapita_cj58, 0.001); end
  def test_costpercapita_ck58; assert_in_epsilon(2.6776965020367527, worksheet.costpercapita_ck58, 0.001); end
  def test_costpercapita_cl58; assert_in_epsilon(2.6205909121485536, worksheet.costpercapita_cl58, 0.001); end
  def test_costpercapita_cm58; assert_in_delta(0.9577867478012896, worksheet.costpercapita_cm58, 0.001); end
  def test_costpercapita_cn58; assert_in_delta(-1.1936515821853693e-16, worksheet.costpercapita_cn58, 0.001); end
  def test_costpercapita_cf58; assert_in_delta(0, (worksheet.costpercapita_cf58||0), 0.001); end
  def test_costpercapita_cq58; assert_in_epsilon(16.11212648983071, worksheet.costpercapita_cq58, 0.001); end
  def test_costpercapita_aj58; assert_in_epsilon(5.60204766999, worksheet.costpercapita_aj58, 0.001); end
  def test_costpercapita_ak58; assert_in_epsilon(4.380893655826316, worksheet.costpercapita_ak58, 0.001); end
  def test_costpercapita_al58; assert_in_epsilon(1.6385468513915968, worksheet.costpercapita_al58, 0.001); end
  def test_costpercapita_am58; assert_in_epsilon(1.5965108140565025, worksheet.costpercapita_am58, 0.001); end
  def test_costpercapita_an58; assert_in_epsilon(1.559619870932544, worksheet.costpercapita_an58, 0.001); end
  def test_costpercapita_ao58; assert_in_epsilon(1.527059525860367, worksheet.costpercapita_ao58, 0.001); end
  def test_costpercapita_ap58; assert_in_epsilon(1.49742431958075, worksheet.costpercapita_ap58, 0.001); end
  def test_costpercapita_aq58; assert_in_epsilon(1.4717523896007523, worksheet.costpercapita_aq58, 0.001); end
  def test_costpercapita_ai58; assert_in_delta(0, (worksheet.costpercapita_ai58||0), 0.001); end
  def test_costpercapita_at58; assert_in_epsilon(58.286168656566204, worksheet.costpercapita_at58, 0.001); end
  def test_costpercapita_cr58; assert_equal("ok", worksheet.costpercapita_cr58); end
  def test_costpercapita_a59; assert_equal("II.a", worksheet.costpercapita_a59); end
  def test_costpercapita_b59; assert_equal("Nuclear power", worksheet.costpercapita_b59); end
  def test_costpercapita_c59; assert_equal("Electricity", worksheet.costpercapita_c59); end
  def test_costpercapita_av59; assert_in_delta(0.07, worksheet.costpercapita_av59, 0.001); end
  def test_costpercapita_aw59; assert_in_epsilon(30, worksheet.costpercapita_aw59, 0.001); end
  def test_costpercapita_bt59; assert_in_epsilon(10.81824674354496, worksheet.costpercapita_bt59, 0.001); end
  def test_costpercapita_bu59; assert_in_epsilon(5.97798079247061, worksheet.costpercapita_bu59, 0.001); end
  def test_costpercapita_bv59; assert_in_epsilon(1.9309605783787778, worksheet.costpercapita_bv59, 0.001); end
  def test_costpercapita_bw59; assert_in_epsilon(1.878206439754367, worksheet.costpercapita_bw59, 0.001); end
  def test_costpercapita_bx59; assert_in_delta(0, (worksheet.costpercapita_bx59||0), 0.001); end
  def test_costpercapita_by59; assert_in_delta(0, (worksheet.costpercapita_by59||0), 0.001); end
  def test_costpercapita_bz59; assert_in_delta(0, (worksheet.costpercapita_bz59||0), 0.001); end
  def test_costpercapita_ca59; assert_in_delta(0, (worksheet.costpercapita_ca59||0), 0.001); end
  def test_costpercapita_bs59; assert_in_epsilon(14.590759141006375, worksheet.costpercapita_bs59, 0.001); end
  def test_costpercapita_cd59; assert_in_epsilon(91.80611542603921, worksheet.costpercapita_cd59, 0.001); end
  def test_costpercapita_cg59; assert_in_delta(0, (worksheet.costpercapita_cg59||0), 0.001); end
  def test_costpercapita_ch59; assert_in_delta(0, (worksheet.costpercapita_ch59||0), 0.001); end
  def test_costpercapita_ci59; assert_in_delta(0, (worksheet.costpercapita_ci59||0), 0.001); end
  def test_costpercapita_cj59; assert_in_delta(0, (worksheet.costpercapita_cj59||0), 0.001); end
  def test_costpercapita_ck59; assert_in_delta(0, (worksheet.costpercapita_ck59||0), 0.001); end
  def test_costpercapita_cl59; assert_in_delta(0, (worksheet.costpercapita_cl59||0), 0.001); end
  def test_costpercapita_cm59; assert_in_delta(0, (worksheet.costpercapita_cm59||0), 0.001); end
  def test_costpercapita_cn59; assert_in_delta(0, (worksheet.costpercapita_cn59||0), 0.001); end
  def test_costpercapita_cf59; assert_in_delta(0, (worksheet.costpercapita_cf59||0), 0.001); end
  def test_costpercapita_cq59; assert_in_delta(0, (worksheet.costpercapita_cq59||0), 0.001); end
  def test_costpercapita_aj59; assert_in_epsilon(10.81824674354496, worksheet.costpercapita_aj59, 0.001); end
  def test_costpercapita_ak59; assert_in_epsilon(5.97798079247061, worksheet.costpercapita_ak59, 0.001); end
  def test_costpercapita_al59; assert_in_epsilon(1.9309605783787778, worksheet.costpercapita_al59, 0.001); end
  def test_costpercapita_am59; assert_in_epsilon(1.878206439754367, worksheet.costpercapita_am59, 0.001); end
  def test_costpercapita_an59; assert_in_delta(0, (worksheet.costpercapita_an59||0), 0.001); end
  def test_costpercapita_ao59; assert_in_delta(0, (worksheet.costpercapita_ao59||0), 0.001); end
  def test_costpercapita_ap59; assert_in_delta(0, (worksheet.costpercapita_ap59||0), 0.001); end
  def test_costpercapita_aq59; assert_in_delta(0, (worksheet.costpercapita_aq59||0), 0.001); end
  def test_costpercapita_ai59; assert_in_epsilon(14.590759141006375, worksheet.costpercapita_ai59, 0.001); end
  def test_costpercapita_at59; assert_in_epsilon(91.80611542603921, worksheet.costpercapita_at59, 0.001); end
  def test_costpercapita_cr59; assert_equal("ok", worksheet.costpercapita_cr59); end
  def test_costpercapita_a60; assert_equal("III.a.1", worksheet.costpercapita_a60); end
  def test_costpercapita_b60; assert_equal("Onshore wind", worksheet.costpercapita_b60); end
  def test_costpercapita_c60; assert_equal("Electricity", worksheet.costpercapita_c60); end
  def test_costpercapita_y60; assert_in_delta(0, (worksheet.costpercapita_y60||0), 0.001); end
  def test_costpercapita_z60; assert_in_delta(0, (worksheet.costpercapita_z60||0), 0.001); end
  def test_costpercapita_aa60; assert_in_delta(0, (worksheet.costpercapita_aa60||0), 0.001); end
  def test_costpercapita_ab60; assert_in_delta(0, (worksheet.costpercapita_ab60||0), 0.001); end
  def test_costpercapita_ac60; assert_in_delta(0, (worksheet.costpercapita_ac60||0), 0.001); end
  def test_costpercapita_ad60; assert_in_delta(0, (worksheet.costpercapita_ad60||0), 0.001); end
  def test_costpercapita_ae60; assert_in_delta(0, (worksheet.costpercapita_ae60||0), 0.001); end
  def test_costpercapita_af60; assert_in_delta(0, (worksheet.costpercapita_af60||0), 0.001); end
  def test_costpercapita_ag60; assert_in_delta(0, (worksheet.costpercapita_ag60||0), 0.001); end
  def test_costpercapita_av60; assert_in_delta(0.07, worksheet.costpercapita_av60, 0.001); end
  def test_costpercapita_aw60; assert_in_epsilon(20, worksheet.costpercapita_aw60, 0.001); end
  def test_costpercapita_bt60; assert_in_epsilon(11.865357073625246, worksheet.costpercapita_bt60, 0.001); end
  def test_costpercapita_bu60; assert_in_epsilon(17.95792663705839, worksheet.costpercapita_bu60, 0.001); end
  def test_costpercapita_bv60; assert_in_epsilon(23.354863948704804, worksheet.costpercapita_bv60, 0.001); end
  def test_costpercapita_bw60; assert_in_epsilon(18.332821640400528, worksheet.costpercapita_bw60, 0.001); end
  def test_costpercapita_bx60; assert_in_epsilon(11.846567623000299, worksheet.costpercapita_bx60, 0.001); end
  def test_costpercapita_by60; assert_in_epsilon(5.756263878554267, worksheet.costpercapita_by60, 0.001); end
  def test_costpercapita_bz60; assert_in_delta(0.006113829103559086, worksheet.costpercapita_bz60, 0.001); end
  def test_costpercapita_ca60; assert_in_delta(0.005999734443602492, worksheet.costpercapita_ca60, 0.001); end
  def test_costpercapita_bs60; assert_in_epsilon(5.237088464364445, worksheet.costpercapita_bs60, 0.001); end
  def test_costpercapita_cd60; assert_in_epsilon(269.9466670317879, worksheet.costpercapita_cd60, 0.001); end
  def test_costpercapita_cg60; assert_in_epsilon(-2.7260518417987565, worksheet.costpercapita_cg60, 0.001); end
  def test_costpercapita_ch60; assert_in_epsilon(3.480118848303084, worksheet.costpercapita_ch60, 0.001); end
  def test_costpercapita_ci60; assert_in_epsilon(9.20560667211233, worksheet.costpercapita_ci60, 0.001); end
  def test_costpercapita_cj60; assert_in_epsilon(16.713843616378234, worksheet.costpercapita_cj60, 0.001); end
  def test_costpercapita_ck60; assert_in_epsilon(10.790548306738975, worksheet.costpercapita_ck60, 0.001); end
  def test_costpercapita_cl60; assert_in_epsilon(5.2363956235212745, worksheet.costpercapita_cl60, 0.001); end
  def test_costpercapita_cm60; assert_in_delta(0, (worksheet.costpercapita_cm60||0), 0.001); end
  def test_costpercapita_cn60; assert_in_delta(0, (worksheet.costpercapita_cn60||0), 0.001); end
  def test_costpercapita_cf60; assert_in_epsilon(-11.055166187472834, worksheet.costpercapita_cf60, 0.001); end
  def test_costpercapita_cq60; assert_in_epsilon(91.43488292503582, worksheet.costpercapita_cq60, 0.001); end
  def test_costpercapita_aj60; assert_in_epsilon(14.591408915424003, worksheet.costpercapita_aj60, 0.001); end
  def test_costpercapita_ak60; assert_in_epsilon(14.477807788755303, worksheet.costpercapita_ak60, 0.001); end
  def test_costpercapita_al60; assert_in_epsilon(14.149257276592472, worksheet.costpercapita_al60, 0.001); end
  def test_costpercapita_am60; assert_in_epsilon(1.618978024022293, worksheet.costpercapita_am60, 0.001); end
  def test_costpercapita_an60; assert_in_epsilon(1.056019316261324, worksheet.costpercapita_an60, 0.001); end
  def test_costpercapita_ao60; assert_in_delta(0.5198682550329926, worksheet.costpercapita_ao60, 0.001); end
  def test_costpercapita_ap60; assert_in_delta(0.006113829103559086, worksheet.costpercapita_ap60, 0.001); end
  def test_costpercapita_aq60; assert_in_delta(0.005999734443602492, worksheet.costpercapita_aq60, 0.001); end
  def test_costpercapita_ai60; assert_in_epsilon(16.292254651837276, worksheet.costpercapita_ai60, 0.001); end
  def test_costpercapita_at60; assert_in_epsilon(178.51178410675206, worksheet.costpercapita_at60, 0.001); end
  def test_costpercapita_cr60; assert_equal("ok", worksheet.costpercapita_cr60); end
  def test_costpercapita_a61; assert_equal("III.a.2", worksheet.costpercapita_a61); end
  def test_costpercapita_b61; assert_equal("Offshore wind", worksheet.costpercapita_b61); end
  def test_costpercapita_c61; assert_equal("Electricity", worksheet.costpercapita_c61); end
  def test_costpercapita_y61; assert_in_delta(0, (worksheet.costpercapita_y61||0), 0.001); end
  def test_costpercapita_z61; assert_in_delta(0, (worksheet.costpercapita_z61||0), 0.001); end
  def test_costpercapita_aa61; assert_in_delta(0, (worksheet.costpercapita_aa61||0), 0.001); end
  def test_costpercapita_ab61; assert_in_delta(0, (worksheet.costpercapita_ab61||0), 0.001); end
  def test_costpercapita_ac61; assert_in_delta(0, (worksheet.costpercapita_ac61||0), 0.001); end
  def test_costpercapita_ad61; assert_in_delta(0, (worksheet.costpercapita_ad61||0), 0.001); end
  def test_costpercapita_ae61; assert_in_delta(0, (worksheet.costpercapita_ae61||0), 0.001); end
  def test_costpercapita_af61; assert_in_delta(0, (worksheet.costpercapita_af61||0), 0.001); end
  def test_costpercapita_ag61; assert_in_delta(0, (worksheet.costpercapita_ag61||0), 0.001); end
  def test_costpercapita_av61; assert_in_delta(0.07, worksheet.costpercapita_av61, 0.001); end
  def test_costpercapita_aw61; assert_in_epsilon(20, worksheet.costpercapita_aw61, 0.001); end
  def test_costpercapita_bt61; assert_in_epsilon(30.764047639710526, worksheet.costpercapita_bt61, 0.001); end
  def test_costpercapita_bu61; assert_in_epsilon(103.81304537765008, worksheet.costpercapita_bu61, 0.001); end
  def test_costpercapita_bv61; assert_in_epsilon(185.93437044780399, worksheet.costpercapita_bv61, 0.001); end
  def test_costpercapita_bw61; assert_in_epsilon(274.40159023031634, worksheet.costpercapita_bw61, 0.001); end
  def test_costpercapita_bx61; assert_in_epsilon(338.91467569243525, worksheet.costpercapita_bx61, 0.001); end
  def test_costpercapita_by61; assert_in_epsilon(355.8881295537782, worksheet.costpercapita_by61, 0.001); end
  def test_costpercapita_bz61; assert_in_epsilon(425.9782063366849, worksheet.costpercapita_bz61, 0.001); end
  def test_costpercapita_ca61; assert_in_epsilon(346.63543046552644, worksheet.costpercapita_ca61, 0.001); end
  def test_costpercapita_bs61; assert_in_epsilon(4.897921711777269, worksheet.costpercapita_bs61, 0.001); end
  def test_costpercapita_cd61; assert_in_epsilon(4211.90251562229, worksheet.costpercapita_cd61, 0.001); end
  def test_costpercapita_cg61; assert_in_epsilon(-18.470308958244306, worksheet.costpercapita_cg61, 0.001); end
  def test_costpercapita_ch61; assert_in_epsilon(-39.56084189117509, worksheet.costpercapita_ch61, 0.001); end
  def test_costpercapita_ci61; assert_in_epsilon(3.782675886592078, worksheet.costpercapita_ci61, 0.001); end
  def test_costpercapita_cj61; assert_in_epsilon(50.47476077487156, worksheet.costpercapita_cj61, 0.001); end
  def test_costpercapita_ck61; assert_in_epsilon(103.50005546474807, worksheet.costpercapita_ck61, 0.001); end
  def test_costpercapita_cl61; assert_in_epsilon(120.56372010982523, worksheet.costpercapita_cl61, 0.001); end
  def test_costpercapita_cm61; assert_in_epsilon(194.0182095743387, worksheet.costpercapita_cm61, 0.001); end
  def test_costpercapita_cn61; assert_in_epsilon(123.02607833068336, worksheet.costpercapita_cn61, 0.001); end
  def test_costpercapita_cf61; assert_in_epsilon(-8.390624042345651, worksheet.costpercapita_cf61, 0.001); end
  def test_costpercapita_cq61; assert_in_epsilon(806.7092441965086, worksheet.costpercapita_cq61, 0.001); end
  def test_costpercapita_aj61; assert_in_epsilon(49.234356597954836, worksheet.costpercapita_aj61, 0.001); end
  def test_costpercapita_ak61; assert_in_epsilon(143.37388726882517, worksheet.costpercapita_ak61, 0.001); end
  def test_costpercapita_al61; assert_in_epsilon(182.15169456121188, worksheet.costpercapita_al61, 0.001); end
  def test_costpercapita_am61; assert_in_epsilon(223.9268294554448, worksheet.costpercapita_am61, 0.001); end
  def test_costpercapita_an61; assert_in_epsilon(235.41462022768724, worksheet.costpercapita_an61, 0.001); end
  def test_costpercapita_ao61; assert_in_epsilon(235.32440944395296, worksheet.costpercapita_ao61, 0.001); end
  def test_costpercapita_ap61; assert_in_epsilon(231.95999676234612, worksheet.costpercapita_ap61, 0.001); end
  def test_costpercapita_aq61; assert_in_epsilon(223.60935213484308, worksheet.costpercapita_aq61, 0.001); end
  def test_costpercapita_ai61; assert_in_epsilon(13.288545754122921, worksheet.costpercapita_ai61, 0.001); end
  def test_costpercapita_at61; assert_in_epsilon(3405.1932714257805, worksheet.costpercapita_at61, 0.001); end
  def test_costpercapita_cr61; assert_equal("ok", worksheet.costpercapita_cr61); end
  def test_costpercapita_a62; assert_equal("III.b", worksheet.costpercapita_a62); end
  def test_costpercapita_b62; assert_equal("Hydroelectric", worksheet.costpercapita_b62); end
  def test_costpercapita_c62; assert_equal("Electricity", worksheet.costpercapita_c62); end
  def test_costpercapita_y62; assert_in_delta(0, (worksheet.costpercapita_y62||0), 0.001); end
  def test_costpercapita_z62; assert_in_delta(0, (worksheet.costpercapita_z62||0), 0.001); end
  def test_costpercapita_aa62; assert_in_delta(0, (worksheet.costpercapita_aa62||0), 0.001); end
  def test_costpercapita_ab62; assert_in_delta(0, (worksheet.costpercapita_ab62||0), 0.001); end
  def test_costpercapita_ac62; assert_in_delta(0, (worksheet.costpercapita_ac62||0), 0.001); end
  def test_costpercapita_ad62; assert_in_delta(0, (worksheet.costpercapita_ad62||0), 0.001); end
  def test_costpercapita_ae62; assert_in_delta(0, (worksheet.costpercapita_ae62||0), 0.001); end
  def test_costpercapita_af62; assert_in_delta(0, (worksheet.costpercapita_af62||0), 0.001); end
  def test_costpercapita_ag62; assert_in_delta(0, (worksheet.costpercapita_ag62||0), 0.001); end
  def test_costpercapita_av62; assert_in_delta(0.07, worksheet.costpercapita_av62, 0.001); end
  def test_costpercapita_aw62; assert_in_epsilon(30, worksheet.costpercapita_aw62, 0.001); end
  def test_costpercapita_bt62; assert_in_epsilon(3.2657555241273664, worksheet.costpercapita_bt62, 0.001); end
  def test_costpercapita_bu62; assert_in_epsilon(3.4401264474503814, worksheet.costpercapita_bu62, 0.001); end
  def test_costpercapita_bv62; assert_in_epsilon(3.469896246920609, worksheet.costpercapita_bv62, 0.001); end
  def test_costpercapita_bw62; assert_in_epsilon(3.507662807215528, worksheet.costpercapita_bw62, 0.001); end
  def test_costpercapita_bx62; assert_in_epsilon(3.5544793733570073, worksheet.costpercapita_bx62, 0.001); end
  def test_costpercapita_by62; assert_in_epsilon(3.258253777392691, worksheet.costpercapita_by62, 0.001); end
  def test_costpercapita_bz62; assert_in_epsilon(3.2620090880428, worksheet.costpercapita_bz62, 0.001); end
  def test_costpercapita_ca62; assert_in_epsilon(3.2142322463752326, worksheet.costpercapita_ca62, 0.001); end
  def test_costpercapita_bs62; assert_in_epsilon(3.0763936422085263, worksheet.costpercapita_bs62, 0.001); end
  def test_costpercapita_cd62; assert_in_epsilon(70.78618938487726, worksheet.costpercapita_cd62, 0.001); end
  def test_costpercapita_cg62; assert_in_delta(0.20610251396668355, worksheet.costpercapita_cg62, 0.001); end
  def test_costpercapita_ch62; assert_in_delta(0.3248784162948404, worksheet.costpercapita_ch62, 0.001); end
  def test_costpercapita_ci62; assert_in_delta(0.5265768477082131, worksheet.costpercapita_ci62, 0.001); end
  def test_costpercapita_cj62; assert_in_delta(0.5713474609444263, worksheet.costpercapita_cj62, 0.001); end
  def test_costpercapita_ck62; assert_in_delta(0.6156522683237028, worksheet.costpercapita_ck62, 0.001); end
  def test_costpercapita_cl62; assert_in_delta(0.3119511723258713, worksheet.costpercapita_cl62, 0.001); end
  def test_costpercapita_cm62; assert_in_delta(0.3057283936226034, worksheet.costpercapita_cm62, 0.001); end
  def test_costpercapita_cn62; assert_in_delta(0.24565317332672396, worksheet.costpercapita_cn62, 0.001); end
  def test_costpercapita_cf62; assert_in_epsilon(-1.2921269042776187, worksheet.costpercapita_cf62, 0.001); end
  def test_costpercapita_cq62; assert_in_epsilon(6.388020867457134, worksheet.costpercapita_cq62, 0.001); end
  def test_costpercapita_aj62; assert_in_epsilon(3.0596530101606825, worksheet.costpercapita_aj62, 0.001); end
  def test_costpercapita_ak62; assert_in_epsilon(3.115248031155541, worksheet.costpercapita_ak62, 0.001); end
  def test_costpercapita_al62; assert_in_epsilon(2.9433193992123963, worksheet.costpercapita_al62, 0.001); end
  def test_costpercapita_am62; assert_in_epsilon(2.936315346271102, worksheet.costpercapita_am62, 0.001); end
  def test_costpercapita_an62; assert_in_epsilon(2.938827105033305, worksheet.costpercapita_an62, 0.001); end
  def test_costpercapita_ao62; assert_in_epsilon(2.9463026050668195, worksheet.costpercapita_ao62, 0.001); end
  def test_costpercapita_ap62; assert_in_epsilon(2.956280694420197, worksheet.costpercapita_ap62, 0.001); end
  def test_costpercapita_aq62; assert_in_epsilon(2.9685790730485087, worksheet.costpercapita_aq62, 0.001); end
  def test_costpercapita_ai62; assert_in_epsilon(4.368520546486145, worksheet.costpercapita_ai62, 0.001); end
  def test_costpercapita_at62; assert_in_epsilon(64.39816851742012, worksheet.costpercapita_at62, 0.001); end
  def test_costpercapita_cr62; assert_equal("ok", worksheet.costpercapita_cr62); end
  def test_costpercapita_a63; assert_equal("III.c", worksheet.costpercapita_a63); end
  def test_costpercapita_b63; assert_equal("Wave and Tidal", worksheet.costpercapita_b63); end
  def test_costpercapita_c63; assert_equal("Electricity", worksheet.costpercapita_c63); end
  def test_costpercapita_y63; assert_in_delta(0, (worksheet.costpercapita_y63||0), 0.001); end
  def test_costpercapita_z63; assert_in_delta(0, (worksheet.costpercapita_z63||0), 0.001); end
  def test_costpercapita_aa63; assert_in_delta(0, (worksheet.costpercapita_aa63||0), 0.001); end
  def test_costpercapita_ab63; assert_in_delta(0, (worksheet.costpercapita_ab63||0), 0.001); end
  def test_costpercapita_ac63; assert_in_delta(0, (worksheet.costpercapita_ac63||0), 0.001); end
  def test_costpercapita_ad63; assert_in_delta(0, (worksheet.costpercapita_ad63||0), 0.001); end
  def test_costpercapita_ae63; assert_in_delta(0, (worksheet.costpercapita_ae63||0), 0.001); end
  def test_costpercapita_af63; assert_in_delta(0, (worksheet.costpercapita_af63||0), 0.001); end
  def test_costpercapita_ag63; assert_in_delta(0, (worksheet.costpercapita_ag63||0), 0.001); end
  def test_costpercapita_av63; assert_in_delta(0.07, worksheet.costpercapita_av63, 0.001); end
  def test_costpercapita_aw63; assert_in_epsilon(30, worksheet.costpercapita_aw63, 0.001); end
  def test_costpercapita_bt63; assert_in_delta(0.3311152629638069, worksheet.costpercapita_bt63, 0.001); end
  def test_costpercapita_bu63; assert_in_epsilon(2.538781742056938, worksheet.costpercapita_bu63, 0.001); end
  def test_costpercapita_bv63; assert_in_epsilon(4.803277491371696, worksheet.costpercapita_bv63, 0.001); end
  def test_costpercapita_bw63; assert_in_epsilon(9.66526418250625, worksheet.costpercapita_bw63, 0.001); end
  def test_costpercapita_bx63; assert_in_epsilon(25.46191676302134, worksheet.costpercapita_bx63, 0.001); end
  def test_costpercapita_by63; assert_in_epsilon(55.24180826096355, worksheet.costpercapita_by63, 0.001); end
  def test_costpercapita_bz63; assert_in_epsilon(110.21427086295037, worksheet.costpercapita_bz63, 0.001); end
  def test_costpercapita_ca63; assert_in_epsilon(129.80656078810605, worksheet.costpercapita_ca63, 0.001); end
  def test_costpercapita_bs63; assert_in_delta(0.010547493384349961, worksheet.costpercapita_bs63, 0.001); end
  def test_costpercapita_cd63; assert_in_epsilon(542.7254768803591, worksheet.costpercapita_cd63, 0.001); end
  def test_costpercapita_cg63; assert_in_delta(-0.33534309545139795, worksheet.costpercapita_cg63, 0.001); end
  def test_costpercapita_ch63; assert_in_epsilon(-2.4099959885708655, worksheet.costpercapita_ch63, 0.001); end
  def test_costpercapita_ci63; assert_in_delta(-0.521688089254531, worksheet.costpercapita_ci63, 0.001); end
  def test_costpercapita_cj63; assert_in_epsilon(-2.107777611639321, worksheet.costpercapita_cj63, 0.001); end
  def test_costpercapita_ck63; assert_in_epsilon(-8.498987020453294, worksheet.costpercapita_ck63, 0.001); end
  def test_costpercapita_cl63; assert_in_epsilon(-13.646179994168158, worksheet.costpercapita_cl63, 0.001); end
  def test_costpercapita_cm63; assert_in_epsilon(-10.159788556614537, worksheet.costpercapita_cm63, 0.001); end
  def test_costpercapita_cn63; assert_in_epsilon(50.38149433449475, worksheet.costpercapita_cn63, 0.001); end
  def test_costpercapita_cf63; assert_in_delta(-0.028021835604941318, worksheet.costpercapita_cf63, 0.001); end
  def test_costpercapita_cq63; assert_in_epsilon(-7.956622120472841, worksheet.costpercapita_cq63, 0.001); end
  def test_costpercapita_aj63; assert_in_delta(0.666458358415205, worksheet.costpercapita_aj63, 0.001); end
  def test_costpercapita_ak63; assert_in_epsilon(4.948777730627803, worksheet.costpercapita_ak63, 0.001); end
  def test_costpercapita_al63; assert_in_epsilon(5.324965580626227, worksheet.costpercapita_al63, 0.001); end
  def test_costpercapita_am63; assert_in_epsilon(11.773041794145572, worksheet.costpercapita_am63, 0.001); end
  def test_costpercapita_an63; assert_in_epsilon(33.960903783474635, worksheet.costpercapita_an63, 0.001); end
  def test_costpercapita_ao63; assert_in_epsilon(68.8879882551317, worksheet.costpercapita_ao63, 0.001); end
  def test_costpercapita_ap63; assert_in_epsilon(120.3740594195649, worksheet.costpercapita_ap63, 0.001); end
  def test_costpercapita_aq63; assert_in_epsilon(79.42506645361131, worksheet.costpercapita_aq63, 0.001); end
  def test_costpercapita_ai63; assert_in_delta(0.03856932898929128, worksheet.costpercapita_ai63, 0.001); end
  def test_costpercapita_at63; assert_in_epsilon(550.6820990008321, worksheet.costpercapita_at63, 0.001); end
  def test_costpercapita_cr63; assert_equal("ok", worksheet.costpercapita_cr63); end
  def test_costpercapita_a64; assert_equal("III.d", worksheet.costpercapita_a64); end
  def test_costpercapita_b64; assert_equal("Geothermal", worksheet.costpercapita_b64); end
  def test_costpercapita_c64; assert_equal("Electricity", worksheet.costpercapita_c64); end
  def test_costpercapita_y64; assert_in_delta(0, (worksheet.costpercapita_y64||0), 0.001); end
  def test_costpercapita_z64; assert_in_delta(0, (worksheet.costpercapita_z64||0), 0.001); end
  def test_costpercapita_aa64; assert_in_delta(0, (worksheet.costpercapita_aa64||0), 0.001); end
  def test_costpercapita_ab64; assert_in_delta(0, (worksheet.costpercapita_ab64||0), 0.001); end
  def test_costpercapita_ac64; assert_in_delta(0, (worksheet.costpercapita_ac64||0), 0.001); end
  def test_costpercapita_ad64; assert_in_delta(0, (worksheet.costpercapita_ad64||0), 0.001); end
  def test_costpercapita_ae64; assert_in_delta(0, (worksheet.costpercapita_ae64||0), 0.001); end
  def test_costpercapita_af64; assert_in_delta(0, (worksheet.costpercapita_af64||0), 0.001); end
  def test_costpercapita_ag64; assert_in_delta(0, (worksheet.costpercapita_ag64||0), 0.001); end
  def test_costpercapita_av64; assert_in_delta(0.07, worksheet.costpercapita_av64, 0.001); end
  def test_costpercapita_aw64; assert_in_epsilon(25, worksheet.costpercapita_aw64, 0.001); end
  def test_costpercapita_bt64; assert_in_delta(0.11964347297262365, worksheet.costpercapita_bt64, 0.001); end
  def test_costpercapita_bu64; assert_in_delta(0.9079294892147076, worksheet.costpercapita_bu64, 0.001); end
  def test_costpercapita_bv64; assert_in_epsilon(6.882570772713317, worksheet.costpercapita_bv64, 0.001); end
  def test_costpercapita_bw64; assert_in_epsilon(23.680909298926505, worksheet.costpercapita_bw64, 0.001); end
  def test_costpercapita_bx64; assert_in_epsilon(23.123089002834337, worksheet.costpercapita_bx64, 0.001); end
  def test_costpercapita_by64; assert_in_epsilon(22.61845148538612, worksheet.costpercapita_by64, 0.001); end
  def test_costpercapita_bz64; assert_in_epsilon(33.87309892901866, worksheet.costpercapita_bz64, 0.001); end
  def test_costpercapita_ca64; assert_in_epsilon(33.102252909243724, worksheet.costpercapita_ca64, 0.001); end
  def test_costpercapita_bs64; assert_in_delta(0, (worksheet.costpercapita_bs64||0), 0.001); end
  def test_costpercapita_cd64; assert_in_epsilon(268.9120829631143, worksheet.costpercapita_cd64, 0.001); end
  def test_costpercapita_cg64; assert_in_delta(-0.12007956030486616, worksheet.costpercapita_cg64, 0.001); end
  def test_costpercapita_ch64; assert_in_delta(-0.7019587985059696, worksheet.costpercapita_ch64, 0.001); end
  def test_costpercapita_ci64; assert_in_epsilon(-5.274635674691457, worksheet.costpercapita_ci64, 0.001); end
  def test_costpercapita_cj64; assert_in_epsilon(-11.675567818838134, worksheet.costpercapita_cj64, 0.001); end
  def test_costpercapita_ck64; assert_in_epsilon(17.081850859620264, worksheet.costpercapita_ck64, 0.001); end
  def test_costpercapita_cl64; assert_in_epsilon(16.549630691534293, worksheet.costpercapita_cl64, 0.001); end
  def test_costpercapita_cm64; assert_in_epsilon(26.894287504522037, worksheet.costpercapita_cm64, 0.001); end
  def test_costpercapita_cn64; assert_in_epsilon(18.448057620547747, worksheet.costpercapita_cn64, 0.001); end
  def test_costpercapita_cf64; assert_in_delta(0, (worksheet.costpercapita_cf64||0), 0.001); end
  def test_costpercapita_cq64; assert_in_epsilon(83.32804010316426, worksheet.costpercapita_cq64, 0.001); end
  def test_costpercapita_aj64; assert_in_delta(0.2397230332774898, worksheet.costpercapita_aj64, 0.001); end
  def test_costpercapita_ak64; assert_in_epsilon(1.6098882877206773, worksheet.costpercapita_ak64, 0.001); end
  def test_costpercapita_al64; assert_in_epsilon(12.157206447404775, worksheet.costpercapita_al64, 0.001); end
  def test_costpercapita_am64; assert_in_epsilon(35.35647711776464, worksheet.costpercapita_am64, 0.001); end
  def test_costpercapita_an64; assert_in_epsilon(6.041238143214075, worksheet.costpercapita_an64, 0.001); end
  def test_costpercapita_ao64; assert_in_epsilon(6.068820793851829, worksheet.costpercapita_ao64, 0.001); end
  def test_costpercapita_ap64; assert_in_epsilon(6.978811424496622, worksheet.costpercapita_ap64, 0.001); end
  def test_costpercapita_aq64; assert_in_epsilon(14.654195288695979, worksheet.costpercapita_aq64, 0.001); end
  def test_costpercapita_ai64; assert_in_delta(0, (worksheet.costpercapita_ai64||0), 0.001); end
  def test_costpercapita_at64; assert_in_epsilon(185.58404285995005, worksheet.costpercapita_at64, 0.001); end
  def test_costpercapita_cr64; assert_equal("ok", worksheet.costpercapita_cr64); end
  def test_costpercapita_a65; assert_equal("IV.a", worksheet.costpercapita_a65); end
  def test_costpercapita_b65; assert_equal("Distributed solar PV", worksheet.costpercapita_b65); end
  def test_costpercapita_c65; assert_equal("Electricity", worksheet.costpercapita_c65); end
  def test_costpercapita_y65; assert_in_delta(0, (worksheet.costpercapita_y65||0), 0.001); end
  def test_costpercapita_z65; assert_in_delta(0, (worksheet.costpercapita_z65||0), 0.001); end
  def test_costpercapita_aa65; assert_in_delta(0, (worksheet.costpercapita_aa65||0), 0.001); end
  def test_costpercapita_ab65; assert_in_delta(0, (worksheet.costpercapita_ab65||0), 0.001); end
  def test_costpercapita_ac65; assert_in_delta(0, (worksheet.costpercapita_ac65||0), 0.001); end
  def test_costpercapita_ad65; assert_in_delta(0, (worksheet.costpercapita_ad65||0), 0.001); end
  def test_costpercapita_ae65; assert_in_delta(0, (worksheet.costpercapita_ae65||0), 0.001); end
  def test_costpercapita_af65; assert_in_delta(0, (worksheet.costpercapita_af65||0), 0.001); end
  def test_costpercapita_ag65; assert_in_delta(0, (worksheet.costpercapita_ag65||0), 0.001); end
  def test_costpercapita_av65; assert_in_delta(0.07, worksheet.costpercapita_av65, 0.001); end
  def test_costpercapita_aw65; assert_in_epsilon(25, worksheet.costpercapita_aw65, 0.001); end
  def test_costpercapita_bt65; assert_in_epsilon(160.09842813238023, worksheet.costpercapita_bt65, 0.001); end
  def test_costpercapita_bu65; assert_in_epsilon(244.93378630906898, worksheet.costpercapita_bu65, 0.001); end
  def test_costpercapita_bv65; assert_in_epsilon(319.9091863724084, worksheet.costpercapita_bv65, 0.001); end
  def test_costpercapita_bw65; assert_in_epsilon(386.87406287986016, worksheet.costpercapita_bw65, 0.001); end
  def test_costpercapita_bx65; assert_in_epsilon(433.77355680333983, worksheet.costpercapita_bx65, 0.001); end
  def test_costpercapita_by65; assert_in_epsilon(504.28576175597794, worksheet.costpercapita_by65, 0.001); end
  def test_costpercapita_bz65; assert_in_epsilon(694.3854489155984, worksheet.costpercapita_bz65, 0.001); end
  def test_costpercapita_ca65; assert_in_epsilon(849.9502361364264, worksheet.costpercapita_ca65, 0.001); end
  def test_costpercapita_bs65; assert_in_epsilon(64.04030166059455, worksheet.costpercapita_bs65, 0.001); end
  def test_costpercapita_cd65; assert_in_epsilon(7542.8591707748055, worksheet.costpercapita_cd65, 0.001); end
  def test_costpercapita_cg65; assert_in_epsilon(-68.70769734861021, worksheet.costpercapita_cg65, 0.001); end
  def test_costpercapita_ch65; assert_in_epsilon(34.990559020010245, worksheet.costpercapita_ch65, 0.001); end
  def test_costpercapita_ci65; assert_in_epsilon(127.48661663244863, worksheet.costpercapita_ci65, 0.001); end
  def test_costpercapita_cj65; assert_in_epsilon(210.4275225067016, worksheet.costpercapita_cj65, 0.001); end
  def test_costpercapita_ck65; assert_in_epsilon(174.73031784813688, worksheet.costpercapita_ck65, 0.001); end
  def test_costpercapita_cl65; assert_in_epsilon(119.03493029291262, worksheet.costpercapita_cl65, 0.001); end
  def test_costpercapita_cm65; assert_in_epsilon(207.79325589869043, worksheet.costpercapita_cm65, 0.001); end
  def test_costpercapita_cn65; assert_in_epsilon(285.15026345966794, worksheet.costpercapita_cn65, 0.001); end
  def test_costpercapita_cf65; assert_in_epsilon(-184.72602572680492, worksheet.costpercapita_cf65, 0.001); end
  def test_costpercapita_cq65; assert_in_epsilon(1838.3059090932693, worksheet.costpercapita_cq65, 0.001); end
  def test_costpercapita_aj65; assert_in_epsilon(228.80612548099043, worksheet.costpercapita_aj65, 0.001); end
  def test_costpercapita_ak65; assert_in_epsilon(209.94322728905874, worksheet.costpercapita_ak65, 0.001); end
  def test_costpercapita_al65; assert_in_epsilon(192.42256973995975, worksheet.costpercapita_al65, 0.001); end
  def test_costpercapita_am65; assert_in_epsilon(176.44654037315857, worksheet.costpercapita_am65, 0.001); end
  def test_costpercapita_an65; assert_in_epsilon(259.043238955203, worksheet.costpercapita_an65, 0.001); end
  def test_costpercapita_ao65; assert_in_epsilon(385.2508314630653, worksheet.costpercapita_ao65, 0.001); end
  def test_costpercapita_ap65; assert_in_epsilon(486.592193016908, worksheet.costpercapita_ap65, 0.001); end
  def test_costpercapita_aq65; assert_in_epsilon(564.7999726767584, worksheet.costpercapita_aq65, 0.001); end
  def test_costpercapita_ai65; assert_in_epsilon(248.76632738739946, worksheet.costpercapita_ai65, 0.001); end
  def test_costpercapita_at65; assert_in_epsilon(5704.553261681537, worksheet.costpercapita_at65, 0.001); end
  def test_costpercapita_cr65; assert_equal("ok", worksheet.costpercapita_cr65); end
  def test_costpercapita_a66; assert_equal("IV.b", worksheet.costpercapita_a66); end
  def test_costpercapita_b66; assert_equal("Distributed solar thermal", worksheet.costpercapita_b66); end
  def test_costpercapita_c66; assert_equal("Buildings", worksheet.costpercapita_c66); end
  def test_costpercapita_y66; assert_in_delta(0, (worksheet.costpercapita_y66||0), 0.001); end
  def test_costpercapita_z66; assert_in_delta(0, (worksheet.costpercapita_z66||0), 0.001); end
  def test_costpercapita_aa66; assert_in_delta(0, (worksheet.costpercapita_aa66||0), 0.001); end
  def test_costpercapita_ab66; assert_in_delta(0, (worksheet.costpercapita_ab66||0), 0.001); end
  def test_costpercapita_ac66; assert_in_delta(0, (worksheet.costpercapita_ac66||0), 0.001); end
  def test_costpercapita_ad66; assert_in_delta(0, (worksheet.costpercapita_ad66||0), 0.001); end
  def test_costpercapita_ae66; assert_in_delta(0, (worksheet.costpercapita_ae66||0), 0.001); end
  def test_costpercapita_af66; assert_in_delta(0, (worksheet.costpercapita_af66||0), 0.001); end
  def test_costpercapita_ag66; assert_in_delta(0, (worksheet.costpercapita_ag66||0), 0.001); end
  def test_costpercapita_av66; assert_in_delta(0.07, worksheet.costpercapita_av66, 0.001); end
  def test_costpercapita_aw66; assert_in_epsilon(20, worksheet.costpercapita_aw66, 0.001); end
  def test_costpercapita_bt66; assert_in_epsilon(26.052259378018867, worksheet.costpercapita_bt66, 0.001); end
  def test_costpercapita_bu66; assert_in_epsilon(59.96906396135028, worksheet.costpercapita_bu66, 0.001); end
  def test_costpercapita_bv66; assert_in_epsilon(106.2548851070414, worksheet.costpercapita_bv66, 0.001); end
  def test_costpercapita_bw66; assert_in_epsilon(167.69725848175742, worksheet.costpercapita_bw66, 0.001); end
  def test_costpercapita_bx66; assert_in_epsilon(238.63563336174215, worksheet.costpercapita_bx66, 0.001); end
  def test_costpercapita_by66; assert_in_epsilon(321.8079625325526, worksheet.costpercapita_by66, 0.001); end
  def test_costpercapita_bz66; assert_in_epsilon(481.26132445816313, worksheet.costpercapita_bz66, 0.001); end
  def test_costpercapita_ca66; assert_in_epsilon(517.746553865545, worksheet.costpercapita_ca66, 0.001); end
  def test_costpercapita_bs66; assert_in_epsilon(4.814267174354616, worksheet.costpercapita_bs66, 0.001); end
  def test_costpercapita_cd66; assert_in_epsilon(3569.532487543438, worksheet.costpercapita_cd66, 0.001); end
  def test_costpercapita_cg66; assert_in_epsilon(-19.283220645833246, worksheet.costpercapita_cg66, 0.001); end
  def test_costpercapita_ch66; assert_in_epsilon(-13.70109107740942, worksheet.costpercapita_ch66, 0.001); end
  def test_costpercapita_ci66; assert_in_epsilon(4.250055053374108, worksheet.costpercapita_ci66, 0.001); end
  def test_costpercapita_cj66; assert_in_epsilon(22.36914614179007, worksheet.costpercapita_cj66, 0.001); end
  def test_costpercapita_ck66; assert_in_epsilon(39.602507036913956, worksheet.costpercapita_ck66, 0.001); end
  def test_costpercapita_cl66; assert_in_epsilon(68.44206756182973, worksheet.costpercapita_cl66, 0.001); end
  def test_costpercapita_cm66; assert_in_epsilon(172.9943792442731, worksheet.costpercapita_cm66, 0.001); end
  def test_costpercapita_cn66; assert_in_epsilon(154.27593684774482, worksheet.costpercapita_cn66, 0.001); end
  def test_costpercapita_cf66; assert_in_epsilon(-12.18653783458993, worksheet.costpercapita_cf66, 0.001); end
  def test_costpercapita_cq66; assert_in_epsilon(603.0005365520584, worksheet.costpercapita_cq66, 0.001); end
  def test_costpercapita_aj66; assert_in_epsilon(45.335480023852114, worksheet.costpercapita_aj66, 0.001); end
  def test_costpercapita_ak66; assert_in_epsilon(73.6701550387597, worksheet.costpercapita_ak66, 0.001); end
  def test_costpercapita_al66; assert_in_epsilon(102.00483005366729, worksheet.costpercapita_al66, 0.001); end
  def test_costpercapita_am66; assert_in_epsilon(145.32811233996736, worksheet.costpercapita_am66, 0.001); end
  def test_costpercapita_an66; assert_in_epsilon(199.0331263248282, worksheet.costpercapita_an66, 0.001); end
  def test_costpercapita_ao66; assert_in_epsilon(253.36589497072285, worksheet.costpercapita_ao66, 0.001); end
  def test_costpercapita_ap66; assert_in_epsilon(308.26694521389004, worksheet.costpercapita_ap66, 0.001); end
  def test_costpercapita_aq66; assert_in_epsilon(363.4706170178002, worksheet.costpercapita_aq66, 0.001); end
  def test_costpercapita_ai66; assert_in_epsilon(17.000805008944546, worksheet.costpercapita_ai66, 0.001); end
  def test_costpercapita_at66; assert_in_epsilon(2966.5319509913797, worksheet.costpercapita_at66, 0.001); end
  def test_costpercapita_cr66; assert_equal("ok", worksheet.costpercapita_cr66); end
  def test_costpercapita_a67; assert_equal("IV.c", worksheet.costpercapita_a67); end
  def test_costpercapita_b67; assert_equal("Micro wind", worksheet.costpercapita_b67); end
  def test_costpercapita_c67; assert_equal("Electricity", worksheet.costpercapita_c67); end
  def test_costpercapita_y67; assert_in_delta(0, (worksheet.costpercapita_y67||0), 0.001); end
  def test_costpercapita_z67; assert_in_delta(0, (worksheet.costpercapita_z67||0), 0.001); end
  def test_costpercapita_aa67; assert_in_delta(0, (worksheet.costpercapita_aa67||0), 0.001); end
  def test_costpercapita_ab67; assert_in_delta(0, (worksheet.costpercapita_ab67||0), 0.001); end
  def test_costpercapita_ac67; assert_in_delta(0, (worksheet.costpercapita_ac67||0), 0.001); end
  def test_costpercapita_ad67; assert_in_delta(0, (worksheet.costpercapita_ad67||0), 0.001); end
  def test_costpercapita_ae67; assert_in_delta(0, (worksheet.costpercapita_ae67||0), 0.001); end
  def test_costpercapita_af67; assert_in_delta(0, (worksheet.costpercapita_af67||0), 0.001); end
  def test_costpercapita_ag67; assert_in_delta(0, (worksheet.costpercapita_ag67||0), 0.001); end
  def test_costpercapita_av67; assert_in_delta(0.07, worksheet.costpercapita_av67, 0.001); end
  def test_costpercapita_aw67; assert_in_epsilon(25, worksheet.costpercapita_aw67, 0.001); end
  def test_costpercapita_bt67; assert_in_epsilon(2.773541902652489, worksheet.costpercapita_bt67, 0.001); end
  def test_costpercapita_bu67; assert_in_epsilon(4.206621513666477, worksheet.costpercapita_bu67, 0.001); end
  def test_costpercapita_bv67; assert_in_epsilon(4.076369894637778, worksheet.costpercapita_bv67, 0.001); end
  def test_costpercapita_bw67; assert_in_epsilon(3.9650028450387396, worksheet.costpercapita_bw67, 0.001); end
  def test_costpercapita_bx67; assert_in_epsilon(3.767809910644366, worksheet.costpercapita_bx67, 0.001); end
  def test_costpercapita_by67; assert_in_epsilon(1.7524778647691428, worksheet.costpercapita_by67, 0.001); end
  def test_costpercapita_bz67; assert_in_delta(0.5911902069494825, worksheet.costpercapita_bz67, 0.001); end
  def test_costpercapita_ca67; assert_in_delta(0.5801575718383206, worksheet.costpercapita_ca67, 0.001); end
  def test_costpercapita_bs67; assert_in_delta(0.14226524106873334, worksheet.costpercapita_bs67, 0.001); end
  def test_costpercapita_cd67; assert_in_epsilon(61.629379330193665, worksheet.costpercapita_cd67, 0.001); end
  def test_costpercapita_cg67; assert_in_epsilon(-2.8388472561832185, worksheet.costpercapita_cg67, 0.001); end
  def test_costpercapita_ch67; assert_in_delta(0.5631277961680573, worksheet.costpercapita_ch67, 0.001); end
  def test_costpercapita_ci67; assert_in_epsilon(3.427402607716681, worksheet.costpercapita_ci67, 0.001); end
  def test_costpercapita_cj67; assert_in_epsilon(3.3337654437508792, worksheet.costpercapita_cj67, 0.001); end
  def test_costpercapita_ck67; assert_in_epsilon(3.1514417455689347, worksheet.costpercapita_ck67, 0.001); end
  def test_costpercapita_cl67; assert_in_epsilon(1.149254605260181, worksheet.costpercapita_cl67, 0.001); end
  def test_costpercapita_cm67; assert_in_delta(0, (worksheet.costpercapita_cm67||0), 0.001); end
  def test_costpercapita_cn67; assert_in_delta(0, (worksheet.costpercapita_cn67||0), 0.001); end
  def test_costpercapita_cf67; assert_in_delta(-0.34778426437776494, worksheet.costpercapita_cf67, 0.001); end
  def test_costpercapita_cq67; assert_in_epsilon(17.018103769970477, worksheet.costpercapita_cq67, 0.001); end
  def test_costpercapita_aj67; assert_in_epsilon(5.6123891588357075, worksheet.costpercapita_aj67, 0.001); end
  def test_costpercapita_ak67; assert_in_epsilon(3.6434937174984188, worksheet.costpercapita_ak67, 0.001); end
  def test_costpercapita_al67; assert_in_delta(0.6489672869210963, worksheet.costpercapita_al67, 0.001); end
  def test_costpercapita_am67; assert_in_delta(0.6312374012878602, worksheet.costpercapita_am67, 0.001); end
  def test_costpercapita_an67; assert_in_delta(0.6163681650754312, worksheet.costpercapita_an67, 0.001); end
  def test_costpercapita_ao67; assert_in_delta(0.6032232595089615, worksheet.costpercapita_ao67, 0.001); end
  def test_costpercapita_ap67; assert_in_delta(0.5911902069494825, worksheet.costpercapita_ap67, 0.001); end
  def test_costpercapita_aq67; assert_in_delta(0.5801575718383206, worksheet.costpercapita_aq67, 0.001); end
  def test_costpercapita_ai67; assert_in_delta(0.49004950544649833, worksheet.costpercapita_ai67, 0.001); end
  def test_costpercapita_at67; assert_in_epsilon(44.61127556022319, worksheet.costpercapita_at67, 0.001); end
  def test_costpercapita_cr67; assert_equal("ok", worksheet.costpercapita_cr67); end
  def test_costpercapita_a68; assert_equal("V.a", worksheet.costpercapita_a68); end
  def test_costpercapita_b68; assert_equal("Biomatter to fuel conversion", worksheet.costpercapita_b68); end
  def test_costpercapita_c68; assert_equal("Bioenergy", worksheet.costpercapita_c68); end
  def test_costpercapita_y68; assert_in_delta(0, (worksheet.costpercapita_y68||0), 0.001); end
  def test_costpercapita_z68; assert_in_delta(0, (worksheet.costpercapita_z68||0), 0.001); end
  def test_costpercapita_aa68; assert_in_delta(0, (worksheet.costpercapita_aa68||0), 0.001); end
  def test_costpercapita_ab68; assert_in_delta(0, (worksheet.costpercapita_ab68||0), 0.001); end
  def test_costpercapita_ac68; assert_in_delta(0, (worksheet.costpercapita_ac68||0), 0.001); end
  def test_costpercapita_ad68; assert_in_delta(0, (worksheet.costpercapita_ad68||0), 0.001); end
  def test_costpercapita_ae68; assert_in_delta(0, (worksheet.costpercapita_ae68||0), 0.001); end
  def test_costpercapita_af68; assert_in_delta(0, (worksheet.costpercapita_af68||0), 0.001); end
  def test_costpercapita_ag68; assert_in_delta(0, (worksheet.costpercapita_ag68||0), 0.001); end
  def test_costpercapita_av68; assert_in_delta(0.07, worksheet.costpercapita_av68, 0.001); end
  def test_costpercapita_aw68; assert_in_epsilon(30, worksheet.costpercapita_aw68, 0.001); end
  def test_costpercapita_bt68; assert_in_epsilon(36.05177709625406, worksheet.costpercapita_bt68, 0.001); end
  def test_costpercapita_bu68; assert_in_epsilon(56.26444334291246, worksheet.costpercapita_bu68, 0.001); end
  def test_costpercapita_bv68; assert_in_epsilon(73.95401297428876, worksheet.costpercapita_bv68, 0.001); end
  def test_costpercapita_bw68; assert_in_epsilon(87.85934331900388, worksheet.costpercapita_bw68, 0.001); end
  def test_costpercapita_bx68; assert_in_epsilon(102.66911161591187, worksheet.costpercapita_bx68, 0.001); end
  def test_costpercapita_by68; assert_in_epsilon(117.65283922728314, worksheet.costpercapita_by68, 0.001); end
  def test_costpercapita_bz68; assert_in_epsilon(145.4920302431974, worksheet.costpercapita_bz68, 0.001); end
  def test_costpercapita_ca68; assert_in_epsilon(160.54514623443782, worksheet.costpercapita_ca68, 0.001); end
  def test_costpercapita_bs68; assert_in_epsilon(15.376723563788033, worksheet.costpercapita_bs68, 0.001); end
  def test_costpercapita_cd68; assert_in_epsilon(1671.254566320989, worksheet.costpercapita_cd68, 0.001); end
  def test_costpercapita_cg68; assert_in_epsilon(-11.276709787594722, worksheet.costpercapita_cg68, 0.001); end
  def test_costpercapita_ch68; assert_in_epsilon(3.824510978517796, worksheet.costpercapita_ch68, 0.001); end
  def test_costpercapita_ci68; assert_in_epsilon(13.323787289306837, worksheet.costpercapita_ci68, 0.001); end
  def test_costpercapita_cj68; assert_in_epsilon(19.83122527278089, worksheet.costpercapita_cj68, 0.001); end
  def test_costpercapita_ck68; assert_in_epsilon(25.122936187113243, worksheet.costpercapita_ck68, 0.001); end
  def test_costpercapita_cl68; assert_in_epsilon(23.01994137924572, worksheet.costpercapita_cl68, 0.001); end
  def test_costpercapita_cm68; assert_in_epsilon(23.365954093660267, worksheet.costpercapita_cm68, 0.001); end
  def test_costpercapita_cn68; assert_in_epsilon(51.66983330800542, worksheet.costpercapita_cn68, 0.001); end
  def test_costpercapita_cf68; assert_in_epsilon(-19.422460531424935, worksheet.costpercapita_cf68, 0.001); end
  def test_costpercapita_cq68; assert_in_epsilon(234.81287740689956, worksheet.costpercapita_cq68, 0.001); end
  def test_costpercapita_aj68; assert_in_epsilon(47.328486883848775, worksheet.costpercapita_aj68, 0.001); end
  def test_costpercapita_ak68; assert_in_epsilon(52.439932364394664, worksheet.costpercapita_ak68, 0.001); end
  def test_costpercapita_al68; assert_in_epsilon(60.63022568498193, worksheet.costpercapita_al68, 0.001); end
  def test_costpercapita_am68; assert_in_epsilon(68.02811804622299, worksheet.costpercapita_am68, 0.001); end
  def test_costpercapita_an68; assert_in_epsilon(77.54617542879863, worksheet.costpercapita_an68, 0.001); end
  def test_costpercapita_ao68; assert_in_epsilon(94.6328978480374, worksheet.costpercapita_ao68, 0.001); end
  def test_costpercapita_ap68; assert_in_epsilon(122.12607614953716, worksheet.costpercapita_ap68, 0.001); end
  def test_costpercapita_aq68; assert_in_epsilon(108.87531292643237, worksheet.costpercapita_aq68, 0.001); end
  def test_costpercapita_ai68; assert_in_epsilon(34.79918409521297, worksheet.costpercapita_ai68, 0.001); end
  def test_costpercapita_at68; assert_in_epsilon(1436.4416889140896, worksheet.costpercapita_at68, 0.001); end
  def test_costpercapita_cr68; assert_equal("ok", worksheet.costpercapita_cr68); end
  def test_costpercapita_a69; assert_equal("V.b", worksheet.costpercapita_a69); end
  def test_costpercapita_b69; assert_equal("Bioenergy imports", worksheet.costpercapita_b69); end
  def test_costpercapita_c69; assert_equal("Bioenergy", worksheet.costpercapita_c69); end
  def test_costpercapita_e69; assert_in_delta(0, (worksheet.costpercapita_e69||0), 0.001); end
  def test_costpercapita_f69; assert_in_delta(0, (worksheet.costpercapita_f69||0), 0.001); end
  def test_costpercapita_g69; assert_in_delta(0, (worksheet.costpercapita_g69||0), 0.001); end
  def test_costpercapita_h69; assert_in_delta(0, (worksheet.costpercapita_h69||0), 0.001); end
  def test_costpercapita_i69; assert_in_delta(0, (worksheet.costpercapita_i69||0), 0.001); end
  def test_costpercapita_j69; assert_in_delta(0, (worksheet.costpercapita_j69||0), 0.001); end
  def test_costpercapita_k69; assert_in_delta(0, (worksheet.costpercapita_k69||0), 0.001); end
  def test_costpercapita_l69; assert_in_delta(0, (worksheet.costpercapita_l69||0), 0.001); end
  def test_costpercapita_m69; assert_in_delta(0, (worksheet.costpercapita_m69||0), 0.001); end
  def test_costpercapita_o69; assert_in_delta(0, (worksheet.costpercapita_o69||0), 0.001); end
  def test_costpercapita_p69; assert_in_delta(0, (worksheet.costpercapita_p69||0), 0.001); end
  def test_costpercapita_q69; assert_in_delta(0, (worksheet.costpercapita_q69||0), 0.001); end
  def test_costpercapita_r69; assert_in_delta(0, (worksheet.costpercapita_r69||0), 0.001); end
  def test_costpercapita_s69; assert_in_delta(0, (worksheet.costpercapita_s69||0), 0.001); end
  def test_costpercapita_t69; assert_in_delta(0, (worksheet.costpercapita_t69||0), 0.001); end
  def test_costpercapita_u69; assert_in_delta(0, (worksheet.costpercapita_u69||0), 0.001); end
  def test_costpercapita_v69; assert_in_delta(0, (worksheet.costpercapita_v69||0), 0.001); end
  def test_costpercapita_w69; assert_in_delta(0, (worksheet.costpercapita_w69||0), 0.001); end
  def test_costpercapita_av69; assert_in_delta(0, (worksheet.costpercapita_av69||0), 0.001); end
  def test_costpercapita_aw69; assert_in_epsilon(5, worksheet.costpercapita_aw69, 0.001); end
  def test_costpercapita_ay69; assert_in_delta(0, (worksheet.costpercapita_ay69||0), 0.001); end
  def test_costpercapita_az69; assert_in_delta(0, (worksheet.costpercapita_az69||0), 0.001); end
  def test_costpercapita_ba69; assert_in_delta(0, (worksheet.costpercapita_ba69||0), 0.001); end
  def test_costpercapita_bb69; assert_in_delta(0, (worksheet.costpercapita_bb69||0), 0.001); end
  def test_costpercapita_bc69; assert_in_delta(0, (worksheet.costpercapita_bc69||0), 0.001); end
  def test_costpercapita_bd69; assert_in_delta(0, (worksheet.costpercapita_bd69||0), 0.001); end
  def test_costpercapita_be69; assert_in_delta(0, (worksheet.costpercapita_be69||0), 0.001); end
  def test_costpercapita_bf69; assert_in_delta(0, (worksheet.costpercapita_bf69||0), 0.001); end
  def test_costpercapita_bg69; assert_in_delta(0, (worksheet.costpercapita_bg69||0), 0.001); end
  def test_costpercapita_bi69; assert_in_delta(0, (worksheet.costpercapita_bi69||0), 0.001); end
  def test_costpercapita_bj69; assert_in_delta(0, (worksheet.costpercapita_bj69||0), 0.001); end
  def test_costpercapita_bk69; assert_in_delta(0, (worksheet.costpercapita_bk69||0), 0.001); end
  def test_costpercapita_bl69; assert_in_delta(0, (worksheet.costpercapita_bl69||0), 0.001); end
  def test_costpercapita_bm69; assert_in_delta(0, (worksheet.costpercapita_bm69||0), 0.001); end
  def test_costpercapita_bn69; assert_in_delta(0, (worksheet.costpercapita_bn69||0), 0.001); end
  def test_costpercapita_bo69; assert_in_delta(0, (worksheet.costpercapita_bo69||0), 0.001); end
  def test_costpercapita_bp69; assert_in_delta(0, (worksheet.costpercapita_bp69||0), 0.001); end
  def test_costpercapita_bq69; assert_in_delta(0, (worksheet.costpercapita_bq69||0), 0.001); end
  def test_costpercapita_cf69; assert_in_delta(0, (worksheet.costpercapita_cf69||0), 0.001); end
  def test_costpercapita_cg69; assert_in_delta(0, (worksheet.costpercapita_cg69||0), 0.001); end
  def test_costpercapita_ch69; assert_in_delta(0, (worksheet.costpercapita_ch69||0), 0.001); end
  def test_costpercapita_ci69; assert_in_delta(0, (worksheet.costpercapita_ci69||0), 0.001); end
  def test_costpercapita_cj69; assert_in_delta(0, (worksheet.costpercapita_cj69||0), 0.001); end
  def test_costpercapita_ck69; assert_in_delta(0, (worksheet.costpercapita_ck69||0), 0.001); end
  def test_costpercapita_cl69; assert_in_delta(0, (worksheet.costpercapita_cl69||0), 0.001); end
  def test_costpercapita_cm69; assert_in_delta(0, (worksheet.costpercapita_cm69||0), 0.001); end
  def test_costpercapita_cn69; assert_in_delta(0, (worksheet.costpercapita_cn69||0), 0.001); end
  def test_costpercapita_cp69; assert_in_delta(0, (worksheet.costpercapita_cp69||0), 0.001); end
  def test_costpercapita_cq69; assert_in_delta(0, (worksheet.costpercapita_cq69||0), 0.001); end
  def test_costpercapita_bt69; assert_in_epsilon(2.820209521628868, worksheet.costpercapita_bt69, 0.001); end
  def test_costpercapita_bu69; assert_in_epsilon(2.3588756730261733, worksheet.costpercapita_bu69, 0.001); end
  def test_costpercapita_bv69; assert_in_epsilon(1.9215732372325443, worksheet.costpercapita_bv69, 0.001); end
  def test_costpercapita_bw69; assert_in_epsilon(1.5082627145448928, worksheet.costpercapita_bw69, 0.001); end
  def test_costpercapita_bx69; assert_in_epsilon(1.1140728931626787, worksheet.costpercapita_bx69, 0.001); end
  def test_costpercapita_by69; assert_in_delta(0.7330884434756474, worksheet.costpercapita_by69, 0.001); end
  def test_costpercapita_bz69; assert_in_delta(0.3622767675438072, worksheet.costpercapita_bz69, 0.001); end
  def test_costpercapita_ca69; assert_in_delta(0, (worksheet.costpercapita_ca69||0), 0.001); end
  def test_costpercapita_bs69; assert_in_epsilon(3.3035069891591418, worksheet.costpercapita_bs69, 0.001); end
  def test_costpercapita_cd69; assert_in_epsilon(37.28201099422924, worksheet.costpercapita_cd69, 0.001); end
  def test_costpercapita_aj69; assert_in_epsilon(2.820209521628868, worksheet.costpercapita_aj69, 0.001); end
  def test_costpercapita_ak69; assert_in_epsilon(2.3588756730261733, worksheet.costpercapita_ak69, 0.001); end
  def test_costpercapita_al69; assert_in_epsilon(1.9215732372325443, worksheet.costpercapita_al69, 0.001); end
  def test_costpercapita_am69; assert_in_epsilon(1.5082627145448928, worksheet.costpercapita_am69, 0.001); end
  def test_costpercapita_an69; assert_in_epsilon(1.1140728931626787, worksheet.costpercapita_an69, 0.001); end
  def test_costpercapita_ao69; assert_in_delta(0.7330884434756474, worksheet.costpercapita_ao69, 0.001); end
  def test_costpercapita_ap69; assert_in_delta(0.3622767675438072, worksheet.costpercapita_ap69, 0.001); end
  def test_costpercapita_aq69; assert_in_delta(0, (worksheet.costpercapita_aq69||0), 0.001); end
  def test_costpercapita_ai69; assert_in_epsilon(3.3035069891591418, worksheet.costpercapita_ai69, 0.001); end
  def test_costpercapita_at69; assert_in_epsilon(37.28201099422924, worksheet.costpercapita_at69, 0.001); end
  def test_costpercapita_cr69; assert_equal("ok", worksheet.costpercapita_cr69); end
  def test_costpercapita_a70; assert_equal("VI.a.Bioenergy", worksheet.costpercapita_a70); end
  def test_costpercapita_b70; assert_equal("Agriculture and land use", worksheet.costpercapita_b70); end
  def test_costpercapita_c70; assert_equal("Bioenergy", worksheet.costpercapita_c70); end
  def test_costpercapita_e70; assert_in_delta(0, (worksheet.costpercapita_e70||0), 0.001); end
  def test_costpercapita_f70; assert_in_delta(0, (worksheet.costpercapita_f70||0), 0.001); end
  def test_costpercapita_g70; assert_in_delta(0, (worksheet.costpercapita_g70||0), 0.001); end
  def test_costpercapita_h70; assert_in_delta(0, (worksheet.costpercapita_h70||0), 0.001); end
  def test_costpercapita_i70; assert_in_delta(0, (worksheet.costpercapita_i70||0), 0.001); end
  def test_costpercapita_j70; assert_in_delta(0, (worksheet.costpercapita_j70||0), 0.001); end
  def test_costpercapita_k70; assert_in_delta(0, (worksheet.costpercapita_k70||0), 0.001); end
  def test_costpercapita_l70; assert_in_delta(0, (worksheet.costpercapita_l70||0), 0.001); end
  def test_costpercapita_m70; assert_in_delta(0, (worksheet.costpercapita_m70||0), 0.001); end
  def test_costpercapita_o70; assert_in_delta(0, (worksheet.costpercapita_o70||0), 0.001); end
  def test_costpercapita_p70; assert_in_delta(0, (worksheet.costpercapita_p70||0), 0.001); end
  def test_costpercapita_q70; assert_in_delta(0, (worksheet.costpercapita_q70||0), 0.001); end
  def test_costpercapita_r70; assert_in_delta(0, (worksheet.costpercapita_r70||0), 0.001); end
  def test_costpercapita_s70; assert_in_delta(0, (worksheet.costpercapita_s70||0), 0.001); end
  def test_costpercapita_t70; assert_in_delta(0, (worksheet.costpercapita_t70||0), 0.001); end
  def test_costpercapita_u70; assert_in_delta(0, (worksheet.costpercapita_u70||0), 0.001); end
  def test_costpercapita_v70; assert_in_delta(0, (worksheet.costpercapita_v70||0), 0.001); end
  def test_costpercapita_w70; assert_in_delta(0, (worksheet.costpercapita_w70||0), 0.001); end
  def test_costpercapita_av70; assert_in_delta(0, (worksheet.costpercapita_av70||0), 0.001); end
  def test_costpercapita_aw70; assert_in_epsilon(5, worksheet.costpercapita_aw70, 0.001); end
  def test_costpercapita_ay70; assert_in_delta(0, (worksheet.costpercapita_ay70||0), 0.001); end
  def test_costpercapita_az70; assert_in_delta(0, (worksheet.costpercapita_az70||0), 0.001); end
  def test_costpercapita_ba70; assert_in_delta(0, (worksheet.costpercapita_ba70||0), 0.001); end
  def test_costpercapita_bb70; assert_in_delta(0, (worksheet.costpercapita_bb70||0), 0.001); end
  def test_costpercapita_bc70; assert_in_delta(0, (worksheet.costpercapita_bc70||0), 0.001); end
  def test_costpercapita_bd70; assert_in_delta(0, (worksheet.costpercapita_bd70||0), 0.001); end
  def test_costpercapita_be70; assert_in_delta(0, (worksheet.costpercapita_be70||0), 0.001); end
  def test_costpercapita_bf70; assert_in_delta(0, (worksheet.costpercapita_bf70||0), 0.001); end
  def test_costpercapita_bg70; assert_in_delta(0, (worksheet.costpercapita_bg70||0), 0.001); end
  def test_costpercapita_bi70; assert_in_delta(0, (worksheet.costpercapita_bi70||0), 0.001); end
  def test_costpercapita_bj70; assert_in_delta(0, (worksheet.costpercapita_bj70||0), 0.001); end
  def test_costpercapita_bk70; assert_in_delta(0, (worksheet.costpercapita_bk70||0), 0.001); end
  def test_costpercapita_bl70; assert_in_delta(0, (worksheet.costpercapita_bl70||0), 0.001); end
  def test_costpercapita_bm70; assert_in_delta(0, (worksheet.costpercapita_bm70||0), 0.001); end
  def test_costpercapita_bn70; assert_in_delta(0, (worksheet.costpercapita_bn70||0), 0.001); end
  def test_costpercapita_bo70; assert_in_delta(0, (worksheet.costpercapita_bo70||0), 0.001); end
  def test_costpercapita_bp70; assert_in_delta(0, (worksheet.costpercapita_bp70||0), 0.001); end
  def test_costpercapita_bq70; assert_in_delta(0, (worksheet.costpercapita_bq70||0), 0.001); end
  def test_costpercapita_cf70; assert_in_delta(0, (worksheet.costpercapita_cf70||0), 0.001); end
  def test_costpercapita_cg70; assert_in_delta(0, (worksheet.costpercapita_cg70||0), 0.001); end
  def test_costpercapita_ch70; assert_in_delta(0, (worksheet.costpercapita_ch70||0), 0.001); end
  def test_costpercapita_ci70; assert_in_delta(0, (worksheet.costpercapita_ci70||0), 0.001); end
  def test_costpercapita_cj70; assert_in_delta(0, (worksheet.costpercapita_cj70||0), 0.001); end
  def test_costpercapita_ck70; assert_in_delta(0, (worksheet.costpercapita_ck70||0), 0.001); end
  def test_costpercapita_cl70; assert_in_delta(0, (worksheet.costpercapita_cl70||0), 0.001); end
  def test_costpercapita_cm70; assert_in_delta(0, (worksheet.costpercapita_cm70||0), 0.001); end
  def test_costpercapita_cn70; assert_in_delta(0, (worksheet.costpercapita_cn70||0), 0.001); end
  def test_costpercapita_cp70; assert_in_delta(0, (worksheet.costpercapita_cp70||0), 0.001); end
  def test_costpercapita_cq70; assert_in_delta(0, (worksheet.costpercapita_cq70||0), 0.001); end
  def test_costpercapita_bt70; assert_in_epsilon(23.55126220075827, worksheet.costpercapita_bt70, 0.001); end
  def test_costpercapita_bu70; assert_in_epsilon(47.19778129230474, worksheet.costpercapita_bu70, 0.001); end
  def test_costpercapita_bv70; assert_in_epsilon(65.5156310200444, worksheet.costpercapita_bv70, 0.001); end
  def test_costpercapita_bw70; assert_in_epsilon(82.11183616565074, worksheet.costpercapita_bw70, 0.001); end
  def test_costpercapita_bx70; assert_in_epsilon(97.0958742673156, worksheet.costpercapita_bx70, 0.001); end
  def test_costpercapita_by70; assert_in_epsilon(114.80235929946933, worksheet.costpercapita_by70, 0.001); end
  def test_costpercapita_bz70; assert_in_epsilon(134.25409961010615, worksheet.costpercapita_bz70, 0.001); end
  def test_costpercapita_ca70; assert_in_epsilon(154.66414427727284, worksheet.costpercapita_ca70, 0.001); end
  def test_costpercapita_bs70; assert_in_epsilon(7.687606383666691, worksheet.costpercapita_bs70, 0.001); end
  def test_costpercapita_cd70; assert_in_epsilon(1497.2424396995884, worksheet.costpercapita_cd70, 0.001); end
  def test_costpercapita_aj70; assert_in_epsilon(23.55126220075827, worksheet.costpercapita_aj70, 0.001); end
  def test_costpercapita_ak70; assert_in_epsilon(47.19778129230474, worksheet.costpercapita_ak70, 0.001); end
  def test_costpercapita_al70; assert_in_epsilon(65.5156310200444, worksheet.costpercapita_al70, 0.001); end
  def test_costpercapita_am70; assert_in_epsilon(82.11183616565074, worksheet.costpercapita_am70, 0.001); end
  def test_costpercapita_an70; assert_in_epsilon(97.0958742673156, worksheet.costpercapita_an70, 0.001); end
  def test_costpercapita_ao70; assert_in_epsilon(114.80235929946933, worksheet.costpercapita_ao70, 0.001); end
  def test_costpercapita_ap70; assert_in_epsilon(134.25409961010615, worksheet.costpercapita_ap70, 0.001); end
  def test_costpercapita_aq70; assert_in_epsilon(154.66414427727284, worksheet.costpercapita_aq70, 0.001); end
  def test_costpercapita_ai70; assert_in_epsilon(7.687606383666691, worksheet.costpercapita_ai70, 0.001); end
  def test_costpercapita_at70; assert_in_epsilon(1497.2424396995884, worksheet.costpercapita_at70, 0.001); end
  def test_costpercapita_cr70; assert_equal("ok", worksheet.costpercapita_cr70); end
  def test_costpercapita_a71; assert_equal("VI.a.Emissions", worksheet.costpercapita_a71); end
  def test_costpercapita_b71; assert_equal("Agriculture and land use", worksheet.costpercapita_b71); end
  def test_costpercapita_c71; assert_equal("Bioenergy", worksheet.costpercapita_c71); end
  def test_costpercapita_e71; assert_in_delta(0, (worksheet.costpercapita_e71||0), 0.001); end
  def test_costpercapita_f71; assert_in_delta(0, (worksheet.costpercapita_f71||0), 0.001); end
  def test_costpercapita_g71; assert_in_delta(0, (worksheet.costpercapita_g71||0), 0.001); end
  def test_costpercapita_h71; assert_in_delta(0, (worksheet.costpercapita_h71||0), 0.001); end
  def test_costpercapita_i71; assert_in_delta(0, (worksheet.costpercapita_i71||0), 0.001); end
  def test_costpercapita_j71; assert_in_delta(0, (worksheet.costpercapita_j71||0), 0.001); end
  def test_costpercapita_k71; assert_in_delta(0, (worksheet.costpercapita_k71||0), 0.001); end
  def test_costpercapita_l71; assert_in_delta(0, (worksheet.costpercapita_l71||0), 0.001); end
  def test_costpercapita_m71; assert_in_delta(0, (worksheet.costpercapita_m71||0), 0.001); end
  def test_costpercapita_y71; assert_in_delta(0, (worksheet.costpercapita_y71||0), 0.001); end
  def test_costpercapita_z71; assert_in_delta(0, (worksheet.costpercapita_z71||0), 0.001); end
  def test_costpercapita_aa71; assert_in_delta(0, (worksheet.costpercapita_aa71||0), 0.001); end
  def test_costpercapita_ab71; assert_in_delta(0, (worksheet.costpercapita_ab71||0), 0.001); end
  def test_costpercapita_ac71; assert_in_delta(0, (worksheet.costpercapita_ac71||0), 0.001); end
  def test_costpercapita_ad71; assert_in_delta(0, (worksheet.costpercapita_ad71||0), 0.001); end
  def test_costpercapita_ae71; assert_in_delta(0, (worksheet.costpercapita_ae71||0), 0.001); end
  def test_costpercapita_af71; assert_in_delta(0, (worksheet.costpercapita_af71||0), 0.001); end
  def test_costpercapita_ag71; assert_in_delta(0, (worksheet.costpercapita_ag71||0), 0.001); end
  def test_costpercapita_av71; assert_in_delta(0, (worksheet.costpercapita_av71||0), 0.001); end
  def test_costpercapita_aw71; assert_in_epsilon(5, worksheet.costpercapita_aw71, 0.001); end
  def test_costpercapita_ay71; assert_in_delta(0, (worksheet.costpercapita_ay71||0), 0.001); end
  def test_costpercapita_az71; assert_in_delta(0, (worksheet.costpercapita_az71||0), 0.001); end
  def test_costpercapita_ba71; assert_in_delta(0, (worksheet.costpercapita_ba71||0), 0.001); end
  def test_costpercapita_bb71; assert_in_delta(0, (worksheet.costpercapita_bb71||0), 0.001); end
  def test_costpercapita_bc71; assert_in_delta(0, (worksheet.costpercapita_bc71||0), 0.001); end
  def test_costpercapita_bd71; assert_in_delta(0, (worksheet.costpercapita_bd71||0), 0.001); end
  def test_costpercapita_be71; assert_in_delta(0, (worksheet.costpercapita_be71||0), 0.001); end
  def test_costpercapita_bf71; assert_in_delta(0, (worksheet.costpercapita_bf71||0), 0.001); end
  def test_costpercapita_bg71; assert_in_delta(0, (worksheet.costpercapita_bg71||0), 0.001); end
  def test_costpercapita_bi71; assert_in_delta(0, (worksheet.costpercapita_bi71||0), 0.001); end
  def test_costpercapita_bj71; assert_in_delta(0, (worksheet.costpercapita_bj71||0), 0.001); end
  def test_costpercapita_bk71; assert_in_delta(0, (worksheet.costpercapita_bk71||0), 0.001); end
  def test_costpercapita_bl71; assert_in_delta(0, (worksheet.costpercapita_bl71||0), 0.001); end
  def test_costpercapita_bm71; assert_in_delta(0, (worksheet.costpercapita_bm71||0), 0.001); end
  def test_costpercapita_bn71; assert_in_delta(0, (worksheet.costpercapita_bn71||0), 0.001); end
  def test_costpercapita_bo71; assert_in_delta(0, (worksheet.costpercapita_bo71||0), 0.001); end
  def test_costpercapita_bp71; assert_in_delta(0, (worksheet.costpercapita_bp71||0), 0.001); end
  def test_costpercapita_bq71; assert_in_delta(0, (worksheet.costpercapita_bq71||0), 0.001); end
  def test_costpercapita_cf71; assert_in_delta(0, (worksheet.costpercapita_cf71||0), 0.001); end
  def test_costpercapita_cg71; assert_in_delta(0, (worksheet.costpercapita_cg71||0), 0.001); end
  def test_costpercapita_ch71; assert_in_delta(0, (worksheet.costpercapita_ch71||0), 0.001); end
  def test_costpercapita_ci71; assert_in_delta(0, (worksheet.costpercapita_ci71||0), 0.001); end
  def test_costpercapita_cj71; assert_in_delta(0, (worksheet.costpercapita_cj71||0), 0.001); end
  def test_costpercapita_ck71; assert_in_delta(0, (worksheet.costpercapita_ck71||0), 0.001); end
  def test_costpercapita_cl71; assert_in_delta(0, (worksheet.costpercapita_cl71||0), 0.001); end
  def test_costpercapita_cm71; assert_in_delta(0, (worksheet.costpercapita_cm71||0), 0.001); end
  def test_costpercapita_cn71; assert_in_delta(0, (worksheet.costpercapita_cn71||0), 0.001); end
  def test_costpercapita_cp71; assert_in_delta(0, (worksheet.costpercapita_cp71||0), 0.001); end
  def test_costpercapita_cq71; assert_in_delta(0, (worksheet.costpercapita_cq71||0), 0.001); end
  def test_costpercapita_bt71; assert_in_delta(1.6438361999678852e-07, worksheet.costpercapita_bt71, 0.001); end
  def test_costpercapita_bu71; assert_in_delta(2.544736916499579e-07, worksheet.costpercapita_bu71, 0.001); end
  def test_costpercapita_bv71; assert_in_delta(3.362795079436402e-07, worksheet.costpercapita_bv71, 0.001); end
  def test_costpercapita_bw71; assert_in_delta(4.1163770927938566e-07, worksheet.costpercapita_bw71, 0.001); end
  def test_costpercapita_bx71; assert_in_delta(4.819296125191254e-07, worksheet.costpercapita_bx71, 0.001); end
  def test_costpercapita_by71; assert_in_delta(5.474815348368128e-07, worksheet.costpercapita_by71, 0.001); end
  def test_costpercapita_bz71; assert_in_delta(6.085295161070552e-07, worksheet.costpercapita_bz71, 0.001); end
  def test_costpercapita_ca71; assert_in_delta(6.655487783916977e-07, worksheet.costpercapita_ca71, 0.001); end
  def test_costpercapita_bs71; assert_in_delta(6.47241712935573e-08, worksheet.costpercapita_bs71, 0.001); end
  def test_costpercapita_cd71; assert_in_delta(7.508957135843284e-06, worksheet.costpercapita_cd71, 0.001); end
  def test_costpercapita_aj71; assert_in_delta(1.6438361999678852e-07, worksheet.costpercapita_aj71, 0.001); end
  def test_costpercapita_ak71; assert_in_delta(2.544736916499579e-07, worksheet.costpercapita_ak71, 0.001); end
  def test_costpercapita_al71; assert_in_delta(3.362795079436402e-07, worksheet.costpercapita_al71, 0.001); end
  def test_costpercapita_am71; assert_in_delta(4.1163770927938566e-07, worksheet.costpercapita_am71, 0.001); end
  def test_costpercapita_an71; assert_in_delta(4.819296125191254e-07, worksheet.costpercapita_an71, 0.001); end
  def test_costpercapita_ao71; assert_in_delta(5.474815348368128e-07, worksheet.costpercapita_ao71, 0.001); end
  def test_costpercapita_ap71; assert_in_delta(6.085295161070552e-07, worksheet.costpercapita_ap71, 0.001); end
  def test_costpercapita_aq71; assert_in_delta(6.655487783916977e-07, worksheet.costpercapita_aq71, 0.001); end
  def test_costpercapita_ai71; assert_in_delta(6.47241712935573e-08, worksheet.costpercapita_ai71, 0.001); end
  def test_costpercapita_at71; assert_in_delta(7.508957135843284e-06, worksheet.costpercapita_at71, 0.001); end
  def test_costpercapita_cr71; assert_equal("ok", worksheet.costpercapita_cr71); end
  def test_costpercapita_a72; assert_equal("VI.b.Bioenergy", worksheet.costpercapita_a72); end
  def test_costpercapita_b72; assert_equal("Energy from waste", worksheet.costpercapita_b72); end
  def test_costpercapita_c72; assert_equal("Bioenergy", worksheet.costpercapita_c72); end
  def test_costpercapita_y72; assert_in_delta(0, (worksheet.costpercapita_y72||0), 0.001); end
  def test_costpercapita_z72; assert_in_delta(0, (worksheet.costpercapita_z72||0), 0.001); end
  def test_costpercapita_aa72; assert_in_delta(0, (worksheet.costpercapita_aa72||0), 0.001); end
  def test_costpercapita_ab72; assert_in_delta(0, (worksheet.costpercapita_ab72||0), 0.001); end
  def test_costpercapita_ac72; assert_in_delta(0, (worksheet.costpercapita_ac72||0), 0.001); end
  def test_costpercapita_ad72; assert_in_delta(0, (worksheet.costpercapita_ad72||0), 0.001); end
  def test_costpercapita_ae72; assert_in_delta(0, (worksheet.costpercapita_ae72||0), 0.001); end
  def test_costpercapita_af72; assert_in_delta(0, (worksheet.costpercapita_af72||0), 0.001); end
  def test_costpercapita_ag72; assert_in_delta(0, (worksheet.costpercapita_ag72||0), 0.001); end
  def test_costpercapita_av72; assert_in_delta(0.07, worksheet.costpercapita_av72, 0.001); end
  def test_costpercapita_aw72; assert_in_epsilon(15, worksheet.costpercapita_aw72, 0.001); end
  def test_costpercapita_bt72; assert_in_epsilon(7.156580699884974, worksheet.costpercapita_bt72, 0.001); end
  def test_costpercapita_bu72; assert_in_epsilon(10.849657904354972, worksheet.costpercapita_bu72, 0.001); end
  def test_costpercapita_bv72; assert_in_epsilon(12.407529470188415, worksheet.costpercapita_bv72, 0.001); end
  def test_costpercapita_bw72; assert_in_epsilon(12.800228917293476, worksheet.costpercapita_bw72, 0.001); end
  def test_costpercapita_bx72; assert_in_epsilon(12.27580139184721, worksheet.costpercapita_bx72, 0.001); end
  def test_costpercapita_by72; assert_in_epsilon(11.661432375718078, worksheet.costpercapita_by72, 0.001); end
  def test_costpercapita_bz72; assert_in_epsilon(10.939188667181595, worksheet.costpercapita_bz72, 0.001); end
  def test_costpercapita_ca72; assert_in_epsilon(10.26714650538888, worksheet.costpercapita_ca72, 0.001); end
  def test_costpercapita_bs72; assert_in_epsilon(3.972561277864738, worksheet.costpercapita_bs72, 0.001); end
  def test_costpercapita_cd72; assert_in_epsilon(218.9178274808333, worksheet.costpercapita_cd72, 0.001); end
  def test_costpercapita_cg72; assert_in_delta(-0.9023518309447682, worksheet.costpercapita_cg72, 0.001); end
  def test_costpercapita_ch72; assert_in_delta(0.7486850931160677, worksheet.costpercapita_ch72, 0.001); end
  def test_costpercapita_ci72; assert_in_epsilon(2.577530463544983, worksheet.costpercapita_ci72, 0.001); end
  def test_costpercapita_cj72; assert_in_epsilon(3.1454583500171287, worksheet.costpercapita_cj72, 0.001); end
  def test_costpercapita_ck72; assert_in_epsilon(3.252151254148099, worksheet.costpercapita_ck72, 0.001); end
  def test_costpercapita_cl72; assert_in_epsilon(3.214592727718294, worksheet.costpercapita_cl72, 0.001); end
  def test_costpercapita_cm72; assert_in_epsilon(3.0274580523564003, worksheet.costpercapita_cm72, 0.001); end
  def test_costpercapita_cn72; assert_in_epsilon(2.853338976635638, worksheet.costpercapita_cn72, 0.001); end
  def test_costpercapita_cf72; assert_in_epsilon(-2.0039837295661065, worksheet.costpercapita_cf72, 0.001); end
  def test_costpercapita_cq72; assert_in_epsilon(33.48897288352273, worksheet.costpercapita_cq72, 0.001); end
  def test_costpercapita_aj72; assert_in_epsilon(8.058932530829741, worksheet.costpercapita_aj72, 0.001); end
  def test_costpercapita_ak72; assert_in_epsilon(10.100972811238902, worksheet.costpercapita_ak72, 0.001); end
  def test_costpercapita_al72; assert_in_epsilon(9.829999006643432, worksheet.costpercapita_al72, 0.001); end
  def test_costpercapita_am72; assert_in_epsilon(9.654770567276346, worksheet.costpercapita_am72, 0.001); end
  def test_costpercapita_an72; assert_in_epsilon(9.02365013769911, worksheet.costpercapita_an72, 0.001); end
  def test_costpercapita_ao72; assert_in_epsilon(8.446839647999784, worksheet.costpercapita_ao72, 0.001); end
  def test_costpercapita_ap72; assert_in_epsilon(7.911730614825195, worksheet.costpercapita_ap72, 0.001); end
  def test_costpercapita_aq72; assert_in_epsilon(7.413807528753243, worksheet.costpercapita_aq72, 0.001); end
  def test_costpercapita_ai72; assert_in_epsilon(5.976545007430845, worksheet.costpercapita_ai72, 0.001); end
  def test_costpercapita_at72; assert_in_epsilon(185.4288545973106, worksheet.costpercapita_at72, 0.001); end
  def test_costpercapita_cr72; assert_equal("ok", worksheet.costpercapita_cr72); end
  def test_costpercapita_a73; assert_equal("VI.b.Waste", worksheet.costpercapita_a73); end
  def test_costpercapita_b73; assert_equal("Waste arising", worksheet.costpercapita_b73); end
  def test_costpercapita_c73; assert_equal("Bioenergy", worksheet.costpercapita_c73); end
  def test_costpercapita_y73; assert_in_delta(0, (worksheet.costpercapita_y73||0), 0.001); end
  def test_costpercapita_z73; assert_in_delta(0, (worksheet.costpercapita_z73||0), 0.001); end
  def test_costpercapita_aa73; assert_in_delta(0, (worksheet.costpercapita_aa73||0), 0.001); end
  def test_costpercapita_ab73; assert_in_delta(0, (worksheet.costpercapita_ab73||0), 0.001); end
  def test_costpercapita_ac73; assert_in_delta(0, (worksheet.costpercapita_ac73||0), 0.001); end
  def test_costpercapita_ad73; assert_in_delta(0, (worksheet.costpercapita_ad73||0), 0.001); end
  def test_costpercapita_ae73; assert_in_delta(0, (worksheet.costpercapita_ae73||0), 0.001); end
  def test_costpercapita_af73; assert_in_delta(0, (worksheet.costpercapita_af73||0), 0.001); end
  def test_costpercapita_ag73; assert_in_delta(0, (worksheet.costpercapita_ag73||0), 0.001); end
  def test_costpercapita_av73; assert_in_delta(0.07, worksheet.costpercapita_av73, 0.001); end
  def test_costpercapita_aw73; assert_in_epsilon(15, worksheet.costpercapita_aw73, 0.001); end
  def test_costpercapita_bt73; assert_in_epsilon(112.23993289021742, worksheet.costpercapita_bt73, 0.001); end
  def test_costpercapita_bu73; assert_in_epsilon(134.78576275836363, worksheet.costpercapita_bu73, 0.001); end
  def test_costpercapita_bv73; assert_in_epsilon(142.04445080447564, worksheet.costpercapita_bv73, 0.001); end
  def test_costpercapita_bw73; assert_in_epsilon(140.40731204675504, worksheet.costpercapita_bw73, 0.001); end
  def test_costpercapita_bx73; assert_in_epsilon(136.74073181130353, worksheet.costpercapita_bx73, 0.001); end
  def test_costpercapita_by73; assert_in_epsilon(133.2999178136553, worksheet.costpercapita_by73, 0.001); end
  def test_costpercapita_bz73; assert_in_epsilon(129.53597785733857, worksheet.costpercapita_bz73, 0.001); end
  def test_costpercapita_ca73; assert_in_epsilon(125.69216264182235, worksheet.costpercapita_ca73, 0.001); end
  def test_costpercapita_bs73; assert_in_epsilon(90.11130672306733, worksheet.costpercapita_bs73, 0.001); end
  def test_costpercapita_cd73; assert_in_epsilon(2709.5569552667466, worksheet.costpercapita_cd73, 0.001); end
  def test_costpercapita_cg73; assert_in_epsilon(-5.864988880183931, worksheet.costpercapita_cg73, 0.001); end
  def test_costpercapita_ch73; assert_in_epsilon(14.587320041355355, worksheet.costpercapita_ch73, 0.001); end
  def test_costpercapita_ci73; assert_in_epsilon(25.755480001659546, worksheet.costpercapita_ci73, 0.001); end
  def test_costpercapita_cj73; assert_in_epsilon(26.4061677487331, worksheet.costpercapita_cj73, 0.001); end
  def test_costpercapita_ck73; assert_in_epsilon(25.710371576245578, worksheet.costpercapita_ck73, 0.001); end
  def test_costpercapita_cl73; assert_in_epsilon(26.104614759773565, worksheet.costpercapita_cl73, 0.001); end
  def test_costpercapita_cm73; assert_in_epsilon(25.51806027986466, worksheet.costpercapita_cm73, 0.001); end
  def test_costpercapita_cn73; assert_in_epsilon(24.586572287815123, worksheet.costpercapita_cn73, 0.001); end
  def test_costpercapita_cf73; assert_in_epsilon(-27.00614435480248, worksheet.costpercapita_cf73, 0.001); end
  def test_costpercapita_cq73; assert_in_epsilon(315.9305215540629, worksheet.costpercapita_cq73, 0.001); end
  def test_costpercapita_aj73; assert_in_epsilon(118.10492177040135, worksheet.costpercapita_aj73, 0.001); end
  def test_costpercapita_ak73; assert_in_epsilon(120.19844271700828, worksheet.costpercapita_ak73, 0.001); end
  def test_costpercapita_al73; assert_in_epsilon(116.28897080281611, worksheet.costpercapita_al73, 0.001); end
  def test_costpercapita_am73; assert_in_epsilon(114.00114429802193, worksheet.costpercapita_am73, 0.001); end
  def test_costpercapita_an73; assert_in_epsilon(111.03036023505797, worksheet.costpercapita_an73, 0.001); end
  def test_costpercapita_ao73; assert_in_epsilon(107.19530305388173, worksheet.costpercapita_ao73, 0.001); end
  def test_costpercapita_ap73; assert_in_epsilon(104.01791757747392, worksheet.costpercapita_ap73, 0.001); end
  def test_costpercapita_aq73; assert_in_epsilon(101.10559035400722, worksheet.costpercapita_aq73, 0.001); end
  def test_costpercapita_ai73; assert_in_epsilon(117.1174510778698, worksheet.costpercapita_ai73, 0.001); end
  def test_costpercapita_at73; assert_in_epsilon(2393.6264337126836, worksheet.costpercapita_at73, 0.001); end
  def test_costpercapita_cr73; assert_equal("ok", worksheet.costpercapita_cr73); end
  def test_costpercapita_a74; assert_equal("VI.c", worksheet.costpercapita_a74); end
  def test_costpercapita_b74; assert_equal("Marine algae", worksheet.costpercapita_b74); end
  def test_costpercapita_c74; assert_equal("Bioenergy", worksheet.costpercapita_c74); end
  def test_costpercapita_e74; assert_in_delta(0, (worksheet.costpercapita_e74||0), 0.001); end
  def test_costpercapita_f74; assert_in_delta(0, (worksheet.costpercapita_f74||0), 0.001); end
  def test_costpercapita_g74; assert_in_delta(0, (worksheet.costpercapita_g74||0), 0.001); end
  def test_costpercapita_h74; assert_in_delta(0, (worksheet.costpercapita_h74||0), 0.001); end
  def test_costpercapita_i74; assert_in_delta(0, (worksheet.costpercapita_i74||0), 0.001); end
  def test_costpercapita_j74; assert_in_delta(0, (worksheet.costpercapita_j74||0), 0.001); end
  def test_costpercapita_k74; assert_in_delta(0, (worksheet.costpercapita_k74||0), 0.001); end
  def test_costpercapita_l74; assert_in_delta(0, (worksheet.costpercapita_l74||0), 0.001); end
  def test_costpercapita_m74; assert_in_delta(0, (worksheet.costpercapita_m74||0), 0.001); end
  def test_costpercapita_o74; assert_in_delta(0, (worksheet.costpercapita_o74||0), 0.001); end
  def test_costpercapita_p74; assert_in_delta(0, (worksheet.costpercapita_p74||0), 0.001); end
  def test_costpercapita_q74; assert_in_delta(0, (worksheet.costpercapita_q74||0), 0.001); end
  def test_costpercapita_r74; assert_in_delta(0, (worksheet.costpercapita_r74||0), 0.001); end
  def test_costpercapita_s74; assert_in_delta(0, (worksheet.costpercapita_s74||0), 0.001); end
  def test_costpercapita_t74; assert_in_delta(0, (worksheet.costpercapita_t74||0), 0.001); end
  def test_costpercapita_u74; assert_in_delta(0, (worksheet.costpercapita_u74||0), 0.001); end
  def test_costpercapita_v74; assert_in_delta(0, (worksheet.costpercapita_v74||0), 0.001); end
  def test_costpercapita_w74; assert_in_delta(0, (worksheet.costpercapita_w74||0), 0.001); end
  def test_costpercapita_av74; assert_in_delta(0, (worksheet.costpercapita_av74||0), 0.001); end
  def test_costpercapita_aw74; assert_in_epsilon(5, worksheet.costpercapita_aw74, 0.001); end
  def test_costpercapita_ay74; assert_in_delta(0, (worksheet.costpercapita_ay74||0), 0.001); end
  def test_costpercapita_az74; assert_in_delta(0, (worksheet.costpercapita_az74||0), 0.001); end
  def test_costpercapita_ba74; assert_in_delta(0, (worksheet.costpercapita_ba74||0), 0.001); end
  def test_costpercapita_bb74; assert_in_delta(0, (worksheet.costpercapita_bb74||0), 0.001); end
  def test_costpercapita_bc74; assert_in_delta(0, (worksheet.costpercapita_bc74||0), 0.001); end
  def test_costpercapita_bd74; assert_in_delta(0, (worksheet.costpercapita_bd74||0), 0.001); end
  def test_costpercapita_be74; assert_in_delta(0, (worksheet.costpercapita_be74||0), 0.001); end
  def test_costpercapita_bf74; assert_in_delta(0, (worksheet.costpercapita_bf74||0), 0.001); end
  def test_costpercapita_bg74; assert_in_delta(0, (worksheet.costpercapita_bg74||0), 0.001); end
  def test_costpercapita_bi74; assert_in_delta(0, (worksheet.costpercapita_bi74||0), 0.001); end
  def test_costpercapita_bj74; assert_in_delta(0, (worksheet.costpercapita_bj74||0), 0.001); end
  def test_costpercapita_bk74; assert_in_delta(0, (worksheet.costpercapita_bk74||0), 0.001); end
  def test_costpercapita_bl74; assert_in_delta(0, (worksheet.costpercapita_bl74||0), 0.001); end
  def test_costpercapita_bm74; assert_in_delta(0, (worksheet.costpercapita_bm74||0), 0.001); end
  def test_costpercapita_bn74; assert_in_delta(0, (worksheet.costpercapita_bn74||0), 0.001); end
  def test_costpercapita_bo74; assert_in_delta(0, (worksheet.costpercapita_bo74||0), 0.001); end
  def test_costpercapita_bp74; assert_in_delta(0, (worksheet.costpercapita_bp74||0), 0.001); end
  def test_costpercapita_bq74; assert_in_delta(0, (worksheet.costpercapita_bq74||0), 0.001); end
  def test_costpercapita_cf74; assert_in_delta(0, (worksheet.costpercapita_cf74||0), 0.001); end
  def test_costpercapita_cg74; assert_in_delta(0, (worksheet.costpercapita_cg74||0), 0.001); end
  def test_costpercapita_ch74; assert_in_delta(0, (worksheet.costpercapita_ch74||0), 0.001); end
  def test_costpercapita_ci74; assert_in_delta(0, (worksheet.costpercapita_ci74||0), 0.001); end
  def test_costpercapita_cj74; assert_in_delta(0, (worksheet.costpercapita_cj74||0), 0.001); end
  def test_costpercapita_ck74; assert_in_delta(0, (worksheet.costpercapita_ck74||0), 0.001); end
  def test_costpercapita_cl74; assert_in_delta(0, (worksheet.costpercapita_cl74||0), 0.001); end
  def test_costpercapita_cm74; assert_in_delta(0, (worksheet.costpercapita_cm74||0), 0.001); end
  def test_costpercapita_cn74; assert_in_delta(0, (worksheet.costpercapita_cn74||0), 0.001); end
  def test_costpercapita_cp74; assert_in_delta(0, (worksheet.costpercapita_cp74||0), 0.001); end
  def test_costpercapita_cq74; assert_in_delta(0, (worksheet.costpercapita_cq74||0), 0.001); end
  def test_costpercapita_bt74; assert_in_delta(0, (worksheet.costpercapita_bt74||0), 0.001); end
  def test_costpercapita_bu74; assert_in_delta(0.011821283924247455, worksheet.costpercapita_bu74, 0.001); end
  def test_costpercapita_bv74; assert_in_delta(0.763683726528361, worksheet.costpercapita_bv74, 0.001); end
  def test_costpercapita_bw74; assert_in_epsilon(3.7140988510119057, worksheet.costpercapita_bw74, 0.001); end
  def test_costpercapita_bx74; assert_in_epsilon(7.253221336493713, worksheet.costpercapita_bx74, 0.001); end
  def test_costpercapita_by74; assert_in_epsilon(14.197072673291725, worksheet.costpercapita_by74, 0.001); end
  def test_costpercapita_bz74; assert_in_epsilon(34.784676317987234, worksheet.costpercapita_bz74, 0.001); end
  def test_costpercapita_ca74; assert_in_epsilon(80.01492033746342, worksheet.costpercapita_ca74, 0.001); end
  def test_costpercapita_bs74; assert_in_delta(0, (worksheet.costpercapita_bs74||0), 0.001); end
  def test_costpercapita_cd74; assert_in_epsilon(211.80371848961045, worksheet.costpercapita_cd74, 0.001); end
  def test_costpercapita_aj74; assert_in_delta(0, (worksheet.costpercapita_aj74||0), 0.001); end
  def test_costpercapita_ak74; assert_in_delta(0.011821283924247455, worksheet.costpercapita_ak74, 0.001); end
  def test_costpercapita_al74; assert_in_delta(0.763683726528361, worksheet.costpercapita_al74, 0.001); end
  def test_costpercapita_am74; assert_in_epsilon(3.7140988510119057, worksheet.costpercapita_am74, 0.001); end
  def test_costpercapita_an74; assert_in_epsilon(7.253221336493713, worksheet.costpercapita_an74, 0.001); end
  def test_costpercapita_ao74; assert_in_epsilon(14.197072673291725, worksheet.costpercapita_ao74, 0.001); end
  def test_costpercapita_ap74; assert_in_epsilon(34.784676317987234, worksheet.costpercapita_ap74, 0.001); end
  def test_costpercapita_aq74; assert_in_epsilon(80.01492033746342, worksheet.costpercapita_aq74, 0.001); end
  def test_costpercapita_ai74; assert_in_delta(0, (worksheet.costpercapita_ai74||0), 0.001); end
  def test_costpercapita_at74; assert_in_epsilon(211.80371848961045, worksheet.costpercapita_at74, 0.001); end
  def test_costpercapita_cr74; assert_equal("ok", worksheet.costpercapita_cr74); end
  def test_costpercapita_a75; assert_equal("VII.a.Imports", worksheet.costpercapita_a75); end
  def test_costpercapita_b75; assert_equal("Electricity imports", worksheet.costpercapita_b75); end
  def test_costpercapita_c75; assert_equal("Electricity", worksheet.costpercapita_c75); end
  def test_costpercapita_y75; assert_in_delta(0, (worksheet.costpercapita_y75||0), 0.001); end
  def test_costpercapita_z75; assert_in_delta(0, (worksheet.costpercapita_z75||0), 0.001); end
  def test_costpercapita_aa75; assert_in_delta(0, (worksheet.costpercapita_aa75||0), 0.001); end
  def test_costpercapita_ab75; assert_in_delta(0, (worksheet.costpercapita_ab75||0), 0.001); end
  def test_costpercapita_ac75; assert_in_delta(0, (worksheet.costpercapita_ac75||0), 0.001); end
  def test_costpercapita_ad75; assert_in_delta(0, (worksheet.costpercapita_ad75||0), 0.001); end
  def test_costpercapita_ae75; assert_in_delta(0, (worksheet.costpercapita_ae75||0), 0.001); end
  def test_costpercapita_af75; assert_in_delta(0, (worksheet.costpercapita_af75||0), 0.001); end
  def test_costpercapita_ag75; assert_in_delta(0, (worksheet.costpercapita_ag75||0), 0.001); end
  def test_costpercapita_av75; assert_in_delta(0, (worksheet.costpercapita_av75||0), 0.001); end
  def test_costpercapita_aw75; assert_in_epsilon(5, worksheet.costpercapita_aw75, 0.001); end
  def test_costpercapita_bt75; assert_in_delta(0, (worksheet.costpercapita_bt75||0), 0.001); end
  def test_costpercapita_bu75; assert_in_delta(0, (worksheet.costpercapita_bu75||0), 0.001); end
  def test_costpercapita_bv75; assert_in_delta(0, (worksheet.costpercapita_bv75||0), 0.001); end
  def test_costpercapita_bw75; assert_in_delta(0, (worksheet.costpercapita_bw75||0), 0.001); end
  def test_costpercapita_bx75; assert_in_delta(0, (worksheet.costpercapita_bx75||0), 0.001); end
  def test_costpercapita_by75; assert_in_delta(0, (worksheet.costpercapita_by75||0), 0.001); end
  def test_costpercapita_bz75; assert_in_delta(0, (worksheet.costpercapita_bz75||0), 0.001); end
  def test_costpercapita_ca75; assert_in_delta(0, (worksheet.costpercapita_ca75||0), 0.001); end
  def test_costpercapita_bs75; assert_in_delta(0, (worksheet.costpercapita_bs75||0), 0.001); end
  def test_costpercapita_cd75; assert_in_delta(0, (worksheet.costpercapita_cd75||0), 0.001); end
  def test_costpercapita_cg75; assert_in_delta(0, (worksheet.costpercapita_cg75||0), 0.001); end
  def test_costpercapita_ch75; assert_in_delta(0, (worksheet.costpercapita_ch75||0), 0.001); end
  def test_costpercapita_ci75; assert_in_delta(0, (worksheet.costpercapita_ci75||0), 0.001); end
  def test_costpercapita_cj75; assert_in_delta(0, (worksheet.costpercapita_cj75||0), 0.001); end
  def test_costpercapita_ck75; assert_in_delta(0, (worksheet.costpercapita_ck75||0), 0.001); end
  def test_costpercapita_cl75; assert_in_delta(0, (worksheet.costpercapita_cl75||0), 0.001); end
  def test_costpercapita_cm75; assert_in_delta(0, (worksheet.costpercapita_cm75||0), 0.001); end
  def test_costpercapita_cn75; assert_in_delta(0, (worksheet.costpercapita_cn75||0), 0.001); end
  def test_costpercapita_cf75; assert_in_delta(0, (worksheet.costpercapita_cf75||0), 0.001); end
  def test_costpercapita_cq75; assert_in_delta(0, (worksheet.costpercapita_cq75||0), 0.001); end
  def test_costpercapita_aj75; assert_in_delta(0, (worksheet.costpercapita_aj75||0), 0.001); end
  def test_costpercapita_ak75; assert_in_delta(0, (worksheet.costpercapita_ak75||0), 0.001); end
  def test_costpercapita_al75; assert_in_delta(0, (worksheet.costpercapita_al75||0), 0.001); end
  def test_costpercapita_am75; assert_in_delta(0, (worksheet.costpercapita_am75||0), 0.001); end
  def test_costpercapita_an75; assert_in_delta(0, (worksheet.costpercapita_an75||0), 0.001); end
  def test_costpercapita_ao75; assert_in_delta(0, (worksheet.costpercapita_ao75||0), 0.001); end
  def test_costpercapita_ap75; assert_in_delta(0, (worksheet.costpercapita_ap75||0), 0.001); end
  def test_costpercapita_aq75; assert_in_delta(0, (worksheet.costpercapita_aq75||0), 0.001); end
  def test_costpercapita_ai75; assert_in_delta(0, (worksheet.costpercapita_ai75||0), 0.001); end
  def test_costpercapita_at75; assert_in_delta(0, (worksheet.costpercapita_at75||0), 0.001); end
  def test_costpercapita_cr75; assert_equal("ok", worksheet.costpercapita_cr75); end
  def test_costpercapita_a76; assert_equal("VII.a.Exports", worksheet.costpercapita_a76); end
  def test_costpercapita_b76; assert_equal("Electricity Exports", worksheet.costpercapita_b76); end
  def test_costpercapita_c76; assert_equal("Electricity", worksheet.costpercapita_c76); end
  def test_costpercapita_av76; assert_in_delta(0, (worksheet.costpercapita_av76||0), 0.001); end
  def test_costpercapita_aw76; assert_in_epsilon(5, worksheet.costpercapita_aw76, 0.001); end
  def test_costpercapita_bt76; assert_in_delta(-6.466691801212135e-14, worksheet.costpercapita_bt76, 0.001); end
  def test_costpercapita_bu76; assert_in_delta(-1.2509968544256545e-13, worksheet.costpercapita_bu76, 0.001); end
  def test_costpercapita_bv76; assert_in_delta(0, (worksheet.costpercapita_bv76||0), 0.001); end
  def test_costpercapita_bw76; assert_in_epsilon(-63.60005850918115, worksheet.costpercapita_bw76, 0.001); end
  def test_costpercapita_bx76; assert_in_epsilon(-161.38891161399812, worksheet.costpercapita_bx76, 0.001); end
  def test_costpercapita_by76; assert_in_epsilon(-202.45362009285188, worksheet.costpercapita_by76, 0.001); end
  def test_costpercapita_bz76; assert_in_epsilon(-234.50015545113567, worksheet.costpercapita_bz76, 0.001); end
  def test_costpercapita_ca76; assert_in_epsilon(-246.00905795140395, worksheet.costpercapita_ca76, 0.001); end
  def test_costpercapita_bs76; assert_in_delta(-6.687202775841277e-14, worksheet.costpercapita_bs76, 0.001); end
  def test_costpercapita_cd76; assert_in_epsilon(-1548.355548209658, worksheet.costpercapita_cd76, 0.001); end
  def test_costpercapita_cg76; assert_in_delta(0, (worksheet.costpercapita_cg76||0), 0.001); end
  def test_costpercapita_ch76; assert_in_delta(0, (worksheet.costpercapita_ch76||0), 0.001); end
  def test_costpercapita_ci76; assert_in_delta(0, (worksheet.costpercapita_ci76||0), 0.001); end
  def test_costpercapita_cj76; assert_in_delta(0, (worksheet.costpercapita_cj76||0), 0.001); end
  def test_costpercapita_ck76; assert_in_delta(0, (worksheet.costpercapita_ck76||0), 0.001); end
  def test_costpercapita_cl76; assert_in_delta(0, (worksheet.costpercapita_cl76||0), 0.001); end
  def test_costpercapita_cm76; assert_in_delta(0, (worksheet.costpercapita_cm76||0), 0.001); end
  def test_costpercapita_cn76; assert_in_delta(0, (worksheet.costpercapita_cn76||0), 0.001); end
  def test_costpercapita_cf76; assert_in_delta(0, (worksheet.costpercapita_cf76||0), 0.001); end
  def test_costpercapita_cq76; assert_in_delta(0, (worksheet.costpercapita_cq76||0), 0.001); end
  def test_costpercapita_aj76; assert_in_delta(-6.466691801212135e-14, worksheet.costpercapita_aj76, 0.001); end
  def test_costpercapita_ak76; assert_in_delta(-1.2509968544256545e-13, worksheet.costpercapita_ak76, 0.001); end
  def test_costpercapita_al76; assert_in_delta(0, (worksheet.costpercapita_al76||0), 0.001); end
  def test_costpercapita_am76; assert_in_epsilon(-63.60005850918115, worksheet.costpercapita_am76, 0.001); end
  def test_costpercapita_an76; assert_in_epsilon(-161.38891161399812, worksheet.costpercapita_an76, 0.001); end
  def test_costpercapita_ao76; assert_in_epsilon(-202.45362009285188, worksheet.costpercapita_ao76, 0.001); end
  def test_costpercapita_ap76; assert_in_epsilon(-234.50015545113567, worksheet.costpercapita_ap76, 0.001); end
  def test_costpercapita_aq76; assert_in_epsilon(-246.00905795140395, worksheet.costpercapita_aq76, 0.001); end
  def test_costpercapita_ai76; assert_in_delta(-6.687202775841277e-14, worksheet.costpercapita_ai76, 0.001); end
  def test_costpercapita_at76; assert_in_epsilon(-1548.355548209658, worksheet.costpercapita_at76, 0.001); end
  def test_costpercapita_cr76; assert_equal("ok", worksheet.costpercapita_cr76); end
  def test_costpercapita_a77; assert_equal("VII.b", worksheet.costpercapita_a77); end
  def test_costpercapita_b77; assert_equal("Electricity grid distribution", worksheet.costpercapita_b77); end
  def test_costpercapita_c77; assert_equal("Electricity", worksheet.costpercapita_c77); end
  def test_costpercapita_y77; assert_in_delta(0, (worksheet.costpercapita_y77||0), 0.001); end
  def test_costpercapita_z77; assert_in_delta(0, (worksheet.costpercapita_z77||0), 0.001); end
  def test_costpercapita_aa77; assert_in_delta(0, (worksheet.costpercapita_aa77||0), 0.001); end
  def test_costpercapita_ab77; assert_in_delta(0, (worksheet.costpercapita_ab77||0), 0.001); end
  def test_costpercapita_ac77; assert_in_delta(0, (worksheet.costpercapita_ac77||0), 0.001); end
  def test_costpercapita_ad77; assert_in_delta(0, (worksheet.costpercapita_ad77||0), 0.001); end
  def test_costpercapita_ae77; assert_in_delta(0, (worksheet.costpercapita_ae77||0), 0.001); end
  def test_costpercapita_af77; assert_in_delta(0, (worksheet.costpercapita_af77||0), 0.001); end
  def test_costpercapita_ag77; assert_in_delta(0, (worksheet.costpercapita_ag77||0), 0.001); end
  def test_costpercapita_av77; assert_in_delta(0.07, worksheet.costpercapita_av77, 0.001); end
  def test_costpercapita_aw77; assert_in_epsilon(20, worksheet.costpercapita_aw77, 0.001); end
  def test_costpercapita_bt77; assert_in_epsilon(48.8790212639724, worksheet.costpercapita_bt77, 0.001); end
  def test_costpercapita_bu77; assert_in_epsilon(78.91078175258924, worksheet.costpercapita_bu77, 0.001); end
  def test_costpercapita_bv77; assert_in_epsilon(113.02579229939873, worksheet.costpercapita_bv77, 0.001); end
  def test_costpercapita_bw77; assert_in_epsilon(138.83372274436263, worksheet.costpercapita_bw77, 0.001); end
  def test_costpercapita_bx77; assert_in_epsilon(160.40118175385518, worksheet.costpercapita_bx77, 0.001); end
  def test_costpercapita_by77; assert_in_epsilon(176.5829193570594, worksheet.costpercapita_by77, 0.001); end
  def test_costpercapita_bz77; assert_in_epsilon(218.5146796406908, worksheet.costpercapita_bz77, 0.001); end
  def test_costpercapita_ca77; assert_in_epsilon(203.42462118025782, worksheet.costpercapita_ca77, 0.001); end
  def test_costpercapita_bs77; assert_in_epsilon(28.929309143395955, worksheet.costpercapita_bs77, 0.001); end
  def test_costpercapita_cd77; assert_in_epsilon(2459.948930874955, worksheet.costpercapita_cd77, 0.001); end
  def test_costpercapita_cg77; assert_in_epsilon(-11.331808453344104, worksheet.costpercapita_cg77, 0.001); end
  def test_costpercapita_ch77; assert_in_epsilon(-3.569270234412806, worksheet.costpercapita_ch77, 0.001); end
  def test_costpercapita_ci77; assert_in_epsilon(14.718369024910631, worksheet.costpercapita_ci77, 0.001); end
  def test_costpercapita_cj77; assert_in_epsilon(33.64404065552162, worksheet.costpercapita_cj77, 0.001); end
  def test_costpercapita_ck77; assert_in_epsilon(41.707263344063335, worksheet.costpercapita_ck77, 0.001); end
  def test_costpercapita_cl77; assert_in_epsilon(47.874543777122916, worksheet.costpercapita_cl77, 0.001); end
  def test_costpercapita_cm77; assert_in_epsilon(79.12143636424861, worksheet.costpercapita_cm77, 0.001); end
  def test_costpercapita_cn77; assert_in_epsilon(59.36404582506146, worksheet.costpercapita_cn77, 0.001); end
  def test_costpercapita_cf77; assert_in_epsilon(-20.1001839764822, worksheet.costpercapita_cf77, 0.001); end
  def test_costpercapita_cq77; assert_in_epsilon(421.8055943471554, worksheet.costpercapita_cq77, 0.001); end
  def test_costpercapita_aj77; assert_in_epsilon(60.2108297173165, worksheet.costpercapita_aj77, 0.001); end
  def test_costpercapita_ak77; assert_in_epsilon(82.48005198700206, worksheet.costpercapita_ak77, 0.001); end
  def test_costpercapita_al77; assert_in_epsilon(98.3074232744881, worksheet.costpercapita_al77, 0.001); end
  def test_costpercapita_am77; assert_in_epsilon(105.18968208884102, worksheet.costpercapita_am77, 0.001); end
  def test_costpercapita_an77; assert_in_epsilon(118.69391840979186, worksheet.costpercapita_an77, 0.001); end
  def test_costpercapita_ao77; assert_in_epsilon(128.7083755799365, worksheet.costpercapita_ao77, 0.001); end
  def test_costpercapita_ap77; assert_in_epsilon(139.3932432764422, worksheet.costpercapita_ap77, 0.001); end
  def test_costpercapita_aq77; assert_in_epsilon(144.06057535519636, worksheet.costpercapita_aq77, 0.001); end
  def test_costpercapita_ai77; assert_in_epsilon(49.029493119878154, worksheet.costpercapita_ai77, 0.001); end
  def test_costpercapita_at77; assert_in_epsilon(2038.1433365277994, worksheet.costpercapita_at77, 0.001); end
  def test_costpercapita_cr77; assert_equal("ok", worksheet.costpercapita_cr77); end
  def test_costpercapita_a78; assert_equal("VII.c", worksheet.costpercapita_a78); end
  def test_costpercapita_b78; assert_equal("Storage, demand shifting, backup", worksheet.costpercapita_b78); end
  def test_costpercapita_c78; assert_equal("Electricity", worksheet.costpercapita_c78); end
  def test_costpercapita_y78; assert_in_delta(0, (worksheet.costpercapita_y78||0), 0.001); end
  def test_costpercapita_z78; assert_in_delta(0, (worksheet.costpercapita_z78||0), 0.001); end
  def test_costpercapita_aa78; assert_in_delta(0, (worksheet.costpercapita_aa78||0), 0.001); end
  def test_costpercapita_ab78; assert_in_delta(0, (worksheet.costpercapita_ab78||0), 0.001); end
  def test_costpercapita_ac78; assert_in_delta(0, (worksheet.costpercapita_ac78||0), 0.001); end
  def test_costpercapita_ad78; assert_in_delta(0, (worksheet.costpercapita_ad78||0), 0.001); end
  def test_costpercapita_ae78; assert_in_delta(0, (worksheet.costpercapita_ae78||0), 0.001); end
  def test_costpercapita_af78; assert_in_delta(0, (worksheet.costpercapita_af78||0), 0.001); end
  def test_costpercapita_ag78; assert_in_delta(0, (worksheet.costpercapita_ag78||0), 0.001); end
  def test_costpercapita_av78; assert_in_delta(0.07, worksheet.costpercapita_av78, 0.001); end
  def test_costpercapita_aw78; assert_in_epsilon(15, worksheet.costpercapita_aw78, 0.001); end
  def test_costpercapita_bt78; assert_in_epsilon(2.375095111265945, worksheet.costpercapita_bt78, 0.001); end
  def test_costpercapita_bu78; assert_in_epsilon(12.26154481170452, worksheet.costpercapita_bu78, 0.001); end
  def test_costpercapita_bv78; assert_in_epsilon(37.89880321933553, worksheet.costpercapita_bv78, 0.001); end
  def test_costpercapita_bw78; assert_in_epsilon(52.37418874405886, worksheet.costpercapita_bw78, 0.001); end
  def test_costpercapita_bx78; assert_in_epsilon(61.59465302049465, worksheet.costpercapita_bx78, 0.001); end
  def test_costpercapita_by78; assert_in_epsilon(39.47427149654541, worksheet.costpercapita_by78, 0.001); end
  def test_costpercapita_bz78; assert_in_epsilon(39.80864794947472, worksheet.costpercapita_bz78, 0.001); end
  def test_costpercapita_ca78; assert_in_epsilon(20.929397121362427, worksheet.costpercapita_ca78, 0.001); end
  def test_costpercapita_bs78; assert_in_epsilon(1.2737786045972503, worksheet.costpercapita_bs78, 0.001); end
  def test_costpercapita_cd78; assert_in_epsilon(589.0006600081389, worksheet.costpercapita_cd78, 0.001); end
  def test_costpercapita_cg78; assert_in_delta(-0.9330480227333324, worksheet.costpercapita_cg78, 0.001); end
  def test_costpercapita_ch78; assert_in_epsilon(-5.818423041671508, worksheet.costpercapita_ch78, 0.001); end
  def test_costpercapita_ci78; assert_in_epsilon(-9.007448843898652, worksheet.costpercapita_ci78, 0.001); end
  def test_costpercapita_cj78; assert_in_epsilon(15.821197278224256, worksheet.costpercapita_cj78, 0.001); end
  def test_costpercapita_ck78; assert_in_epsilon(21.52307742232681, worksheet.costpercapita_ck78, 0.001); end
  def test_costpercapita_cl78; assert_in_epsilon(34.789272197980054, worksheet.costpercapita_cl78, 0.001); end
  def test_costpercapita_cm78; assert_in_epsilon(5.953025155439643, worksheet.costpercapita_cm78, 0.001); end
  def test_costpercapita_cn78; assert_in_epsilon(14.964311556715213, worksheet.costpercapita_cn78, 0.001); end
  def test_costpercapita_cf78; assert_in_delta(0, (worksheet.costpercapita_cf78||0), 0.001); end
  def test_costpercapita_cq78; assert_in_epsilon(124.81538865082909, worksheet.costpercapita_cq78, 0.001); end
  def test_costpercapita_aj78; assert_in_epsilon(3.3081431339992773, worksheet.costpercapita_aj78, 0.001); end
  def test_costpercapita_ak78; assert_in_epsilon(18.07996785337603, worksheet.costpercapita_ak78, 0.001); end
  def test_costpercapita_al78; assert_in_epsilon(46.906252063234184, worksheet.costpercapita_al78, 0.001); end
  def test_costpercapita_am78; assert_in_epsilon(36.55299146583461, worksheet.costpercapita_am78, 0.001); end
  def test_costpercapita_an78; assert_in_epsilon(40.07157559816784, worksheet.costpercapita_an78, 0.001); end
  def test_costpercapita_ao78; assert_in_epsilon(4.6849992985653595, worksheet.costpercapita_ao78, 0.001); end
  def test_costpercapita_ap78; assert_in_epsilon(33.85562279403507, worksheet.costpercapita_ap78, 0.001); end
  def test_costpercapita_aq78; assert_in_epsilon(5.965085564647213, worksheet.costpercapita_aq78, 0.001); end
  def test_costpercapita_ai78; assert_in_epsilon(1.2737786045972503, worksheet.costpercapita_ai78, 0.001); end
  def test_costpercapita_at78; assert_in_epsilon(464.1852713573099, worksheet.costpercapita_at78, 0.001); end
  def test_costpercapita_cr78; assert_equal("ok", worksheet.costpercapita_cr78); end
  def test_costpercapita_a79; assert_equal("VIII.a", worksheet.costpercapita_a79); end
  def test_costpercapita_b79; assert_equal("H2 Production", worksheet.costpercapita_b79); end
  def test_costpercapita_c79; assert_equal("Transport", worksheet.costpercapita_c79); end
  def test_costpercapita_y79; assert_in_delta(0, (worksheet.costpercapita_y79||0), 0.001); end
  def test_costpercapita_z79; assert_in_delta(0, (worksheet.costpercapita_z79||0), 0.001); end
  def test_costpercapita_aa79; assert_in_delta(0, (worksheet.costpercapita_aa79||0), 0.001); end
  def test_costpercapita_ab79; assert_in_delta(0, (worksheet.costpercapita_ab79||0), 0.001); end
  def test_costpercapita_ac79; assert_in_delta(0, (worksheet.costpercapita_ac79||0), 0.001); end
  def test_costpercapita_ad79; assert_in_delta(0, (worksheet.costpercapita_ad79||0), 0.001); end
  def test_costpercapita_ae79; assert_in_delta(0, (worksheet.costpercapita_ae79||0), 0.001); end
  def test_costpercapita_af79; assert_in_delta(0, (worksheet.costpercapita_af79||0), 0.001); end
  def test_costpercapita_ag79; assert_in_delta(0, (worksheet.costpercapita_ag79||0), 0.001); end
  def test_costpercapita_av79; assert_in_delta(0.07, worksheet.costpercapita_av79, 0.001); end
  def test_costpercapita_aw79; assert_in_epsilon(25, worksheet.costpercapita_aw79, 0.001); end
  def test_costpercapita_bt79; assert_in_delta(0, (worksheet.costpercapita_bt79||0), 0.001); end
  def test_costpercapita_bu79; assert_in_delta(0, (worksheet.costpercapita_bu79||0), 0.001); end
  def test_costpercapita_bv79; assert_in_delta(0, (worksheet.costpercapita_bv79||0), 0.001); end
  def test_costpercapita_bw79; assert_in_delta(0, (worksheet.costpercapita_bw79||0), 0.001); end
  def test_costpercapita_bx79; assert_in_delta(0, (worksheet.costpercapita_bx79||0), 0.001); end
  def test_costpercapita_by79; assert_in_delta(0, (worksheet.costpercapita_by79||0), 0.001); end
  def test_costpercapita_bz79; assert_in_delta(0, (worksheet.costpercapita_bz79||0), 0.001); end
  def test_costpercapita_ca79; assert_in_delta(0, (worksheet.costpercapita_ca79||0), 0.001); end
  def test_costpercapita_bs79; assert_in_delta(0, (worksheet.costpercapita_bs79||0), 0.001); end
  def test_costpercapita_cd79; assert_in_delta(0, (worksheet.costpercapita_cd79||0), 0.001); end
  def test_costpercapita_cg79; assert_in_delta(0, (worksheet.costpercapita_cg79||0), 0.001); end
  def test_costpercapita_ch79; assert_in_delta(0, (worksheet.costpercapita_ch79||0), 0.001); end
  def test_costpercapita_ci79; assert_in_delta(0, (worksheet.costpercapita_ci79||0), 0.001); end
  def test_costpercapita_cj79; assert_in_delta(0, (worksheet.costpercapita_cj79||0), 0.001); end
  def test_costpercapita_ck79; assert_in_delta(0, (worksheet.costpercapita_ck79||0), 0.001); end
  def test_costpercapita_cl79; assert_in_delta(0, (worksheet.costpercapita_cl79||0), 0.001); end
  def test_costpercapita_cm79; assert_in_delta(0, (worksheet.costpercapita_cm79||0), 0.001); end
  def test_costpercapita_cn79; assert_in_delta(0, (worksheet.costpercapita_cn79||0), 0.001); end
  def test_costpercapita_cf79; assert_in_delta(0, (worksheet.costpercapita_cf79||0), 0.001); end
  def test_costpercapita_cq79; assert_in_delta(0, (worksheet.costpercapita_cq79||0), 0.001); end
  def test_costpercapita_aj79; assert_in_delta(0, (worksheet.costpercapita_aj79||0), 0.001); end
  def test_costpercapita_ak79; assert_in_delta(0, (worksheet.costpercapita_ak79||0), 0.001); end
  def test_costpercapita_al79; assert_in_delta(0, (worksheet.costpercapita_al79||0), 0.001); end
  def test_costpercapita_am79; assert_in_delta(0, (worksheet.costpercapita_am79||0), 0.001); end
  def test_costpercapita_an79; assert_in_delta(0, (worksheet.costpercapita_an79||0), 0.001); end
  def test_costpercapita_ao79; assert_in_delta(0, (worksheet.costpercapita_ao79||0), 0.001); end
  def test_costpercapita_ap79; assert_in_delta(0, (worksheet.costpercapita_ap79||0), 0.001); end
  def test_costpercapita_aq79; assert_in_delta(0, (worksheet.costpercapita_aq79||0), 0.001); end
  def test_costpercapita_ai79; assert_in_delta(0, (worksheet.costpercapita_ai79||0), 0.001); end
  def test_costpercapita_at79; assert_in_delta(0, (worksheet.costpercapita_at79||0), 0.001); end
  def test_costpercapita_cr79; assert_equal("ok", worksheet.costpercapita_cr79); end
  def test_costpercapita_a80; assert_equal("IX.a.Heating", worksheet.costpercapita_a80); end
  def test_costpercapita_b80; assert_equal("Domestic heating", worksheet.costpercapita_b80); end
  def test_costpercapita_c80; assert_equal("Buildings", worksheet.costpercapita_c80); end
  def test_costpercapita_e80; assert_in_epsilon(143.58824651736367, worksheet.costpercapita_e80, 0.001); end
  def test_costpercapita_o80; assert_in_epsilon(79.62727823435024, worksheet.costpercapita_o80, 0.001); end
  def test_costpercapita_p80; assert_in_epsilon(78.98338301611061, worksheet.costpercapita_p80, 0.001); end
  def test_costpercapita_y80; assert_in_delta(0, (worksheet.costpercapita_y80||0), 0.001); end
  def test_costpercapita_z80; assert_in_delta(0, (worksheet.costpercapita_z80||0), 0.001); end
  def test_costpercapita_aa80; assert_in_delta(0, (worksheet.costpercapita_aa80||0), 0.001); end
  def test_costpercapita_ab80; assert_in_delta(0, (worksheet.costpercapita_ab80||0), 0.001); end
  def test_costpercapita_ac80; assert_in_delta(0, (worksheet.costpercapita_ac80||0), 0.001); end
  def test_costpercapita_ad80; assert_in_delta(0, (worksheet.costpercapita_ad80||0), 0.001); end
  def test_costpercapita_ae80; assert_in_delta(0, (worksheet.costpercapita_ae80||0), 0.001); end
  def test_costpercapita_af80; assert_in_delta(0, (worksheet.costpercapita_af80||0), 0.001); end
  def test_costpercapita_ag80; assert_in_delta(0, (worksheet.costpercapita_ag80||0), 0.001); end
  def test_costpercapita_ai80; assert_in_epsilon(223.21552475171393, worksheet.costpercapita_ai80, 0.001); end
  def test_costpercapita_av80; assert_in_delta(0.07, worksheet.costpercapita_av80, 0.001); end
  def test_costpercapita_aw80; assert_in_epsilon(15, worksheet.costpercapita_aw80, 0.001); end
  def test_costpercapita_ay80; assert_in_epsilon(47.29565291354866, worksheet.costpercapita_ay80, 0.001); end
  def test_costpercapita_bi80; assert_in_epsilon(47.29565291354866, worksheet.costpercapita_bi80, 0.001); end
  def test_costpercapita_bs80; assert_in_epsilon(126.92293114789892, worksheet.costpercapita_bs80, 0.001); end
  def test_costpercapita_cf80; assert_in_epsilon(-96.292593603815, worksheet.costpercapita_cf80, 0.001); end
  def test_costpercapita_bt80; assert_in_epsilon(174.86366836078156, worksheet.costpercapita_bt80, 0.001); end
  def test_costpercapita_bu80; assert_in_epsilon(331.95936084289445, worksheet.costpercapita_bu80, 0.001); end
  def test_costpercapita_bv80; assert_in_epsilon(449.0410585819658, worksheet.costpercapita_bv80, 0.001); end
  def test_costpercapita_bw80; assert_in_epsilon(587.6940500495, worksheet.costpercapita_bw80, 0.001); end
  def test_costpercapita_bx80; assert_in_epsilon(661.3125407638842, worksheet.costpercapita_bx80, 0.001); end
  def test_costpercapita_by80; assert_in_epsilon(752.1269664489322, worksheet.costpercapita_by80, 0.001); end
  def test_costpercapita_bz80; assert_in_epsilon(847.2673040956212, worksheet.costpercapita_bz80, 0.001); end
  def test_costpercapita_ca80; assert_in_epsilon(947.7376096020855, worksheet.costpercapita_ca80, 0.001); end
  def test_costpercapita_cd80; assert_in_epsilon(10153.845199225594, worksheet.costpercapita_cd80, 0.001); end
  def test_costpercapita_cg80; assert_in_epsilon(4.538455090643548, worksheet.costpercapita_cg80, 0.001); end
  def test_costpercapita_ch80; assert_in_epsilon(-27.455787958344214, worksheet.costpercapita_ch80, 0.001); end
  def test_costpercapita_ci80; assert_in_epsilon(62.725500437241514, worksheet.costpercapita_ci80, 0.001); end
  def test_costpercapita_cj80; assert_in_epsilon(139.41529500985385, worksheet.costpercapita_cj80, 0.001); end
  def test_costpercapita_ck80; assert_in_epsilon(152.56340720024008, worksheet.costpercapita_ck80, 0.001); end
  def test_costpercapita_cl80; assert_in_epsilon(183.2057261368089, worksheet.costpercapita_cl80, 0.001); end
  def test_costpercapita_cm80; assert_in_epsilon(208.10975670737838, worksheet.costpercapita_cm80, 0.001); end
  def test_costpercapita_cn80; assert_in_epsilon(238.25070390493298, worksheet.costpercapita_cn80, 0.001); end
  def test_costpercapita_cq80; assert_in_epsilon(1647.7646798233086, worksheet.costpercapita_cq80, 0.001); end
  def test_costpercapita_aj80; assert_in_epsilon(170.32521327013802, worksheet.costpercapita_aj80, 0.001); end
  def test_costpercapita_ak80; assert_in_epsilon(359.4151488012387, worksheet.costpercapita_ak80, 0.001); end
  def test_costpercapita_al80; assert_in_epsilon(386.31555814472426, worksheet.costpercapita_al80, 0.001); end
  def test_costpercapita_am80; assert_in_epsilon(448.2787550396461, worksheet.costpercapita_am80, 0.001); end
  def test_costpercapita_an80; assert_in_epsilon(508.74913356364397, worksheet.costpercapita_an80, 0.001); end
  def test_costpercapita_ao80; assert_in_epsilon(568.9212403121232, worksheet.costpercapita_ao80, 0.001); end
  def test_costpercapita_ap80; assert_in_epsilon(639.1575473882428, worksheet.costpercapita_ap80, 0.001); end
  def test_costpercapita_aq80; assert_in_epsilon(709.4869056971526, worksheet.costpercapita_aq80, 0.001); end
  def test_costpercapita_at80; assert_in_epsilon(8506.080519402287, worksheet.costpercapita_at80, 0.001); end
  def test_costpercapita_cr80; assert_equal("ok", worksheet.costpercapita_cr80); end
  def test_costpercapita_a81; assert_equal("IX.a.Insulation", worksheet.costpercapita_a81); end
  def test_costpercapita_b81; assert_equal("Domestic insulation", worksheet.costpercapita_b81); end
  def test_costpercapita_c81; assert_equal("Buildings", worksheet.costpercapita_c81); end
  def test_costpercapita_o81; assert_in_delta(0, (worksheet.costpercapita_o81||0), 0.001); end
  def test_costpercapita_p81; assert_in_delta(0, (worksheet.costpercapita_p81||0), 0.001); end
  def test_costpercapita_q81; assert_in_delta(0, (worksheet.costpercapita_q81||0), 0.001); end
  def test_costpercapita_r81; assert_in_delta(0, (worksheet.costpercapita_r81||0), 0.001); end
  def test_costpercapita_s81; assert_in_delta(0, (worksheet.costpercapita_s81||0), 0.001); end
  def test_costpercapita_t81; assert_in_delta(0, (worksheet.costpercapita_t81||0), 0.001); end
  def test_costpercapita_u81; assert_in_delta(0, (worksheet.costpercapita_u81||0), 0.001); end
  def test_costpercapita_v81; assert_in_delta(0, (worksheet.costpercapita_v81||0), 0.001); end
  def test_costpercapita_w81; assert_in_delta(0, (worksheet.costpercapita_w81||0), 0.001); end
  def test_costpercapita_y81; assert_in_delta(0, (worksheet.costpercapita_y81||0), 0.001); end
  def test_costpercapita_z81; assert_in_delta(0, (worksheet.costpercapita_z81||0), 0.001); end
  def test_costpercapita_aa81; assert_in_delta(0, (worksheet.costpercapita_aa81||0), 0.001); end
  def test_costpercapita_ab81; assert_in_delta(0, (worksheet.costpercapita_ab81||0), 0.001); end
  def test_costpercapita_ac81; assert_in_delta(0, (worksheet.costpercapita_ac81||0), 0.001); end
  def test_costpercapita_ad81; assert_in_delta(0, (worksheet.costpercapita_ad81||0), 0.001); end
  def test_costpercapita_ae81; assert_in_delta(0, (worksheet.costpercapita_ae81||0), 0.001); end
  def test_costpercapita_af81; assert_in_delta(0, (worksheet.costpercapita_af81||0), 0.001); end
  def test_costpercapita_ag81; assert_in_delta(0, (worksheet.costpercapita_ag81||0), 0.001); end
  def test_costpercapita_av81; assert_in_delta(0.07, worksheet.costpercapita_av81, 0.001); end
  def test_costpercapita_aw81; assert_in_epsilon(30, worksheet.costpercapita_aw81, 0.001); end
  def test_costpercapita_bt81; assert_in_epsilon(168.512944658043, worksheet.costpercapita_bt81, 0.001); end
  def test_costpercapita_bu81; assert_in_epsilon(266.06827756782485, worksheet.costpercapita_bu81, 0.001); end
  def test_costpercapita_bv81; assert_in_epsilon(347.4348789216867, worksheet.costpercapita_bv81, 0.001); end
  def test_costpercapita_bw81; assert_in_epsilon(419.53438446829733, worksheet.costpercapita_bw81, 0.001); end
  def test_costpercapita_bx81; assert_in_epsilon(483.03955447345135, worksheet.costpercapita_bx81, 0.001); end
  def test_costpercapita_by81; assert_in_epsilon(486.3869628922015, worksheet.costpercapita_by81, 0.001); end
  def test_costpercapita_bz81; assert_in_epsilon(523.4580194810568, worksheet.costpercapita_bz81, 0.001); end
  def test_costpercapita_ca81; assert_in_epsilon(482.1066816162338, worksheet.costpercapita_ca81, 0.001); end
  def test_costpercapita_bs81; assert_in_epsilon(65.02524361880178, worksheet.costpercapita_bs81, 0.001); end
  def test_costpercapita_cd81; assert_in_epsilon(7140.509490928963, worksheet.costpercapita_cd81, 0.001); end
  def test_costpercapita_cg81; assert_in_epsilon(-93.64520696134969, worksheet.costpercapita_cg81, 0.001); end
  def test_costpercapita_ch81; assert_in_epsilon(10.263003840504894, worksheet.costpercapita_ch81, 0.001); end
  def test_costpercapita_ci81; assert_in_epsilon(125.05245249604873, worksheet.costpercapita_ci81, 0.001); end
  def test_costpercapita_cj81; assert_in_epsilon(217.03997827847735, worksheet.costpercapita_cj81, 0.001); end
  def test_costpercapita_ck81; assert_in_epsilon(300.90561834381657, worksheet.costpercapita_ck81, 0.001); end
  def test_costpercapita_cl81; assert_in_epsilon(316.54794625411716, worksheet.costpercapita_cl81, 0.001); end
  def test_costpercapita_cm81; assert_in_epsilon(373.17555378899704, worksheet.costpercapita_cm81, 0.001); end
  def test_costpercapita_cn81; assert_in_epsilon(338.88734066839237, worksheet.costpercapita_cn81, 0.001); end
  def test_costpercapita_cf81; assert_in_epsilon(-203.9417317256025, worksheet.costpercapita_cf81, 0.001); end
  def test_costpercapita_cq81; assert_in_epsilon(2579.973940826166, worksheet.costpercapita_cq81, 0.001); end
  def test_costpercapita_aj81; assert_in_epsilon(262.1581516193927, worksheet.costpercapita_aj81, 0.001); end
  def test_costpercapita_ak81; assert_in_epsilon(255.80527372731996, worksheet.costpercapita_ak81, 0.001); end
  def test_costpercapita_al81; assert_in_epsilon(222.38242642563793, worksheet.costpercapita_al81, 0.001); end
  def test_costpercapita_am81; assert_in_epsilon(202.49440618981998, worksheet.costpercapita_am81, 0.001); end
  def test_costpercapita_an81; assert_in_epsilon(182.13393612963475, worksheet.costpercapita_an81, 0.001); end
  def test_costpercapita_ao81; assert_in_epsilon(169.8390166380843, worksheet.costpercapita_ao81, 0.001); end
  def test_costpercapita_ap81; assert_in_epsilon(150.28246569205973, worksheet.costpercapita_ap81, 0.001); end
  def test_costpercapita_aq81; assert_in_epsilon(143.21934094784143, worksheet.costpercapita_aq81, 0.001); end
  def test_costpercapita_ai81; assert_in_epsilon(268.96697534440426, worksheet.costpercapita_ai81, 0.001); end
  def test_costpercapita_at81; assert_in_epsilon(4560.535550102797, worksheet.costpercapita_at81, 0.001); end
  def test_costpercapita_cr81; assert_equal("ok", worksheet.costpercapita_cr81); end
  def test_costpercapita_a82; assert_equal("IX.c", worksheet.costpercapita_a82); end
  def test_costpercapita_b82; assert_equal("Commercial heating and cooling", worksheet.costpercapita_b82); end
  def test_costpercapita_c82; assert_equal("Buildings", worksheet.costpercapita_c82); end
  def test_costpercapita_y82; assert_in_delta(0, (worksheet.costpercapita_y82||0), 0.001); end
  def test_costpercapita_z82; assert_in_delta(0, (worksheet.costpercapita_z82||0), 0.001); end
  def test_costpercapita_aa82; assert_in_delta(0, (worksheet.costpercapita_aa82||0), 0.001); end
  def test_costpercapita_ab82; assert_in_delta(0, (worksheet.costpercapita_ab82||0), 0.001); end
  def test_costpercapita_ac82; assert_in_delta(0, (worksheet.costpercapita_ac82||0), 0.001); end
  def test_costpercapita_ad82; assert_in_delta(0, (worksheet.costpercapita_ad82||0), 0.001); end
  def test_costpercapita_ae82; assert_in_delta(0, (worksheet.costpercapita_ae82||0), 0.001); end
  def test_costpercapita_af82; assert_in_delta(0, (worksheet.costpercapita_af82||0), 0.001); end
  def test_costpercapita_ag82; assert_in_delta(0, (worksheet.costpercapita_ag82||0), 0.001); end
  def test_costpercapita_av82; assert_in_delta(0.07, worksheet.costpercapita_av82, 0.001); end
  def test_costpercapita_aw82; assert_in_epsilon(15, worksheet.costpercapita_aw82, 0.001); end
  def test_costpercapita_bt82; assert_in_epsilon(46.26719580456022, worksheet.costpercapita_bt82, 0.001); end
  def test_costpercapita_bu82; assert_in_epsilon(68.32319277559017, worksheet.costpercapita_bu82, 0.001); end
  def test_costpercapita_bv82; assert_in_epsilon(79.19361733563437, worksheet.costpercapita_bv82, 0.001); end
  def test_costpercapita_bw82; assert_in_epsilon(76.33868595707399, worksheet.costpercapita_bw82, 0.001); end
  def test_costpercapita_bx82; assert_in_epsilon(71.58878422221716, worksheet.costpercapita_bx82, 0.001); end
  def test_costpercapita_by82; assert_in_epsilon(67.85496774538571, worksheet.costpercapita_by82, 0.001); end
  def test_costpercapita_bz82; assert_in_epsilon(64.99587980748403, worksheet.costpercapita_bz82, 0.001); end
  def test_costpercapita_ca82; assert_in_epsilon(62.88332523744899, worksheet.costpercapita_ca82, 0.001); end
  def test_costpercapita_bs82; assert_in_epsilon(23.34007033342415, worksheet.costpercapita_bs82, 0.001); end
  def test_costpercapita_cd82; assert_in_epsilon(1344.0405162150541, worksheet.costpercapita_cd82, 0.001); end
  def test_costpercapita_cg82; assert_in_epsilon(-9.817002892239456, worksheet.costpercapita_cg82, 0.001); end
  def test_costpercapita_ch82; assert_in_epsilon(11.896878545751283, worksheet.costpercapita_ch82, 0.001); end
  def test_costpercapita_ci82; assert_in_epsilon(27.420783153204088, worksheet.costpercapita_ci82, 0.001); end
  def test_costpercapita_cj82; assert_in_epsilon(28.482009430448294, worksheet.costpercapita_cj82, 0.001); end
  def test_costpercapita_ck82; assert_in_epsilon(26.876397603073343, worksheet.costpercapita_ck82, 0.001); end
  def test_costpercapita_cl82; assert_in_epsilon(25.44844692402498, worksheet.costpercapita_cl82, 0.001); end
  def test_costpercapita_cm82; assert_in_epsilon(24.489462608374843, worksheet.costpercapita_cm82, 0.001); end
  def test_costpercapita_cn82; assert_in_epsilon(23.902920100681175, worksheet.costpercapita_cn82, 0.001); end
  def test_costpercapita_cf82; assert_in_epsilon(-20.768823223821155, worksheet.costpercapita_cf82, 0.001); end
  def test_costpercapita_cq82; assert_in_epsilon(304.9914504173822, worksheet.costpercapita_cq82, 0.001); end
  def test_costpercapita_aj82; assert_in_epsilon(56.08419869679967, worksheet.costpercapita_aj82, 0.001); end
  def test_costpercapita_ak82; assert_in_epsilon(56.42631422983888, worksheet.costpercapita_ak82, 0.001); end
  def test_costpercapita_al82; assert_in_epsilon(51.772834182430294, worksheet.costpercapita_al82, 0.001); end
  def test_costpercapita_am82; assert_in_epsilon(47.8566765266257, worksheet.costpercapita_am82, 0.001); end
  def test_costpercapita_an82; assert_in_epsilon(44.71238661914381, worksheet.costpercapita_an82, 0.001); end
  def test_costpercapita_ao82; assert_in_epsilon(42.406520821360715, worksheet.costpercapita_ao82, 0.001); end
  def test_costpercapita_ap82; assert_in_epsilon(40.506417199109194, worksheet.costpercapita_ap82, 0.001); end
  def test_costpercapita_aq82; assert_in_epsilon(38.98040513676782, worksheet.costpercapita_aq82, 0.001); end
  def test_costpercapita_ai82; assert_in_epsilon(44.10889355724531, worksheet.costpercapita_ai82, 0.001); end
  def test_costpercapita_at82; assert_in_epsilon(1039.0490657976718, worksheet.costpercapita_at82, 0.001); end
  def test_costpercapita_cr82; assert_equal("ok", worksheet.costpercapita_cr82); end
  def test_costpercapita_a83; assert_equal("X.a", worksheet.costpercapita_a83); end
  def test_costpercapita_b83; assert_equal("Domestic lighting, appliances, and cooking", worksheet.costpercapita_b83); end
  def test_costpercapita_c83; assert_equal("Buildings", worksheet.costpercapita_c83); end
  def test_costpercapita_o83; assert_in_delta(0, (worksheet.costpercapita_o83||0), 0.001); end
  def test_costpercapita_p83; assert_in_delta(0, (worksheet.costpercapita_p83||0), 0.001); end
  def test_costpercapita_q83; assert_in_delta(0, (worksheet.costpercapita_q83||0), 0.001); end
  def test_costpercapita_r83; assert_in_delta(0, (worksheet.costpercapita_r83||0), 0.001); end
  def test_costpercapita_s83; assert_in_delta(0, (worksheet.costpercapita_s83||0), 0.001); end
  def test_costpercapita_t83; assert_in_delta(0, (worksheet.costpercapita_t83||0), 0.001); end
  def test_costpercapita_u83; assert_in_delta(0, (worksheet.costpercapita_u83||0), 0.001); end
  def test_costpercapita_v83; assert_in_delta(0, (worksheet.costpercapita_v83||0), 0.001); end
  def test_costpercapita_w83; assert_in_delta(0, (worksheet.costpercapita_w83||0), 0.001); end
  def test_costpercapita_y83; assert_in_delta(0, (worksheet.costpercapita_y83||0), 0.001); end
  def test_costpercapita_z83; assert_in_delta(0, (worksheet.costpercapita_z83||0), 0.001); end
  def test_costpercapita_aa83; assert_in_delta(0, (worksheet.costpercapita_aa83||0), 0.001); end
  def test_costpercapita_ab83; assert_in_delta(0, (worksheet.costpercapita_ab83||0), 0.001); end
  def test_costpercapita_ac83; assert_in_delta(0, (worksheet.costpercapita_ac83||0), 0.001); end
  def test_costpercapita_ad83; assert_in_delta(0, (worksheet.costpercapita_ad83||0), 0.001); end
  def test_costpercapita_ae83; assert_in_delta(0, (worksheet.costpercapita_ae83||0), 0.001); end
  def test_costpercapita_af83; assert_in_delta(0, (worksheet.costpercapita_af83||0), 0.001); end
  def test_costpercapita_ag83; assert_in_delta(0, (worksheet.costpercapita_ag83||0), 0.001); end
  def test_costpercapita_av83; assert_in_delta(0.07, worksheet.costpercapita_av83, 0.001); end
  def test_costpercapita_aw83; assert_in_epsilon(15, worksheet.costpercapita_aw83, 0.001); end
  def test_costpercapita_bt83; assert_in_epsilon(37.012947878092376, worksheet.costpercapita_bt83, 0.001); end
  def test_costpercapita_bu83; assert_in_epsilon(59.35550585461566, worksheet.costpercapita_bu83, 0.001); end
  def test_costpercapita_bv83; assert_in_epsilon(68.3873656706561, worksheet.costpercapita_bv83, 0.001); end
  def test_costpercapita_bw83; assert_in_epsilon(68.34611070700839, worksheet.costpercapita_bw83, 0.001); end
  def test_costpercapita_bx83; assert_in_epsilon(68.2002864146311, worksheet.costpercapita_bx83, 0.001); end
  def test_costpercapita_by83; assert_in_epsilon(67.968348366727, worksheet.costpercapita_by83, 0.001); end
  def test_costpercapita_bz83; assert_in_epsilon(67.7608635323235, worksheet.costpercapita_bz83, 0.001); end
  def test_costpercapita_ca83; assert_in_epsilon(67.8269377605445, worksheet.costpercapita_ca83, 0.001); end
  def test_costpercapita_bs83; assert_in_epsilon(13.906601736886792, worksheet.costpercapita_bs83, 0.001); end
  def test_costpercapita_cd83; assert_in_epsilon(1215.3608471247624, worksheet.costpercapita_cd83, 0.001); end
  def test_costpercapita_cg83; assert_in_epsilon(-5.912500176761425, worksheet.costpercapita_cg83, 0.001); end
  def test_costpercapita_ch83; assert_in_epsilon(16.449410047476743, worksheet.costpercapita_ch83, 0.001); end
  def test_costpercapita_ci83; assert_in_epsilon(25.62623076622638, worksheet.costpercapita_ci83, 0.001); end
  def test_costpercapita_cj83; assert_in_epsilon(25.882573384707168, worksheet.costpercapita_cj83, 0.001); end
  def test_costpercapita_ck83; assert_in_epsilon(26.04424140034809, worksheet.costpercapita_ck83, 0.001); end
  def test_costpercapita_cl83; assert_in_epsilon(25.994400130215173, worksheet.costpercapita_cl83, 0.001); end
  def test_costpercapita_cm83; assert_in_epsilon(25.899512169733754, worksheet.costpercapita_cm83, 0.001); end
  def test_costpercapita_cn83; assert_in_epsilon(25.723674082263287, worksheet.costpercapita_cn83, 0.001); end
  def test_costpercapita_cf83; assert_in_epsilon(-28.31344250406866, worksheet.costpercapita_cf83, 0.001); end
  def test_costpercapita_cq83; assert_in_epsilon(321.9255738867964, worksheet.costpercapita_cq83, 0.001); end
  def test_costpercapita_aj83; assert_in_epsilon(42.9254480548538, worksheet.costpercapita_aj83, 0.001); end
  def test_costpercapita_ak83; assert_in_epsilon(42.90609580713892, worksheet.costpercapita_ak83, 0.001); end
  def test_costpercapita_al83; assert_in_epsilon(42.7611349044297, worksheet.costpercapita_al83, 0.001); end
  def test_costpercapita_am83; assert_in_epsilon(42.46353732230122, worksheet.costpercapita_am83, 0.001); end
  def test_costpercapita_an83; assert_in_epsilon(42.156045014283, worksheet.costpercapita_an83, 0.001); end
  def test_costpercapita_ao83; assert_in_epsilon(41.97394823651182, worksheet.costpercapita_ao83, 0.001); end
  def test_costpercapita_ap83; assert_in_epsilon(41.86135136258974, worksheet.costpercapita_ap83, 0.001); end
  def test_costpercapita_aq83; assert_in_epsilon(42.10326367828121, worksheet.costpercapita_aq83, 0.001); end
  def test_costpercapita_ai83; assert_in_epsilon(42.22004424095545, worksheet.costpercapita_ai83, 0.001); end
  def test_costpercapita_at83; assert_in_epsilon(893.4352732379658, worksheet.costpercapita_at83, 0.001); end
  def test_costpercapita_cr83; assert_equal("ok", worksheet.costpercapita_cr83); end
  def test_costpercapita_a84; assert_equal("X.b", worksheet.costpercapita_a84); end
  def test_costpercapita_b84; assert_equal("Commercial lighting, appliances, and catering", worksheet.costpercapita_b84); end
  def test_costpercapita_c84; assert_equal("Buildings", worksheet.costpercapita_c84); end
  def test_costpercapita_o84; assert_in_delta(0, (worksheet.costpercapita_o84||0), 0.001); end
  def test_costpercapita_p84; assert_in_delta(0, (worksheet.costpercapita_p84||0), 0.001); end
  def test_costpercapita_q84; assert_in_delta(0, (worksheet.costpercapita_q84||0), 0.001); end
  def test_costpercapita_r84; assert_in_delta(0, (worksheet.costpercapita_r84||0), 0.001); end
  def test_costpercapita_s84; assert_in_delta(0, (worksheet.costpercapita_s84||0), 0.001); end
  def test_costpercapita_t84; assert_in_delta(0, (worksheet.costpercapita_t84||0), 0.001); end
  def test_costpercapita_u84; assert_in_delta(0, (worksheet.costpercapita_u84||0), 0.001); end
  def test_costpercapita_v84; assert_in_delta(0, (worksheet.costpercapita_v84||0), 0.001); end
  def test_costpercapita_w84; assert_in_delta(0, (worksheet.costpercapita_w84||0), 0.001); end
  def test_costpercapita_y84; assert_in_delta(0, (worksheet.costpercapita_y84||0), 0.001); end
  def test_costpercapita_z84; assert_in_delta(0, (worksheet.costpercapita_z84||0), 0.001); end
  def test_costpercapita_aa84; assert_in_delta(0, (worksheet.costpercapita_aa84||0), 0.001); end
  def test_costpercapita_ab84; assert_in_delta(0, (worksheet.costpercapita_ab84||0), 0.001); end
  def test_costpercapita_ac84; assert_in_delta(0, (worksheet.costpercapita_ac84||0), 0.001); end
  def test_costpercapita_ad84; assert_in_delta(0, (worksheet.costpercapita_ad84||0), 0.001); end
  def test_costpercapita_ae84; assert_in_delta(0, (worksheet.costpercapita_ae84||0), 0.001); end
  def test_costpercapita_af84; assert_in_delta(0, (worksheet.costpercapita_af84||0), 0.001); end
  def test_costpercapita_ag84; assert_in_delta(0, (worksheet.costpercapita_ag84||0), 0.001); end
  def test_costpercapita_av84; assert_in_delta(0, (worksheet.costpercapita_av84||0), 0.001); end
  def test_costpercapita_aw84; assert_in_epsilon(5, worksheet.costpercapita_aw84, 0.001); end
  def test_costpercapita_bt84; assert_in_epsilon(5.1498161766787875, worksheet.costpercapita_bt84, 0.001); end
  def test_costpercapita_bu84; assert_in_epsilon(8.817841313039805, worksheet.costpercapita_bu84, 0.001); end
  def test_costpercapita_bv84; assert_in_epsilon(11.18549811143143, worksheet.costpercapita_bv84, 0.001); end
  def test_costpercapita_bw84; assert_in_epsilon(10.168765299824486, worksheet.costpercapita_bw84, 0.001); end
  def test_costpercapita_bx84; assert_in_epsilon(9.317113841406677, worksheet.costpercapita_bx84, 0.001); end
  def test_costpercapita_by84; assert_in_epsilon(8.591726135595973, worksheet.costpercapita_by84, 0.001); end
  def test_costpercapita_bz84; assert_in_epsilon(7.9679950319387585, worksheet.costpercapita_bz84, 0.001); end
  def test_costpercapita_ca84; assert_in_epsilon(7.431844900259076, worksheet.costpercapita_ca84, 0.001); end
  def test_costpercapita_bs84; assert_in_delta(0.9206942277489177, worksheet.costpercapita_bs84, 0.001); end
  def test_costpercapita_cd84; assert_in_epsilon(169.90419696033095, worksheet.costpercapita_cd84, 0.001); end
  def test_costpercapita_cg84; assert_in_epsilon(-2.6091828024577155, worksheet.costpercapita_cg84, 0.001); end
  def test_costpercapita_ch84; assert_in_epsilon(1.8291192265505118, worksheet.costpercapita_ch84, 0.001); end
  def test_costpercapita_ci84; assert_in_epsilon(4.855117427232904, worksheet.costpercapita_ci84, 0.001); end
  def test_costpercapita_cj84; assert_in_epsilon(4.39025699385465, worksheet.costpercapita_cj84, 0.001); end
  def test_costpercapita_ck84; assert_in_epsilon(4.000002113937826, worksheet.costpercapita_ck84, 0.001); end
  def test_costpercapita_cl84; assert_in_epsilon(3.6669622259059773, worksheet.costpercapita_cl84, 0.001); end
  def test_costpercapita_cm84; assert_in_epsilon(3.380071001569827, worksheet.costpercapita_cm84, 0.001); end
  def test_costpercapita_cn84; assert_in_epsilon(3.1328832104939672, worksheet.costpercapita_cn84, 0.001); end
  def test_costpercapita_cf84; assert_in_epsilon(-1.8745070560302544, worksheet.costpercapita_cf84, 0.001); end
  def test_costpercapita_cq84; assert_in_epsilon(43.488423362665266, worksheet.costpercapita_cq84, 0.001); end
  def test_costpercapita_aj84; assert_in_epsilon(7.758998979136503, worksheet.costpercapita_aj84, 0.001); end
  def test_costpercapita_ak84; assert_in_epsilon(6.988722086489293, worksheet.costpercapita_ak84, 0.001); end
  def test_costpercapita_al84; assert_in_epsilon(6.330380684198525, worksheet.costpercapita_al84, 0.001); end
  def test_costpercapita_am84; assert_in_epsilon(5.778508305969835, worksheet.costpercapita_am84, 0.001); end
  def test_costpercapita_an84; assert_in_epsilon(5.317111727468851, worksheet.costpercapita_an84, 0.001); end
  def test_costpercapita_ao84; assert_in_epsilon(4.924763909689996, worksheet.costpercapita_ao84, 0.001); end
  def test_costpercapita_ap84; assert_in_epsilon(4.587924030368931, worksheet.costpercapita_ap84, 0.001); end
  def test_costpercapita_aq84; assert_in_epsilon(4.298961689765109, worksheet.costpercapita_aq84, 0.001); end
  def test_costpercapita_ai84; assert_in_epsilon(2.795201283779172, worksheet.costpercapita_ai84, 0.001); end
  def test_costpercapita_at84; assert_in_epsilon(126.41577359766565, worksheet.costpercapita_at84, 0.001); end
  def test_costpercapita_cr84; assert_equal("ok", worksheet.costpercapita_cr84); end
  def test_costpercapita_a85; assert_equal("XI.a", worksheet.costpercapita_a85); end
  def test_costpercapita_b85; assert_equal("Industrial processes", worksheet.costpercapita_b85); end
  def test_costpercapita_c85; assert_equal("Industry", worksheet.costpercapita_c85); end
  def test_costpercapita_y85; assert_in_delta(0, (worksheet.costpercapita_y85||0), 0.001); end
  def test_costpercapita_z85; assert_in_delta(0, (worksheet.costpercapita_z85||0), 0.001); end
  def test_costpercapita_aa85; assert_in_delta(0, (worksheet.costpercapita_aa85||0), 0.001); end
  def test_costpercapita_ab85; assert_in_delta(0, (worksheet.costpercapita_ab85||0), 0.001); end
  def test_costpercapita_ac85; assert_in_delta(0, (worksheet.costpercapita_ac85||0), 0.001); end
  def test_costpercapita_ad85; assert_in_delta(0, (worksheet.costpercapita_ad85||0), 0.001); end
  def test_costpercapita_ae85; assert_in_delta(0, (worksheet.costpercapita_ae85||0), 0.001); end
  def test_costpercapita_af85; assert_in_delta(0, (worksheet.costpercapita_af85||0), 0.001); end
  def test_costpercapita_ag85; assert_in_delta(0, (worksheet.costpercapita_ag85||0), 0.001); end
  def test_costpercapita_av85; assert_in_delta(0, (worksheet.costpercapita_av85||0), 0.001); end
  def test_costpercapita_aw85; assert_in_epsilon(5, worksheet.costpercapita_aw85, 0.001); end
  def test_costpercapita_bt85; assert_in_epsilon(124.53107888152206, worksheet.costpercapita_bt85, 0.001); end
  def test_costpercapita_bu85; assert_in_epsilon(126.01597054477602, worksheet.costpercapita_bu85, 0.001); end
  def test_costpercapita_bv85; assert_in_epsilon(127.5567661873503, worksheet.costpercapita_bv85, 0.001); end
  def test_costpercapita_bw85; assert_in_epsilon(129.65627745640188, worksheet.costpercapita_bw85, 0.001); end
  def test_costpercapita_bx85; assert_in_epsilon(132.56973883129368, worksheet.costpercapita_bx85, 0.001); end
  def test_costpercapita_by85; assert_in_epsilon(136.43509901619558, worksheet.costpercapita_by85, 0.001); end
  def test_costpercapita_bz85; assert_in_epsilon(141.5248519295285, worksheet.costpercapita_bz85, 0.001); end
  def test_costpercapita_ca85; assert_in_epsilon(148.45908261352918, worksheet.costpercapita_ca85, 0.001); end
  def test_costpercapita_bs85; assert_in_epsilon(123.34176432488337, worksheet.costpercapita_bs85, 0.001); end
  def test_costpercapita_cd85; assert_in_epsilon(2738.553787408014, worksheet.costpercapita_cd85, 0.001); end
  def test_costpercapita_cg85; assert_in_delta(-0.14351629784870729, worksheet.costpercapita_cg85, 0.001); end
  def test_costpercapita_ch85; assert_in_delta(0.2830940937895415, worksheet.costpercapita_ch85, 0.001); end
  def test_costpercapita_ci85; assert_in_delta(0.5919761343015919, worksheet.costpercapita_ci85, 0.001); end
  def test_costpercapita_cj85; assert_in_delta(0.718976717730212, worksheet.costpercapita_cj85, 0.001); end
  def test_costpercapita_ck85; assert_in_delta(0.7476975065584196, worksheet.costpercapita_ck85, 0.001); end
  def test_costpercapita_cl85; assert_in_delta(0.8323091520773266, worksheet.costpercapita_cl85, 0.001); end
  def test_costpercapita_cm85; assert_in_delta(0.9672712102978689, worksheet.costpercapita_cm85, 0.001); end
  def test_costpercapita_cn85; assert_in_epsilon(1.1784029471332615, worksheet.costpercapita_cn85, 0.001); end
  def test_costpercapita_cf85; assert_in_delta(-0.771708527831373, worksheet.costpercapita_cf85, 0.001); end
  def test_costpercapita_cq85; assert_in_epsilon(9.313902382057124, worksheet.costpercapita_cq85, 0.001); end
  def test_costpercapita_aj85; assert_in_epsilon(124.67459517937077, worksheet.costpercapita_aj85, 0.001); end
  def test_costpercapita_ak85; assert_in_epsilon(125.7328764509865, worksheet.costpercapita_ak85, 0.001); end
  def test_costpercapita_al85; assert_in_epsilon(126.96479005304872, worksheet.costpercapita_al85, 0.001); end
  def test_costpercapita_am85; assert_in_epsilon(128.93730073867167, worksheet.costpercapita_am85, 0.001); end
  def test_costpercapita_an85; assert_in_epsilon(131.82204132473527, worksheet.costpercapita_an85, 0.001); end
  def test_costpercapita_ao85; assert_in_epsilon(135.60278986411825, worksheet.costpercapita_ao85, 0.001); end
  def test_costpercapita_ap85; assert_in_epsilon(140.55758071923066, worksheet.costpercapita_ap85, 0.001); end
  def test_costpercapita_aq85; assert_in_epsilon(147.28067966639594, worksheet.costpercapita_aq85, 0.001); end
  def test_costpercapita_ai85; assert_in_epsilon(124.11347285271476, worksheet.costpercapita_ai85, 0.001); end
  def test_costpercapita_at85; assert_in_epsilon(2729.239885025956, worksheet.costpercapita_at85, 0.001); end
  def test_costpercapita_cr85; assert_equal("ok", worksheet.costpercapita_cr85); end
  def test_costpercapita_a86; assert_equal("XII.a.ICE", worksheet.costpercapita_a86); end
  def test_costpercapita_b86; assert_equal("Conventional cars and buses", worksheet.costpercapita_b86); end
  def test_costpercapita_c86; assert_equal("Transport", worksheet.costpercapita_c86); end
  def test_costpercapita_y86; assert_in_delta(0, (worksheet.costpercapita_y86||0), 0.001); end
  def test_costpercapita_z86; assert_in_delta(0, (worksheet.costpercapita_z86||0), 0.001); end
  def test_costpercapita_aa86; assert_in_delta(0, (worksheet.costpercapita_aa86||0), 0.001); end
  def test_costpercapita_ab86; assert_in_delta(0, (worksheet.costpercapita_ab86||0), 0.001); end
  def test_costpercapita_ac86; assert_in_delta(0, (worksheet.costpercapita_ac86||0), 0.001); end
  def test_costpercapita_ad86; assert_in_delta(0, (worksheet.costpercapita_ad86||0), 0.001); end
  def test_costpercapita_ae86; assert_in_delta(0, (worksheet.costpercapita_ae86||0), 0.001); end
  def test_costpercapita_af86; assert_in_delta(0, (worksheet.costpercapita_af86||0), 0.001); end
  def test_costpercapita_ag86; assert_in_delta(0, (worksheet.costpercapita_ag86||0), 0.001); end
  def test_costpercapita_av86; assert_in_delta(0.07, worksheet.costpercapita_av86, 0.001); end
  def test_costpercapita_aw86; assert_in_epsilon(15, worksheet.costpercapita_aw86, 0.001); end
  def test_costpercapita_bt86; assert_in_epsilon(1339.869137915264, worksheet.costpercapita_bt86, 0.001); end
  def test_costpercapita_bu86; assert_in_epsilon(1536.6802994917382, worksheet.costpercapita_bu86, 0.001); end
  def test_costpercapita_bv86; assert_in_epsilon(1145.3289699037248, worksheet.costpercapita_bv86, 0.001); end
  def test_costpercapita_bw86; assert_in_epsilon(620.5413938566163, worksheet.costpercapita_bw86, 0.001); end
  def test_costpercapita_bx86; assert_in_epsilon(383.890730053985, worksheet.costpercapita_bx86, 0.001); end
  def test_costpercapita_by86; assert_in_epsilon(336.9055921527393, worksheet.costpercapita_by86, 0.001); end
  def test_costpercapita_bz86; assert_in_epsilon(296.7105682740219, worksheet.costpercapita_bz86, 0.001); end
  def test_costpercapita_ca86; assert_in_epsilon(175.51119627607952, worksheet.costpercapita_ca86, 0.001); end
  def test_costpercapita_bs86; assert_in_epsilon(1094.5242542355138, worksheet.costpercapita_bs86, 0.001); end
  def test_costpercapita_cd86; assert_in_epsilon(19260.55144000016, worksheet.costpercapita_cd86, 0.001); end
  def test_costpercapita_cg86; assert_in_epsilon(-49.99573860592266, worksheet.costpercapita_cg86, 0.001); end
  def test_costpercapita_ch86; assert_in_epsilon(298.4772820472929, worksheet.costpercapita_ch86, 0.001); end
  def test_costpercapita_ci86; assert_in_epsilon(531.2760849329006, worksheet.costpercapita_ci86, 0.001); end
  def test_costpercapita_cj86; assert_in_epsilon(351.21007385997467, worksheet.costpercapita_cj86, 0.001); end
  def test_costpercapita_ck86; assert_in_epsilon(13.054867553464875, worksheet.costpercapita_ck86, 0.001); end
  def test_costpercapita_cl86; assert_in_epsilon(28.0942709321415, worksheet.costpercapita_cl86, 0.001); end
  def test_costpercapita_cm86; assert_in_epsilon(121.05179758249787, worksheet.costpercapita_cm86, 0.001); end
  def test_costpercapita_cn86; assert_in_epsilon(80.6188178165919, worksheet.costpercapita_cn86, 0.001); end
  def test_costpercapita_cf86; assert_in_epsilon(-471.7319842743947, worksheet.costpercapita_cf86, 0.001); end
  def test_costpercapita_cq86; assert_in_epsilon(3214.416246939919, worksheet.costpercapita_cq86, 0.001); end
  def test_costpercapita_aj86; assert_in_epsilon(1389.8648765211867, worksheet.costpercapita_aj86, 0.001); end
  def test_costpercapita_ak86; assert_in_epsilon(1238.2030174444455, worksheet.costpercapita_ak86, 0.001); end
  def test_costpercapita_al86; assert_in_epsilon(614.0528849708243, worksheet.costpercapita_al86, 0.001); end
  def test_costpercapita_am86; assert_in_epsilon(269.3313199966416, worksheet.costpercapita_am86, 0.001); end
  def test_costpercapita_an86; assert_in_epsilon(370.83586250052014, worksheet.costpercapita_an86, 0.001); end
  def test_costpercapita_ao86; assert_in_epsilon(308.81132122059785, worksheet.costpercapita_ao86, 0.001); end
  def test_costpercapita_ap86; assert_in_epsilon(175.65877069152404, worksheet.costpercapita_ap86, 0.001); end
  def test_costpercapita_aq86; assert_in_epsilon(94.8923784594876, worksheet.costpercapita_aq86, 0.001); end
  def test_costpercapita_ai86; assert_in_epsilon(1566.2562385099088, worksheet.costpercapita_ai86, 0.001); end
  def test_costpercapita_at86; assert_in_epsilon(16046.13519306024, worksheet.costpercapita_at86, 0.001); end
  def test_costpercapita_cr86; assert_equal("ok", worksheet.costpercapita_cr86); end
  def test_costpercapita_a87; assert_equal("XII.a.HEV", worksheet.costpercapita_a87); end
  def test_costpercapita_b87; assert_equal("Hybrid cars and buses", worksheet.costpercapita_b87); end
  def test_costpercapita_c87; assert_equal("Transport", worksheet.costpercapita_c87); end
  def test_costpercapita_y87; assert_in_delta(0, (worksheet.costpercapita_y87||0), 0.001); end
  def test_costpercapita_z87; assert_in_delta(0, (worksheet.costpercapita_z87||0), 0.001); end
  def test_costpercapita_aa87; assert_in_delta(0, (worksheet.costpercapita_aa87||0), 0.001); end
  def test_costpercapita_ab87; assert_in_delta(0, (worksheet.costpercapita_ab87||0), 0.001); end
  def test_costpercapita_ac87; assert_in_delta(0, (worksheet.costpercapita_ac87||0), 0.001); end
  def test_costpercapita_ad87; assert_in_delta(0, (worksheet.costpercapita_ad87||0), 0.001); end
  def test_costpercapita_ae87; assert_in_delta(0, (worksheet.costpercapita_ae87||0), 0.001); end
  def test_costpercapita_af87; assert_in_delta(0, (worksheet.costpercapita_af87||0), 0.001); end
  def test_costpercapita_ag87; assert_in_delta(0, (worksheet.costpercapita_ag87||0), 0.001); end
  def test_costpercapita_av87; assert_in_delta(0.07, worksheet.costpercapita_av87, 0.001); end
  def test_costpercapita_aw87; assert_in_epsilon(15, worksheet.costpercapita_aw87, 0.001); end
  def test_costpercapita_bt87; assert_in_epsilon(38.83735865168531, worksheet.costpercapita_bt87, 0.001); end
  def test_costpercapita_bu87; assert_in_epsilon(81.6749919173302, worksheet.costpercapita_bu87, 0.001); end
  def test_costpercapita_bv87; assert_in_epsilon(582.108629571256, worksheet.costpercapita_bv87, 0.001); end
  def test_costpercapita_bw87; assert_in_epsilon(1042.905664422854, worksheet.costpercapita_bw87, 0.001); end
  def test_costpercapita_bx87; assert_in_epsilon(1004.5268818797495, worksheet.costpercapita_bx87, 0.001); end
  def test_costpercapita_by87; assert_in_epsilon(715.1036298312405, worksheet.costpercapita_by87, 0.001); end
  def test_costpercapita_bz87; assert_in_epsilon(441.3833308039462, worksheet.costpercapita_bz87, 0.001); end
  def test_costpercapita_ca87; assert_in_epsilon(373.48820398763246, worksheet.costpercapita_ca87, 0.001); end
  def test_costpercapita_bs87; assert_in_delta(0.9360310785802688, worksheet.costpercapita_bs87, 0.001); end
  def test_costpercapita_cd87; assert_in_epsilon(9384.369720118244, worksheet.costpercapita_cd87, 0.001); end
  def test_costpercapita_cg87; assert_in_epsilon(-16.35405843162616, worksheet.costpercapita_cg87, 0.001); end
  def test_costpercapita_ch87; assert_in_epsilon(-1.7962900529888821, worksheet.costpercapita_ch87, 0.001); end
  def test_costpercapita_ci87; assert_in_epsilon(-186.35991094158737, worksheet.costpercapita_ci87, 0.001); end
  def test_costpercapita_cj87; assert_in_epsilon(27.594631963573853, worksheet.costpercapita_cj87, 0.001); end
  def test_costpercapita_ck87; assert_in_epsilon(505.3573986241438, worksheet.costpercapita_ck87, 0.001); end
  def test_costpercapita_cl87; assert_in_epsilon(360.92088503837186, worksheet.costpercapita_cl87, 0.001); end
  def test_costpercapita_cm87; assert_in_epsilon(101.99119826602039, worksheet.costpercapita_cm87, 0.001); end
  def test_costpercapita_cn87; assert_in_epsilon(92.65688550038988, worksheet.costpercapita_cn87, 0.001); end
  def test_costpercapita_cf87; assert_in_epsilon(-1.0361200022442345, worksheet.costpercapita_cf87, 0.001); end
  def test_costpercapita_cq87; assert_in_epsilon(1428.5935032469781, worksheet.costpercapita_cq87, 0.001); end
  def test_costpercapita_aj87; assert_in_epsilon(55.19141708331147, worksheet.costpercapita_aj87, 0.001); end
  def test_costpercapita_ak87; assert_in_epsilon(83.47128197031907, worksheet.costpercapita_ak87, 0.001); end
  def test_costpercapita_al87; assert_in_epsilon(768.4685405128432, worksheet.costpercapita_al87, 0.001); end
  def test_costpercapita_am87; assert_in_epsilon(1015.3110324592801, worksheet.costpercapita_am87, 0.001); end
  def test_costpercapita_an87; assert_in_epsilon(499.16948325560577, worksheet.costpercapita_an87, 0.001); end
  def test_costpercapita_ao87; assert_in_epsilon(354.18274479286856, worksheet.costpercapita_ao87, 0.001); end
  def test_costpercapita_ap87; assert_in_epsilon(339.3921325379258, worksheet.costpercapita_ap87, 0.001); end
  def test_costpercapita_aq87; assert_in_epsilon(280.8313184872426, worksheet.costpercapita_aq87, 0.001); end
  def test_costpercapita_ai87; assert_in_epsilon(1.9721510808245033, worksheet.costpercapita_ai87, 0.001); end
  def test_costpercapita_at87; assert_in_epsilon(7955.776216871267, worksheet.costpercapita_at87, 0.001); end
  def test_costpercapita_cr87; assert_equal("ok", worksheet.costpercapita_cr87); end
  def test_costpercapita_a88; assert_equal("XII.a.EV", worksheet.costpercapita_a88); end
  def test_costpercapita_b88; assert_equal("Electric cars and buses", worksheet.costpercapita_b88); end
  def test_costpercapita_c88; assert_equal("Transport", worksheet.costpercapita_c88); end
  def test_costpercapita_y88; assert_in_delta(0, (worksheet.costpercapita_y88||0), 0.001); end
  def test_costpercapita_z88; assert_in_delta(0, (worksheet.costpercapita_z88||0), 0.001); end
  def test_costpercapita_aa88; assert_in_delta(0, (worksheet.costpercapita_aa88||0), 0.001); end
  def test_costpercapita_ab88; assert_in_delta(0, (worksheet.costpercapita_ab88||0), 0.001); end
  def test_costpercapita_ac88; assert_in_delta(0, (worksheet.costpercapita_ac88||0), 0.001); end
  def test_costpercapita_ad88; assert_in_delta(0, (worksheet.costpercapita_ad88||0), 0.001); end
  def test_costpercapita_ae88; assert_in_delta(0, (worksheet.costpercapita_ae88||0), 0.001); end
  def test_costpercapita_af88; assert_in_delta(0, (worksheet.costpercapita_af88||0), 0.001); end
  def test_costpercapita_ag88; assert_in_delta(0, (worksheet.costpercapita_ag88||0), 0.001); end
  def test_costpercapita_av88; assert_in_delta(0.07, worksheet.costpercapita_av88, 0.001); end
  def test_costpercapita_aw88; assert_in_epsilon(15, worksheet.costpercapita_aw88, 0.001); end
  def test_costpercapita_bt88; assert_in_epsilon(31.305033250715603, worksheet.costpercapita_bt88, 0.001); end
  def test_costpercapita_bu88; assert_in_epsilon(64.05721348739182, worksheet.costpercapita_bu88, 0.001); end
  def test_costpercapita_bv88; assert_in_epsilon(180.2092521568961, worksheet.costpercapita_bv88, 0.001); end
  def test_costpercapita_bw88; assert_in_epsilon(278.4449262766681, worksheet.costpercapita_bw88, 0.001); end
  def test_costpercapita_bx88; assert_in_epsilon(444.3469503277364, worksheet.costpercapita_bx88, 0.001); end
  def test_costpercapita_by88; assert_in_epsilon(549.2666254471321, worksheet.costpercapita_by88, 0.001); end
  def test_costpercapita_bz88; assert_in_epsilon(628.4208469670234, worksheet.costpercapita_bz88, 0.001); end
  def test_costpercapita_ca88; assert_in_epsilon(637.7448157278345, worksheet.costpercapita_ca88, 0.001); end
  def test_costpercapita_bs88; assert_in_delta(0, (worksheet.costpercapita_bs88||0), 0.001); end
  def test_costpercapita_cd88; assert_in_epsilon(5325.941853964679, worksheet.costpercapita_cd88, 0.001); end
  def test_costpercapita_cg88; assert_in_epsilon(-16.869100125246604, worksheet.costpercapita_cg88, 0.001); end
  def test_costpercapita_ch88; assert_in_delta(-0.8728539637198158, worksheet.costpercapita_ch88, 0.001); end
  def test_costpercapita_ci88; assert_in_epsilon(-25.27620227096109, worksheet.costpercapita_ci88, 0.001); end
  def test_costpercapita_cj88; assert_in_epsilon(25.962329205376147, worksheet.costpercapita_cj88, 0.001); end
  def test_costpercapita_ck88; assert_in_epsilon(47.64915971440682, worksheet.costpercapita_ck88, 0.001); end
  def test_costpercapita_cl88; assert_in_epsilon(107.66842636568401, worksheet.costpercapita_cl88, 0.001); end
  def test_costpercapita_cm88; assert_in_epsilon(173.08473704170646, worksheet.costpercapita_cm88, 0.001); end
  def test_costpercapita_cn88; assert_in_epsilon(189.1635106918044, worksheet.costpercapita_cn88, 0.001); end
  def test_costpercapita_cf88; assert_in_delta(0, (worksheet.costpercapita_cf88||0), 0.001); end
  def test_costpercapita_cq88; assert_in_epsilon(725.0156541899474, worksheet.costpercapita_cq88, 0.001); end
  def test_costpercapita_aj88; assert_in_epsilon(48.1741333759622, worksheet.costpercapita_aj88, 0.001); end
  def test_costpercapita_ak88; assert_in_epsilon(64.93006745111165, worksheet.costpercapita_ak88, 0.001); end
  def test_costpercapita_al88; assert_in_epsilon(205.48545442785718, worksheet.costpercapita_al88, 0.001); end
  def test_costpercapita_am88; assert_in_epsilon(252.482597071292, worksheet.costpercapita_am88, 0.001); end
  def test_costpercapita_an88; assert_in_epsilon(396.69779061332963, worksheet.costpercapita_an88, 0.001); end
  def test_costpercapita_ao88; assert_in_epsilon(441.5981990814481, worksheet.costpercapita_ao88, 0.001); end
  def test_costpercapita_ap88; assert_in_epsilon(455.3361099253168, worksheet.costpercapita_ap88, 0.001); end
  def test_costpercapita_aq88; assert_in_epsilon(448.58130503603, worksheet.costpercapita_aq88, 0.001); end
  def test_costpercapita_ai88; assert_in_delta(0, (worksheet.costpercapita_ai88||0), 0.001); end
  def test_costpercapita_at88; assert_in_epsilon(4600.926199774732, worksheet.costpercapita_at88, 0.001); end
  def test_costpercapita_cr88; assert_equal("ok", worksheet.costpercapita_cr88); end
  def test_costpercapita_a89; assert_equal("XII.a.FCV", worksheet.costpercapita_a89); end
  def test_costpercapita_b89; assert_equal("Fuel cell cars and buses", worksheet.costpercapita_b89); end
  def test_costpercapita_c89; assert_equal("Transport", worksheet.costpercapita_c89); end
  def test_costpercapita_y89; assert_in_delta(0, (worksheet.costpercapita_y89||0), 0.001); end
  def test_costpercapita_z89; assert_in_delta(0, (worksheet.costpercapita_z89||0), 0.001); end
  def test_costpercapita_aa89; assert_in_delta(0, (worksheet.costpercapita_aa89||0), 0.001); end
  def test_costpercapita_ab89; assert_in_delta(0, (worksheet.costpercapita_ab89||0), 0.001); end
  def test_costpercapita_ac89; assert_in_delta(0, (worksheet.costpercapita_ac89||0), 0.001); end
  def test_costpercapita_ad89; assert_in_delta(0, (worksheet.costpercapita_ad89||0), 0.001); end
  def test_costpercapita_ae89; assert_in_delta(0, (worksheet.costpercapita_ae89||0), 0.001); end
  def test_costpercapita_af89; assert_in_delta(0, (worksheet.costpercapita_af89||0), 0.001); end
  def test_costpercapita_ag89; assert_in_delta(0, (worksheet.costpercapita_ag89||0), 0.001); end
  def test_costpercapita_av89; assert_in_delta(0.07, worksheet.costpercapita_av89, 0.001); end
  def test_costpercapita_aw89; assert_in_epsilon(15, worksheet.costpercapita_aw89, 0.001); end
  def test_costpercapita_bt89; assert_in_delta(0, (worksheet.costpercapita_bt89||0), 0.001); end
  def test_costpercapita_bu89; assert_in_delta(0, (worksheet.costpercapita_bu89||0), 0.001); end
  def test_costpercapita_bv89; assert_in_delta(0, (worksheet.costpercapita_bv89||0), 0.001); end
  def test_costpercapita_bw89; assert_in_delta(0, (worksheet.costpercapita_bw89||0), 0.001); end
  def test_costpercapita_bx89; assert_in_delta(0, (worksheet.costpercapita_bx89||0), 0.001); end
  def test_costpercapita_by89; assert_in_delta(0, (worksheet.costpercapita_by89||0), 0.001); end
  def test_costpercapita_bz89; assert_in_delta(0, (worksheet.costpercapita_bz89||0), 0.001); end
  def test_costpercapita_ca89; assert_in_delta(0, (worksheet.costpercapita_ca89||0), 0.001); end
  def test_costpercapita_bs89; assert_in_delta(0, (worksheet.costpercapita_bs89||0), 0.001); end
  def test_costpercapita_cd89; assert_in_delta(0, (worksheet.costpercapita_cd89||0), 0.001); end
  def test_costpercapita_cg89; assert_in_delta(0, (worksheet.costpercapita_cg89||0), 0.001); end
  def test_costpercapita_ch89; assert_in_delta(0, (worksheet.costpercapita_ch89||0), 0.001); end
  def test_costpercapita_ci89; assert_in_delta(0, (worksheet.costpercapita_ci89||0), 0.001); end
  def test_costpercapita_cj89; assert_in_delta(0, (worksheet.costpercapita_cj89||0), 0.001); end
  def test_costpercapita_ck89; assert_in_delta(0, (worksheet.costpercapita_ck89||0), 0.001); end
  def test_costpercapita_cl89; assert_in_delta(0, (worksheet.costpercapita_cl89||0), 0.001); end
  def test_costpercapita_cm89; assert_in_delta(0, (worksheet.costpercapita_cm89||0), 0.001); end
  def test_costpercapita_cn89; assert_in_delta(0, (worksheet.costpercapita_cn89||0), 0.001); end
  def test_costpercapita_cf89; assert_in_delta(0, (worksheet.costpercapita_cf89||0), 0.001); end
  def test_costpercapita_cq89; assert_in_delta(0, (worksheet.costpercapita_cq89||0), 0.001); end
  def test_costpercapita_aj89; assert_in_delta(0, (worksheet.costpercapita_aj89||0), 0.001); end
  def test_costpercapita_ak89; assert_in_delta(0, (worksheet.costpercapita_ak89||0), 0.001); end
  def test_costpercapita_al89; assert_in_delta(0, (worksheet.costpercapita_al89||0), 0.001); end
  def test_costpercapita_am89; assert_in_delta(0, (worksheet.costpercapita_am89||0), 0.001); end
  def test_costpercapita_an89; assert_in_delta(0, (worksheet.costpercapita_an89||0), 0.001); end
  def test_costpercapita_ao89; assert_in_delta(0, (worksheet.costpercapita_ao89||0), 0.001); end
  def test_costpercapita_ap89; assert_in_delta(0, (worksheet.costpercapita_ap89||0), 0.001); end
  def test_costpercapita_aq89; assert_in_delta(0, (worksheet.costpercapita_aq89||0), 0.001); end
  def test_costpercapita_ai89; assert_in_delta(0, (worksheet.costpercapita_ai89||0), 0.001); end
  def test_costpercapita_at89; assert_in_delta(0, (worksheet.costpercapita_at89||0), 0.001); end
  def test_costpercapita_cr89; assert_equal("ok", worksheet.costpercapita_cr89); end
  def test_costpercapita_a90; assert_equal("XII.a.Bike", worksheet.costpercapita_a90); end
  def test_costpercapita_b90; assert_equal("Bikes", worksheet.costpercapita_b90); end
  def test_costpercapita_c90; assert_equal("Transport", worksheet.costpercapita_c90); end
  def test_costpercapita_e90; assert_in_epsilon(14.66818348062713, worksheet.costpercapita_e90, 0.001); end
  def test_costpercapita_o90; assert_in_epsilon(12.000000000000002, worksheet.costpercapita_o90, 0.001); end
  def test_costpercapita_y90; assert_in_delta(0, (worksheet.costpercapita_y90||0), 0.001); end
  def test_costpercapita_z90; assert_in_delta(0, (worksheet.costpercapita_z90||0), 0.001); end
  def test_costpercapita_aa90; assert_in_delta(0, (worksheet.costpercapita_aa90||0), 0.001); end
  def test_costpercapita_ab90; assert_in_delta(0, (worksheet.costpercapita_ab90||0), 0.001); end
  def test_costpercapita_ac90; assert_in_delta(0, (worksheet.costpercapita_ac90||0), 0.001); end
  def test_costpercapita_ad90; assert_in_delta(0, (worksheet.costpercapita_ad90||0), 0.001); end
  def test_costpercapita_ae90; assert_in_delta(0, (worksheet.costpercapita_ae90||0), 0.001); end
  def test_costpercapita_af90; assert_in_delta(0, (worksheet.costpercapita_af90||0), 0.001); end
  def test_costpercapita_ag90; assert_in_delta(0, (worksheet.costpercapita_ag90||0), 0.001); end
  def test_costpercapita_ai90; assert_in_epsilon(26.668183480627132, worksheet.costpercapita_ai90, 0.001); end
  def test_costpercapita_av90; assert_in_delta(0.07, worksheet.costpercapita_av90, 0.001); end
  def test_costpercapita_aw90; assert_in_epsilon(5, worksheet.costpercapita_aw90, 0.001); end
  def test_costpercapita_ay90; assert_in_epsilon(10.732300365850925, worksheet.costpercapita_ay90, 0.001); end
  def test_costpercapita_bi90; assert_in_epsilon(10.732300365850925, worksheet.costpercapita_bi90, 0.001); end
  def test_costpercapita_bs90; assert_in_epsilon(22.73230036585093, worksheet.costpercapita_bs90, 0.001); end
  def test_costpercapita_cf90; assert_in_epsilon(-3.935883114776204, worksheet.costpercapita_cf90, 0.001); end
  def test_costpercapita_bt90; assert_in_epsilon(36.473494767699336, worksheet.costpercapita_bt90, 0.001); end
  def test_costpercapita_bu90; assert_in_epsilon(44.887130166040244, worksheet.costpercapita_bu90, 0.001); end
  def test_costpercapita_bv90; assert_in_epsilon(49.4232778707783, worksheet.costpercapita_bv90, 0.001); end
  def test_costpercapita_bw90; assert_in_epsilon(54.551110587436035, worksheet.costpercapita_bw90, 0.001); end
  def test_costpercapita_bx90; assert_in_epsilon(59.66856574114631, worksheet.costpercapita_bx90, 0.001); end
  def test_costpercapita_by90; assert_in_epsilon(64.79801621663293, worksheet.costpercapita_by90, 0.001); end
  def test_costpercapita_bz90; assert_in_epsilon(69.93480186404406, worksheet.costpercapita_bz90, 0.001); end
  def test_costpercapita_ca90; assert_in_epsilon(75.0697320238142, worksheet.costpercapita_ca90, 0.001); end
  def test_costpercapita_cd90; assert_in_epsilon(1068.611685656832, worksheet.costpercapita_cd90, 0.001); end
  def test_costpercapita_cg90; assert_in_epsilon(3.9993515148362184, worksheet.costpercapita_cg90, 0.001); end
  def test_costpercapita_ch90; assert_in_epsilon(4.939064809600242, worksheet.costpercapita_ch90, 0.001); end
  def test_costpercapita_ci90; assert_in_epsilon(5.378730738288449, worksheet.costpercapita_ci90, 0.001); end
  def test_costpercapita_cj90; assert_in_epsilon(5.924876605143997, worksheet.costpercapita_cj90, 0.001); end
  def test_costpercapita_ck90; assert_in_epsilon(6.469154920449795, worksheet.costpercapita_ck90, 0.001); end
  def test_costpercapita_cl90; assert_in_epsilon(7.015591920013795, worksheet.costpercapita_cl90, 0.001); end
  def test_costpercapita_cm90; assert_in_epsilon(7.5633489608788755, worksheet.costpercapita_cm90, 0.001); end
  def test_costpercapita_cn90; assert_in_epsilon(8.110772087236574, worksheet.costpercapita_cn90, 0.001); end
  def test_costpercapita_cq90; assert_in_epsilon(109.90633361194664, worksheet.costpercapita_cq90, 0.001); end
  def test_costpercapita_aj90; assert_in_epsilon(32.474143252863115, worksheet.costpercapita_aj90, 0.001); end
  def test_costpercapita_ak90; assert_in_epsilon(39.94806535644, worksheet.costpercapita_ak90, 0.001); end
  def test_costpercapita_al90; assert_in_epsilon(44.04454713248985, worksheet.costpercapita_al90, 0.001); end
  def test_costpercapita_am90; assert_in_epsilon(48.626233982292035, worksheet.costpercapita_am90, 0.001); end
  def test_costpercapita_an90; assert_in_epsilon(53.19941082069651, worksheet.costpercapita_an90, 0.001); end
  def test_costpercapita_ao90; assert_in_epsilon(57.78242429661915, worksheet.costpercapita_ao90, 0.001); end
  def test_costpercapita_ap90; assert_in_epsilon(62.37145290316519, worksheet.costpercapita_ap90, 0.001); end
  def test_costpercapita_aq90; assert_in_epsilon(66.95895993657761, worksheet.costpercapita_aq90, 0.001); end
  def test_costpercapita_at90; assert_in_epsilon(958.7053520448851, worksheet.costpercapita_at90, 0.001); end
  def test_costpercapita_cr90; assert_equal("ok", worksheet.costpercapita_cr90); end
  def test_costpercapita_a91; assert_equal("XII.a.Rail", worksheet.costpercapita_a91); end
  def test_costpercapita_b91; assert_equal("Rail", worksheet.costpercapita_b91); end
  def test_costpercapita_c91; assert_equal("Transport", worksheet.costpercapita_c91); end
  def test_costpercapita_y91; assert_in_delta(0, (worksheet.costpercapita_y91||0), 0.001); end
  def test_costpercapita_z91; assert_in_delta(0, (worksheet.costpercapita_z91||0), 0.001); end
  def test_costpercapita_aa91; assert_in_delta(0, (worksheet.costpercapita_aa91||0), 0.001); end
  def test_costpercapita_ab91; assert_in_delta(0, (worksheet.costpercapita_ab91||0), 0.001); end
  def test_costpercapita_ac91; assert_in_delta(0, (worksheet.costpercapita_ac91||0), 0.001); end
  def test_costpercapita_ad91; assert_in_delta(0, (worksheet.costpercapita_ad91||0), 0.001); end
  def test_costpercapita_ae91; assert_in_delta(0, (worksheet.costpercapita_ae91||0), 0.001); end
  def test_costpercapita_af91; assert_in_delta(0, (worksheet.costpercapita_af91||0), 0.001); end
  def test_costpercapita_ag91; assert_in_delta(0, (worksheet.costpercapita_ag91||0), 0.001); end
  def test_costpercapita_av91; assert_in_delta(0.07, worksheet.costpercapita_av91, 0.001); end
  def test_costpercapita_aw91; assert_in_epsilon(30, worksheet.costpercapita_aw91, 0.001); end
  def test_costpercapita_bt91; assert_in_epsilon(156.16529868876256, worksheet.costpercapita_bt91, 0.001); end
  def test_costpercapita_bu91; assert_in_epsilon(165.34421026261944, worksheet.costpercapita_bu91, 0.001); end
  def test_costpercapita_bv91; assert_in_epsilon(172.40864632365177, worksheet.costpercapita_bv91, 0.001); end
  def test_costpercapita_bw91; assert_in_epsilon(177.7205104427749, worksheet.costpercapita_bw91, 0.001); end
  def test_costpercapita_bx91; assert_in_epsilon(181.2388345600267, worksheet.costpercapita_bx91, 0.001); end
  def test_costpercapita_by91; assert_in_epsilon(182.4128565572978, worksheet.costpercapita_by91, 0.001); end
  def test_costpercapita_bz91; assert_in_epsilon(183.011791082411, worksheet.costpercapita_bz91, 0.001); end
  def test_costpercapita_ca91; assert_in_epsilon(180.78601663192026, worksheet.costpercapita_ca91, 0.001); end
  def test_costpercapita_bs91; assert_in_epsilon(145.16731471396247, worksheet.costpercapita_bs91, 0.001); end
  def test_costpercapita_cd91; assert_in_epsilon(3579.0694421718645, worksheet.costpercapita_cd91, 0.001); end
  def test_costpercapita_cg91; assert_in_delta(-0.7406185292299018, worksheet.costpercapita_cg91, 0.001); end
  def test_costpercapita_ch91; assert_in_delta(-0.1255280731639008, worksheet.costpercapita_ch91, 0.001); end
  def test_costpercapita_ci91; assert_in_epsilon(1.289722084299919, worksheet.costpercapita_ci91, 0.001); end
  def test_costpercapita_cj91; assert_in_epsilon(2.1798914869260693, worksheet.costpercapita_cj91, 0.001); end
  def test_costpercapita_ck91; assert_in_epsilon(3.373228900741757, worksheet.costpercapita_ck91, 0.001); end
  def test_costpercapita_cl91; assert_in_epsilon(3.7324951464994656, worksheet.costpercapita_cl91, 0.001); end
  def test_costpercapita_cm91; assert_in_epsilon(5.041140235229673, worksheet.costpercapita_cm91, 0.001); end
  def test_costpercapita_cn91; assert_in_epsilon(4.942091452665825, worksheet.costpercapita_cn91, 0.001); end
  def test_costpercapita_cf91; assert_in_epsilon(-2.59880009141034, worksheet.costpercapita_cf91, 0.001); end
  def test_costpercapita_cq91; assert_in_epsilon(31.2483510940933, worksheet.costpercapita_cq91, 0.001); end
  def test_costpercapita_aj91; assert_in_epsilon(156.90591721799245, worksheet.costpercapita_aj91, 0.001); end
  def test_costpercapita_ak91; assert_in_epsilon(165.46973833578335, worksheet.costpercapita_ak91, 0.001); end
  def test_costpercapita_al91; assert_in_epsilon(171.11892423935186, worksheet.costpercapita_al91, 0.001); end
  def test_costpercapita_am91; assert_in_epsilon(175.5406189558488, worksheet.costpercapita_am91, 0.001); end
  def test_costpercapita_an91; assert_in_epsilon(177.86560565928494, worksheet.costpercapita_an91, 0.001); end
  def test_costpercapita_ao91; assert_in_epsilon(178.68036141079833, worksheet.costpercapita_ao91, 0.001); end
  def test_costpercapita_ap91; assert_in_epsilon(177.97065084718133, worksheet.costpercapita_ap91, 0.001); end
  def test_costpercapita_aq91; assert_in_epsilon(175.84392517925443, worksheet.costpercapita_aq91, 0.001); end
  def test_costpercapita_ai91; assert_in_epsilon(147.7661148053728, worksheet.costpercapita_ai91, 0.001); end
  def test_costpercapita_at91; assert_in_epsilon(3547.8210910777716, worksheet.costpercapita_at91, 0.001); end
  def test_costpercapita_cr91; assert_equal("ok", worksheet.costpercapita_cr91); end
  def test_costpercapita_a92; assert_equal("XII.a.Air", worksheet.costpercapita_a92); end
  def test_costpercapita_b92; assert_equal("Domestic aviation", worksheet.costpercapita_b92); end
  def test_costpercapita_c92; assert_equal("Transport", worksheet.costpercapita_c92); end
  def test_costpercapita_y92; assert_in_delta(0, (worksheet.costpercapita_y92||0), 0.001); end
  def test_costpercapita_z92; assert_in_delta(0, (worksheet.costpercapita_z92||0), 0.001); end
  def test_costpercapita_aa92; assert_in_delta(0, (worksheet.costpercapita_aa92||0), 0.001); end
  def test_costpercapita_ab92; assert_in_delta(0, (worksheet.costpercapita_ab92||0), 0.001); end
  def test_costpercapita_ac92; assert_in_delta(0, (worksheet.costpercapita_ac92||0), 0.001); end
  def test_costpercapita_ad92; assert_in_delta(0, (worksheet.costpercapita_ad92||0), 0.001); end
  def test_costpercapita_ae92; assert_in_delta(0, (worksheet.costpercapita_ae92||0), 0.001); end
  def test_costpercapita_af92; assert_in_delta(0, (worksheet.costpercapita_af92||0), 0.001); end
  def test_costpercapita_ag92; assert_in_delta(0, (worksheet.costpercapita_ag92||0), 0.001); end
  def test_costpercapita_av92; assert_in_delta(0.07, worksheet.costpercapita_av92, 0.001); end
  def test_costpercapita_aw92; assert_in_epsilon(30, worksheet.costpercapita_aw92, 0.001); end
  def test_costpercapita_bt92; assert_in_epsilon(5.02124758434474, worksheet.costpercapita_bt92, 0.001); end
  def test_costpercapita_bu92; assert_in_epsilon(5.535453259611902, worksheet.costpercapita_bu92, 0.001); end
  def test_costpercapita_bv92; assert_in_epsilon(5.854663525705665, worksheet.costpercapita_bv92, 0.001); end
  def test_costpercapita_bw92; assert_in_epsilon(6.006604523017109, worksheet.costpercapita_bw92, 0.001); end
  def test_costpercapita_bx92; assert_in_epsilon(6.0245707716300405, worksheet.costpercapita_bx92, 0.001); end
  def test_costpercapita_by92; assert_in_epsilon(5.306019028416633, worksheet.costpercapita_by92, 0.001); end
  def test_costpercapita_bz92; assert_in_epsilon(4.720715937083457, worksheet.costpercapita_bz92, 0.001); end
  def test_costpercapita_ca92; assert_in_epsilon(3.741017208350108, worksheet.costpercapita_ca92, 0.001); end
  def test_costpercapita_bs92; assert_in_epsilon(4.2889460328112206, worksheet.costpercapita_bs92, 0.001); end
  def test_costpercapita_cd92; assert_in_epsilon(112.02656193373133, worksheet.costpercapita_cd92, 0.001); end
  def test_costpercapita_cg92; assert_in_delta(-0.8702837084502316, worksheet.costpercapita_cg92, 0.001); end
  def test_costpercapita_ch92; assert_in_delta(0.43655206190245893, worksheet.costpercapita_ch92, 0.001); end
  def test_costpercapita_ci92; assert_in_epsilon(1.5093423915470427, worksheet.costpercapita_ci92, 0.001); end
  def test_costpercapita_cj92; assert_in_epsilon(2.3717862729311165, worksheet.costpercapita_cj92, 0.001); end
  def test_costpercapita_ck92; assert_in_epsilon(3.0288808457160776, worksheet.costpercapita_ck92, 0.001); end
  def test_costpercapita_cl92; assert_in_epsilon(2.8666355983735894, worksheet.costpercapita_cl92, 0.001); end
  def test_costpercapita_cm92; assert_in_epsilon(2.772752397290233, worksheet.costpercapita_cm92, 0.001); end
  def test_costpercapita_cn92; assert_in_epsilon(2.23178122650787, worksheet.costpercapita_cn92, 0.001); end
  def test_costpercapita_cf92; assert_in_epsilon(-2.3503227676981635, worksheet.costpercapita_cf92, 0.001); end
  def test_costpercapita_cq92; assert_in_epsilon(24.731678110733892, worksheet.costpercapita_cq92, 0.001); end
  def test_costpercapita_aj92; assert_in_epsilon(5.891531292794972, worksheet.costpercapita_aj92, 0.001); end
  def test_costpercapita_ak92; assert_in_epsilon(5.098901197709443, worksheet.costpercapita_ak92, 0.001); end
  def test_costpercapita_al92; assert_in_epsilon(4.345321134158623, worksheet.costpercapita_al92, 0.001); end
  def test_costpercapita_am92; assert_in_epsilon(3.634818250085993, worksheet.costpercapita_am92, 0.001); end
  def test_costpercapita_an92; assert_in_epsilon(2.995689925913963, worksheet.costpercapita_an92, 0.001); end
  def test_costpercapita_ao92; assert_in_epsilon(2.4393834300430433, worksheet.costpercapita_ao92, 0.001); end
  def test_costpercapita_ap92; assert_in_epsilon(1.9479635397932245, worksheet.costpercapita_ap92, 0.001); end
  def test_costpercapita_aq92; assert_in_epsilon(1.5092359818422378, worksheet.costpercapita_aq92, 0.001); end
  def test_costpercapita_ai92; assert_in_epsilon(6.639268800509384, worksheet.costpercapita_ai92, 0.001); end
  def test_costpercapita_at92; assert_in_epsilon(87.29488382299742, worksheet.costpercapita_at92, 0.001); end
  def test_costpercapita_cr92; assert_equal("ok", worksheet.costpercapita_cr92); end
  def test_costpercapita_a93; assert_equal("XII.b", worksheet.costpercapita_a93); end
  def test_costpercapita_b93; assert_equal("Domestic freight", worksheet.costpercapita_b93); end
  def test_costpercapita_c93; assert_equal("Transport", worksheet.costpercapita_c93); end
  def test_costpercapita_y93; assert_in_delta(0, (worksheet.costpercapita_y93||0), 0.001); end
  def test_costpercapita_z93; assert_in_delta(0, (worksheet.costpercapita_z93||0), 0.001); end
  def test_costpercapita_aa93; assert_in_delta(0, (worksheet.costpercapita_aa93||0), 0.001); end
  def test_costpercapita_ab93; assert_in_delta(0, (worksheet.costpercapita_ab93||0), 0.001); end
  def test_costpercapita_ac93; assert_in_delta(0, (worksheet.costpercapita_ac93||0), 0.001); end
  def test_costpercapita_ad93; assert_in_delta(0, (worksheet.costpercapita_ad93||0), 0.001); end
  def test_costpercapita_ae93; assert_in_delta(0, (worksheet.costpercapita_ae93||0), 0.001); end
  def test_costpercapita_af93; assert_in_delta(0, (worksheet.costpercapita_af93||0), 0.001); end
  def test_costpercapita_ag93; assert_in_delta(0, (worksheet.costpercapita_ag93||0), 0.001); end
  def test_costpercapita_av93; assert_in_delta(0.07, worksheet.costpercapita_av93, 0.001); end
  def test_costpercapita_aw93; assert_in_epsilon(10, worksheet.costpercapita_aw93, 0.001); end
  def test_costpercapita_bt93; assert_in_epsilon(182.07762940956962, worksheet.costpercapita_bt93, 0.001); end
  def test_costpercapita_bu93; assert_in_epsilon(197.87974928464348, worksheet.costpercapita_bu93, 0.001); end
  def test_costpercapita_bv93; assert_in_epsilon(180.30416752886254, worksheet.costpercapita_bv93, 0.001); end
  def test_costpercapita_bw93; assert_in_epsilon(167.51653795389248, worksheet.costpercapita_bw93, 0.001); end
  def test_costpercapita_bx93; assert_in_epsilon(156.17553388213815, worksheet.costpercapita_bx93, 0.001); end
  def test_costpercapita_by93; assert_in_epsilon(149.08960070539354, worksheet.costpercapita_by93, 0.001); end
  def test_costpercapita_bz93; assert_in_epsilon(152.92075304626306, worksheet.costpercapita_bz93, 0.001); end
  def test_costpercapita_ca93; assert_in_epsilon(157.08233476466836, worksheet.costpercapita_ca93, 0.001); end
  def test_costpercapita_bs93; assert_in_epsilon(116.97022929008179, worksheet.costpercapita_bs93, 0.001); end
  def test_costpercapita_cd93; assert_in_epsilon(3583.1599560140035, worksheet.costpercapita_cd93, 0.001); end
  def test_costpercapita_cg93; assert_in_delta(-0.11039637108996574, worksheet.costpercapita_cg93, 0.001); end
  def test_costpercapita_ch93; assert_in_epsilon(33.298725193097624, worksheet.costpercapita_ch93, 0.001); end
  def test_costpercapita_ci93; assert_in_epsilon(27.658730181083797, worksheet.costpercapita_ci93, 0.001); end
  def test_costpercapita_cj93; assert_in_epsilon(25.436269787776446, worksheet.costpercapita_cj93, 0.001); end
  def test_costpercapita_ck93; assert_in_epsilon(23.545878840053394, worksheet.costpercapita_ck93, 0.001); end
  def test_costpercapita_cl93; assert_in_epsilon(20.526280212283222, worksheet.costpercapita_cl93, 0.001); end
  def test_costpercapita_cm93; assert_in_epsilon(17.93645053322221, worksheet.costpercapita_cm93, 0.001); end
  def test_costpercapita_cn93; assert_in_epsilon(25.330980502982516, worksheet.costpercapita_cn93, 0.001); end
  def test_costpercapita_cf93; assert_in_epsilon(-30.035661847825185, worksheet.costpercapita_cf93, 0.001); end
  def test_costpercapita_cq93; assert_in_epsilon(381.5141729551995, worksheet.costpercapita_cq93, 0.001); end
  def test_costpercapita_aj93; assert_in_epsilon(182.1880257806596, worksheet.costpercapita_aj93, 0.001); end
  def test_costpercapita_ak93; assert_in_epsilon(164.58102409154588, worksheet.costpercapita_ak93, 0.001); end
  def test_costpercapita_al93; assert_in_epsilon(152.64543734777874, worksheet.costpercapita_al93, 0.001); end
  def test_costpercapita_am93; assert_in_epsilon(142.080268166116, worksheet.costpercapita_am93, 0.001); end
  def test_costpercapita_an93; assert_in_epsilon(132.62965504208472, worksheet.costpercapita_an93, 0.001); end
  def test_costpercapita_ao93; assert_in_epsilon(128.5633204931103, worksheet.costpercapita_ao93, 0.001); end
  def test_costpercapita_ap93; assert_in_epsilon(134.98430251304086, worksheet.costpercapita_ap93, 0.001); end
  def test_costpercapita_aq93; assert_in_epsilon(131.75135426168583, worksheet.costpercapita_aq93, 0.001); end
  def test_costpercapita_ai93; assert_in_epsilon(147.00589113790699, worksheet.costpercapita_ai93, 0.001); end
  def test_costpercapita_at93; assert_in_epsilon(3201.645783058804, worksheet.costpercapita_at93, 0.001); end
  def test_costpercapita_cr93; assert_equal("ok", worksheet.costpercapita_cr93); end
  def test_costpercapita_a94; assert_equal("XII.c", worksheet.costpercapita_a94); end
  def test_costpercapita_b94; assert_equal("International aviation", worksheet.costpercapita_b94); end
  def test_costpercapita_c94; assert_equal("Transport", worksheet.costpercapita_c94); end
  def test_costpercapita_e94; assert_in_delta(0, (worksheet.costpercapita_e94||0), 0.001); end
  def test_costpercapita_f94; assert_in_delta(0, (worksheet.costpercapita_f94||0), 0.001); end
  def test_costpercapita_g94; assert_in_delta(0, (worksheet.costpercapita_g94||0), 0.001); end
  def test_costpercapita_h94; assert_in_delta(0, (worksheet.costpercapita_h94||0), 0.001); end
  def test_costpercapita_i94; assert_in_delta(0, (worksheet.costpercapita_i94||0), 0.001); end
  def test_costpercapita_j94; assert_in_delta(0, (worksheet.costpercapita_j94||0), 0.001); end
  def test_costpercapita_k94; assert_in_delta(0, (worksheet.costpercapita_k94||0), 0.001); end
  def test_costpercapita_l94; assert_in_delta(0, (worksheet.costpercapita_l94||0), 0.001); end
  def test_costpercapita_m94; assert_in_delta(0, (worksheet.costpercapita_m94||0), 0.001); end
  def test_costpercapita_y94; assert_in_delta(0, (worksheet.costpercapita_y94||0), 0.001); end
  def test_costpercapita_z94; assert_in_delta(0, (worksheet.costpercapita_z94||0), 0.001); end
  def test_costpercapita_aa94; assert_in_delta(0, (worksheet.costpercapita_aa94||0), 0.001); end
  def test_costpercapita_ab94; assert_in_delta(0, (worksheet.costpercapita_ab94||0), 0.001); end
  def test_costpercapita_ac94; assert_in_delta(0, (worksheet.costpercapita_ac94||0), 0.001); end
  def test_costpercapita_ad94; assert_in_delta(0, (worksheet.costpercapita_ad94||0), 0.001); end
  def test_costpercapita_ae94; assert_in_delta(0, (worksheet.costpercapita_ae94||0), 0.001); end
  def test_costpercapita_af94; assert_in_delta(0, (worksheet.costpercapita_af94||0), 0.001); end
  def test_costpercapita_ag94; assert_in_delta(0, (worksheet.costpercapita_ag94||0), 0.001); end
  def test_costpercapita_av94; assert_in_delta(0.07, worksheet.costpercapita_av94, 0.001); end
  def test_costpercapita_aw94; assert_in_epsilon(15, worksheet.costpercapita_aw94, 0.001); end
  def test_costpercapita_ay94; assert_in_delta(0, (worksheet.costpercapita_ay94||0), 0.001); end
  def test_costpercapita_az94; assert_in_delta(0, (worksheet.costpercapita_az94||0), 0.001); end
  def test_costpercapita_ba94; assert_in_delta(0, (worksheet.costpercapita_ba94||0), 0.001); end
  def test_costpercapita_bb94; assert_in_delta(0, (worksheet.costpercapita_bb94||0), 0.001); end
  def test_costpercapita_bc94; assert_in_delta(0, (worksheet.costpercapita_bc94||0), 0.001); end
  def test_costpercapita_bd94; assert_in_delta(0, (worksheet.costpercapita_bd94||0), 0.001); end
  def test_costpercapita_be94; assert_in_delta(0, (worksheet.costpercapita_be94||0), 0.001); end
  def test_costpercapita_bf94; assert_in_delta(0, (worksheet.costpercapita_bf94||0), 0.001); end
  def test_costpercapita_bg94; assert_in_delta(0, (worksheet.costpercapita_bg94||0), 0.001); end
  def test_costpercapita_bi94; assert_in_delta(0, (worksheet.costpercapita_bi94||0), 0.001); end
  def test_costpercapita_bj94; assert_in_delta(0, (worksheet.costpercapita_bj94||0), 0.001); end
  def test_costpercapita_bk94; assert_in_delta(0, (worksheet.costpercapita_bk94||0), 0.001); end
  def test_costpercapita_bl94; assert_in_delta(0, (worksheet.costpercapita_bl94||0), 0.001); end
  def test_costpercapita_bm94; assert_in_delta(0, (worksheet.costpercapita_bm94||0), 0.001); end
  def test_costpercapita_bn94; assert_in_delta(0, (worksheet.costpercapita_bn94||0), 0.001); end
  def test_costpercapita_bo94; assert_in_delta(0, (worksheet.costpercapita_bo94||0), 0.001); end
  def test_costpercapita_bp94; assert_in_delta(0, (worksheet.costpercapita_bp94||0), 0.001); end
  def test_costpercapita_bq94; assert_in_delta(0, (worksheet.costpercapita_bq94||0), 0.001); end
  def test_costpercapita_cf94; assert_in_delta(0, (worksheet.costpercapita_cf94||0), 0.001); end
  def test_costpercapita_cg94; assert_in_delta(0, (worksheet.costpercapita_cg94||0), 0.001); end
  def test_costpercapita_ch94; assert_in_delta(0, (worksheet.costpercapita_ch94||0), 0.001); end
  def test_costpercapita_ci94; assert_in_delta(0, (worksheet.costpercapita_ci94||0), 0.001); end
  def test_costpercapita_cj94; assert_in_delta(0, (worksheet.costpercapita_cj94||0), 0.001); end
  def test_costpercapita_ck94; assert_in_delta(0, (worksheet.costpercapita_ck94||0), 0.001); end
  def test_costpercapita_cl94; assert_in_delta(0, (worksheet.costpercapita_cl94||0), 0.001); end
  def test_costpercapita_cm94; assert_in_delta(0, (worksheet.costpercapita_cm94||0), 0.001); end
  def test_costpercapita_cn94; assert_in_delta(0, (worksheet.costpercapita_cn94||0), 0.001); end
  def test_costpercapita_cp94; assert_in_delta(0, (worksheet.costpercapita_cp94||0), 0.001); end
  def test_costpercapita_cq94; assert_in_delta(0, (worksheet.costpercapita_cq94||0), 0.001); end
  def test_costpercapita_bt94; assert_in_epsilon(16.995264105403493, worksheet.costpercapita_bt94, 0.001); end
  def test_costpercapita_bu94; assert_in_epsilon(51.260272035079076, worksheet.costpercapita_bu94, 0.001); end
  def test_costpercapita_bv94; assert_in_epsilon(67.40076500279213, worksheet.costpercapita_bv94, 0.001); end
  def test_costpercapita_bw94; assert_in_epsilon(73.70808659252967, worksheet.costpercapita_bw94, 0.001); end
  def test_costpercapita_bx94; assert_in_epsilon(167.70067583437094, worksheet.costpercapita_bx94, 0.001); end
  def test_costpercapita_by94; assert_in_epsilon(152.95641381148806, worksheet.costpercapita_by94, 0.001); end
  def test_costpercapita_bz94; assert_in_epsilon(230.55154071212598, worksheet.costpercapita_bz94, 0.001); end
  def test_costpercapita_ca94; assert_in_epsilon(159.1471315602158, worksheet.costpercapita_ca94, 0.001); end
  def test_costpercapita_bs94; assert_in_epsilon(-10.295675329529756, worksheet.costpercapita_bs94, 0.001); end
  def test_costpercapita_cd94; assert_in_epsilon(1821.833676009623, worksheet.costpercapita_cd94, 0.001); end
  def test_costpercapita_aj94; assert_in_epsilon(16.995264105403493, worksheet.costpercapita_aj94, 0.001); end
  def test_costpercapita_ak94; assert_in_epsilon(51.260272035079076, worksheet.costpercapita_ak94, 0.001); end
  def test_costpercapita_al94; assert_in_epsilon(67.40076500279213, worksheet.costpercapita_al94, 0.001); end
  def test_costpercapita_am94; assert_in_epsilon(73.70808659252967, worksheet.costpercapita_am94, 0.001); end
  def test_costpercapita_an94; assert_in_epsilon(167.70067583437094, worksheet.costpercapita_an94, 0.001); end
  def test_costpercapita_ao94; assert_in_epsilon(152.95641381148806, worksheet.costpercapita_ao94, 0.001); end
  def test_costpercapita_ap94; assert_in_epsilon(230.55154071212598, worksheet.costpercapita_ap94, 0.001); end
  def test_costpercapita_aq94; assert_in_epsilon(159.1471315602158, worksheet.costpercapita_aq94, 0.001); end
  def test_costpercapita_ai94; assert_in_epsilon(-10.295675329529756, worksheet.costpercapita_ai94, 0.001); end
  def test_costpercapita_at94; assert_in_epsilon(1821.833676009623, worksheet.costpercapita_at94, 0.001); end
  def test_costpercapita_cr94; assert_equal("ok", worksheet.costpercapita_cr94); end
  def test_costpercapita_a95; assert_equal("XII.e", worksheet.costpercapita_a95); end
  def test_costpercapita_b95; assert_equal("International shipping (maritime bunkers)", worksheet.costpercapita_b95); end
  def test_costpercapita_c95; assert_equal("Transport", worksheet.costpercapita_c95); end
  def test_costpercapita_e95; assert_in_delta(0, (worksheet.costpercapita_e95||0), 0.001); end
  def test_costpercapita_f95; assert_in_delta(0, (worksheet.costpercapita_f95||0), 0.001); end
  def test_costpercapita_g95; assert_in_delta(0, (worksheet.costpercapita_g95||0), 0.001); end
  def test_costpercapita_h95; assert_in_delta(0, (worksheet.costpercapita_h95||0), 0.001); end
  def test_costpercapita_i95; assert_in_delta(0, (worksheet.costpercapita_i95||0), 0.001); end
  def test_costpercapita_j95; assert_in_delta(0, (worksheet.costpercapita_j95||0), 0.001); end
  def test_costpercapita_k95; assert_in_delta(0, (worksheet.costpercapita_k95||0), 0.001); end
  def test_costpercapita_l95; assert_in_delta(0, (worksheet.costpercapita_l95||0), 0.001); end
  def test_costpercapita_m95; assert_in_delta(0, (worksheet.costpercapita_m95||0), 0.001); end
  def test_costpercapita_y95; assert_in_delta(0, (worksheet.costpercapita_y95||0), 0.001); end
  def test_costpercapita_z95; assert_in_delta(0, (worksheet.costpercapita_z95||0), 0.001); end
  def test_costpercapita_aa95; assert_in_delta(0, (worksheet.costpercapita_aa95||0), 0.001); end
  def test_costpercapita_ab95; assert_in_delta(0, (worksheet.costpercapita_ab95||0), 0.001); end
  def test_costpercapita_ac95; assert_in_delta(0, (worksheet.costpercapita_ac95||0), 0.001); end
  def test_costpercapita_ad95; assert_in_delta(0, (worksheet.costpercapita_ad95||0), 0.001); end
  def test_costpercapita_ae95; assert_in_delta(0, (worksheet.costpercapita_ae95||0), 0.001); end
  def test_costpercapita_af95; assert_in_delta(0, (worksheet.costpercapita_af95||0), 0.001); end
  def test_costpercapita_ag95; assert_in_delta(0, (worksheet.costpercapita_ag95||0), 0.001); end
  def test_costpercapita_av95; assert_in_delta(0.07, worksheet.costpercapita_av95, 0.001); end
  def test_costpercapita_aw95; assert_in_epsilon(15, worksheet.costpercapita_aw95, 0.001); end
  def test_costpercapita_ay95; assert_in_delta(0, (worksheet.costpercapita_ay95||0), 0.001); end
  def test_costpercapita_az95; assert_in_delta(0, (worksheet.costpercapita_az95||0), 0.001); end
  def test_costpercapita_ba95; assert_in_delta(0, (worksheet.costpercapita_ba95||0), 0.001); end
  def test_costpercapita_bb95; assert_in_delta(0, (worksheet.costpercapita_bb95||0), 0.001); end
  def test_costpercapita_bc95; assert_in_delta(0, (worksheet.costpercapita_bc95||0), 0.001); end
  def test_costpercapita_bd95; assert_in_delta(0, (worksheet.costpercapita_bd95||0), 0.001); end
  def test_costpercapita_be95; assert_in_delta(0, (worksheet.costpercapita_be95||0), 0.001); end
  def test_costpercapita_bf95; assert_in_delta(0, (worksheet.costpercapita_bf95||0), 0.001); end
  def test_costpercapita_bg95; assert_in_delta(0, (worksheet.costpercapita_bg95||0), 0.001); end
  def test_costpercapita_bi95; assert_in_delta(0, (worksheet.costpercapita_bi95||0), 0.001); end
  def test_costpercapita_bj95; assert_in_delta(0, (worksheet.costpercapita_bj95||0), 0.001); end
  def test_costpercapita_bk95; assert_in_delta(0, (worksheet.costpercapita_bk95||0), 0.001); end
  def test_costpercapita_bl95; assert_in_delta(0, (worksheet.costpercapita_bl95||0), 0.001); end
  def test_costpercapita_bm95; assert_in_delta(0, (worksheet.costpercapita_bm95||0), 0.001); end
  def test_costpercapita_bn95; assert_in_delta(0, (worksheet.costpercapita_bn95||0), 0.001); end
  def test_costpercapita_bo95; assert_in_delta(0, (worksheet.costpercapita_bo95||0), 0.001); end
  def test_costpercapita_bp95; assert_in_delta(0, (worksheet.costpercapita_bp95||0), 0.001); end
  def test_costpercapita_bq95; assert_in_delta(0, (worksheet.costpercapita_bq95||0), 0.001); end
  def test_costpercapita_cf95; assert_in_delta(0, (worksheet.costpercapita_cf95||0), 0.001); end
  def test_costpercapita_cg95; assert_in_delta(0, (worksheet.costpercapita_cg95||0), 0.001); end
  def test_costpercapita_ch95; assert_in_delta(0, (worksheet.costpercapita_ch95||0), 0.001); end
  def test_costpercapita_ci95; assert_in_delta(0, (worksheet.costpercapita_ci95||0), 0.001); end
  def test_costpercapita_cj95; assert_in_delta(0, (worksheet.costpercapita_cj95||0), 0.001); end
  def test_costpercapita_ck95; assert_in_delta(0, (worksheet.costpercapita_ck95||0), 0.001); end
  def test_costpercapita_cl95; assert_in_delta(0, (worksheet.costpercapita_cl95||0), 0.001); end
  def test_costpercapita_cm95; assert_in_delta(0, (worksheet.costpercapita_cm95||0), 0.001); end
  def test_costpercapita_cn95; assert_in_delta(0, (worksheet.costpercapita_cn95||0), 0.001); end
  def test_costpercapita_cp95; assert_in_delta(0, (worksheet.costpercapita_cp95||0), 0.001); end
  def test_costpercapita_cq95; assert_in_delta(0, (worksheet.costpercapita_cq95||0), 0.001); end
  def test_costpercapita_bt95; assert_in_epsilon(2.2628595687100987, worksheet.costpercapita_bt95, 0.001); end
  def test_costpercapita_bu95; assert_in_epsilon(7.4058418875517225, worksheet.costpercapita_bu95, 0.001); end
  def test_costpercapita_bv95; assert_in_epsilon(12.499027516222807, worksheet.costpercapita_bv95, 0.001); end
  def test_costpercapita_bw95; assert_in_epsilon(19.001435831344192, worksheet.costpercapita_bw95, 0.001); end
  def test_costpercapita_bx95; assert_in_epsilon(23.254680335469203, worksheet.costpercapita_bx95, 0.001); end
  def test_costpercapita_by95; assert_in_epsilon(27.776029551673084, worksheet.costpercapita_by95, 0.001); end
  def test_costpercapita_bz95; assert_in_epsilon(32.60095997722088, worksheet.costpercapita_bz95, 0.001); end
  def test_costpercapita_ca95; assert_in_epsilon(37.78259474072222, worksheet.costpercapita_ca95, 0.001); end
  def test_costpercapita_bs95; assert_in_delta(0, (worksheet.costpercapita_bs95||0), 0.001); end
  def test_costpercapita_cd95; assert_in_epsilon(319.68568642179446, worksheet.costpercapita_cd95, 0.001); end
  def test_costpercapita_aj95; assert_in_epsilon(2.2628595687100987, worksheet.costpercapita_aj95, 0.001); end
  def test_costpercapita_ak95; assert_in_epsilon(7.4058418875517225, worksheet.costpercapita_ak95, 0.001); end
  def test_costpercapita_al95; assert_in_epsilon(12.499027516222807, worksheet.costpercapita_al95, 0.001); end
  def test_costpercapita_am95; assert_in_epsilon(19.001435831344192, worksheet.costpercapita_am95, 0.001); end
  def test_costpercapita_an95; assert_in_epsilon(23.254680335469203, worksheet.costpercapita_an95, 0.001); end
  def test_costpercapita_ao95; assert_in_epsilon(27.776029551673084, worksheet.costpercapita_ao95, 0.001); end
  def test_costpercapita_ap95; assert_in_epsilon(32.60095997722088, worksheet.costpercapita_ap95, 0.001); end
  def test_costpercapita_aq95; assert_in_epsilon(37.78259474072222, worksheet.costpercapita_aq95, 0.001); end
  def test_costpercapita_ai95; assert_in_delta(0, (worksheet.costpercapita_ai95||0), 0.001); end
  def test_costpercapita_at95; assert_in_epsilon(319.68568642179446, worksheet.costpercapita_at95, 0.001); end
  def test_costpercapita_cr95; assert_equal("ok", worksheet.costpercapita_cr95); end
  def test_costpercapita_a96; assert_equal("XIV.a", worksheet.costpercapita_a96); end
  def test_costpercapita_b96; assert_equal("Geosequestration", worksheet.costpercapita_b96); end
  def test_costpercapita_c96; assert_equal("Other", worksheet.costpercapita_c96); end
  def test_costpercapita_o96; assert_in_delta(0, (worksheet.costpercapita_o96||0), 0.001); end
  def test_costpercapita_p96; assert_in_delta(0, (worksheet.costpercapita_p96||0), 0.001); end
  def test_costpercapita_q96; assert_in_delta(0, (worksheet.costpercapita_q96||0), 0.001); end
  def test_costpercapita_r96; assert_in_delta(0, (worksheet.costpercapita_r96||0), 0.001); end
  def test_costpercapita_s96; assert_in_delta(0, (worksheet.costpercapita_s96||0), 0.001); end
  def test_costpercapita_t96; assert_in_delta(0, (worksheet.costpercapita_t96||0), 0.001); end
  def test_costpercapita_u96; assert_in_delta(0, (worksheet.costpercapita_u96||0), 0.001); end
  def test_costpercapita_v96; assert_in_delta(0, (worksheet.costpercapita_v96||0), 0.001); end
  def test_costpercapita_w96; assert_in_delta(0, (worksheet.costpercapita_w96||0), 0.001); end
  def test_costpercapita_y96; assert_in_delta(0, (worksheet.costpercapita_y96||0), 0.001); end
  def test_costpercapita_z96; assert_in_delta(0, (worksheet.costpercapita_z96||0), 0.001); end
  def test_costpercapita_aa96; assert_in_delta(0, (worksheet.costpercapita_aa96||0), 0.001); end
  def test_costpercapita_ab96; assert_in_delta(0, (worksheet.costpercapita_ab96||0), 0.001); end
  def test_costpercapita_ac96; assert_in_delta(0, (worksheet.costpercapita_ac96||0), 0.001); end
  def test_costpercapita_ad96; assert_in_delta(0, (worksheet.costpercapita_ad96||0), 0.001); end
  def test_costpercapita_ae96; assert_in_delta(0, (worksheet.costpercapita_ae96||0), 0.001); end
  def test_costpercapita_af96; assert_in_delta(0, (worksheet.costpercapita_af96||0), 0.001); end
  def test_costpercapita_ag96; assert_in_delta(0, (worksheet.costpercapita_ag96||0), 0.001); end
  def test_costpercapita_av96; assert_in_delta(0, (worksheet.costpercapita_av96||0), 0.001); end
  def test_costpercapita_aw96; assert_in_epsilon(5, worksheet.costpercapita_aw96, 0.001); end
  def test_costpercapita_bt96; assert_in_delta(0, (worksheet.costpercapita_bt96||0), 0.001); end
  def test_costpercapita_bu96; assert_in_delta(0, (worksheet.costpercapita_bu96||0), 0.001); end
  def test_costpercapita_bv96; assert_in_delta(0, (worksheet.costpercapita_bv96||0), 0.001); end
  def test_costpercapita_bw96; assert_in_delta(0, (worksheet.costpercapita_bw96||0), 0.001); end
  def test_costpercapita_bx96; assert_in_delta(0, (worksheet.costpercapita_bx96||0), 0.001); end
  def test_costpercapita_by96; assert_in_delta(0, (worksheet.costpercapita_by96||0), 0.001); end
  def test_costpercapita_bz96; assert_in_delta(0, (worksheet.costpercapita_bz96||0), 0.001); end
  def test_costpercapita_ca96; assert_in_delta(0, (worksheet.costpercapita_ca96||0), 0.001); end
  def test_costpercapita_bs96; assert_in_delta(0, (worksheet.costpercapita_bs96||0), 0.001); end
  def test_costpercapita_cd96; assert_in_delta(0, (worksheet.costpercapita_cd96||0), 0.001); end
  def test_costpercapita_cg96; assert_in_delta(0, (worksheet.costpercapita_cg96||0), 0.001); end
  def test_costpercapita_ch96; assert_in_delta(0, (worksheet.costpercapita_ch96||0), 0.001); end
  def test_costpercapita_ci96; assert_in_delta(0, (worksheet.costpercapita_ci96||0), 0.001); end
  def test_costpercapita_cj96; assert_in_delta(0, (worksheet.costpercapita_cj96||0), 0.001); end
  def test_costpercapita_ck96; assert_in_delta(0, (worksheet.costpercapita_ck96||0), 0.001); end
  def test_costpercapita_cl96; assert_in_delta(0, (worksheet.costpercapita_cl96||0), 0.001); end
  def test_costpercapita_cm96; assert_in_delta(0, (worksheet.costpercapita_cm96||0), 0.001); end
  def test_costpercapita_cn96; assert_in_delta(0, (worksheet.costpercapita_cn96||0), 0.001); end
  def test_costpercapita_cf96; assert_in_delta(0, (worksheet.costpercapita_cf96||0), 0.001); end
  def test_costpercapita_cq96; assert_in_delta(0, (worksheet.costpercapita_cq96||0), 0.001); end
  def test_costpercapita_aj96; assert_in_delta(0, (worksheet.costpercapita_aj96||0), 0.001); end
  def test_costpercapita_ak96; assert_in_delta(0, (worksheet.costpercapita_ak96||0), 0.001); end
  def test_costpercapita_al96; assert_in_delta(0, (worksheet.costpercapita_al96||0), 0.001); end
  def test_costpercapita_am96; assert_in_delta(0, (worksheet.costpercapita_am96||0), 0.001); end
  def test_costpercapita_an96; assert_in_delta(0, (worksheet.costpercapita_an96||0), 0.001); end
  def test_costpercapita_ao96; assert_in_delta(0, (worksheet.costpercapita_ao96||0), 0.001); end
  def test_costpercapita_ap96; assert_in_delta(0, (worksheet.costpercapita_ap96||0), 0.001); end
  def test_costpercapita_aq96; assert_in_delta(0, (worksheet.costpercapita_aq96||0), 0.001); end
  def test_costpercapita_ai96; assert_in_delta(0, (worksheet.costpercapita_ai96||0), 0.001); end
  def test_costpercapita_at96; assert_in_delta(0, (worksheet.costpercapita_at96||0), 0.001); end
  def test_costpercapita_cr96; assert_equal("ok", worksheet.costpercapita_cr96); end
  def test_costpercapita_a97; assert_equal("XV.a", worksheet.costpercapita_a97); end
  def test_costpercapita_b97; assert_equal("Petroleum refineries", worksheet.costpercapita_b97); end
  def test_costpercapita_c97; assert_equal("Industry", worksheet.costpercapita_c97); end
  def test_costpercapita_y97; assert_in_delta(0, (worksheet.costpercapita_y97||0), 0.001); end
  def test_costpercapita_z97; assert_in_delta(0, (worksheet.costpercapita_z97||0), 0.001); end
  def test_costpercapita_aa97; assert_in_delta(0, (worksheet.costpercapita_aa97||0), 0.001); end
  def test_costpercapita_ab97; assert_in_delta(0, (worksheet.costpercapita_ab97||0), 0.001); end
  def test_costpercapita_ac97; assert_in_delta(0, (worksheet.costpercapita_ac97||0), 0.001); end
  def test_costpercapita_ad97; assert_in_delta(0, (worksheet.costpercapita_ad97||0), 0.001); end
  def test_costpercapita_ae97; assert_in_delta(0, (worksheet.costpercapita_ae97||0), 0.001); end
  def test_costpercapita_af97; assert_in_delta(0, (worksheet.costpercapita_af97||0), 0.001); end
  def test_costpercapita_ag97; assert_in_delta(0, (worksheet.costpercapita_ag97||0), 0.001); end
  def test_costpercapita_av97; assert_in_delta(0.07, worksheet.costpercapita_av97, 0.001); end
  def test_costpercapita_aw97; assert_in_epsilon(15, worksheet.costpercapita_aw97, 0.001); end
  def test_costpercapita_bt97; assert_in_epsilon(16.99629232616002, worksheet.costpercapita_bt97, 0.001); end
  def test_costpercapita_bu97; assert_in_epsilon(18.729995164933616, worksheet.costpercapita_bu97, 0.001); end
  def test_costpercapita_bv97; assert_in_epsilon(18.473603711404248, worksheet.costpercapita_bv97, 0.001); end
  def test_costpercapita_bw97; assert_in_epsilon(17.232659850836278, worksheet.costpercapita_bw97, 0.001); end
  def test_costpercapita_bx97; assert_in_epsilon(16.246149610188525, worksheet.costpercapita_bx97, 0.001); end
  def test_costpercapita_by97; assert_in_epsilon(15.458830987946754, worksheet.costpercapita_by97, 0.001); end
  def test_costpercapita_bz97; assert_in_epsilon(14.816145022668875, worksheet.costpercapita_bz97, 0.001); end
  def test_costpercapita_ca97; assert_in_epsilon(14.285791500520983, worksheet.costpercapita_ca97, 0.001); end
  def test_costpercapita_bs97; assert_in_epsilon(15.003706443776268, worksheet.costpercapita_bs97, 0.001); end
  def test_costpercapita_cd97; assert_in_epsilon(354.9964619504135, worksheet.costpercapita_cd97, 0.001); end
  def test_costpercapita_cg97; assert_in_delta(-0.5800959725761766, worksheet.costpercapita_cg97, 0.001); end
  def test_costpercapita_ch97; assert_in_epsilon(2.6093796047772573, worksheet.costpercapita_ch97, 0.001); end
  def test_costpercapita_ci97; assert_in_epsilon(3.561625068927782, worksheet.costpercapita_ci97, 0.001); end
  def test_costpercapita_cj97; assert_in_epsilon(3.2643239069862804, worksheet.costpercapita_cj97, 0.001); end
  def test_costpercapita_ck97; assert_in_epsilon(3.012009708018766, worksheet.costpercapita_ck97, 0.001); end
  def test_costpercapita_cl97; assert_in_epsilon(2.813748261888703, worksheet.costpercapita_cl97, 0.001); end
  def test_costpercapita_cm97; assert_in_epsilon(2.6559816682947743, worksheet.costpercapita_cm97, 0.001); end
  def test_costpercapita_cn97; assert_in_epsilon(2.5292384406971804, worksheet.costpercapita_cn97, 0.001); end
  def test_costpercapita_cf97; assert_in_epsilon(-4.214500140099501, worksheet.costpercapita_cf97, 0.001); end
  def test_costpercapita_cq97; assert_in_epsilon(40.24362335302912, worksheet.costpercapita_cq97, 0.001); end
  def test_costpercapita_aj97; assert_in_epsilon(17.576388298736195, worksheet.costpercapita_aj97, 0.001); end
  def test_costpercapita_ak97; assert_in_epsilon(16.120615560156356, worksheet.costpercapita_ak97, 0.001); end
  def test_costpercapita_al97; assert_in_epsilon(14.911978642476464, worksheet.costpercapita_al97, 0.001); end
  def test_costpercapita_am97; assert_in_epsilon(13.96833594385, worksheet.costpercapita_am97, 0.001); end
  def test_costpercapita_an97; assert_in_epsilon(13.234139902169758, worksheet.costpercapita_an97, 0.001); end
  def test_costpercapita_ao97; assert_in_epsilon(12.645082726058051, worksheet.costpercapita_ao97, 0.001); end
  def test_costpercapita_ap97; assert_in_epsilon(12.160163354374099, worksheet.costpercapita_ap97, 0.001); end
  def test_costpercapita_aq97; assert_in_epsilon(11.756553059823801, worksheet.costpercapita_aq97, 0.001); end
  def test_costpercapita_ai97; assert_in_epsilon(19.21820658387577, worksheet.costpercapita_ai97, 0.001); end
  def test_costpercapita_at97; assert_in_epsilon(314.75283859738437, worksheet.costpercapita_at97, 0.001); end
  def test_costpercapita_cr97; assert_equal("ok", worksheet.costpercapita_cr97); end
  def test_costpercapita_a98; assert_equal("XV.b.Coal", worksheet.costpercapita_a98); end
  def test_costpercapita_b98; assert_equal("Indigenous fossil-fuel production - Coal", worksheet.costpercapita_b98); end
  def test_costpercapita_c98; assert_equal("Fossil Fuels", worksheet.costpercapita_c98); end
  def test_costpercapita_e98; assert_in_delta(0, (worksheet.costpercapita_e98||0), 0.001); end
  def test_costpercapita_f98; assert_in_delta(0, (worksheet.costpercapita_f98||0), 0.001); end
  def test_costpercapita_g98; assert_in_delta(0, (worksheet.costpercapita_g98||0), 0.001); end
  def test_costpercapita_h98; assert_in_delta(0, (worksheet.costpercapita_h98||0), 0.001); end
  def test_costpercapita_i98; assert_in_delta(0, (worksheet.costpercapita_i98||0), 0.001); end
  def test_costpercapita_j98; assert_in_delta(0, (worksheet.costpercapita_j98||0), 0.001); end
  def test_costpercapita_k98; assert_in_delta(0, (worksheet.costpercapita_k98||0), 0.001); end
  def test_costpercapita_l98; assert_in_delta(0, (worksheet.costpercapita_l98||0), 0.001); end
  def test_costpercapita_m98; assert_in_delta(0, (worksheet.costpercapita_m98||0), 0.001); end
  def test_costpercapita_o98; assert_in_delta(0, (worksheet.costpercapita_o98||0), 0.001); end
  def test_costpercapita_p98; assert_in_delta(0, (worksheet.costpercapita_p98||0), 0.001); end
  def test_costpercapita_q98; assert_in_delta(0, (worksheet.costpercapita_q98||0), 0.001); end
  def test_costpercapita_r98; assert_in_delta(0, (worksheet.costpercapita_r98||0), 0.001); end
  def test_costpercapita_s98; assert_in_delta(0, (worksheet.costpercapita_s98||0), 0.001); end
  def test_costpercapita_t98; assert_in_delta(0, (worksheet.costpercapita_t98||0), 0.001); end
  def test_costpercapita_u98; assert_in_delta(0, (worksheet.costpercapita_u98||0), 0.001); end
  def test_costpercapita_v98; assert_in_delta(0, (worksheet.costpercapita_v98||0), 0.001); end
  def test_costpercapita_w98; assert_in_delta(0, (worksheet.costpercapita_w98||0), 0.001); end
  def test_costpercapita_av98; assert_in_delta(0, (worksheet.costpercapita_av98||0), 0.001); end
  def test_costpercapita_aw98; assert_in_epsilon(5, worksheet.costpercapita_aw98, 0.001); end
  def test_costpercapita_ay98; assert_in_delta(0, (worksheet.costpercapita_ay98||0), 0.001); end
  def test_costpercapita_az98; assert_in_delta(0, (worksheet.costpercapita_az98||0), 0.001); end
  def test_costpercapita_ba98; assert_in_delta(0, (worksheet.costpercapita_ba98||0), 0.001); end
  def test_costpercapita_bb98; assert_in_delta(0, (worksheet.costpercapita_bb98||0), 0.001); end
  def test_costpercapita_bc98; assert_in_delta(0, (worksheet.costpercapita_bc98||0), 0.001); end
  def test_costpercapita_bd98; assert_in_delta(0, (worksheet.costpercapita_bd98||0), 0.001); end
  def test_costpercapita_be98; assert_in_delta(0, (worksheet.costpercapita_be98||0), 0.001); end
  def test_costpercapita_bf98; assert_in_delta(0, (worksheet.costpercapita_bf98||0), 0.001); end
  def test_costpercapita_bg98; assert_in_delta(0, (worksheet.costpercapita_bg98||0), 0.001); end
  def test_costpercapita_bi98; assert_in_delta(0, (worksheet.costpercapita_bi98||0), 0.001); end
  def test_costpercapita_bj98; assert_in_delta(0, (worksheet.costpercapita_bj98||0), 0.001); end
  def test_costpercapita_bk98; assert_in_delta(0, (worksheet.costpercapita_bk98||0), 0.001); end
  def test_costpercapita_bl98; assert_in_delta(0, (worksheet.costpercapita_bl98||0), 0.001); end
  def test_costpercapita_bm98; assert_in_delta(0, (worksheet.costpercapita_bm98||0), 0.001); end
  def test_costpercapita_bn98; assert_in_delta(0, (worksheet.costpercapita_bn98||0), 0.001); end
  def test_costpercapita_bo98; assert_in_delta(0, (worksheet.costpercapita_bo98||0), 0.001); end
  def test_costpercapita_bp98; assert_in_delta(0, (worksheet.costpercapita_bp98||0), 0.001); end
  def test_costpercapita_bq98; assert_in_delta(0, (worksheet.costpercapita_bq98||0), 0.001); end
  def test_costpercapita_cf98; assert_in_delta(0, (worksheet.costpercapita_cf98||0), 0.001); end
  def test_costpercapita_cg98; assert_in_delta(0, (worksheet.costpercapita_cg98||0), 0.001); end
  def test_costpercapita_ch98; assert_in_delta(0, (worksheet.costpercapita_ch98||0), 0.001); end
  def test_costpercapita_ci98; assert_in_delta(0, (worksheet.costpercapita_ci98||0), 0.001); end
  def test_costpercapita_cj98; assert_in_delta(0, (worksheet.costpercapita_cj98||0), 0.001); end
  def test_costpercapita_ck98; assert_in_delta(0, (worksheet.costpercapita_ck98||0), 0.001); end
  def test_costpercapita_cl98; assert_in_delta(0, (worksheet.costpercapita_cl98||0), 0.001); end
  def test_costpercapita_cm98; assert_in_delta(0, (worksheet.costpercapita_cm98||0), 0.001); end
  def test_costpercapita_cn98; assert_in_delta(0, (worksheet.costpercapita_cn98||0), 0.001); end
  def test_costpercapita_cp98; assert_in_delta(0, (worksheet.costpercapita_cp98||0), 0.001); end
  def test_costpercapita_cq98; assert_in_delta(0, (worksheet.costpercapita_cq98||0), 0.001); end
  def test_costpercapita_bt98; assert_in_epsilon(16.748201619163304, worksheet.costpercapita_bt98, 0.001); end
  def test_costpercapita_bu98; assert_in_epsilon(16.907861102269763, worksheet.costpercapita_bu98, 0.001); end
  def test_costpercapita_bv98; assert_in_epsilon(17.070378554491267, worksheet.costpercapita_bv98, 0.001); end
  def test_costpercapita_bw98; assert_in_epsilon(8.635656982915402, worksheet.costpercapita_bw98, 0.001); end
  def test_costpercapita_bx98; assert_in_epsilon(8.432238073854396, worksheet.costpercapita_bx98, 0.001); end
  def test_costpercapita_by98; assert_in_epsilon(8.252408907659154, worksheet.costpercapita_by98, 0.001); end
  def test_costpercapita_bz98; assert_in_epsilon(8.087790470682751, worksheet.costpercapita_bz98, 0.001); end
  def test_costpercapita_ca98; assert_in_epsilon(7.936858266343649, worksheet.costpercapita_ca98, 0.001); end
  def test_costpercapita_bs98; assert_in_epsilon(16.56242208548784, worksheet.costpercapita_bs98, 0.001); end
  def test_costpercapita_cd98; assert_in_epsilon(275.13698776109413, worksheet.costpercapita_cd98, 0.001); end
  def test_costpercapita_aj98; assert_in_epsilon(16.748201619163304, worksheet.costpercapita_aj98, 0.001); end
  def test_costpercapita_ak98; assert_in_epsilon(16.907861102269763, worksheet.costpercapita_ak98, 0.001); end
  def test_costpercapita_al98; assert_in_epsilon(17.070378554491267, worksheet.costpercapita_al98, 0.001); end
  def test_costpercapita_am98; assert_in_epsilon(8.635656982915402, worksheet.costpercapita_am98, 0.001); end
  def test_costpercapita_an98; assert_in_epsilon(8.432238073854396, worksheet.costpercapita_an98, 0.001); end
  def test_costpercapita_ao98; assert_in_epsilon(8.252408907659154, worksheet.costpercapita_ao98, 0.001); end
  def test_costpercapita_ap98; assert_in_epsilon(8.087790470682751, worksheet.costpercapita_ap98, 0.001); end
  def test_costpercapita_aq98; assert_in_epsilon(7.936858266343649, worksheet.costpercapita_aq98, 0.001); end
  def test_costpercapita_ai98; assert_in_epsilon(16.56242208548784, worksheet.costpercapita_ai98, 0.001); end
  def test_costpercapita_at98; assert_in_epsilon(275.13698776109413, worksheet.costpercapita_at98, 0.001); end
  def test_costpercapita_cr98; assert_equal("ok", worksheet.costpercapita_cr98); end
  def test_costpercapita_a99; assert_equal("XV.b.Oil", worksheet.costpercapita_a99); end
  def test_costpercapita_b99; assert_equal("Indigenous fossil-fuel production - Oil", worksheet.costpercapita_b99); end
  def test_costpercapita_c99; assert_equal("Fossil Fuels", worksheet.costpercapita_c99); end
  def test_costpercapita_e99; assert_in_delta(0, (worksheet.costpercapita_e99||0), 0.001); end
  def test_costpercapita_f99; assert_in_delta(0, (worksheet.costpercapita_f99||0), 0.001); end
  def test_costpercapita_g99; assert_in_delta(0, (worksheet.costpercapita_g99||0), 0.001); end
  def test_costpercapita_h99; assert_in_delta(0, (worksheet.costpercapita_h99||0), 0.001); end
  def test_costpercapita_i99; assert_in_delta(0, (worksheet.costpercapita_i99||0), 0.001); end
  def test_costpercapita_j99; assert_in_delta(0, (worksheet.costpercapita_j99||0), 0.001); end
  def test_costpercapita_k99; assert_in_delta(0, (worksheet.costpercapita_k99||0), 0.001); end
  def test_costpercapita_l99; assert_in_delta(0, (worksheet.costpercapita_l99||0), 0.001); end
  def test_costpercapita_m99; assert_in_delta(0, (worksheet.costpercapita_m99||0), 0.001); end
  def test_costpercapita_o99; assert_in_delta(0, (worksheet.costpercapita_o99||0), 0.001); end
  def test_costpercapita_p99; assert_in_delta(0, (worksheet.costpercapita_p99||0), 0.001); end
  def test_costpercapita_q99; assert_in_delta(0, (worksheet.costpercapita_q99||0), 0.001); end
  def test_costpercapita_r99; assert_in_delta(0, (worksheet.costpercapita_r99||0), 0.001); end
  def test_costpercapita_s99; assert_in_delta(0, (worksheet.costpercapita_s99||0), 0.001); end
  def test_costpercapita_t99; assert_in_delta(0, (worksheet.costpercapita_t99||0), 0.001); end
  def test_costpercapita_u99; assert_in_delta(0, (worksheet.costpercapita_u99||0), 0.001); end
  def test_costpercapita_v99; assert_in_delta(0, (worksheet.costpercapita_v99||0), 0.001); end
  def test_costpercapita_w99; assert_in_delta(0, (worksheet.costpercapita_w99||0), 0.001); end
  def test_costpercapita_av99; assert_in_delta(0, (worksheet.costpercapita_av99||0), 0.001); end
  def test_costpercapita_aw99; assert_in_epsilon(5, worksheet.costpercapita_aw99, 0.001); end
  def test_costpercapita_ay99; assert_in_delta(0, (worksheet.costpercapita_ay99||0), 0.001); end
  def test_costpercapita_az99; assert_in_delta(0, (worksheet.costpercapita_az99||0), 0.001); end
  def test_costpercapita_ba99; assert_in_delta(0, (worksheet.costpercapita_ba99||0), 0.001); end
  def test_costpercapita_bb99; assert_in_delta(0, (worksheet.costpercapita_bb99||0), 0.001); end
  def test_costpercapita_bc99; assert_in_delta(0, (worksheet.costpercapita_bc99||0), 0.001); end
  def test_costpercapita_bd99; assert_in_delta(0, (worksheet.costpercapita_bd99||0), 0.001); end
  def test_costpercapita_be99; assert_in_delta(0, (worksheet.costpercapita_be99||0), 0.001); end
  def test_costpercapita_bf99; assert_in_delta(0, (worksheet.costpercapita_bf99||0), 0.001); end
  def test_costpercapita_bg99; assert_in_delta(0, (worksheet.costpercapita_bg99||0), 0.001); end
  def test_costpercapita_bi99; assert_in_delta(0, (worksheet.costpercapita_bi99||0), 0.001); end
  def test_costpercapita_bj99; assert_in_delta(0, (worksheet.costpercapita_bj99||0), 0.001); end
  def test_costpercapita_bk99; assert_in_delta(0, (worksheet.costpercapita_bk99||0), 0.001); end
  def test_costpercapita_bl99; assert_in_delta(0, (worksheet.costpercapita_bl99||0), 0.001); end
  def test_costpercapita_bm99; assert_in_delta(0, (worksheet.costpercapita_bm99||0), 0.001); end
  def test_costpercapita_bn99; assert_in_delta(0, (worksheet.costpercapita_bn99||0), 0.001); end
  def test_costpercapita_bo99; assert_in_delta(0, (worksheet.costpercapita_bo99||0), 0.001); end
  def test_costpercapita_bp99; assert_in_delta(0, (worksheet.costpercapita_bp99||0), 0.001); end
  def test_costpercapita_bq99; assert_in_delta(0, (worksheet.costpercapita_bq99||0), 0.001); end
  def test_costpercapita_cf99; assert_in_delta(0, (worksheet.costpercapita_cf99||0), 0.001); end
  def test_costpercapita_cg99; assert_in_delta(0, (worksheet.costpercapita_cg99||0), 0.001); end
  def test_costpercapita_ch99; assert_in_delta(0, (worksheet.costpercapita_ch99||0), 0.001); end
  def test_costpercapita_ci99; assert_in_delta(0, (worksheet.costpercapita_ci99||0), 0.001); end
  def test_costpercapita_cj99; assert_in_delta(0, (worksheet.costpercapita_cj99||0), 0.001); end
  def test_costpercapita_ck99; assert_in_delta(0, (worksheet.costpercapita_ck99||0), 0.001); end
  def test_costpercapita_cl99; assert_in_delta(0, (worksheet.costpercapita_cl99||0), 0.001); end
  def test_costpercapita_cm99; assert_in_delta(0, (worksheet.costpercapita_cm99||0), 0.001); end
  def test_costpercapita_cn99; assert_in_delta(0, (worksheet.costpercapita_cn99||0), 0.001); end
  def test_costpercapita_cp99; assert_in_delta(0, (worksheet.costpercapita_cp99||0), 0.001); end
  def test_costpercapita_cq99; assert_in_delta(0, (worksheet.costpercapita_cq99||0), 0.001); end
  def test_costpercapita_bt99; assert_in_epsilon(364.463178285933, worksheet.costpercapita_bt99, 0.001); end
  def test_costpercapita_bu99; assert_in_epsilon(308.3950823511925, worksheet.costpercapita_bu99, 0.001); end
  def test_costpercapita_bv99; assert_in_epsilon(257.4196880138305, worksheet.costpercapita_bv99, 0.001); end
  def test_costpercapita_bw99; assert_in_epsilon(213.44748836071366, worksheet.costpercapita_bw99, 0.001); end
  def test_costpercapita_bx99; assert_in_epsilon(161.27110129602434, worksheet.costpercapita_bx99, 0.001); end
  def test_costpercapita_by99; assert_in_epsilon(122.12721611645647, worksheet.costpercapita_by99, 0.001); end
  def test_costpercapita_bz99; assert_in_epsilon(92.61463858318159, worksheet.costpercapita_bz99, 0.001); end
  def test_costpercapita_ca99; assert_in_epsilon(70.32607769146746, worksheet.costpercapita_ca99, 0.001); end
  def test_costpercapita_bs99; assert_in_epsilon(407.9280784216838, worksheet.costpercapita_bs99, 0.001); end
  def test_costpercapita_cd99; assert_in_epsilon(5134.316611644483, worksheet.costpercapita_cd99, 0.001); end
  def test_costpercapita_aj99; assert_in_epsilon(364.463178285933, worksheet.costpercapita_aj99, 0.001); end
  def test_costpercapita_ak99; assert_in_epsilon(308.3950823511925, worksheet.costpercapita_ak99, 0.001); end
  def test_costpercapita_al99; assert_in_epsilon(257.4196880138305, worksheet.costpercapita_al99, 0.001); end
  def test_costpercapita_am99; assert_in_epsilon(213.44748836071366, worksheet.costpercapita_am99, 0.001); end
  def test_costpercapita_an99; assert_in_epsilon(161.27110129602434, worksheet.costpercapita_an99, 0.001); end
  def test_costpercapita_ao99; assert_in_epsilon(122.12721611645647, worksheet.costpercapita_ao99, 0.001); end
  def test_costpercapita_ap99; assert_in_epsilon(92.61463858318159, worksheet.costpercapita_ap99, 0.001); end
  def test_costpercapita_aq99; assert_in_epsilon(70.32607769146746, worksheet.costpercapita_aq99, 0.001); end
  def test_costpercapita_ai99; assert_in_epsilon(407.9280784216838, worksheet.costpercapita_ai99, 0.001); end
  def test_costpercapita_at99; assert_in_epsilon(5134.316611644483, worksheet.costpercapita_at99, 0.001); end
  def test_costpercapita_cr99; assert_equal("ok", worksheet.costpercapita_cr99); end
  def test_costpercapita_a100; assert_equal("XV.b.Gas", worksheet.costpercapita_a100); end
  def test_costpercapita_b100; assert_equal("Indigenous fossil-fuel production - Gas", worksheet.costpercapita_b100); end
  def test_costpercapita_c100; assert_equal("Fossil Fuels", worksheet.costpercapita_c100); end
  def test_costpercapita_e100; assert_in_delta(0, (worksheet.costpercapita_e100||0), 0.001); end
  def test_costpercapita_f100; assert_in_delta(0, (worksheet.costpercapita_f100||0), 0.001); end
  def test_costpercapita_g100; assert_in_delta(0, (worksheet.costpercapita_g100||0), 0.001); end
  def test_costpercapita_h100; assert_in_delta(0, (worksheet.costpercapita_h100||0), 0.001); end
  def test_costpercapita_i100; assert_in_delta(0, (worksheet.costpercapita_i100||0), 0.001); end
  def test_costpercapita_j100; assert_in_delta(0, (worksheet.costpercapita_j100||0), 0.001); end
  def test_costpercapita_k100; assert_in_delta(0, (worksheet.costpercapita_k100||0), 0.001); end
  def test_costpercapita_l100; assert_in_delta(0, (worksheet.costpercapita_l100||0), 0.001); end
  def test_costpercapita_m100; assert_in_delta(0, (worksheet.costpercapita_m100||0), 0.001); end
  def test_costpercapita_o100; assert_in_delta(0, (worksheet.costpercapita_o100||0), 0.001); end
  def test_costpercapita_p100; assert_in_delta(0, (worksheet.costpercapita_p100||0), 0.001); end
  def test_costpercapita_q100; assert_in_delta(0, (worksheet.costpercapita_q100||0), 0.001); end
  def test_costpercapita_r100; assert_in_delta(0, (worksheet.costpercapita_r100||0), 0.001); end
  def test_costpercapita_s100; assert_in_delta(0, (worksheet.costpercapita_s100||0), 0.001); end
  def test_costpercapita_t100; assert_in_delta(0, (worksheet.costpercapita_t100||0), 0.001); end
  def test_costpercapita_u100; assert_in_delta(0, (worksheet.costpercapita_u100||0), 0.001); end
  def test_costpercapita_v100; assert_in_delta(0, (worksheet.costpercapita_v100||0), 0.001); end
  def test_costpercapita_w100; assert_in_delta(0, (worksheet.costpercapita_w100||0), 0.001); end
  def test_costpercapita_av100; assert_in_delta(0, (worksheet.costpercapita_av100||0), 0.001); end
  def test_costpercapita_aw100; assert_in_epsilon(5, worksheet.costpercapita_aw100, 0.001); end
  def test_costpercapita_ay100; assert_in_delta(0, (worksheet.costpercapita_ay100||0), 0.001); end
  def test_costpercapita_az100; assert_in_delta(0, (worksheet.costpercapita_az100||0), 0.001); end
  def test_costpercapita_ba100; assert_in_delta(0, (worksheet.costpercapita_ba100||0), 0.001); end
  def test_costpercapita_bb100; assert_in_delta(0, (worksheet.costpercapita_bb100||0), 0.001); end
  def test_costpercapita_bc100; assert_in_delta(0, (worksheet.costpercapita_bc100||0), 0.001); end
  def test_costpercapita_bd100; assert_in_delta(0, (worksheet.costpercapita_bd100||0), 0.001); end
  def test_costpercapita_be100; assert_in_delta(0, (worksheet.costpercapita_be100||0), 0.001); end
  def test_costpercapita_bf100; assert_in_delta(0, (worksheet.costpercapita_bf100||0), 0.001); end
  def test_costpercapita_bg100; assert_in_delta(0, (worksheet.costpercapita_bg100||0), 0.001); end
  def test_costpercapita_bi100; assert_in_delta(0, (worksheet.costpercapita_bi100||0), 0.001); end
  def test_costpercapita_bj100; assert_in_delta(0, (worksheet.costpercapita_bj100||0), 0.001); end
  def test_costpercapita_bk100; assert_in_delta(0, (worksheet.costpercapita_bk100||0), 0.001); end
  def test_costpercapita_bl100; assert_in_delta(0, (worksheet.costpercapita_bl100||0), 0.001); end
  def test_costpercapita_bm100; assert_in_delta(0, (worksheet.costpercapita_bm100||0), 0.001); end
  def test_costpercapita_bn100; assert_in_delta(0, (worksheet.costpercapita_bn100||0), 0.001); end
  def test_costpercapita_bo100; assert_in_delta(0, (worksheet.costpercapita_bo100||0), 0.001); end
  def test_costpercapita_bp100; assert_in_delta(0, (worksheet.costpercapita_bp100||0), 0.001); end
  def test_costpercapita_bq100; assert_in_delta(0, (worksheet.costpercapita_bq100||0), 0.001); end
  def test_costpercapita_cf100; assert_in_delta(0, (worksheet.costpercapita_cf100||0), 0.001); end
  def test_costpercapita_cg100; assert_in_delta(0, (worksheet.costpercapita_cg100||0), 0.001); end
  def test_costpercapita_ch100; assert_in_delta(0, (worksheet.costpercapita_ch100||0), 0.001); end
  def test_costpercapita_ci100; assert_in_delta(0, (worksheet.costpercapita_ci100||0), 0.001); end
  def test_costpercapita_cj100; assert_in_delta(0, (worksheet.costpercapita_cj100||0), 0.001); end
  def test_costpercapita_ck100; assert_in_delta(0, (worksheet.costpercapita_ck100||0), 0.001); end
  def test_costpercapita_cl100; assert_in_delta(0, (worksheet.costpercapita_cl100||0), 0.001); end
  def test_costpercapita_cm100; assert_in_delta(0, (worksheet.costpercapita_cm100||0), 0.001); end
  def test_costpercapita_cn100; assert_in_delta(0, (worksheet.costpercapita_cn100||0), 0.001); end
  def test_costpercapita_cp100; assert_in_delta(0, (worksheet.costpercapita_cp100||0), 0.001); end
  def test_costpercapita_cq100; assert_in_delta(0, (worksheet.costpercapita_cq100||0), 0.001); end
  def test_costpercapita_bt100; assert_in_epsilon(128.92972635029454, worksheet.costpercapita_bt100, 0.001); end
  def test_costpercapita_bu100; assert_in_epsilon(108.75091499882417, worksheet.costpercapita_bu100, 0.001); end
  def test_costpercapita_bv100; assert_in_epsilon(90.84268513904978, worksheet.costpercapita_bv100, 0.001); end
  def test_costpercapita_bw100; assert_in_epsilon(75.37064321889488, worksheet.costpercapita_bw100, 0.001); end
  def test_costpercapita_bx100; assert_in_epsilon(56.94659014567336, worksheet.costpercapita_bx100, 0.001); end
  def test_costpercapita_by100; assert_in_epsilon(43.124456061411955, worksheet.costpercapita_by100, 0.001); end
  def test_costpercapita_bz100; assert_in_epsilon(32.70324207190183, worksheet.costpercapita_bz100, 0.001); end
  def test_costpercapita_ca100; assert_in_epsilon(24.83290738802381, worksheet.costpercapita_ca100, 0.001); end
  def test_costpercapita_bs100; assert_in_epsilon(151.2771269277196, worksheet.costpercapita_bs100, 0.001); end
  def test_costpercapita_cd100; assert_in_epsilon(1820.5164262837036, worksheet.costpercapita_cd100, 0.001); end
  def test_costpercapita_aj100; assert_in_epsilon(128.92972635029454, worksheet.costpercapita_aj100, 0.001); end
  def test_costpercapita_ak100; assert_in_epsilon(108.75091499882417, worksheet.costpercapita_ak100, 0.001); end
  def test_costpercapita_al100; assert_in_epsilon(90.84268513904978, worksheet.costpercapita_al100, 0.001); end
  def test_costpercapita_am100; assert_in_epsilon(75.37064321889488, worksheet.costpercapita_am100, 0.001); end
  def test_costpercapita_an100; assert_in_epsilon(56.94659014567336, worksheet.costpercapita_an100, 0.001); end
  def test_costpercapita_ao100; assert_in_epsilon(43.124456061411955, worksheet.costpercapita_ao100, 0.001); end
  def test_costpercapita_ap100; assert_in_epsilon(32.70324207190183, worksheet.costpercapita_ap100, 0.001); end
  def test_costpercapita_aq100; assert_in_epsilon(24.83290738802381, worksheet.costpercapita_aq100, 0.001); end
  def test_costpercapita_ai100; assert_in_epsilon(151.2771269277196, worksheet.costpercapita_ai100, 0.001); end
  def test_costpercapita_at100; assert_in_epsilon(1820.5164262837036, worksheet.costpercapita_at100, 0.001); end
  def test_costpercapita_cr100; assert_equal("ok", worksheet.costpercapita_cr100); end
  def test_costpercapita_a101; assert_equal("XVI.a", worksheet.costpercapita_a101); end
  def test_costpercapita_b101; assert_equal("Fossil fuel transfers", worksheet.costpercapita_b101); end
  def test_costpercapita_c101; assert_equal("Fossil Fuels", worksheet.costpercapita_c101); end
  def test_costpercapita_y101; assert_in_delta(0, (worksheet.costpercapita_y101||0), 0.001); end
  def test_costpercapita_z101; assert_in_delta(0, (worksheet.costpercapita_z101||0), 0.001); end
  def test_costpercapita_aa101; assert_in_delta(0, (worksheet.costpercapita_aa101||0), 0.001); end
  def test_costpercapita_ab101; assert_in_delta(0, (worksheet.costpercapita_ab101||0), 0.001); end
  def test_costpercapita_ac101; assert_in_delta(0, (worksheet.costpercapita_ac101||0), 0.001); end
  def test_costpercapita_ad101; assert_in_delta(0, (worksheet.costpercapita_ad101||0), 0.001); end
  def test_costpercapita_ae101; assert_in_delta(0, (worksheet.costpercapita_ae101||0), 0.001); end
  def test_costpercapita_af101; assert_in_delta(0, (worksheet.costpercapita_af101||0), 0.001); end
  def test_costpercapita_ag101; assert_in_delta(0, (worksheet.costpercapita_ag101||0), 0.001); end
  def test_costpercapita_av101; assert_in_delta(0.07, worksheet.costpercapita_av101, 0.001); end
  def test_costpercapita_aw101; assert_in_epsilon(15, worksheet.costpercapita_aw101, 0.001); end
  def test_costpercapita_bt101; assert_in_epsilon(11.909299786073028, worksheet.costpercapita_bt101, 0.001); end
  def test_costpercapita_bu101; assert_in_epsilon(16.535191110567617, worksheet.costpercapita_bu101, 0.001); end
  def test_costpercapita_bv101; assert_in_epsilon(14.053083748945456, worksheet.costpercapita_bv101, 0.001); end
  def test_costpercapita_bw101; assert_in_epsilon(11.352041348457862, worksheet.costpercapita_bw101, 0.001); end
  def test_costpercapita_bx101; assert_in_epsilon(8.299083703826707, worksheet.costpercapita_bx101, 0.001); end
  def test_costpercapita_by101; assert_in_epsilon(5.883453814918397, worksheet.costpercapita_by101, 0.001); end
  def test_costpercapita_bz101; assert_in_epsilon(4.060021502144745, worksheet.costpercapita_bz101, 0.001); end
  def test_costpercapita_ca101; assert_in_epsilon(2.6590785554693337, worksheet.costpercapita_ca101, 0.001); end
  def test_costpercapita_bs101; assert_in_epsilon(6.531000886128521, worksheet.costpercapita_bs101, 0.001); end
  def test_costpercapita_cd101; assert_in_epsilon(223.54748673744976, worksheet.costpercapita_cd101, 0.001); end
  def test_costpercapita_cg101; assert_in_epsilon(1.6590500413790008, worksheet.costpercapita_cg101, 0.001); end
  def test_costpercapita_ch101; assert_in_epsilon(7.344166858656573, worksheet.costpercapita_ch101, 0.001); end
  def test_costpercapita_ci101; assert_in_epsilon(6.910740155254541, worksheet.costpercapita_ci101, 0.001); end
  def test_costpercapita_cj101; assert_in_epsilon(6.241923427992095, worksheet.costpercapita_cj101, 0.001); end
  def test_costpercapita_ck101; assert_in_epsilon(4.928581130130669, worksheet.costpercapita_ck101, 0.001); end
  def test_costpercapita_cl101; assert_in_epsilon(3.3306805294673003, worksheet.costpercapita_cl101, 0.001); end
  def test_costpercapita_cm101; assert_in_epsilon(2.3860202380680215, worksheet.costpercapita_cm101, 0.001); end
  def test_costpercapita_cn101; assert_in_epsilon(1.9050461974987734, worksheet.costpercapita_cn101, 0.001); end
  def test_costpercapita_cf101; assert_in_epsilon(-13.182443509255272, worksheet.costpercapita_cf101, 0.001); end
  def test_costpercapita_cq101; assert_in_epsilon(78.6961599372552, worksheet.costpercapita_cq101, 0.001); end
  def test_costpercapita_aj101; assert_in_epsilon(10.250249744694027, worksheet.costpercapita_aj101, 0.001); end
  def test_costpercapita_ak101; assert_in_epsilon(9.191024251911044, worksheet.costpercapita_ak101, 0.001); end
  def test_costpercapita_al101; assert_in_epsilon(7.142343593690915, worksheet.costpercapita_al101, 0.001); end
  def test_costpercapita_am101; assert_in_epsilon(5.1101179204657665, worksheet.costpercapita_am101, 0.001); end
  def test_costpercapita_an101; assert_in_epsilon(3.3705025736960383, worksheet.costpercapita_an101, 0.001); end
  def test_costpercapita_ao101; assert_in_epsilon(2.5527732854510963, worksheet.costpercapita_ao101, 0.001); end
  def test_costpercapita_ap101; assert_in_epsilon(1.6740012640767237, worksheet.costpercapita_ap101, 0.001); end
  def test_costpercapita_aq101; assert_in_delta(0.75403235797056, worksheet.costpercapita_aq101, 0.001); end
  def test_costpercapita_ai101; assert_in_epsilon(19.713444395383796, worksheet.costpercapita_ai101, 0.001); end
  def test_costpercapita_at101; assert_in_epsilon(144.85132680019456, worksheet.costpercapita_at101, 0.001); end
  def test_costpercapita_cr101; assert_equal("ok", worksheet.costpercapita_cr101); end
  def test_costpercapita_a102; assert_equal("XVI.b.Coal", worksheet.costpercapita_a102); end
  def test_costpercapita_b102; assert_equal("Balancing imports - Coal", worksheet.costpercapita_b102); end
  def test_costpercapita_c102; assert_equal("Fossil Fuels", worksheet.costpercapita_c102); end
  def test_costpercapita_e102; assert_in_delta(0, (worksheet.costpercapita_e102||0), 0.001); end
  def test_costpercapita_f102; assert_in_delta(0, (worksheet.costpercapita_f102||0), 0.001); end
  def test_costpercapita_g102; assert_in_delta(0, (worksheet.costpercapita_g102||0), 0.001); end
  def test_costpercapita_h102; assert_in_delta(0, (worksheet.costpercapita_h102||0), 0.001); end
  def test_costpercapita_i102; assert_in_delta(0, (worksheet.costpercapita_i102||0), 0.001); end
  def test_costpercapita_j102; assert_in_delta(0, (worksheet.costpercapita_j102||0), 0.001); end
  def test_costpercapita_k102; assert_in_delta(0, (worksheet.costpercapita_k102||0), 0.001); end
  def test_costpercapita_l102; assert_in_delta(0, (worksheet.costpercapita_l102||0), 0.001); end
  def test_costpercapita_m102; assert_in_delta(0, (worksheet.costpercapita_m102||0), 0.001); end
  def test_costpercapita_o102; assert_in_delta(0, (worksheet.costpercapita_o102||0), 0.001); end
  def test_costpercapita_p102; assert_in_delta(0, (worksheet.costpercapita_p102||0), 0.001); end
  def test_costpercapita_q102; assert_in_delta(0, (worksheet.costpercapita_q102||0), 0.001); end
  def test_costpercapita_r102; assert_in_delta(0, (worksheet.costpercapita_r102||0), 0.001); end
  def test_costpercapita_s102; assert_in_delta(0, (worksheet.costpercapita_s102||0), 0.001); end
  def test_costpercapita_t102; assert_in_delta(0, (worksheet.costpercapita_t102||0), 0.001); end
  def test_costpercapita_u102; assert_in_delta(0, (worksheet.costpercapita_u102||0), 0.001); end
  def test_costpercapita_v102; assert_in_delta(0, (worksheet.costpercapita_v102||0), 0.001); end
  def test_costpercapita_w102; assert_in_delta(0, (worksheet.costpercapita_w102||0), 0.001); end
  def test_costpercapita_av102; assert_in_delta(0, (worksheet.costpercapita_av102||0), 0.001); end
  def test_costpercapita_aw102; assert_in_epsilon(5, worksheet.costpercapita_aw102, 0.001); end
  def test_costpercapita_ay102; assert_in_delta(0, (worksheet.costpercapita_ay102||0), 0.001); end
  def test_costpercapita_az102; assert_in_delta(0, (worksheet.costpercapita_az102||0), 0.001); end
  def test_costpercapita_ba102; assert_in_delta(0, (worksheet.costpercapita_ba102||0), 0.001); end
  def test_costpercapita_bb102; assert_in_delta(0, (worksheet.costpercapita_bb102||0), 0.001); end
  def test_costpercapita_bc102; assert_in_delta(0, (worksheet.costpercapita_bc102||0), 0.001); end
  def test_costpercapita_bd102; assert_in_delta(0, (worksheet.costpercapita_bd102||0), 0.001); end
  def test_costpercapita_be102; assert_in_delta(0, (worksheet.costpercapita_be102||0), 0.001); end
  def test_costpercapita_bf102; assert_in_delta(0, (worksheet.costpercapita_bf102||0), 0.001); end
  def test_costpercapita_bg102; assert_in_delta(0, (worksheet.costpercapita_bg102||0), 0.001); end
  def test_costpercapita_bi102; assert_in_delta(0, (worksheet.costpercapita_bi102||0), 0.001); end
  def test_costpercapita_bj102; assert_in_delta(0, (worksheet.costpercapita_bj102||0), 0.001); end
  def test_costpercapita_bk102; assert_in_delta(0, (worksheet.costpercapita_bk102||0), 0.001); end
  def test_costpercapita_bl102; assert_in_delta(0, (worksheet.costpercapita_bl102||0), 0.001); end
  def test_costpercapita_bm102; assert_in_delta(0, (worksheet.costpercapita_bm102||0), 0.001); end
  def test_costpercapita_bn102; assert_in_delta(0, (worksheet.costpercapita_bn102||0), 0.001); end
  def test_costpercapita_bo102; assert_in_delta(0, (worksheet.costpercapita_bo102||0), 0.001); end
  def test_costpercapita_bp102; assert_in_delta(0, (worksheet.costpercapita_bp102||0), 0.001); end
  def test_costpercapita_bq102; assert_in_delta(0, (worksheet.costpercapita_bq102||0), 0.001); end
  def test_costpercapita_cf102; assert_in_delta(0, (worksheet.costpercapita_cf102||0), 0.001); end
  def test_costpercapita_cg102; assert_in_delta(0, (worksheet.costpercapita_cg102||0), 0.001); end
  def test_costpercapita_ch102; assert_in_delta(0, (worksheet.costpercapita_ch102||0), 0.001); end
  def test_costpercapita_ci102; assert_in_delta(0, (worksheet.costpercapita_ci102||0), 0.001); end
  def test_costpercapita_cj102; assert_in_delta(0, (worksheet.costpercapita_cj102||0), 0.001); end
  def test_costpercapita_ck102; assert_in_delta(0, (worksheet.costpercapita_ck102||0), 0.001); end
  def test_costpercapita_cl102; assert_in_delta(0, (worksheet.costpercapita_cl102||0), 0.001); end
  def test_costpercapita_cm102; assert_in_delta(0, (worksheet.costpercapita_cm102||0), 0.001); end
  def test_costpercapita_cn102; assert_in_delta(0, (worksheet.costpercapita_cn102||0), 0.001); end
  def test_costpercapita_cp102; assert_in_delta(0, (worksheet.costpercapita_cp102||0), 0.001); end
  def test_costpercapita_cq102; assert_in_delta(0, (worksheet.costpercapita_cq102||0), 0.001); end
  def test_costpercapita_bt102; assert_in_epsilon(27.64602821445756, worksheet.costpercapita_bt102, 0.001); end
  def test_costpercapita_bu102; assert_in_epsilon(13.513276463951634, worksheet.costpercapita_bu102, 0.001); end
  def test_costpercapita_bv102; assert_in_epsilon(-4.5028726377924215, worksheet.costpercapita_bv102, 0.001); end
  def test_costpercapita_bw102; assert_in_epsilon(-7.6005843245854505, worksheet.costpercapita_bw102, 0.001); end
  def test_costpercapita_bx102; assert_in_epsilon(-7.220614882669805, worksheet.costpercapita_bx102, 0.001); end
  def test_costpercapita_by102; assert_in_epsilon(-7.771400244629285, worksheet.costpercapita_by102, 0.001); end
  def test_costpercapita_bz102; assert_in_epsilon(-8.84053061701247, worksheet.costpercapita_bz102, 0.001); end
  def test_costpercapita_ca102; assert_in_epsilon(-8.606029982598292, worksheet.costpercapita_ca102, 0.001); end
  def test_costpercapita_bs102; assert_in_epsilon(37.55568640361976, worksheet.costpercapita_bs102, 0.001); end
  def test_costpercapita_cd102; assert_in_epsilon(115.19019094550012, worksheet.costpercapita_cd102, 0.001); end
  def test_costpercapita_aj102; assert_in_epsilon(27.64602821445756, worksheet.costpercapita_aj102, 0.001); end
  def test_costpercapita_ak102; assert_in_epsilon(13.513276463951634, worksheet.costpercapita_ak102, 0.001); end
  def test_costpercapita_al102; assert_in_epsilon(-4.5028726377924215, worksheet.costpercapita_al102, 0.001); end
  def test_costpercapita_am102; assert_in_epsilon(-7.6005843245854505, worksheet.costpercapita_am102, 0.001); end
  def test_costpercapita_an102; assert_in_epsilon(-7.220614882669805, worksheet.costpercapita_an102, 0.001); end
  def test_costpercapita_ao102; assert_in_epsilon(-7.771400244629285, worksheet.costpercapita_ao102, 0.001); end
  def test_costpercapita_ap102; assert_in_epsilon(-8.84053061701247, worksheet.costpercapita_ap102, 0.001); end
  def test_costpercapita_aq102; assert_in_epsilon(-8.606029982598292, worksheet.costpercapita_aq102, 0.001); end
  def test_costpercapita_ai102; assert_in_epsilon(37.55568640361976, worksheet.costpercapita_ai102, 0.001); end
  def test_costpercapita_at102; assert_in_epsilon(115.19019094550012, worksheet.costpercapita_at102, 0.001); end
  def test_costpercapita_cr102; assert_equal("ok", worksheet.costpercapita_cr102); end
  def test_costpercapita_a103; assert_equal("XVI.b.Oil", worksheet.costpercapita_a103); end
  def test_costpercapita_b103; assert_equal("Balancing imports - Oil", worksheet.costpercapita_b103); end
  def test_costpercapita_c103; assert_equal("Fossil Fuels", worksheet.costpercapita_c103); end
  def test_costpercapita_e103; assert_in_delta(0, (worksheet.costpercapita_e103||0), 0.001); end
  def test_costpercapita_f103; assert_in_delta(0, (worksheet.costpercapita_f103||0), 0.001); end
  def test_costpercapita_g103; assert_in_delta(0, (worksheet.costpercapita_g103||0), 0.001); end
  def test_costpercapita_h103; assert_in_delta(0, (worksheet.costpercapita_h103||0), 0.001); end
  def test_costpercapita_i103; assert_in_delta(0, (worksheet.costpercapita_i103||0), 0.001); end
  def test_costpercapita_j103; assert_in_delta(0, (worksheet.costpercapita_j103||0), 0.001); end
  def test_costpercapita_k103; assert_in_delta(0, (worksheet.costpercapita_k103||0), 0.001); end
  def test_costpercapita_l103; assert_in_delta(0, (worksheet.costpercapita_l103||0), 0.001); end
  def test_costpercapita_m103; assert_in_delta(0, (worksheet.costpercapita_m103||0), 0.001); end
  def test_costpercapita_o103; assert_in_delta(0, (worksheet.costpercapita_o103||0), 0.001); end
  def test_costpercapita_p103; assert_in_delta(0, (worksheet.costpercapita_p103||0), 0.001); end
  def test_costpercapita_q103; assert_in_delta(0, (worksheet.costpercapita_q103||0), 0.001); end
  def test_costpercapita_r103; assert_in_delta(0, (worksheet.costpercapita_r103||0), 0.001); end
  def test_costpercapita_s103; assert_in_delta(0, (worksheet.costpercapita_s103||0), 0.001); end
  def test_costpercapita_t103; assert_in_delta(0, (worksheet.costpercapita_t103||0), 0.001); end
  def test_costpercapita_u103; assert_in_delta(0, (worksheet.costpercapita_u103||0), 0.001); end
  def test_costpercapita_v103; assert_in_delta(0, (worksheet.costpercapita_v103||0), 0.001); end
  def test_costpercapita_w103; assert_in_delta(0, (worksheet.costpercapita_w103||0), 0.001); end
  def test_costpercapita_av103; assert_in_delta(0, (worksheet.costpercapita_av103||0), 0.001); end
  def test_costpercapita_aw103; assert_in_epsilon(5, worksheet.costpercapita_aw103, 0.001); end
  def test_costpercapita_ay103; assert_in_delta(0, (worksheet.costpercapita_ay103||0), 0.001); end
  def test_costpercapita_az103; assert_in_delta(0, (worksheet.costpercapita_az103||0), 0.001); end
  def test_costpercapita_ba103; assert_in_delta(0, (worksheet.costpercapita_ba103||0), 0.001); end
  def test_costpercapita_bb103; assert_in_delta(0, (worksheet.costpercapita_bb103||0), 0.001); end
  def test_costpercapita_bc103; assert_in_delta(0, (worksheet.costpercapita_bc103||0), 0.001); end
  def test_costpercapita_bd103; assert_in_delta(0, (worksheet.costpercapita_bd103||0), 0.001); end
  def test_costpercapita_be103; assert_in_delta(0, (worksheet.costpercapita_be103||0), 0.001); end
  def test_costpercapita_bf103; assert_in_delta(0, (worksheet.costpercapita_bf103||0), 0.001); end
  def test_costpercapita_bg103; assert_in_delta(0, (worksheet.costpercapita_bg103||0), 0.001); end
  def test_costpercapita_bi103; assert_in_delta(0, (worksheet.costpercapita_bi103||0), 0.001); end
  def test_costpercapita_bj103; assert_in_delta(0, (worksheet.costpercapita_bj103||0), 0.001); end
  def test_costpercapita_bk103; assert_in_delta(0, (worksheet.costpercapita_bk103||0), 0.001); end
  def test_costpercapita_bl103; assert_in_delta(0, (worksheet.costpercapita_bl103||0), 0.001); end
  def test_costpercapita_bm103; assert_in_delta(0, (worksheet.costpercapita_bm103||0), 0.001); end
  def test_costpercapita_bn103; assert_in_delta(0, (worksheet.costpercapita_bn103||0), 0.001); end
  def test_costpercapita_bo103; assert_in_delta(0, (worksheet.costpercapita_bo103||0), 0.001); end
  def test_costpercapita_bp103; assert_in_delta(0, (worksheet.costpercapita_bp103||0), 0.001); end
  def test_costpercapita_bq103; assert_in_delta(0, (worksheet.costpercapita_bq103||0), 0.001); end
  def test_costpercapita_cf103; assert_in_delta(0, (worksheet.costpercapita_cf103||0), 0.001); end
  def test_costpercapita_cg103; assert_in_delta(0, (worksheet.costpercapita_cg103||0), 0.001); end
  def test_costpercapita_ch103; assert_in_delta(0, (worksheet.costpercapita_ch103||0), 0.001); end
  def test_costpercapita_ci103; assert_in_delta(0, (worksheet.costpercapita_ci103||0), 0.001); end
  def test_costpercapita_cj103; assert_in_delta(0, (worksheet.costpercapita_cj103||0), 0.001); end
  def test_costpercapita_ck103; assert_in_delta(0, (worksheet.costpercapita_ck103||0), 0.001); end
  def test_costpercapita_cl103; assert_in_delta(0, (worksheet.costpercapita_cl103||0), 0.001); end
  def test_costpercapita_cm103; assert_in_delta(0, (worksheet.costpercapita_cm103||0), 0.001); end
  def test_costpercapita_cn103; assert_in_delta(0, (worksheet.costpercapita_cn103||0), 0.001); end
  def test_costpercapita_cp103; assert_in_delta(0, (worksheet.costpercapita_cp103||0), 0.001); end
  def test_costpercapita_cq103; assert_in_delta(0, (worksheet.costpercapita_cq103||0), 0.001); end
  def test_costpercapita_bt103; assert_in_epsilon(59.75985059894816, worksheet.costpercapita_bt103, 0.001); end
  def test_costpercapita_bu103; assert_in_epsilon(86.806845480154, worksheet.costpercapita_bu103, 0.001); end
  def test_costpercapita_bv103; assert_in_epsilon(72.42594935260117, worksheet.costpercapita_bv103, 0.001); end
  def test_costpercapita_bw103; assert_in_epsilon(48.621375908009476, worksheet.costpercapita_bw103, 0.001); end
  def test_costpercapita_bx103; assert_in_epsilon(48.907110832716505, worksheet.costpercapita_bx103, 0.001); end
  def test_costpercapita_by103; assert_in_epsilon(38.5090070159095, worksheet.costpercapita_by103, 0.001); end
  def test_costpercapita_bz103; assert_in_epsilon(16.6158098190211, worksheet.costpercapita_bz103, 0.001); end
  def test_costpercapita_ca103; assert_in_epsilon(-10.493421663291345, worksheet.costpercapita_ca103, 0.001); end
  def test_costpercapita_bs103; assert_in_epsilon(25.305851963681697, worksheet.costpercapita_bs103, 0.001); end
  def test_costpercapita_cd103; assert_in_epsilon(1106.608349978021, worksheet.costpercapita_cd103, 0.001); end
  def test_costpercapita_aj103; assert_in_epsilon(59.75985059894816, worksheet.costpercapita_aj103, 0.001); end
  def test_costpercapita_ak103; assert_in_epsilon(86.806845480154, worksheet.costpercapita_ak103, 0.001); end
  def test_costpercapita_al103; assert_in_epsilon(72.42594935260117, worksheet.costpercapita_al103, 0.001); end
  def test_costpercapita_am103; assert_in_epsilon(48.621375908009476, worksheet.costpercapita_am103, 0.001); end
  def test_costpercapita_an103; assert_in_epsilon(48.907110832716505, worksheet.costpercapita_an103, 0.001); end
  def test_costpercapita_ao103; assert_in_epsilon(38.5090070159095, worksheet.costpercapita_ao103, 0.001); end
  def test_costpercapita_ap103; assert_in_epsilon(16.6158098190211, worksheet.costpercapita_ap103, 0.001); end
  def test_costpercapita_aq103; assert_in_epsilon(-10.493421663291345, worksheet.costpercapita_aq103, 0.001); end
  def test_costpercapita_ai103; assert_in_epsilon(25.305851963681697, worksheet.costpercapita_ai103, 0.001); end
  def test_costpercapita_at103; assert_in_epsilon(1106.608349978021, worksheet.costpercapita_at103, 0.001); end
  def test_costpercapita_cr103; assert_equal("ok", worksheet.costpercapita_cr103); end
  def test_costpercapita_a104; assert_equal("XVI.b.Gas", worksheet.costpercapita_a104); end
  def test_costpercapita_b104; assert_equal("Balancing imports - Gas", worksheet.costpercapita_b104); end
  def test_costpercapita_c104; assert_equal("Fossil Fuels", worksheet.costpercapita_c104); end
  def test_costpercapita_e104; assert_in_delta(0, (worksheet.costpercapita_e104||0), 0.001); end
  def test_costpercapita_f104; assert_in_delta(0, (worksheet.costpercapita_f104||0), 0.001); end
  def test_costpercapita_g104; assert_in_delta(0, (worksheet.costpercapita_g104||0), 0.001); end
  def test_costpercapita_h104; assert_in_delta(0, (worksheet.costpercapita_h104||0), 0.001); end
  def test_costpercapita_i104; assert_in_delta(0, (worksheet.costpercapita_i104||0), 0.001); end
  def test_costpercapita_j104; assert_in_delta(0, (worksheet.costpercapita_j104||0), 0.001); end
  def test_costpercapita_k104; assert_in_delta(0, (worksheet.costpercapita_k104||0), 0.001); end
  def test_costpercapita_l104; assert_in_delta(0, (worksheet.costpercapita_l104||0), 0.001); end
  def test_costpercapita_m104; assert_in_delta(0, (worksheet.costpercapita_m104||0), 0.001); end
  def test_costpercapita_o104; assert_in_delta(0, (worksheet.costpercapita_o104||0), 0.001); end
  def test_costpercapita_p104; assert_in_delta(0, (worksheet.costpercapita_p104||0), 0.001); end
  def test_costpercapita_q104; assert_in_delta(0, (worksheet.costpercapita_q104||0), 0.001); end
  def test_costpercapita_r104; assert_in_delta(0, (worksheet.costpercapita_r104||0), 0.001); end
  def test_costpercapita_s104; assert_in_delta(0, (worksheet.costpercapita_s104||0), 0.001); end
  def test_costpercapita_t104; assert_in_delta(0, (worksheet.costpercapita_t104||0), 0.001); end
  def test_costpercapita_u104; assert_in_delta(0, (worksheet.costpercapita_u104||0), 0.001); end
  def test_costpercapita_v104; assert_in_delta(0, (worksheet.costpercapita_v104||0), 0.001); end
  def test_costpercapita_w104; assert_in_delta(0, (worksheet.costpercapita_w104||0), 0.001); end
  def test_costpercapita_av104; assert_in_delta(0, (worksheet.costpercapita_av104||0), 0.001); end
  def test_costpercapita_aw104; assert_in_epsilon(5, worksheet.costpercapita_aw104, 0.001); end
  def test_costpercapita_ay104; assert_in_delta(0, (worksheet.costpercapita_ay104||0), 0.001); end
  def test_costpercapita_az104; assert_in_delta(0, (worksheet.costpercapita_az104||0), 0.001); end
  def test_costpercapita_ba104; assert_in_delta(0, (worksheet.costpercapita_ba104||0), 0.001); end
  def test_costpercapita_bb104; assert_in_delta(0, (worksheet.costpercapita_bb104||0), 0.001); end
  def test_costpercapita_bc104; assert_in_delta(0, (worksheet.costpercapita_bc104||0), 0.001); end
  def test_costpercapita_bd104; assert_in_delta(0, (worksheet.costpercapita_bd104||0), 0.001); end
  def test_costpercapita_be104; assert_in_delta(0, (worksheet.costpercapita_be104||0), 0.001); end
  def test_costpercapita_bf104; assert_in_delta(0, (worksheet.costpercapita_bf104||0), 0.001); end
  def test_costpercapita_bg104; assert_in_delta(0, (worksheet.costpercapita_bg104||0), 0.001); end
  def test_costpercapita_bi104; assert_in_delta(0, (worksheet.costpercapita_bi104||0), 0.001); end
  def test_costpercapita_bj104; assert_in_delta(0, (worksheet.costpercapita_bj104||0), 0.001); end
  def test_costpercapita_bk104; assert_in_delta(0, (worksheet.costpercapita_bk104||0), 0.001); end
  def test_costpercapita_bl104; assert_in_delta(0, (worksheet.costpercapita_bl104||0), 0.001); end
  def test_costpercapita_bm104; assert_in_delta(0, (worksheet.costpercapita_bm104||0), 0.001); end
  def test_costpercapita_bn104; assert_in_delta(0, (worksheet.costpercapita_bn104||0), 0.001); end
  def test_costpercapita_bo104; assert_in_delta(0, (worksheet.costpercapita_bo104||0), 0.001); end
  def test_costpercapita_bp104; assert_in_delta(0, (worksheet.costpercapita_bp104||0), 0.001); end
  def test_costpercapita_bq104; assert_in_delta(0, (worksheet.costpercapita_bq104||0), 0.001); end
  def test_costpercapita_cf104; assert_in_delta(0, (worksheet.costpercapita_cf104||0), 0.001); end
  def test_costpercapita_cg104; assert_in_delta(0, (worksheet.costpercapita_cg104||0), 0.001); end
  def test_costpercapita_ch104; assert_in_delta(0, (worksheet.costpercapita_ch104||0), 0.001); end
  def test_costpercapita_ci104; assert_in_delta(0, (worksheet.costpercapita_ci104||0), 0.001); end
  def test_costpercapita_cj104; assert_in_delta(0, (worksheet.costpercapita_cj104||0), 0.001); end
  def test_costpercapita_ck104; assert_in_delta(0, (worksheet.costpercapita_ck104||0), 0.001); end
  def test_costpercapita_cl104; assert_in_delta(0, (worksheet.costpercapita_cl104||0), 0.001); end
  def test_costpercapita_cm104; assert_in_delta(0, (worksheet.costpercapita_cm104||0), 0.001); end
  def test_costpercapita_cn104; assert_in_delta(0, (worksheet.costpercapita_cn104||0), 0.001); end
  def test_costpercapita_cp104; assert_in_delta(0, (worksheet.costpercapita_cp104||0), 0.001); end
  def test_costpercapita_cq104; assert_in_delta(0, (worksheet.costpercapita_cq104||0), 0.001); end
  def test_costpercapita_bt104; assert_in_epsilon(69.16269656937939, worksheet.costpercapita_bt104, 0.001); end
  def test_costpercapita_bu104; assert_in_epsilon(51.85224564827767, worksheet.costpercapita_bu104, 0.001); end
  def test_costpercapita_bv104; assert_in_epsilon(27.901000084924593, worksheet.costpercapita_bv104, 0.001); end
  def test_costpercapita_bw104; assert_in_epsilon(5.043056302928927, worksheet.costpercapita_bw104, 0.001); end
  def test_costpercapita_bx104; assert_in_delta(0.1503567664782327, worksheet.costpercapita_bx104, 0.001); end
  def test_costpercapita_by104; assert_in_epsilon(-7.851734845701245, worksheet.costpercapita_by104, 0.001); end
  def test_costpercapita_bz104; assert_in_epsilon(-17.674140686209586, worksheet.costpercapita_bz104, 0.001); end
  def test_costpercapita_ca104; assert_in_epsilon(-24.83290738802381, worksheet.costpercapita_ca104, 0.001); end
  def test_costpercapita_bs104; assert_in_epsilon(57.913740413014594, worksheet.costpercapita_bs104, 0.001); end
  def test_costpercapita_cd104; assert_in_epsilon(555.0717798738124, worksheet.costpercapita_cd104, 0.001); end
  def test_costpercapita_aj104; assert_in_epsilon(69.16269656937939, worksheet.costpercapita_aj104, 0.001); end
  def test_costpercapita_ak104; assert_in_epsilon(51.85224564827767, worksheet.costpercapita_ak104, 0.001); end
  def test_costpercapita_al104; assert_in_epsilon(27.901000084924593, worksheet.costpercapita_al104, 0.001); end
  def test_costpercapita_am104; assert_in_epsilon(5.043056302928927, worksheet.costpercapita_am104, 0.001); end
  def test_costpercapita_an104; assert_in_delta(0.1503567664782327, worksheet.costpercapita_an104, 0.001); end
  def test_costpercapita_ao104; assert_in_epsilon(-7.851734845701245, worksheet.costpercapita_ao104, 0.001); end
  def test_costpercapita_ap104; assert_in_epsilon(-17.674140686209586, worksheet.costpercapita_ap104, 0.001); end
  def test_costpercapita_aq104; assert_in_epsilon(-24.83290738802381, worksheet.costpercapita_aq104, 0.001); end
  def test_costpercapita_ai104; assert_in_epsilon(57.913740413014594, worksheet.costpercapita_ai104, 0.001); end
  def test_costpercapita_at104; assert_in_epsilon(555.0717798738124, worksheet.costpercapita_at104, 0.001); end
  def test_costpercapita_cr104; assert_equal("ok", worksheet.costpercapita_cr104); end
  def test_costpercapita_a105; assert_equal("XVII.a", worksheet.costpercapita_a105); end
  def test_costpercapita_b105; assert_equal("District heating effective demand", worksheet.costpercapita_b105); end
  def test_costpercapita_c105; assert_equal("Buildings", worksheet.costpercapita_c105); end
  def test_costpercapita_y105; assert_in_delta(0, (worksheet.costpercapita_y105||0), 0.001); end
  def test_costpercapita_z105; assert_in_delta(0, (worksheet.costpercapita_z105||0), 0.001); end
  def test_costpercapita_aa105; assert_in_delta(0, (worksheet.costpercapita_aa105||0), 0.001); end
  def test_costpercapita_ab105; assert_in_delta(0, (worksheet.costpercapita_ab105||0), 0.001); end
  def test_costpercapita_ac105; assert_in_delta(0, (worksheet.costpercapita_ac105||0), 0.001); end
  def test_costpercapita_ad105; assert_in_delta(0, (worksheet.costpercapita_ad105||0), 0.001); end
  def test_costpercapita_ae105; assert_in_delta(0, (worksheet.costpercapita_ae105||0), 0.001); end
  def test_costpercapita_af105; assert_in_delta(0, (worksheet.costpercapita_af105||0), 0.001); end
  def test_costpercapita_ag105; assert_in_delta(0, (worksheet.costpercapita_ag105||0), 0.001); end
  def test_costpercapita_av105; assert_in_delta(0.07, worksheet.costpercapita_av105, 0.001); end
  def test_costpercapita_aw105; assert_in_epsilon(15, worksheet.costpercapita_aw105, 0.001); end
  def test_costpercapita_bt105; assert_in_delta(0.4859133953752178, worksheet.costpercapita_bt105, 0.001); end
  def test_costpercapita_bu105; assert_in_epsilon(1.152509352623336, worksheet.costpercapita_bu105, 0.001); end
  def test_costpercapita_bv105; assert_in_epsilon(1.5255686015984837, worksheet.costpercapita_bv105, 0.001); end
  def test_costpercapita_bw105; assert_in_epsilon(1.8072992467103328, worksheet.costpercapita_bw105, 0.001); end
  def test_costpercapita_bx105; assert_in_epsilon(1.57332048404228, worksheet.costpercapita_bx105, 0.001); end
  def test_costpercapita_by105; assert_in_epsilon(1.3350261468165734, worksheet.costpercapita_by105, 0.001); end
  def test_costpercapita_bz105; assert_in_epsilon(1.1599072014922247, worksheet.costpercapita_bz105, 0.001); end
  def test_costpercapita_ca105; assert_in_epsilon(1.0800506922205222, worksheet.costpercapita_ca105, 0.001); end
  def test_costpercapita_bs105; assert_in_delta(0.30964403539333524, worksheet.costpercapita_bs105, 0.001); end
  def test_costpercapita_cd105; assert_in_epsilon(24.455805767971427, worksheet.costpercapita_cd105, 0.001); end
  def test_costpercapita_cg105; assert_in_delta(0.03911537571961993, worksheet.costpercapita_cg105, 0.001); end
  def test_costpercapita_ch105; assert_in_delta(-0.15298324866719332, worksheet.costpercapita_ch105, 0.001); end
  def test_costpercapita_ci105; assert_in_delta(0.33621571078589235, worksheet.costpercapita_ci105, 0.001); end
  def test_costpercapita_cj105; assert_in_delta(0.7571546532130025, worksheet.costpercapita_cj105, 0.001); end
  def test_costpercapita_ck105; assert_in_delta(0.682001774739838, worksheet.costpercapita_ck105, 0.001); end
  def test_costpercapita_cl105; assert_in_delta(0.5776295711656627, worksheet.costpercapita_cl105, 0.001); end
  def test_costpercapita_cm105; assert_in_delta(0.43406342692845795, worksheet.costpercapita_cm105, 0.001); end
  def test_costpercapita_cn105; assert_in_delta(0.3603274814026495, worksheet.costpercapita_cn105, 0.001); end
  def test_costpercapita_cf105; assert_in_delta(-0.4114969364271895, worksheet.costpercapita_cf105, 0.001); end
  def test_costpercapita_cq105; assert_in_epsilon(5.733473763326092, worksheet.costpercapita_cq105, 0.001); end
  def test_costpercapita_aj105; assert_in_delta(0.4467980196555979, worksheet.costpercapita_aj105, 0.001); end
  def test_costpercapita_ak105; assert_in_epsilon(1.3054926012905295, worksheet.costpercapita_ak105, 0.001); end
  def test_costpercapita_al105; assert_in_epsilon(1.1893528908125914, worksheet.costpercapita_al105, 0.001); end
  def test_costpercapita_am105; assert_in_epsilon(1.0501445934973304, worksheet.costpercapita_am105, 0.001); end
  def test_costpercapita_an105; assert_in_delta(0.8913187093024421, worksheet.costpercapita_an105, 0.001); end
  def test_costpercapita_ao105; assert_in_delta(0.7573965756509106, worksheet.costpercapita_ao105, 0.001); end
  def test_costpercapita_ap105; assert_in_delta(0.7258437745637669, worksheet.costpercapita_ap105, 0.001); end
  def test_costpercapita_aq105; assert_in_delta(0.7197232108178727, worksheet.costpercapita_aq105, 0.001); end
  def test_costpercapita_ai105; assert_in_delta(0.7211409718205247, worksheet.costpercapita_ai105, 0.001); end
  def test_costpercapita_at105; assert_in_epsilon(18.722332004645335, worksheet.costpercapita_at105, 0.001); end
  def test_costpercapita_cr105; assert_equal("ok", worksheet.costpercapita_cr105); end
  def test_costpercapita_a106; assert_equal("XVIII.a", worksheet.costpercapita_a106); end
  def test_costpercapita_b106; assert_equal("Storage of captured CO2", worksheet.costpercapita_b106); end
  def test_costpercapita_c106; assert_equal("Other", worksheet.costpercapita_c106); end
  def test_costpercapita_y106; assert_in_delta(0, (worksheet.costpercapita_y106||0), 0.001); end
  def test_costpercapita_z106; assert_in_delta(0, (worksheet.costpercapita_z106||0), 0.001); end
  def test_costpercapita_aa106; assert_in_delta(0, (worksheet.costpercapita_aa106||0), 0.001); end
  def test_costpercapita_ab106; assert_in_delta(0, (worksheet.costpercapita_ab106||0), 0.001); end
  def test_costpercapita_ac106; assert_in_delta(0, (worksheet.costpercapita_ac106||0), 0.001); end
  def test_costpercapita_ad106; assert_in_delta(0, (worksheet.costpercapita_ad106||0), 0.001); end
  def test_costpercapita_ae106; assert_in_delta(0, (worksheet.costpercapita_ae106||0), 0.001); end
  def test_costpercapita_af106; assert_in_delta(0, (worksheet.costpercapita_af106||0), 0.001); end
  def test_costpercapita_ag106; assert_in_delta(0, (worksheet.costpercapita_ag106||0), 0.001); end
  def test_costpercapita_av106; assert_in_delta(0.07, worksheet.costpercapita_av106, 0.001); end
  def test_costpercapita_aw106; assert_in_epsilon(15, worksheet.costpercapita_aw106, 0.001); end
  def test_costpercapita_bt106; assert_in_epsilon(1.0009891551775423, worksheet.costpercapita_bt106, 0.001); end
  def test_costpercapita_bu106; assert_in_epsilon(3.1635595146672744, worksheet.costpercapita_bu106, 0.001); end
  def test_costpercapita_bv106; assert_in_epsilon(4.996329440257406, worksheet.costpercapita_bv106, 0.001); end
  def test_costpercapita_bw106; assert_in_epsilon(5.813282610802033, worksheet.costpercapita_bw106, 0.001); end
  def test_costpercapita_bx106; assert_in_epsilon(5.509178257247783, worksheet.costpercapita_bx106, 0.001); end
  def test_costpercapita_by106; assert_in_epsilon(5.434463057642984, worksheet.costpercapita_by106, 0.001); end
  def test_costpercapita_bz106; assert_in_epsilon(5.621693442274972, worksheet.costpercapita_bz106, 0.001); end
  def test_costpercapita_ca106; assert_in_epsilon(6.170850833866672, worksheet.costpercapita_ca106, 0.001); end
  def test_costpercapita_bs106; assert_in_delta(0, (worksheet.costpercapita_bs106||0), 0.001); end
  def test_costpercapita_cd106; assert_in_epsilon(83.10168160171897, worksheet.costpercapita_cd106, 0.001); end
  def test_costpercapita_cg106; assert_in_delta(-0.7728389030531377, worksheet.costpercapita_cg106, 0.001); end
  def test_costpercapita_ch106; assert_in_delta(-0.815422272501624, worksheet.costpercapita_ch106, 0.001); end
  def test_costpercapita_ci106; assert_in_epsilon(1.339911057751323, worksheet.costpercapita_ci106, 0.001); end
  def test_costpercapita_cj106; assert_in_epsilon(2.3711460362190517, worksheet.costpercapita_cj106, 0.001); end
  def test_costpercapita_ck106; assert_in_epsilon(2.144738923375811, worksheet.costpercapita_ck106, 0.001); end
  def test_costpercapita_cl106; assert_in_epsilon(1.9519522996564531, worksheet.costpercapita_cl106, 0.001); end
  def test_costpercapita_cm106; assert_in_epsilon(1.847651273910479, worksheet.costpercapita_cm106, 0.001); end
  def test_costpercapita_cn106; assert_in_epsilon(1.799103819752377, worksheet.costpercapita_cn106, 0.001); end
  def test_costpercapita_cf106; assert_in_delta(0, (worksheet.costpercapita_cf106||0), 0.001); end
  def test_costpercapita_cq106; assert_in_epsilon(17.052126099834258, worksheet.costpercapita_cq106, 0.001); end
  def test_costpercapita_aj106; assert_in_epsilon(1.77382805823068, worksheet.costpercapita_aj106, 0.001); end
  def test_costpercapita_ak106; assert_in_epsilon(3.9789817871688986, worksheet.costpercapita_ak106, 0.001); end
  def test_costpercapita_al106; assert_in_epsilon(3.656418382506083, worksheet.costpercapita_al106, 0.001); end
  def test_costpercapita_am106; assert_in_epsilon(3.4421365745829813, worksheet.costpercapita_am106, 0.001); end
  def test_costpercapita_an106; assert_in_epsilon(3.364439333871973, worksheet.costpercapita_an106, 0.001); end
  def test_costpercapita_ao106; assert_in_epsilon(3.482510757986531, worksheet.costpercapita_ao106, 0.001); end
  def test_costpercapita_ap106; assert_in_epsilon(3.7740421683644927, worksheet.costpercapita_ap106, 0.001); end
  def test_costpercapita_aq106; assert_in_epsilon(4.371747014114296, worksheet.costpercapita_aq106, 0.001); end
  def test_costpercapita_ai106; assert_in_delta(0, (worksheet.costpercapita_ai106||0), 0.001); end
  def test_costpercapita_at106; assert_in_epsilon(66.0495555018847, worksheet.costpercapita_at106, 0.001); end
  def test_costpercapita_cr106; assert_equal("ok", worksheet.costpercapita_cr106); end
  def test_costpercapita_a107; assert_equal("Total", worksheet.costpercapita_a107); end
  def test_costpercapita_b107; assert_equal("Total", worksheet.costpercapita_b107); end
  def test_costpercapita_c107; assert_equal("Total", worksheet.costpercapita_c107); end
  def test_costpercapita_e107; assert_in_epsilon(1686.8669095805374, worksheet.costpercapita_e107, 0.001); end
  def test_costpercapita_f107; assert_in_epsilon(1703.313879721785, worksheet.costpercapita_f107, 0.001); end
  def test_costpercapita_g107; assert_in_epsilon(1924.0335030415183, worksheet.costpercapita_g107, 0.001); end
  def test_costpercapita_h107; assert_in_epsilon(2136.060421440296, worksheet.costpercapita_h107, 0.001); end
  def test_costpercapita_i107; assert_in_epsilon(2179.8505692249455, worksheet.costpercapita_i107, 0.001); end
  def test_costpercapita_j107; assert_in_epsilon(2164.078422613685, worksheet.costpercapita_j107, 0.001); end
  def test_costpercapita_k107; assert_in_epsilon(2307.561081600711, worksheet.costpercapita_k107, 0.001); end
  def test_costpercapita_l107; assert_in_epsilon(2539.417485302831, worksheet.costpercapita_l107, 0.001); end
  def test_costpercapita_m107; assert_in_epsilon(2557.517161040331, worksheet.costpercapita_m107, 0.001); end
  def test_costpercapita_o107; assert_in_epsilon(1517.1763508618624, worksheet.costpercapita_o107, 0.001); end
  def test_costpercapita_p107; assert_in_epsilon(1522.9354855045847, worksheet.costpercapita_p107, 0.001); end
  def test_costpercapita_q107; assert_in_epsilon(1550.8870175890181, worksheet.costpercapita_q107, 0.001); end
  def test_costpercapita_r107; assert_in_epsilon(1632.1171866661894, worksheet.costpercapita_r107, 0.001); end
  def test_costpercapita_s107; assert_in_epsilon(1654.9180716779838, worksheet.costpercapita_s107, 0.001); end
  def test_costpercapita_t107; assert_in_epsilon(1692.0511284546958, worksheet.costpercapita_t107, 0.001); end
  def test_costpercapita_u107; assert_in_epsilon(1626.4979741630657, worksheet.costpercapita_u107, 0.001); end
  def test_costpercapita_v107; assert_in_epsilon(1673.2113412055464, worksheet.costpercapita_v107, 0.001); end
  def test_costpercapita_w107; assert_in_epsilon(1561.1587197968831, worksheet.costpercapita_w107, 0.001); end
  def test_costpercapita_y107; assert_in_epsilon(708.5853774425842, worksheet.costpercapita_y107, 0.001); end
  def test_costpercapita_z107; assert_in_epsilon(693.9351723360143, worksheet.costpercapita_z107, 0.001); end
  def test_costpercapita_aa107; assert_in_epsilon(636.2667385646381, worksheet.costpercapita_aa107, 0.001); end
  def test_costpercapita_ab107; assert_in_epsilon(529.5101893074069, worksheet.costpercapita_ab107, 0.001); end
  def test_costpercapita_ac107; assert_in_epsilon(367.40008290671034, worksheet.costpercapita_ac107, 0.001); end
  def test_costpercapita_ad107; assert_in_epsilon(212.56103911505087, worksheet.costpercapita_ad107, 0.001); end
  def test_costpercapita_ae107; assert_in_epsilon(123.66885333449133, worksheet.costpercapita_ae107, 0.001); end
  def test_costpercapita_af107; assert_in_epsilon(58.40770688606676, worksheet.costpercapita_af107, 0.001); end
  def test_costpercapita_ag107; assert_in_epsilon(47.83349097525382, worksheet.costpercapita_ag107, 0.001); end
  def test_costpercapita_ai107; assert_in_epsilon(3912.628637884983, worksheet.costpercapita_ai107, 0.001); end
  def test_costpercapita_aj107; assert_in_epsilon(3920.184537562384, worksheet.costpercapita_aj107, 0.001); end
  def test_costpercapita_ak107; assert_in_epsilon(4111.187259195174, worksheet.costpercapita_ak107, 0.001); end
  def test_costpercapita_al107; assert_in_epsilon(4297.687797413892, worksheet.costpercapita_al107, 0.001); end
  def test_costpercapita_am107; assert_in_epsilon(4202.16872380964, worksheet.costpercapita_am107, 0.001); end
  def test_costpercapita_an107; assert_in_epsilon(4068.690590183431, worksheet.costpercapita_an107, 0.001); end
  def test_costpercapita_ao107; assert_in_epsilon(4057.7279090982693, worksheet.costpercapita_ao107, 0.001); end
  def test_costpercapita_ap107; assert_in_epsilon(4271.036533394445, worksheet.costpercapita_ap107, 0.001); end
  def test_costpercapita_aq107; assert_in_epsilon(4166.509371812466, worksheet.costpercapita_aq107, 0.001); end
  def test_costpercapita_as107; assert_in_epsilon(4111.980151150521, worksheet.costpercapita_as107, 0.001); end
  def test_costpercapita_ay107; assert_in_epsilon(518.8478308674881, worksheet.costpercapita_ay107, 0.001); end
  def test_costpercapita_az107; assert_in_epsilon(876.7471070036431, worksheet.costpercapita_az107, 0.001); end
  def test_costpercapita_ba107; assert_in_epsilon(994.1606807858786, worksheet.costpercapita_ba107, 0.001); end
  def test_costpercapita_bb107; assert_in_epsilon(1114.0325807249621, worksheet.costpercapita_bb107, 0.001); end
  def test_costpercapita_bc107; assert_in_epsilon(1136.722086503516, worksheet.costpercapita_bc107, 0.001); end
  def test_costpercapita_bd107; assert_in_epsilon(1118.487706234009, worksheet.costpercapita_bd107, 0.001); end
  def test_costpercapita_be107; assert_in_epsilon(1176.5312242086147, worksheet.costpercapita_be107, 0.001); end
  def test_costpercapita_bf107; assert_in_epsilon(1286.3478360502327, worksheet.costpercapita_bf107, 0.001); end
  def test_costpercapita_bg107; assert_in_epsilon(1296.4639180216218, worksheet.costpercapita_bg107, 0.001); end
  def test_costpercapita_bi107; assert_in_epsilon(518.8478308674881, worksheet.costpercapita_bi107, 0.001); end
  def test_costpercapita_bj107; assert_in_epsilon(1368.107492699458, worksheet.costpercapita_bj107, 0.001); end
  def test_costpercapita_bk107; assert_in_epsilon(2275.0356581837646, worksheet.costpercapita_bk107, 0.001); end
  def test_costpercapita_bl107; assert_in_epsilon(2944.403197055974, worksheet.costpercapita_bl107, 0.001); end
  def test_costpercapita_bm107; assert_in_epsilon(3442.129975365253, worksheet.costpercapita_bm107, 0.001); end
  def test_costpercapita_bn107; assert_in_epsilon(3749.428570512431, worksheet.costpercapita_bn107, 0.001); end
  def test_costpercapita_bo107; assert_in_epsilon(3858.0207941164376, worksheet.costpercapita_bo107, 0.001); end
  def test_costpercapita_bp107; assert_in_epsilon(4341.994047165434, worksheet.costpercapita_bp107, 0.001); end
  def test_costpercapita_bq107; assert_in_epsilon(4383.207226892455, worksheet.costpercapita_bq107, 0.001); end
  def test_costpercapita_bs107; assert_in_epsilon(2744.6095591719345, worksheet.costpercapita_bs107, 0.001); end
  def test_costpercapita_bt107; assert_in_epsilon(3584.9781505400565, worksheet.costpercapita_bt107, 0.001); end
  def test_costpercapita_bu107; assert_in_epsilon(4462.189414337419, worksheet.costpercapita_bu107, 0.001); end
  def test_costpercapita_bv107; assert_in_epsilon(5106.0305730295695, worksheet.costpercapita_bv107, 0.001); end
  def test_costpercapita_bw107; assert_in_epsilon(5464.448129949945, worksheet.costpercapita_bw107, 0.001); end
  def test_costpercapita_bx107; assert_in_epsilon(5654.040738082179, worksheet.costpercapita_bx107, 0.001); end
  def test_costpercapita_by107; assert_in_epsilon(5608.187621613994, worksheet.costpercapita_by107, 0.001); end
  def test_costpercapita_bz107; assert_in_epsilon(6073.613095257047, worksheet.costpercapita_bz107, 0.001); end
  def test_costpercapita_ca107; assert_in_epsilon(5992.1994376645935, worksheet.costpercapita_ca107, 0.001); end
  def test_costpercapita_cc107; assert_in_epsilon(4965.588524405193, worksheet.costpercapita_cc107, 0.001); end
  def test_costpercapita_cf107; assert_in_epsilon(-1168.0190787130493, worksheet.costpercapita_cf107, 0.001); end
  def test_costpercapita_cg107; assert_in_epsilon(-335.206387022327, worksheet.costpercapita_cg107, 0.001); end
  def test_costpercapita_ch107; assert_in_epsilon(351.00215514224624, worksheet.costpercapita_ch107, 0.001); end
  def test_costpercapita_ci107; assert_in_epsilon(808.3427756156783, worksheet.costpercapita_ci107, 0.001); end
  def test_costpercapita_cj107; assert_in_epsilon(1262.2794061403074, worksheet.costpercapita_cj107, 0.001); end
  def test_costpercapita_ck107; assert_in_epsilon(1585.3501478987462, worksheet.costpercapita_ck107, 0.001); end
  def test_costpercapita_cl107; assert_in_epsilon(1550.4597125157263, worksheet.costpercapita_cl107, 0.001); end
  def test_costpercapita_cm107; assert_in_epsilon(1802.5765618626028, worksheet.costpercapita_cm107, 0.001); end
  def test_costpercapita_cn107; assert_in_epsilon(1825.6900658521238, worksheet.costpercapita_cn107, 0.001); end
  def test_costpercapita_cp107; assert_in_epsilon(853.6083732546726, worksheet.costpercapita_cp107, 0.001); end
  def test_costpercapita_cd107; assert_in_epsilon(101852.08578393691, worksheet.costpercapita_cd107, 0.001); end
  def test_costpercapita_cq107; assert_in_epsilon(15555.391798867118, worksheet.costpercapita_cq107, 0.001); end
  def test_costpercapita_at107; assert_in_epsilon(86296.69398506978, worksheet.costpercapita_at107, 0.001); end
  def test_costpercapita_cr107; assert_equal("ok", worksheet.costpercapita_cr107); end
  def test_costpercapita_cf108; assert_equal("ok", worksheet.costpercapita_cf108); end
  def test_costpercapita_cg108; assert_equal("ok", worksheet.costpercapita_cg108); end
  def test_costpercapita_ch108; assert_equal("ok", worksheet.costpercapita_ch108); end
  def test_costpercapita_ci108; assert_equal("ok", worksheet.costpercapita_ci108); end
  def test_costpercapita_cj108; assert_equal("ok", worksheet.costpercapita_cj108); end
  def test_costpercapita_ck108; assert_equal("ok", worksheet.costpercapita_ck108); end
  def test_costpercapita_cl108; assert_equal("ok", worksheet.costpercapita_cl108); end
  def test_costpercapita_cm108; assert_equal("ok", worksheet.costpercapita_cm108); end
  def test_costpercapita_cn108; assert_equal("ok", worksheet.costpercapita_cn108); end
  def test_costpercapita_cp108; assert_equal("ok", worksheet.costpercapita_cp108); end
  def test_costpercapita_cq108; assert_equal("ok", worksheet.costpercapita_cq108); end
  def test_costpercapita_b110; assert_equal("£/Capita/yr", worksheet.costpercapita_b110); end
  def test_costpercapita_e110; assert_equal("C1.High", worksheet.costpercapita_e110); end
  def test_costpercapita_f110; assert_equal("High estimate of capital costs", worksheet.costpercapita_f110); end
  def test_costpercapita_o110; assert_equal("C2.High", worksheet.costpercapita_o110); end
  def test_costpercapita_p110; assert_equal("High estimate of operating costs", worksheet.costpercapita_p110); end
  def test_costpercapita_y110; assert_equal("C3.High", worksheet.costpercapita_y110); end
  def test_costpercapita_z110; assert_equal("High estimate of fuel costs", worksheet.costpercapita_z110); end
  def test_costpercapita_ai110; assert_equal("High estimate of total cost", worksheet.costpercapita_ai110); end
  def test_costpercapita_as110; assert_equal("Cashflow capital basis", worksheet.costpercapita_as110); end
  def test_costpercapita_av110; assert_equal("Loan", worksheet.costpercapita_av110); end
  def test_costpercapita_ay110; assert_equal("Finance cost for capital spent in that period", worksheet.costpercapita_ay110); end
  def test_costpercapita_bi110; assert_equal("Finance cost for outstanding capital", worksheet.costpercapita_bi110); end
  def test_costpercapita_br110; assert_equal("Total cost (amortised capital)", worksheet.costpercapita_br110); end
  def test_costpercapita_cc110; assert_equal("Amortised Capital", worksheet.costpercapita_cc110); end
  def test_costpercapita_cf110; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cf110); end
  def test_costpercapita_cp110; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cp110); end
  def test_costpercapita_a111; assert_equal("Code", worksheet.costpercapita_a111); end
  def test_costpercapita_b111; assert_equal("Description", worksheet.costpercapita_b111); end
  def test_costpercapita_c111; assert_equal("Category", worksheet.costpercapita_c111); end
  def test_costpercapita_e111; assert_equal("2010", worksheet.costpercapita_e111); end
  def test_costpercapita_f111; assert_equal("2015", worksheet.costpercapita_f111); end
  def test_costpercapita_g111; assert_equal("2020", worksheet.costpercapita_g111); end
  def test_costpercapita_h111; assert_equal("2025", worksheet.costpercapita_h111); end
  def test_costpercapita_i111; assert_equal("2030", worksheet.costpercapita_i111); end
  def test_costpercapita_j111; assert_equal("2035", worksheet.costpercapita_j111); end
  def test_costpercapita_k111; assert_equal("2040", worksheet.costpercapita_k111); end
  def test_costpercapita_l111; assert_equal("2045", worksheet.costpercapita_l111); end
  def test_costpercapita_m111; assert_equal("2050", worksheet.costpercapita_m111); end
  def test_costpercapita_o111; assert_equal("2010", worksheet.costpercapita_o111); end
  def test_costpercapita_p111; assert_equal("2015", worksheet.costpercapita_p111); end
  def test_costpercapita_q111; assert_equal("2020", worksheet.costpercapita_q111); end
  def test_costpercapita_r111; assert_equal("2025", worksheet.costpercapita_r111); end
  def test_costpercapita_s111; assert_equal("2030", worksheet.costpercapita_s111); end
  def test_costpercapita_t111; assert_equal("2035", worksheet.costpercapita_t111); end
  def test_costpercapita_u111; assert_equal("2040", worksheet.costpercapita_u111); end
  def test_costpercapita_v111; assert_equal("2045", worksheet.costpercapita_v111); end
  def test_costpercapita_w111; assert_equal("2050", worksheet.costpercapita_w111); end
  def test_costpercapita_y111; assert_equal("2010", worksheet.costpercapita_y111); end
  def test_costpercapita_z111; assert_equal("2015", worksheet.costpercapita_z111); end
  def test_costpercapita_aa111; assert_equal("2020", worksheet.costpercapita_aa111); end
  def test_costpercapita_ab111; assert_equal("2025", worksheet.costpercapita_ab111); end
  def test_costpercapita_ac111; assert_equal("2030", worksheet.costpercapita_ac111); end
  def test_costpercapita_ad111; assert_equal("2035", worksheet.costpercapita_ad111); end
  def test_costpercapita_ae111; assert_equal("2040", worksheet.costpercapita_ae111); end
  def test_costpercapita_af111; assert_equal("2045", worksheet.costpercapita_af111); end
  def test_costpercapita_ag111; assert_equal("2050", worksheet.costpercapita_ag111); end
  def test_costpercapita_ai111; assert_equal("2010", worksheet.costpercapita_ai111); end
  def test_costpercapita_aj111; assert_equal("2015", worksheet.costpercapita_aj111); end
  def test_costpercapita_ak111; assert_equal("2020", worksheet.costpercapita_ak111); end
  def test_costpercapita_al111; assert_equal("2025", worksheet.costpercapita_al111); end
  def test_costpercapita_am111; assert_equal("2030", worksheet.costpercapita_am111); end
  def test_costpercapita_an111; assert_equal("2035", worksheet.costpercapita_an111); end
  def test_costpercapita_ao111; assert_equal("2040", worksheet.costpercapita_ao111); end
  def test_costpercapita_ap111; assert_equal("2045", worksheet.costpercapita_ap111); end
  def test_costpercapita_aq111; assert_equal("2050", worksheet.costpercapita_aq111); end
  def test_costpercapita_as111; assert_equal("Mean", worksheet.costpercapita_as111); end
  def test_costpercapita_at111; assert_equal("NPV", worksheet.costpercapita_at111); end
  def test_costpercapita_av111; assert_equal("Rate", worksheet.costpercapita_av111); end
  def test_costpercapita_aw111; assert_equal("Years", worksheet.costpercapita_aw111); end
  def test_costpercapita_ay111; assert_in_epsilon(2010, worksheet.costpercapita_ay111, 0.001); end
  def test_costpercapita_az111; assert_in_epsilon(2015, worksheet.costpercapita_az111, 0.001); end
  def test_costpercapita_ba111; assert_in_epsilon(2020, worksheet.costpercapita_ba111, 0.001); end
  def test_costpercapita_bb111; assert_in_epsilon(2025, worksheet.costpercapita_bb111, 0.001); end
  def test_costpercapita_bc111; assert_in_epsilon(2030, worksheet.costpercapita_bc111, 0.001); end
  def test_costpercapita_bd111; assert_in_epsilon(2035, worksheet.costpercapita_bd111, 0.001); end
  def test_costpercapita_be111; assert_in_epsilon(2040, worksheet.costpercapita_be111, 0.001); end
  def test_costpercapita_bf111; assert_in_epsilon(2045, worksheet.costpercapita_bf111, 0.001); end
  def test_costpercapita_bg111; assert_in_epsilon(2050, worksheet.costpercapita_bg111, 0.001); end
  def test_costpercapita_bi111; assert_in_epsilon(2010, worksheet.costpercapita_bi111, 0.001); end
  def test_costpercapita_bj111; assert_in_epsilon(2015, worksheet.costpercapita_bj111, 0.001); end
  def test_costpercapita_bk111; assert_in_epsilon(2020, worksheet.costpercapita_bk111, 0.001); end
  def test_costpercapita_bl111; assert_in_epsilon(2025, worksheet.costpercapita_bl111, 0.001); end
  def test_costpercapita_bm111; assert_in_epsilon(2030, worksheet.costpercapita_bm111, 0.001); end
  def test_costpercapita_bn111; assert_in_epsilon(2035, worksheet.costpercapita_bn111, 0.001); end
  def test_costpercapita_bo111; assert_in_epsilon(2040, worksheet.costpercapita_bo111, 0.001); end
  def test_costpercapita_bp111; assert_in_epsilon(2045, worksheet.costpercapita_bp111, 0.001); end
  def test_costpercapita_bq111; assert_in_epsilon(2050, worksheet.costpercapita_bq111, 0.001); end
  def test_costpercapita_bs111; assert_equal("2010", worksheet.costpercapita_bs111); end
  def test_costpercapita_bt111; assert_equal("2015", worksheet.costpercapita_bt111); end
  def test_costpercapita_bu111; assert_equal("2020", worksheet.costpercapita_bu111); end
  def test_costpercapita_bv111; assert_equal("2025", worksheet.costpercapita_bv111); end
  def test_costpercapita_bw111; assert_equal("2030", worksheet.costpercapita_bw111); end
  def test_costpercapita_bx111; assert_equal("2035", worksheet.costpercapita_bx111); end
  def test_costpercapita_by111; assert_equal("2040", worksheet.costpercapita_by111); end
  def test_costpercapita_bz111; assert_equal("2045", worksheet.costpercapita_bz111); end
  def test_costpercapita_ca111; assert_equal("2050", worksheet.costpercapita_ca111); end
  def test_costpercapita_cc111; assert_equal("Mean", worksheet.costpercapita_cc111); end
  def test_costpercapita_cd111; assert_equal("NPV", worksheet.costpercapita_cd111); end
  def test_costpercapita_cf111; assert_equal("2010", worksheet.costpercapita_cf111); end
  def test_costpercapita_cg111; assert_equal("2015", worksheet.costpercapita_cg111); end
  def test_costpercapita_ch111; assert_equal("2020", worksheet.costpercapita_ch111); end
  def test_costpercapita_ci111; assert_equal("2025", worksheet.costpercapita_ci111); end
  def test_costpercapita_cj111; assert_equal("2030", worksheet.costpercapita_cj111); end
  def test_costpercapita_ck111; assert_equal("2035", worksheet.costpercapita_ck111); end
  def test_costpercapita_cl111; assert_equal("2040", worksheet.costpercapita_cl111); end
  def test_costpercapita_cm111; assert_equal("2045", worksheet.costpercapita_cm111); end
  def test_costpercapita_cn111; assert_equal("2050", worksheet.costpercapita_cn111); end
  def test_costpercapita_cp111; assert_equal("Mean", worksheet.costpercapita_cp111); end
  def test_costpercapita_cq111; assert_equal("NPV", worksheet.costpercapita_cq111); end
  def test_costpercapita_a112; assert_equal("I.a", worksheet.costpercapita_a112); end
  def test_costpercapita_b112; assert_equal("Conventional thermal plant", worksheet.costpercapita_b112); end
  def test_costpercapita_c112; assert_equal("Electricity", worksheet.costpercapita_c112); end
  def test_costpercapita_y112; assert_in_delta(0, (worksheet.costpercapita_y112||0), 0.001); end
  def test_costpercapita_z112; assert_in_delta(0, (worksheet.costpercapita_z112||0), 0.001); end
  def test_costpercapita_aa112; assert_in_delta(0, (worksheet.costpercapita_aa112||0), 0.001); end
  def test_costpercapita_ab112; assert_in_delta(0, (worksheet.costpercapita_ab112||0), 0.001); end
  def test_costpercapita_ac112; assert_in_delta(0, (worksheet.costpercapita_ac112||0), 0.001); end
  def test_costpercapita_ad112; assert_in_delta(0, (worksheet.costpercapita_ad112||0), 0.001); end
  def test_costpercapita_ae112; assert_in_delta(0, (worksheet.costpercapita_ae112||0), 0.001); end
  def test_costpercapita_af112; assert_in_delta(0, (worksheet.costpercapita_af112||0), 0.001); end
  def test_costpercapita_ag112; assert_in_delta(0, (worksheet.costpercapita_ag112||0), 0.001); end
  def test_costpercapita_av112; assert_in_delta(0.1, worksheet.costpercapita_av112, 0.001); end
  def test_costpercapita_aw112; assert_in_epsilon(20, worksheet.costpercapita_aw112, 0.001); end
  def test_costpercapita_bt112; assert_in_epsilon(76.24175839865237, worksheet.costpercapita_bt112, 0.001); end
  def test_costpercapita_bu112; assert_in_epsilon(58.93693331571442, worksheet.costpercapita_bu112, 0.001); end
  def test_costpercapita_bv112; assert_in_epsilon(39.65692143596229, worksheet.costpercapita_bv112, 0.001); end
  def test_costpercapita_bw112; assert_in_epsilon(3.6449487048944857, worksheet.costpercapita_bw112, 0.001); end
  def test_costpercapita_bx112; assert_in_delta(0, (worksheet.costpercapita_bx112||0), 0.001); end
  def test_costpercapita_by112; assert_in_delta(0, (worksheet.costpercapita_by112||0), 0.001); end
  def test_costpercapita_bz112; assert_in_delta(0, (worksheet.costpercapita_bz112||0), 0.001); end
  def test_costpercapita_ca112; assert_in_delta(0, (worksheet.costpercapita_ca112||0), 0.001); end
  def test_costpercapita_bs112; assert_in_epsilon(91.05647172431496, worksheet.costpercapita_bs112, 0.001); end
  def test_costpercapita_cd112; assert_in_epsilon(748.4449059937862, worksheet.costpercapita_cd112, 0.001); end
  def test_costpercapita_cg112; assert_in_epsilon(-1.5906087011207628, worksheet.costpercapita_cg112, 0.001); end
  def test_costpercapita_ch112; assert_in_epsilon(2.189422530618772, worksheet.costpercapita_ch112, 0.001); end
  def test_costpercapita_ci112; assert_in_epsilon(2.1216304013709832, worksheet.costpercapita_ci112, 0.001); end
  def test_costpercapita_cj112; assert_in_epsilon(2.063667133991563, worksheet.costpercapita_cj112, 0.001); end
  def test_costpercapita_ck112; assert_in_delta(0, (worksheet.costpercapita_ck112||0), 0.001); end
  def test_costpercapita_cl112; assert_in_delta(0, (worksheet.costpercapita_cl112||0), 0.001); end
  def test_costpercapita_cm112; assert_in_delta(0, (worksheet.costpercapita_cm112||0), 0.001); end
  def test_costpercapita_cn112; assert_in_delta(0, (worksheet.costpercapita_cn112||0), 0.001); end
  def test_costpercapita_cf112; assert_in_delta(0, (worksheet.costpercapita_cf112||0), 0.001); end
  def test_costpercapita_cq112; assert_in_epsilon(12.581914794674473, worksheet.costpercapita_cq112, 0.001); end
  def test_costpercapita_aj112; assert_in_epsilon(77.83236709977312, worksheet.costpercapita_aj112, 0.001); end
  def test_costpercapita_ak112; assert_in_epsilon(56.74751078509565, worksheet.costpercapita_ak112, 0.001); end
  def test_costpercapita_al112; assert_in_epsilon(37.5352910345913, worksheet.costpercapita_al112, 0.001); end
  def test_costpercapita_am112; assert_in_epsilon(1.5812815709029229, worksheet.costpercapita_am112, 0.001); end
  def test_costpercapita_an112; assert_in_delta(0, (worksheet.costpercapita_an112||0), 0.001); end
  def test_costpercapita_ao112; assert_in_delta(0, (worksheet.costpercapita_ao112||0), 0.001); end
  def test_costpercapita_ap112; assert_in_delta(0, (worksheet.costpercapita_ap112||0), 0.001); end
  def test_costpercapita_aq112; assert_in_delta(0, (worksheet.costpercapita_aq112||0), 0.001); end
  def test_costpercapita_ai112; assert_in_epsilon(91.05647172431496, worksheet.costpercapita_ai112, 0.001); end
  def test_costpercapita_at112; assert_in_epsilon(735.8629911991115, worksheet.costpercapita_at112, 0.001); end
  def test_costpercapita_cr112; assert_equal("ok", worksheet.costpercapita_cr112); end
  def test_costpercapita_a113; assert_equal("I.b", worksheet.costpercapita_a113); end
  def test_costpercapita_b113; assert_equal("Combustion + CCS", worksheet.costpercapita_b113); end
  def test_costpercapita_c113; assert_equal("Electricity", worksheet.costpercapita_c113); end
  def test_costpercapita_y113; assert_in_delta(0, (worksheet.costpercapita_y113||0), 0.001); end
  def test_costpercapita_z113; assert_in_delta(0, (worksheet.costpercapita_z113||0), 0.001); end
  def test_costpercapita_aa113; assert_in_delta(0, (worksheet.costpercapita_aa113||0), 0.001); end
  def test_costpercapita_ab113; assert_in_delta(0, (worksheet.costpercapita_ab113||0), 0.001); end
  def test_costpercapita_ac113; assert_in_delta(0, (worksheet.costpercapita_ac113||0), 0.001); end
  def test_costpercapita_ad113; assert_in_delta(0, (worksheet.costpercapita_ad113||0), 0.001); end
  def test_costpercapita_ae113; assert_in_delta(0, (worksheet.costpercapita_ae113||0), 0.001); end
  def test_costpercapita_af113; assert_in_delta(0, (worksheet.costpercapita_af113||0), 0.001); end
  def test_costpercapita_ag113; assert_in_delta(0, (worksheet.costpercapita_ag113||0), 0.001); end
  def test_costpercapita_av113; assert_in_delta(0.1, worksheet.costpercapita_av113, 0.001); end
  def test_costpercapita_aw113; assert_in_epsilon(30, worksheet.costpercapita_aw113, 0.001); end
  def test_costpercapita_bt113; assert_in_epsilon(5.847559299512179, worksheet.costpercapita_bt113, 0.001); end
  def test_costpercapita_bu113; assert_in_epsilon(13.369441590467336, worksheet.costpercapita_bu113, 0.001); end
  def test_costpercapita_bv113; assert_in_epsilon(12.955477223335524, worksheet.costpercapita_bv113, 0.001); end
  def test_costpercapita_bw113; assert_in_epsilon(12.601531602157147, worksheet.costpercapita_bw113, 0.001); end
  def test_costpercapita_bx113; assert_in_epsilon(12.304693756920825, worksheet.costpercapita_bx113, 0.001); end
  def test_costpercapita_by113; assert_in_epsilon(12.04227910505564, worksheet.costpercapita_by113, 0.001); end
  def test_costpercapita_bz113; assert_in_epsilon(8.468487434152294, worksheet.costpercapita_bz113, 0.001); end
  def test_costpercapita_ca113; assert_in_epsilon(3.432761749418211, worksheet.costpercapita_ca113, 0.001); end
  def test_costpercapita_bs113; assert_in_delta(0, (worksheet.costpercapita_bs113||0), 0.001); end
  def test_costpercapita_cd113; assert_in_epsilon(207.3859464815382, worksheet.costpercapita_cd113, 0.001); end
  def test_costpercapita_cg113; assert_in_epsilon(-3.4566267714031036, worksheet.costpercapita_cg113, 0.001); end
  def test_costpercapita_ch113; assert_in_epsilon(-1.2089017241811444, worksheet.costpercapita_ch113, 0.001); end
  def test_costpercapita_ci113; assert_in_epsilon(9.115572019465693, worksheet.costpercapita_ci113, 0.001); end
  def test_costpercapita_cj113; assert_in_epsilon(8.86653319633268, worksheet.costpercapita_cj113, 0.001); end
  def test_costpercapita_ck113; assert_in_epsilon(8.657675837417264, worksheet.costpercapita_ck113, 0.001); end
  def test_costpercapita_cl113; assert_in_epsilon(8.473038898398798, worksheet.costpercapita_cl113, 0.001); end
  def test_costpercapita_cm113; assert_in_epsilon(4.970446164749744, worksheet.costpercapita_cm113, 0.001); end
  def test_costpercapita_cn113; assert_in_delta(-6.370967824488918e-16, worksheet.costpercapita_cn113, 0.001); end
  def test_costpercapita_cf113; assert_in_delta(0, (worksheet.costpercapita_cf113||0), 0.001); end
  def test_costpercapita_cq113; assert_in_epsilon(71.69704168179146, worksheet.costpercapita_cq113, 0.001); end
  def test_costpercapita_aj113; assert_in_epsilon(9.304186070915282, worksheet.costpercapita_aj113, 0.001); end
  def test_costpercapita_ak113; assert_in_epsilon(14.57834331464848, worksheet.costpercapita_ak113, 0.001); end
  def test_costpercapita_al113; assert_in_epsilon(3.839905203869831, worksheet.costpercapita_al113, 0.001); end
  def test_costpercapita_am113; assert_in_epsilon(3.734998405824467, worksheet.costpercapita_am113, 0.001); end
  def test_costpercapita_an113; assert_in_epsilon(3.6470179195035626, worksheet.costpercapita_an113, 0.001); end
  def test_costpercapita_ao113; assert_in_epsilon(3.569240206656842, worksheet.costpercapita_ao113, 0.001); end
  def test_costpercapita_ap113; assert_in_epsilon(3.4980412694025507, worksheet.costpercapita_ap113, 0.001); end
  def test_costpercapita_aq113; assert_in_epsilon(3.432761749418212, worksheet.costpercapita_aq113, 0.001); end
  def test_costpercapita_ai113; assert_in_delta(0, (worksheet.costpercapita_ai113||0), 0.001); end
  def test_costpercapita_at113; assert_in_epsilon(135.68890479974675, worksheet.costpercapita_at113, 0.001); end
  def test_costpercapita_cr113; assert_equal("ok", worksheet.costpercapita_cr113); end
  def test_costpercapita_a114; assert_equal("II.a", worksheet.costpercapita_a114); end
  def test_costpercapita_b114; assert_equal("Nuclear power", worksheet.costpercapita_b114); end
  def test_costpercapita_c114; assert_equal("Electricity", worksheet.costpercapita_c114); end
  def test_costpercapita_av114; assert_in_delta(0.1, worksheet.costpercapita_av114, 0.001); end
  def test_costpercapita_aw114; assert_in_epsilon(30, worksheet.costpercapita_aw114, 0.001); end
  def test_costpercapita_bt114; assert_in_epsilon(19.326686837157055, worksheet.costpercapita_bt114, 0.001); end
  def test_costpercapita_bu114; assert_in_epsilon(9.754538790518367, worksheet.costpercapita_bu114, 0.001); end
  def test_costpercapita_bv114; assert_in_epsilon(3.1508347916543036, worksheet.costpercapita_bv114, 0.001); end
  def test_costpercapita_bw114; assert_in_epsilon(3.0647535027648614, worksheet.costpercapita_bw114, 0.001); end
  def test_costpercapita_bx114; assert_in_delta(0, (worksheet.costpercapita_bx114||0), 0.001); end
  def test_costpercapita_by114; assert_in_delta(0, (worksheet.costpercapita_by114||0), 0.001); end
  def test_costpercapita_bz114; assert_in_delta(0, (worksheet.costpercapita_bz114||0), 0.001); end
  def test_costpercapita_ca114; assert_in_delta(0, (worksheet.costpercapita_ca114||0), 0.001); end
  def test_costpercapita_bs114; assert_in_epsilon(26.547614568930147, worksheet.costpercapita_bs114, 0.001); end
  def test_costpercapita_cd114; assert_in_epsilon(159.59097492633765, worksheet.costpercapita_cd114, 0.001); end
  def test_costpercapita_cg114; assert_in_delta(0, (worksheet.costpercapita_cg114||0), 0.001); end
  def test_costpercapita_ch114; assert_in_delta(0, (worksheet.costpercapita_ch114||0), 0.001); end
  def test_costpercapita_ci114; assert_in_delta(0, (worksheet.costpercapita_ci114||0), 0.001); end
  def test_costpercapita_cj114; assert_in_delta(0, (worksheet.costpercapita_cj114||0), 0.001); end
  def test_costpercapita_ck114; assert_in_delta(0, (worksheet.costpercapita_ck114||0), 0.001); end
  def test_costpercapita_cl114; assert_in_delta(0, (worksheet.costpercapita_cl114||0), 0.001); end
  def test_costpercapita_cm114; assert_in_delta(0, (worksheet.costpercapita_cm114||0), 0.001); end
  def test_costpercapita_cn114; assert_in_delta(0, (worksheet.costpercapita_cn114||0), 0.001); end
  def test_costpercapita_cf114; assert_in_delta(0, (worksheet.costpercapita_cf114||0), 0.001); end
  def test_costpercapita_cq114; assert_in_delta(0, (worksheet.costpercapita_cq114||0), 0.001); end
  def test_costpercapita_aj114; assert_in_epsilon(19.326686837157055, worksheet.costpercapita_aj114, 0.001); end
  def test_costpercapita_ak114; assert_in_epsilon(9.754538790518367, worksheet.costpercapita_ak114, 0.001); end
  def test_costpercapita_al114; assert_in_epsilon(3.1508347916543036, worksheet.costpercapita_al114, 0.001); end
  def test_costpercapita_am114; assert_in_epsilon(3.0647535027648614, worksheet.costpercapita_am114, 0.001); end
  def test_costpercapita_an114; assert_in_delta(0, (worksheet.costpercapita_an114||0), 0.001); end
  def test_costpercapita_ao114; assert_in_delta(0, (worksheet.costpercapita_ao114||0), 0.001); end
  def test_costpercapita_ap114; assert_in_delta(0, (worksheet.costpercapita_ap114||0), 0.001); end
  def test_costpercapita_aq114; assert_in_delta(0, (worksheet.costpercapita_aq114||0), 0.001); end
  def test_costpercapita_ai114; assert_in_epsilon(26.547614568930147, worksheet.costpercapita_ai114, 0.001); end
  def test_costpercapita_at114; assert_in_epsilon(159.59097492633765, worksheet.costpercapita_at114, 0.001); end
  def test_costpercapita_cr114; assert_equal("ok", worksheet.costpercapita_cr114); end
  def test_costpercapita_a115; assert_equal("III.a.1", worksheet.costpercapita_a115); end
  def test_costpercapita_b115; assert_equal("Onshore wind", worksheet.costpercapita_b115); end
  def test_costpercapita_c115; assert_equal("Electricity", worksheet.costpercapita_c115); end
  def test_costpercapita_y115; assert_in_delta(0, (worksheet.costpercapita_y115||0), 0.001); end
  def test_costpercapita_z115; assert_in_delta(0, (worksheet.costpercapita_z115||0), 0.001); end
  def test_costpercapita_aa115; assert_in_delta(0, (worksheet.costpercapita_aa115||0), 0.001); end
  def test_costpercapita_ab115; assert_in_delta(0, (worksheet.costpercapita_ab115||0), 0.001); end
  def test_costpercapita_ac115; assert_in_delta(0, (worksheet.costpercapita_ac115||0), 0.001); end
  def test_costpercapita_ad115; assert_in_delta(0, (worksheet.costpercapita_ad115||0), 0.001); end
  def test_costpercapita_ae115; assert_in_delta(0, (worksheet.costpercapita_ae115||0), 0.001); end
  def test_costpercapita_af115; assert_in_delta(0, (worksheet.costpercapita_af115||0), 0.001); end
  def test_costpercapita_ag115; assert_in_delta(0, (worksheet.costpercapita_ag115||0), 0.001); end
  def test_costpercapita_av115; assert_in_delta(0.1, worksheet.costpercapita_av115, 0.001); end
  def test_costpercapita_aw115; assert_in_epsilon(20, worksheet.costpercapita_aw115, 0.001); end
  def test_costpercapita_bt115; assert_in_epsilon(23.346743738121614, worksheet.costpercapita_bt115, 0.001); end
  def test_costpercapita_bu115; assert_in_epsilon(34.704876473021685, worksheet.costpercapita_bu115, 0.001); end
  def test_costpercapita_bv115; assert_in_epsilon(44.11005778282892, worksheet.costpercapita_bv115, 0.001); end
  def test_costpercapita_bw115; assert_in_epsilon(34.314020619032746, worksheet.costpercapita_bw115, 0.001); end
  def test_costpercapita_bx115; assert_in_epsilon(22.34870590426253, worksheet.costpercapita_bx115, 0.001); end
  def test_costpercapita_by115; assert_in_epsilon(10.953003692001525, worksheet.costpercapita_by115, 0.001); end
  def test_costpercapita_bz115; assert_in_delta(0.03324200826954858, worksheet.costpercapita_bz115, 0.001); end
  def test_costpercapita_ca115; assert_in_delta(0.03262165471279304, worksheet.costpercapita_ca115, 0.001); end
  def test_costpercapita_bs115; assert_in_epsilon(11.182733788060187, worksheet.costpercapita_bs115, 0.001); end
  def test_costpercapita_cd115; assert_in_epsilon(517.243624602084, worksheet.costpercapita_cd115, 0.001); end
  def test_costpercapita_cg115; assert_in_delta(-0.31360235453674723, worksheet.costpercapita_cg115, 0.001); end
  def test_costpercapita_ch115; assert_in_epsilon(8.71864654192014, worksheet.costpercapita_ch115, 0.001); end
  def test_costpercapita_ci115; assert_in_epsilon(17.19131716918293, worksheet.costpercapita_ci115, 0.001); end
  def test_costpercapita_cj115; assert_in_epsilon(25.511340669827586, worksheet.costpercapita_cj115, 0.001); end
  def test_costpercapita_ck115; assert_in_epsilon(16.606935526100255, worksheet.costpercapita_ck115, 0.001); end
  def test_costpercapita_cl115; assert_in_epsilon(8.126384802241857, worksheet.costpercapita_cl115, 0.001); end
  def test_costpercapita_cm115; assert_in_delta(0, (worksheet.costpercapita_cm115||0), 0.001); end
  def test_costpercapita_cn115; assert_in_delta(0, (worksheet.costpercapita_cn115||0), 0.001); end
  def test_costpercapita_cf115; assert_in_epsilon(-11.860868904901265, worksheet.costpercapita_cf115, 0.001); end
  def test_costpercapita_cq115; assert_in_epsilon(182.7474483605147, worksheet.costpercapita_cq115, 0.001); end
  def test_costpercapita_aj115; assert_in_epsilon(23.66034609265836, worksheet.costpercapita_aj115, 0.001); end
  def test_costpercapita_ak115; assert_in_epsilon(25.98622993110155, worksheet.costpercapita_ak115, 0.001); end
  def test_costpercapita_al115; assert_in_epsilon(26.918740613645987, worksheet.costpercapita_al115, 0.001); end
  def test_costpercapita_am115; assert_in_epsilon(8.802679949205153, worksheet.costpercapita_am115, 0.001); end
  def test_costpercapita_an115; assert_in_epsilon(5.741770378162275, worksheet.costpercapita_an115, 0.001); end
  def test_costpercapita_ao115; assert_in_epsilon(2.8266188897596685, worksheet.costpercapita_ao115, 0.001); end
  def test_costpercapita_ap115; assert_in_delta(0.03324200826954858, worksheet.costpercapita_ap115, 0.001); end
  def test_costpercapita_aq115; assert_in_delta(0.03262165471279304, worksheet.costpercapita_aq115, 0.001); end
  def test_costpercapita_ai115; assert_in_epsilon(23.04360269296145, worksheet.costpercapita_ai115, 0.001); end
  def test_costpercapita_at115; assert_in_epsilon(334.49617624156923, worksheet.costpercapita_at115, 0.001); end
  def test_costpercapita_cr115; assert_equal("ok", worksheet.costpercapita_cr115); end
  def test_costpercapita_a116; assert_equal("III.a.2", worksheet.costpercapita_a116); end
  def test_costpercapita_b116; assert_equal("Offshore wind", worksheet.costpercapita_b116); end
  def test_costpercapita_c116; assert_equal("Electricity", worksheet.costpercapita_c116); end
  def test_costpercapita_y116; assert_in_delta(0, (worksheet.costpercapita_y116||0), 0.001); end
  def test_costpercapita_z116; assert_in_delta(0, (worksheet.costpercapita_z116||0), 0.001); end
  def test_costpercapita_aa116; assert_in_delta(0, (worksheet.costpercapita_aa116||0), 0.001); end
  def test_costpercapita_ab116; assert_in_delta(0, (worksheet.costpercapita_ab116||0), 0.001); end
  def test_costpercapita_ac116; assert_in_delta(0, (worksheet.costpercapita_ac116||0), 0.001); end
  def test_costpercapita_ad116; assert_in_delta(0, (worksheet.costpercapita_ad116||0), 0.001); end
  def test_costpercapita_ae116; assert_in_delta(0, (worksheet.costpercapita_ae116||0), 0.001); end
  def test_costpercapita_af116; assert_in_delta(0, (worksheet.costpercapita_af116||0), 0.001); end
  def test_costpercapita_ag116; assert_in_delta(0, (worksheet.costpercapita_ag116||0), 0.001); end
  def test_costpercapita_av116; assert_in_delta(0.1, worksheet.costpercapita_av116, 0.001); end
  def test_costpercapita_aw116; assert_in_epsilon(20, worksheet.costpercapita_aw116, 0.001); end
  def test_costpercapita_bt116; assert_in_epsilon(76.89370646234114, worksheet.costpercapita_bt116, 0.001); end
  def test_costpercapita_bu116; assert_in_epsilon(261.7261744355638, worksheet.costpercapita_bu116, 0.001); end
  def test_costpercapita_bv116; assert_in_epsilon(472.2652663659422, worksheet.costpercapita_bv116, 0.001); end
  def test_costpercapita_bw116; assert_in_epsilon(702.7019666625262, worksheet.costpercapita_bw116, 0.001); end
  def test_costpercapita_bx116; assert_in_epsilon(876.0196566604172, worksheet.costpercapita_bx116, 0.001); end
  def test_costpercapita_by116; assert_in_epsilon(931.0450567509998, worksheet.costpercapita_by116, 0.001); end
  def test_costpercapita_bz116; assert_in_epsilon(1117.1195100614432, worksheet.costpercapita_bz116, 0.001); end
  def test_costpercapita_ca116; assert_in_epsilon(932.7544965075567, worksheet.costpercapita_ca116, 0.001); end
  def test_costpercapita_bs116; assert_in_epsilon(12.290069988956168, worksheet.costpercapita_bs116, 0.001); end
  def test_costpercapita_cd116; assert_in_epsilon(10903.923683976009, worksheet.costpercapita_cd116, 0.001); end
  def test_costpercapita_cg116; assert_in_epsilon(-24.618250583144082, worksheet.costpercapita_cg116, 0.001); end
  def test_costpercapita_ch116; assert_in_epsilon(-41.05222527549703, worksheet.costpercapita_ch116, 0.001); end
  def test_costpercapita_ci116; assert_in_epsilon(69.01646766193053, worksheet.costpercapita_ci116, 0.001); end
  def test_costpercapita_cj116; assert_in_epsilon(189.8147060591335, worksheet.costpercapita_cj116, 0.001); end
  def test_costpercapita_ck116; assert_in_epsilon(318.48525107245536, worksheet.costpercapita_ck116, 0.001); end
  def test_costpercapita_cl116; assert_in_epsilon(363.3787956588853, worksheet.costpercapita_cl116, 0.001); end
  def test_costpercapita_cm116; assert_in_epsilon(549.4176682365528, worksheet.costpercapita_cm116, 0.001); end
  def test_costpercapita_cn116; assert_in_epsilon(375.64695614294715, worksheet.costpercapita_cn116, 0.001); end
  def test_costpercapita_cf116; assert_in_epsilon(-14.09335121492547, worksheet.costpercapita_cf116, 0.001); end
  def test_costpercapita_cq116; assert_in_epsilon(3083.0407822206544, worksheet.costpercapita_cq116, 0.001); end
  def test_costpercapita_aj116; assert_in_epsilon(101.51195704548522, worksheet.costpercapita_aj116, 0.001); end
  def test_costpercapita_ak116; assert_in_epsilon(302.7783997110608, worksheet.costpercapita_ak116, 0.001); end
  def test_costpercapita_al116; assert_in_epsilon(403.2487987040117, worksheet.costpercapita_al116, 0.001); end
  def test_costpercapita_am116; assert_in_epsilon(512.8872606033927, worksheet.costpercapita_am116, 0.001); end
  def test_costpercapita_an116; assert_in_epsilon(557.5344055879619, worksheet.costpercapita_an116, 0.001); end
  def test_costpercapita_ao116; assert_in_epsilon(567.6662610921147, worksheet.costpercapita_ao116, 0.001); end
  def test_costpercapita_ap116; assert_in_epsilon(567.7018418248904, worksheet.costpercapita_ap116, 0.001); end
  def test_costpercapita_aq116; assert_in_epsilon(557.1075403646097, worksheet.costpercapita_aq116, 0.001); end
  def test_costpercapita_ai116; assert_in_epsilon(26.38342120388164, worksheet.costpercapita_ai116, 0.001); end
  def test_costpercapita_at116; assert_in_epsilon(7820.882901755356, worksheet.costpercapita_at116, 0.001); end
  def test_costpercapita_cr116; assert_equal("ok", worksheet.costpercapita_cr116); end
  def test_costpercapita_a117; assert_equal("III.b", worksheet.costpercapita_a117); end
  def test_costpercapita_b117; assert_equal("Hydroelectric", worksheet.costpercapita_b117); end
  def test_costpercapita_c117; assert_equal("Electricity", worksheet.costpercapita_c117); end
  def test_costpercapita_y117; assert_in_delta(0, (worksheet.costpercapita_y117||0), 0.001); end
  def test_costpercapita_z117; assert_in_delta(0, (worksheet.costpercapita_z117||0), 0.001); end
  def test_costpercapita_aa117; assert_in_delta(0, (worksheet.costpercapita_aa117||0), 0.001); end
  def test_costpercapita_ab117; assert_in_delta(0, (worksheet.costpercapita_ab117||0), 0.001); end
  def test_costpercapita_ac117; assert_in_delta(0, (worksheet.costpercapita_ac117||0), 0.001); end
  def test_costpercapita_ad117; assert_in_delta(0, (worksheet.costpercapita_ad117||0), 0.001); end
  def test_costpercapita_ae117; assert_in_delta(0, (worksheet.costpercapita_ae117||0), 0.001); end
  def test_costpercapita_af117; assert_in_delta(0, (worksheet.costpercapita_af117||0), 0.001); end
  def test_costpercapita_ag117; assert_in_delta(0, (worksheet.costpercapita_ag117||0), 0.001); end
  def test_costpercapita_av117; assert_in_delta(0.1, worksheet.costpercapita_av117, 0.001); end
  def test_costpercapita_aw117; assert_in_epsilon(30, worksheet.costpercapita_aw117, 0.001); end
  def test_costpercapita_bt117; assert_in_epsilon(11.346137373331638, worksheet.costpercapita_bt117, 0.001); end
  def test_costpercapita_bu117; assert_in_epsilon(12.773333030388674, worksheet.costpercapita_bu117, 0.001); end
  def test_costpercapita_bv117; assert_in_epsilon(13.249303676568656, worksheet.costpercapita_bv117, 0.001); end
  def test_costpercapita_bw117; assert_in_epsilon(13.734999196105905, worksheet.costpercapita_bw117, 0.001); end
  def test_costpercapita_bx117; assert_in_epsilon(14.239162835497337, worksheet.costpercapita_bx117, 0.001); end
  def test_costpercapita_by117; assert_in_epsilon(10.553335616172742, worksheet.costpercapita_by117, 0.001); end
  def test_costpercapita_bz117; assert_in_epsilon(10.467558935096385, worksheet.costpercapita_bz117, 0.001); end
  def test_costpercapita_ca117; assert_in_epsilon(9.73796626027846, worksheet.costpercapita_ca117, 0.001); end
  def test_costpercapita_bs117; assert_in_epsilon(9.810101545472328, worksheet.costpercapita_bs117, 0.001); end
  def test_costpercapita_cd117; assert_in_epsilon(254.82647045968557, worksheet.costpercapita_cd117, 0.001); end
  def test_costpercapita_cg117; assert_in_epsilon(3.4240504008954766, worksheet.costpercapita_cg117, 0.001); end
  def test_costpercapita_ch117; assert_in_epsilon(4.827987100874447, worksheet.costpercapita_ch117, 0.001); end
  def test_costpercapita_ci117; assert_in_epsilon(6.797942456394784, worksheet.costpercapita_ci117, 0.001); end
  def test_costpercapita_cj117; assert_in_epsilon(7.326699768935082, worksheet.costpercapita_cj117, 0.001); end
  def test_costpercapita_ck117; assert_in_epsilon(7.8517623692711895, worksheet.costpercapita_ck117, 0.001); end
  def test_costpercapita_cl117; assert_in_epsilon(4.174875888745433, worksheet.costpercapita_cl117, 0.001); end
  def test_costpercapita_cm117; assert_in_epsilon(4.091595776106092, worksheet.costpercapita_cm117, 0.001); end
  def test_costpercapita_cn117; assert_in_epsilon(3.3585770410542515, worksheet.costpercapita_cn117, 0.001); end
  def test_costpercapita_cf117; assert_in_epsilon(-10.659744339457585, worksheet.costpercapita_cf117, 0.001); end
  def test_costpercapita_cq117; assert_in_epsilon(94.3557277455517, worksheet.costpercapita_cq117, 0.001); end
  def test_costpercapita_aj117; assert_in_epsilon(7.922086972436161, worksheet.costpercapita_aj117, 0.001); end
  def test_costpercapita_ak117; assert_in_epsilon(7.945345929514227, worksheet.costpercapita_ak117, 0.001); end
  def test_costpercapita_al117; assert_in_epsilon(6.451361220173872, worksheet.costpercapita_al117, 0.001); end
  def test_costpercapita_am117; assert_in_epsilon(6.408299427170822, worksheet.costpercapita_am117, 0.001); end
  def test_costpercapita_an117; assert_in_epsilon(6.387400466226146, worksheet.costpercapita_an117, 0.001); end
  def test_costpercapita_ao117; assert_in_epsilon(6.378459727427308, worksheet.costpercapita_ao117, 0.001); end
  def test_costpercapita_ap117; assert_in_epsilon(6.375963158990292, worksheet.costpercapita_ap117, 0.001); end
  def test_costpercapita_aq117; assert_in_epsilon(6.37938921922421, worksheet.costpercapita_aq117, 0.001); end
  def test_costpercapita_ai117; assert_in_epsilon(20.469845884929914, worksheet.costpercapita_ai117, 0.001); end
  def test_costpercapita_at117; assert_in_epsilon(160.47074271413388, worksheet.costpercapita_at117, 0.001); end
  def test_costpercapita_cr117; assert_equal("ok", worksheet.costpercapita_cr117); end
  def test_costpercapita_a118; assert_equal("III.c", worksheet.costpercapita_a118); end
  def test_costpercapita_b118; assert_equal("Wave and Tidal", worksheet.costpercapita_b118); end
  def test_costpercapita_c118; assert_equal("Electricity", worksheet.costpercapita_c118); end
  def test_costpercapita_y118; assert_in_delta(0, (worksheet.costpercapita_y118||0), 0.001); end
  def test_costpercapita_z118; assert_in_delta(0, (worksheet.costpercapita_z118||0), 0.001); end
  def test_costpercapita_aa118; assert_in_delta(0, (worksheet.costpercapita_aa118||0), 0.001); end
  def test_costpercapita_ab118; assert_in_delta(0, (worksheet.costpercapita_ab118||0), 0.001); end
  def test_costpercapita_ac118; assert_in_delta(0, (worksheet.costpercapita_ac118||0), 0.001); end
  def test_costpercapita_ad118; assert_in_delta(0, (worksheet.costpercapita_ad118||0), 0.001); end
  def test_costpercapita_ae118; assert_in_delta(0, (worksheet.costpercapita_ae118||0), 0.001); end
  def test_costpercapita_af118; assert_in_delta(0, (worksheet.costpercapita_af118||0), 0.001); end
  def test_costpercapita_ag118; assert_in_delta(0, (worksheet.costpercapita_ag118||0), 0.001); end
  def test_costpercapita_av118; assert_in_delta(0.1, worksheet.costpercapita_av118, 0.001); end
  def test_costpercapita_aw118; assert_in_epsilon(30, worksheet.costpercapita_aw118, 0.001); end
  def test_costpercapita_bt118; assert_in_delta(0.7569125190677513, worksheet.costpercapita_bt118, 0.001); end
  def test_costpercapita_bu118; assert_in_epsilon(4.88154078861821, worksheet.costpercapita_bu118, 0.001); end
  def test_costpercapita_bv118; assert_in_epsilon(10.375568197197037, worksheet.costpercapita_bv118, 0.001); end
  def test_costpercapita_bw118; assert_in_epsilon(20.86854355954086, worksheet.costpercapita_bw118, 0.001); end
  def test_costpercapita_bx118; assert_in_epsilon(60.974326455962775, worksheet.costpercapita_bx118, 0.001); end
  def test_costpercapita_by118; assert_in_epsilon(134.07327176313692, worksheet.costpercapita_by118, 0.001); end
  def test_costpercapita_bz118; assert_in_epsilon(279.0884069561581, worksheet.costpercapita_bz118, 0.001); end
  def test_costpercapita_ca118; assert_in_epsilon(339.66552847212193, worksheet.costpercapita_ca118, 0.001); end
  def test_costpercapita_bs118; assert_in_delta(0.02271273457028133, worksheet.costpercapita_bs118, 0.001); end
  def test_costpercapita_cd118; assert_in_epsilon(1350.8534671599277, worksheet.costpercapita_cd118, 0.001); end
  def test_costpercapita_cg118; assert_in_delta(-0.42936153784104625, worksheet.costpercapita_cg118, 0.001); end
  def test_costpercapita_ch118; assert_in_epsilon(-2.308388159670134, worksheet.costpercapita_ch118, 0.001); end
  def test_costpercapita_ci118; assert_in_delta(0.10672853392185915, worksheet.costpercapita_ci118, 0.001); end
  def test_costpercapita_cj118; assert_in_delta(0.2816263464405154, worksheet.costpercapita_cj118, 0.001); end
  def test_costpercapita_ck118; assert_in_epsilon(-8.37447650673746, worksheet.costpercapita_ck118, 0.001); end
  def test_costpercapita_cl118; assert_in_epsilon(-4.2931440156314675, worksheet.costpercapita_cl118, 0.001); end
  def test_costpercapita_cm118; assert_in_epsilon(13.433148694336323, worksheet.costpercapita_cm118, 0.001); end
  def test_costpercapita_cn118; assert_in_epsilon(140.82652623127916, worksheet.costpercapita_cn118, 0.001); end
  def test_costpercapita_cf118; assert_in_delta(-0.04101526847019532, worksheet.costpercapita_cf118, 0.001); end
  def test_costpercapita_cq118; assert_in_epsilon(172.94016214123204, worksheet.costpercapita_cq118, 0.001); end
  def test_costpercapita_aj118; assert_in_epsilon(1.1862740569087975, worksheet.costpercapita_aj118, 0.001); end
  def test_costpercapita_ak118; assert_in_epsilon(7.189928948288343, worksheet.costpercapita_ak118, 0.001); end
  def test_costpercapita_al118; assert_in_epsilon(10.268839663275179, worksheet.costpercapita_al118, 0.001); end
  def test_costpercapita_am118; assert_in_epsilon(20.58691721310035, worksheet.costpercapita_am118, 0.001); end
  def test_costpercapita_an118; assert_in_epsilon(69.34880296270023, worksheet.costpercapita_an118, 0.001); end
  def test_costpercapita_ao118; assert_in_epsilon(138.36641577876838, worksheet.costpercapita_ao118, 0.001); end
  def test_costpercapita_ap118; assert_in_epsilon(265.65525826182176, worksheet.costpercapita_ap118, 0.001); end
  def test_costpercapita_aq118; assert_in_epsilon(198.8390022408428, worksheet.costpercapita_aq118, 0.001); end
  def test_costpercapita_ai118; assert_in_delta(0.06372800304047666, worksheet.costpercapita_ai118, 0.001); end
  def test_costpercapita_at118; assert_in_epsilon(1177.9133050186958, worksheet.costpercapita_at118, 0.001); end
  def test_costpercapita_cr118; assert_equal("ok", worksheet.costpercapita_cr118); end
  def test_costpercapita_a119; assert_equal("III.d", worksheet.costpercapita_a119); end
  def test_costpercapita_b119; assert_equal("Geothermal", worksheet.costpercapita_b119); end
  def test_costpercapita_c119; assert_equal("Electricity", worksheet.costpercapita_c119); end
  def test_costpercapita_y119; assert_in_delta(0, (worksheet.costpercapita_y119||0), 0.001); end
  def test_costpercapita_z119; assert_in_delta(0, (worksheet.costpercapita_z119||0), 0.001); end
  def test_costpercapita_aa119; assert_in_delta(0, (worksheet.costpercapita_aa119||0), 0.001); end
  def test_costpercapita_ab119; assert_in_delta(0, (worksheet.costpercapita_ab119||0), 0.001); end
  def test_costpercapita_ac119; assert_in_delta(0, (worksheet.costpercapita_ac119||0), 0.001); end
  def test_costpercapita_ad119; assert_in_delta(0, (worksheet.costpercapita_ad119||0), 0.001); end
  def test_costpercapita_ae119; assert_in_delta(0, (worksheet.costpercapita_ae119||0), 0.001); end
  def test_costpercapita_af119; assert_in_delta(0, (worksheet.costpercapita_af119||0), 0.001); end
  def test_costpercapita_ag119; assert_in_delta(0, (worksheet.costpercapita_ag119||0), 0.001); end
  def test_costpercapita_av119; assert_in_delta(0.1, worksheet.costpercapita_av119, 0.001); end
  def test_costpercapita_aw119; assert_in_epsilon(25, worksheet.costpercapita_aw119, 0.001); end
  def test_costpercapita_bt119; assert_in_delta(0.2268082807258313, worksheet.costpercapita_bt119, 0.001); end
  def test_costpercapita_bu119; assert_in_epsilon(1.7550639768700367, worksheet.costpercapita_bu119, 0.001); end
  def test_costpercapita_bv119; assert_in_epsilon(13.605768781875726, worksheet.costpercapita_bv119, 0.001); end
  def test_costpercapita_bw119; assert_in_epsilon(47.71895587413728, worksheet.costpercapita_bw119, 0.001); end
  def test_costpercapita_bx119; assert_in_epsilon(46.59490266490823, worksheet.costpercapita_bx119, 0.001); end
  def test_costpercapita_by119; assert_in_epsilon(45.601201772951704, worksheet.costpercapita_by119, 0.001); end
  def test_costpercapita_bz119; assert_in_epsilon(69.7151606736277, worksheet.costpercapita_bz119, 0.001); end
  def test_costpercapita_ca119; assert_in_epsilon(69.58512634396034, worksheet.costpercapita_ca119, 0.001); end
  def test_costpercapita_bs119; assert_in_delta(0, (worksheet.costpercapita_bs119||0), 0.001); end
  def test_costpercapita_cd119; assert_in_epsilon(546.8713772415917, worksheet.costpercapita_cd119, 0.001); end
  def test_costpercapita_cg119; assert_in_delta(-0.14243737384456967, worksheet.costpercapita_cg119, 0.001); end
  def test_costpercapita_ch119; assert_in_delta(-0.7954561055051637, worksheet.costpercapita_ch119, 0.001); end
  def test_costpercapita_ci119; assert_in_epsilon(-6.166608163729653, worksheet.costpercapita_ci119, 0.001); end
  def test_costpercapita_cj119; assert_in_epsilon(-11.464230579958663, worksheet.costpercapita_cj119, 0.001); end
  def test_costpercapita_ck119; assert_in_epsilon(35.88628403935529, worksheet.costpercapita_ck119, 0.001); end
  def test_costpercapita_cl119; assert_in_epsilon(34.8446708453296, worksheet.costpercapita_cl119, 0.001); end
  def test_costpercapita_cm119; assert_in_epsilon(57.27776081600699, worksheet.costpercapita_cm119, 0.001); end
  def test_costpercapita_cn119; assert_in_epsilon(42.49929220701219, worksheet.costpercapita_cn119, 0.001); end
  def test_costpercapita_cf119; assert_in_delta(0, (worksheet.costpercapita_cf119||0), 0.001); end
  def test_costpercapita_cq119; assert_in_epsilon(231.71640608302084, worksheet.costpercapita_cq119, 0.001); end
  def test_costpercapita_aj119; assert_in_delta(0.369245654570401, worksheet.costpercapita_aj119, 0.001); end
  def test_costpercapita_ak119; assert_in_epsilon(2.5505200823752006, worksheet.costpercapita_ak119, 0.001); end
  def test_costpercapita_al119; assert_in_epsilon(19.77237694560538, worksheet.costpercapita_al119, 0.001); end
  def test_costpercapita_am119; assert_in_epsilon(59.183186454095946, worksheet.costpercapita_am119, 0.001); end
  def test_costpercapita_an119; assert_in_epsilon(10.70861862555295, worksheet.costpercapita_an119, 0.001); end
  def test_costpercapita_ao119; assert_in_epsilon(10.756530927622105, worksheet.costpercapita_ao119, 0.001); end
  def test_costpercapita_ap119; assert_in_epsilon(12.437399857620695, worksheet.costpercapita_ap119, 0.001); end
  def test_costpercapita_aq119; assert_in_epsilon(27.085834136948154, worksheet.costpercapita_aq119, 0.001); end
  def test_costpercapita_ai119; assert_in_delta(0, (worksheet.costpercapita_ai119||0), 0.001); end
  def test_costpercapita_at119; assert_in_epsilon(315.15497115857085, worksheet.costpercapita_at119, 0.001); end
  def test_costpercapita_cr119; assert_equal("ok", worksheet.costpercapita_cr119); end
  def test_costpercapita_a120; assert_equal("IV.a", worksheet.costpercapita_a120); end
  def test_costpercapita_b120; assert_equal("Distributed solar PV", worksheet.costpercapita_b120); end
  def test_costpercapita_c120; assert_equal("Electricity", worksheet.costpercapita_c120); end
  def test_costpercapita_y120; assert_in_delta(0, (worksheet.costpercapita_y120||0), 0.001); end
  def test_costpercapita_z120; assert_in_delta(0, (worksheet.costpercapita_z120||0), 0.001); end
  def test_costpercapita_aa120; assert_in_delta(0, (worksheet.costpercapita_aa120||0), 0.001); end
  def test_costpercapita_ab120; assert_in_delta(0, (worksheet.costpercapita_ab120||0), 0.001); end
  def test_costpercapita_ac120; assert_in_delta(0, (worksheet.costpercapita_ac120||0), 0.001); end
  def test_costpercapita_ad120; assert_in_delta(0, (worksheet.costpercapita_ad120||0), 0.001); end
  def test_costpercapita_ae120; assert_in_delta(0, (worksheet.costpercapita_ae120||0), 0.001); end
  def test_costpercapita_af120; assert_in_delta(0, (worksheet.costpercapita_af120||0), 0.001); end
  def test_costpercapita_ag120; assert_in_delta(0, (worksheet.costpercapita_ag120||0), 0.001); end
  def test_costpercapita_av120; assert_in_delta(0.1, worksheet.costpercapita_av120, 0.001); end
  def test_costpercapita_aw120; assert_in_epsilon(25, worksheet.costpercapita_aw120, 0.001); end
  def test_costpercapita_bt120; assert_in_epsilon(364.6850819554843, worksheet.costpercapita_bt120, 0.001); end
  def test_costpercapita_bu120; assert_in_epsilon(573.2001831590964, worksheet.costpercapita_bu120, 0.001); end
  def test_costpercapita_bv120; assert_in_epsilon(769.0801014828743, worksheet.costpercapita_bv120, 0.001); end
  def test_costpercapita_bw120; assert_in_epsilon(955.8605482954201, worksheet.costpercapita_bw120, 0.001); end
  def test_costpercapita_bx120; assert_in_epsilon(1136.3811807539169, worksheet.costpercapita_bx120, 0.001); end
  def test_costpercapita_by120; assert_in_epsilon(1416.5816857250902, worksheet.costpercapita_by120, 0.001); end
  def test_costpercapita_bz120; assert_in_epsilon(2032.085646560938, worksheet.costpercapita_bz120, 0.001); end
  def test_costpercapita_ca120; assert_in_epsilon(2625.9115160851234, worksheet.costpercapita_ca120, 0.001); end
  def test_costpercapita_bs120; assert_in_epsilon(141.43309132452606, worksheet.costpercapita_bs120, 0.001); end
  def test_costpercapita_cd120; assert_in_epsilon(19936.73623078409, worksheet.costpercapita_cd120, 0.001); end
  def test_costpercapita_cg120; assert_in_epsilon(-43.56769933650446, worksheet.costpercapita_cg120, 0.001); end
  def test_costpercapita_ch120; assert_in_epsilon(153.49375955187492, worksheet.costpercapita_ch120, 0.001); end
  def test_costpercapita_ci120; assert_in_epsilon(338.31864889531136, worksheet.costpercapita_ci120, 0.001); end
  def test_costpercapita_cj120; assert_in_epsilon(513.4740323354391, worksheet.costpercapita_cj120, 0.001); end
  def test_costpercapita_ck120; assert_in_epsilon(485.19614941922583, worksheet.costpercapita_ck120, 0.001); end
  def test_costpercapita_cl120; assert_in_epsilon(437.0270676230167, worksheet.costpercapita_cl120, 0.001); end
  def test_costpercapita_cm120; assert_in_epsilon(736.6414178970115, worksheet.costpercapita_cm120, 0.001); end
  def test_costpercapita_cn120; assert_in_epsilon(1025.4725317609234, worksheet.costpercapita_cn120, 0.001); end
  def test_costpercapita_cf120; assert_in_epsilon(-254.2068284551022, worksheet.costpercapita_cf120, 0.001); end
  def test_costpercapita_cq120; assert_in_epsilon(6702.7272080587845, worksheet.costpercapita_cq120, 0.001); end
  def test_costpercapita_aj120; assert_in_epsilon(408.25278129198875, worksheet.costpercapita_aj120, 0.001); end
  def test_costpercapita_ak120; assert_in_epsilon(419.70642360722155, worksheet.costpercapita_ak120, 0.001); end
  def test_costpercapita_al120; assert_in_epsilon(430.76145258756287, worksheet.costpercapita_al120, 0.001); end
  def test_costpercapita_am120; assert_in_epsilon(442.3865159599812, worksheet.costpercapita_am120, 0.001); end
  def test_costpercapita_an120; assert_in_epsilon(651.185031334691, worksheet.costpercapita_an120, 0.001); end
  def test_costpercapita_ao120; assert_in_epsilon(979.5546181020737, worksheet.costpercapita_ao120, 0.001); end
  def test_costpercapita_ap120; assert_in_epsilon(1295.4442286639264, worksheet.costpercapita_ap120, 0.001); end
  def test_costpercapita_aq120; assert_in_epsilon(1600.4389843242002, worksheet.costpercapita_aq120, 0.001); end
  def test_costpercapita_ai120; assert_in_epsilon(395.63991977962826, worksheet.costpercapita_ai120, 0.001); end
  def test_costpercapita_at120; assert_in_epsilon(13234.00902272531, worksheet.costpercapita_at120, 0.001); end
  def test_costpercapita_cr120; assert_equal("ok", worksheet.costpercapita_cr120); end
  def test_costpercapita_a121; assert_equal("IV.b", worksheet.costpercapita_a121); end
  def test_costpercapita_b121; assert_equal("Distributed solar thermal", worksheet.costpercapita_b121); end
  def test_costpercapita_c121; assert_equal("Buildings", worksheet.costpercapita_c121); end
  def test_costpercapita_y121; assert_in_delta(0, (worksheet.costpercapita_y121||0), 0.001); end
  def test_costpercapita_z121; assert_in_delta(0, (worksheet.costpercapita_z121||0), 0.001); end
  def test_costpercapita_aa121; assert_in_delta(0, (worksheet.costpercapita_aa121||0), 0.001); end
  def test_costpercapita_ab121; assert_in_delta(0, (worksheet.costpercapita_ab121||0), 0.001); end
  def test_costpercapita_ac121; assert_in_delta(0, (worksheet.costpercapita_ac121||0), 0.001); end
  def test_costpercapita_ad121; assert_in_delta(0, (worksheet.costpercapita_ad121||0), 0.001); end
  def test_costpercapita_ae121; assert_in_delta(0, (worksheet.costpercapita_ae121||0), 0.001); end
  def test_costpercapita_af121; assert_in_delta(0, (worksheet.costpercapita_af121||0), 0.001); end
  def test_costpercapita_ag121; assert_in_delta(0, (worksheet.costpercapita_ag121||0), 0.001); end
  def test_costpercapita_av121; assert_in_delta(0.1, worksheet.costpercapita_av121, 0.001); end
  def test_costpercapita_aw121; assert_in_epsilon(20, worksheet.costpercapita_aw121, 0.001); end
  def test_costpercapita_bt121; assert_in_epsilon(62.10176511239985, worksheet.costpercapita_bt121, 0.001); end
  def test_costpercapita_bu121; assert_in_epsilon(142.95054682591072, worksheet.costpercapita_bu121, 0.001); end
  def test_costpercapita_bv121; assert_in_epsilon(253.28382545315753, worksheet.costpercapita_bv121, 0.001); end
  def test_costpercapita_bw121; assert_in_epsilon(399.746356164962, worksheet.costpercapita_bw121, 0.001); end
  def test_costpercapita_bx121; assert_in_epsilon(568.8448681339144, worksheet.costpercapita_bx121, 0.001); end
  def test_costpercapita_by121; assert_in_epsilon(767.1059239245257, worksheet.costpercapita_by121, 0.001); end
  def test_costpercapita_bz121; assert_in_epsilon(1147.2009891932857, worksheet.costpercapita_bz121, 0.001); end
  def test_costpercapita_ca121; assert_in_epsilon(1234.172223198463, worksheet.costpercapita_ca121, 0.001); end
  def test_costpercapita_bs121; assert_in_epsilon(11.475952427464382, worksheet.costpercapita_bs121, 0.001); end
  def test_costpercapita_cd121; assert_in_epsilon(8508.830842116391, worksheet.costpercapita_cd121, 0.001); end
  def test_costpercapita_cg121; assert_in_epsilon(-24.7437924308321, worksheet.costpercapita_cg121, 0.001); end
  def test_costpercapita_ch121; assert_in_epsilon(1.8265158181587562, worksheet.costpercapita_ch121, 0.001); end
  def test_costpercapita_ci121; assert_in_epsilon(57.88132098088559, worksheet.costpercapita_ci121, 0.001); end
  def test_costpercapita_cj121; assert_in_epsilon(121.35290061470334, worksheet.costpercapita_cj121, 0.001); end
  def test_costpercapita_ck121; assert_in_epsilon(187.57300741559658, worksheet.costpercapita_ck121, 0.001); end
  def test_costpercapita_cl121; assert_in_epsilon(281.75311858099155, worksheet.costpercapita_cl121, 0.001); end
  def test_costpercapita_cm121; assert_in_epsilon(556.6786275647331, worksheet.costpercapita_cm121, 0.001); end
  def test_costpercapita_cn121; assert_in_epsilon(537.9005973353236, worksheet.costpercapita_cn121, 0.001); end
  def test_costpercapita_cf121; assert_in_epsilon(-21.091131651247608, worksheet.costpercapita_cf121, 0.001); end
  def test_costpercapita_cq121; assert_in_epsilon(2826.082559356123, worksheet.costpercapita_cq121, 0.001); end
  def test_costpercapita_aj121; assert_in_epsilon(86.84555754323195, worksheet.costpercapita_aj121, 0.001); end
  def test_costpercapita_ak121; assert_in_epsilon(141.12403100775197, worksheet.costpercapita_ak121, 0.001); end
  def test_costpercapita_al121; assert_in_epsilon(195.40250447227194, worksheet.costpercapita_al121, 0.001); end
  def test_costpercapita_am121; assert_in_epsilon(278.39345555025864, worksheet.costpercapita_am121, 0.001); end
  def test_costpercapita_an121; assert_in_epsilon(381.2718607183178, worksheet.costpercapita_an121, 0.001); end
  def test_costpercapita_ao121; assert_in_epsilon(485.3528053435341, worksheet.costpercapita_ao121, 0.001); end
  def test_costpercapita_ap121; assert_in_epsilon(590.5223616285526, worksheet.costpercapita_ap121, 0.001); end
  def test_costpercapita_aq121; assert_in_epsilon(696.2716258631393, worksheet.costpercapita_aq121, 0.001); end
  def test_costpercapita_ai121; assert_in_epsilon(32.567084078711986, worksheet.costpercapita_ai121, 0.001); end
  def test_costpercapita_at121; assert_in_epsilon(5682.748282760267, worksheet.costpercapita_at121, 0.001); end
  def test_costpercapita_cr121; assert_equal("ok", worksheet.costpercapita_cr121); end
  def test_costpercapita_a122; assert_equal("IV.c", worksheet.costpercapita_a122); end
  def test_costpercapita_b122; assert_equal("Micro wind", worksheet.costpercapita_b122); end
  def test_costpercapita_c122; assert_equal("Electricity", worksheet.costpercapita_c122); end
  def test_costpercapita_o122; assert_in_delta(0, (worksheet.costpercapita_o122||0), 0.001); end
  def test_costpercapita_p122; assert_in_delta(0, (worksheet.costpercapita_p122||0), 0.001); end
  def test_costpercapita_q122; assert_in_delta(0, (worksheet.costpercapita_q122||0), 0.001); end
  def test_costpercapita_r122; assert_in_delta(0, (worksheet.costpercapita_r122||0), 0.001); end
  def test_costpercapita_s122; assert_in_delta(0, (worksheet.costpercapita_s122||0), 0.001); end
  def test_costpercapita_t122; assert_in_delta(0, (worksheet.costpercapita_t122||0), 0.001); end
  def test_costpercapita_u122; assert_in_delta(0, (worksheet.costpercapita_u122||0), 0.001); end
  def test_costpercapita_v122; assert_in_delta(0, (worksheet.costpercapita_v122||0), 0.001); end
  def test_costpercapita_w122; assert_in_delta(0, (worksheet.costpercapita_w122||0), 0.001); end
  def test_costpercapita_y122; assert_in_delta(0, (worksheet.costpercapita_y122||0), 0.001); end
  def test_costpercapita_z122; assert_in_delta(0, (worksheet.costpercapita_z122||0), 0.001); end
  def test_costpercapita_aa122; assert_in_delta(0, (worksheet.costpercapita_aa122||0), 0.001); end
  def test_costpercapita_ab122; assert_in_delta(0, (worksheet.costpercapita_ab122||0), 0.001); end
  def test_costpercapita_ac122; assert_in_delta(0, (worksheet.costpercapita_ac122||0), 0.001); end
  def test_costpercapita_ad122; assert_in_delta(0, (worksheet.costpercapita_ad122||0), 0.001); end
  def test_costpercapita_ae122; assert_in_delta(0, (worksheet.costpercapita_ae122||0), 0.001); end
  def test_costpercapita_af122; assert_in_delta(0, (worksheet.costpercapita_af122||0), 0.001); end
  def test_costpercapita_ag122; assert_in_delta(0, (worksheet.costpercapita_ag122||0), 0.001); end
  def test_costpercapita_av122; assert_in_delta(0.1, worksheet.costpercapita_av122, 0.001); end
  def test_costpercapita_aw122; assert_in_epsilon(25, worksheet.costpercapita_aw122, 0.001); end
  def test_costpercapita_bt122; assert_in_epsilon(16.011455843627697, worksheet.costpercapita_bt122, 0.001); end
  def test_costpercapita_bu122; assert_in_epsilon(24.59331960205578, worksheet.costpercapita_bu122, 0.001); end
  def test_costpercapita_bv122; assert_in_epsilon(23.83182497149511, worksheet.costpercapita_bv122, 0.001); end
  def test_costpercapita_bw122; assert_in_epsilon(23.180735864707387, worksheet.costpercapita_bw122, 0.001); end
  def test_costpercapita_bx122; assert_in_epsilon(21.948797577587335, worksheet.costpercapita_bx122, 0.001); end
  def test_costpercapita_by122; assert_in_epsilon(8.202106675413711, worksheet.costpercapita_by122, 0.001); end
  def test_costpercapita_bz122; assert_in_delta(0, (worksheet.costpercapita_bz122||0), 0.001); end
  def test_costpercapita_ca122; assert_in_delta(0, (worksheet.costpercapita_ca122||0), 0.001); end
  def test_costpercapita_bs122; assert_in_delta(0.7967489215340879, worksheet.costpercapita_bs122, 0.001); end
  def test_costpercapita_cd122; assert_in_epsilon(345.7993691961648, worksheet.costpercapita_cd122, 0.001); end
  def test_costpercapita_cg122; assert_in_epsilon(-11.657140819603075, worksheet.costpercapita_cg122, 0.001); end
  def test_costpercapita_ch122; assert_in_epsilon(8.062124986960097, worksheet.costpercapita_ch122, 0.001); end
  def test_costpercapita_ci122; assert_in_epsilon(23.83182497149511, worksheet.costpercapita_ci122, 0.001); end
  def test_costpercapita_cj122; assert_in_epsilon(23.180735864707387, worksheet.costpercapita_cj122, 0.001); end
  def test_costpercapita_ck122; assert_in_epsilon(21.948797577587335, worksheet.costpercapita_ck122, 0.001); end
  def test_costpercapita_cl122; assert_in_epsilon(8.202106675413711, worksheet.costpercapita_cl122, 0.001); end
  def test_costpercapita_cm122; assert_in_delta(0, (worksheet.costpercapita_cm122||0), 0.001); end
  def test_costpercapita_cn122; assert_in_delta(0, (worksheet.costpercapita_cn122||0), 0.001); end
  def test_costpercapita_cf122; assert_in_epsilon(-1.6139583602145777, worksheet.costpercapita_cf122, 0.001); end
  def test_costpercapita_cq122; assert_in_epsilon(168.3112077603631, worksheet.costpercapita_cq122, 0.001); end
  def test_costpercapita_aj122; assert_in_epsilon(27.668596663230772, worksheet.costpercapita_aj122, 0.001); end
  def test_costpercapita_ak122; assert_in_epsilon(16.531194615095682, worksheet.costpercapita_ak122, 0.001); end
  def test_costpercapita_al122; assert_in_delta(0, (worksheet.costpercapita_al122||0), 0.001); end
  def test_costpercapita_am122; assert_in_delta(0, (worksheet.costpercapita_am122||0), 0.001); end
  def test_costpercapita_an122; assert_in_delta(0, (worksheet.costpercapita_an122||0), 0.001); end
  def test_costpercapita_ao122; assert_in_delta(0, (worksheet.costpercapita_ao122||0), 0.001); end
  def test_costpercapita_ap122; assert_in_delta(0, (worksheet.costpercapita_ap122||0), 0.001); end
  def test_costpercapita_aq122; assert_in_delta(0, (worksheet.costpercapita_aq122||0), 0.001); end
  def test_costpercapita_ai122; assert_in_epsilon(2.4107072817486657, worksheet.costpercapita_ai122, 0.001); end
  def test_costpercapita_at122; assert_in_epsilon(177.48816143580174, worksheet.costpercapita_at122, 0.001); end
  def test_costpercapita_cr122; assert_equal("ok", worksheet.costpercapita_cr122); end
  def test_costpercapita_a123; assert_equal("V.a", worksheet.costpercapita_a123); end
  def test_costpercapita_b123; assert_equal("Biomatter to fuel conversion", worksheet.costpercapita_b123); end
  def test_costpercapita_c123; assert_equal("Bioenergy", worksheet.costpercapita_c123); end
  def test_costpercapita_y123; assert_in_delta(0, (worksheet.costpercapita_y123||0), 0.001); end
  def test_costpercapita_z123; assert_in_delta(0, (worksheet.costpercapita_z123||0), 0.001); end
  def test_costpercapita_aa123; assert_in_delta(0, (worksheet.costpercapita_aa123||0), 0.001); end
  def test_costpercapita_ab123; assert_in_delta(0, (worksheet.costpercapita_ab123||0), 0.001); end
  def test_costpercapita_ac123; assert_in_delta(0, (worksheet.costpercapita_ac123||0), 0.001); end
  def test_costpercapita_ad123; assert_in_delta(0, (worksheet.costpercapita_ad123||0), 0.001); end
  def test_costpercapita_ae123; assert_in_delta(0, (worksheet.costpercapita_ae123||0), 0.001); end
  def test_costpercapita_af123; assert_in_delta(0, (worksheet.costpercapita_af123||0), 0.001); end
  def test_costpercapita_ag123; assert_in_delta(0, (worksheet.costpercapita_ag123||0), 0.001); end
  def test_costpercapita_av123; assert_in_delta(0.1, worksheet.costpercapita_av123, 0.001); end
  def test_costpercapita_aw123; assert_in_epsilon(30, worksheet.costpercapita_aw123, 0.001); end
  def test_costpercapita_bt123; assert_in_epsilon(111.49618479420612, worksheet.costpercapita_bt123, 0.001); end
  def test_costpercapita_bu123; assert_in_epsilon(175.3863122065934, worksheet.costpercapita_bu123, 0.001); end
  def test_costpercapita_bv123; assert_in_epsilon(231.9660626515728, worksheet.costpercapita_bv123, 0.001); end
  def test_costpercapita_bw123; assert_in_epsilon(280.0282222653638, worksheet.costpercapita_bw123, 0.001); end
  def test_costpercapita_bx123; assert_in_epsilon(331.9707527221155, worksheet.costpercapita_bx123, 0.001); end
  def test_costpercapita_by123; assert_in_epsilon(383.6232187102653, worksheet.costpercapita_by123, 0.001); end
  def test_costpercapita_bz123; assert_in_epsilon(479.9343064449793, worksheet.costpercapita_bz123, 0.001); end
  def test_costpercapita_ca123; assert_in_epsilon(526.3680648789896, worksheet.costpercapita_ca123, 0.001); end
  def test_costpercapita_bs123; assert_in_epsilon(42.84208159482226, worksheet.costpercapita_bs123, 0.001); end
  def test_costpercapita_cd123; assert_in_epsilon(5350.801157385308, worksheet.costpercapita_cd123, 0.001); end
  def test_costpercapita_cg123; assert_in_epsilon(-15.695756877216272, worksheet.costpercapita_cg123, 0.001); end
  def test_costpercapita_ch123; assert_in_epsilon(33.01593478361716, worksheet.costpercapita_ch123, 0.001); end
  def test_costpercapita_ci123; assert_in_epsilon(65.26867796788625, worksheet.costpercapita_ci123, 0.001); end
  def test_costpercapita_cj123; assert_in_epsilon(89.52417085509181, worksheet.costpercapita_cj123, 0.001); end
  def test_costpercapita_ck123; assert_in_epsilon(111.7355977737285, worksheet.costpercapita_ck123, 0.001); end
  def test_costpercapita_cl123; assert_in_epsilon(112.4373681834864, worksheet.costpercapita_cl123, 0.001); end
  def test_costpercapita_cm123; assert_in_epsilon(128.51383688841085, worksheet.costpercapita_cm123, 0.001); end
  def test_costpercapita_cn123; assert_in_epsilon(207.28732394457458, worksheet.costpercapita_cn123, 0.001); end
  def test_costpercapita_cf123; assert_in_epsilon(-47.738955232528404, worksheet.costpercapita_cf123, 0.001); end
  def test_costpercapita_cq123; assert_in_epsilon(1331.9045070200154, worksheet.costpercapita_cq123, 0.001); end
  def test_costpercapita_aj123; assert_in_epsilon(127.1919416714224, worksheet.costpercapita_aj123, 0.001); end
  def test_costpercapita_ak123; assert_in_epsilon(142.37037742297625, worksheet.costpercapita_ak123, 0.001); end
  def test_costpercapita_al123; assert_in_epsilon(166.69738468368655, worksheet.costpercapita_al123, 0.001); end
  def test_costpercapita_am123; assert_in_epsilon(190.504051410272, worksheet.costpercapita_am123, 0.001); end
  def test_costpercapita_an123; assert_in_epsilon(220.23515494838702, worksheet.costpercapita_an123, 0.001); end
  def test_costpercapita_ao123; assert_in_epsilon(271.1858505267789, worksheet.costpercapita_ao123, 0.001); end
  def test_costpercapita_ap123; assert_in_epsilon(351.4204695565685, worksheet.costpercapita_ap123, 0.001); end
  def test_costpercapita_aq123; assert_in_epsilon(319.0807409344151, worksheet.costpercapita_aq123, 0.001); end
  def test_costpercapita_ai123; assert_in_epsilon(90.58103682735067, worksheet.costpercapita_ai123, 0.001); end
  def test_costpercapita_at123; assert_in_epsilon(4018.8966503652937, worksheet.costpercapita_at123, 0.001); end
  def test_costpercapita_cr123; assert_equal("ok", worksheet.costpercapita_cr123); end
  def test_costpercapita_a124; assert_equal("V.b", worksheet.costpercapita_a124); end
  def test_costpercapita_b124; assert_equal("Bioenergy imports", worksheet.costpercapita_b124); end
  def test_costpercapita_c124; assert_equal("Bioenergy", worksheet.costpercapita_c124); end
  def test_costpercapita_e124; assert_in_delta(0, (worksheet.costpercapita_e124||0), 0.001); end
  def test_costpercapita_f124; assert_in_delta(0, (worksheet.costpercapita_f124||0), 0.001); end
  def test_costpercapita_g124; assert_in_delta(0, (worksheet.costpercapita_g124||0), 0.001); end
  def test_costpercapita_h124; assert_in_delta(0, (worksheet.costpercapita_h124||0), 0.001); end
  def test_costpercapita_i124; assert_in_delta(0, (worksheet.costpercapita_i124||0), 0.001); end
  def test_costpercapita_j124; assert_in_delta(0, (worksheet.costpercapita_j124||0), 0.001); end
  def test_costpercapita_k124; assert_in_delta(0, (worksheet.costpercapita_k124||0), 0.001); end
  def test_costpercapita_l124; assert_in_delta(0, (worksheet.costpercapita_l124||0), 0.001); end
  def test_costpercapita_m124; assert_in_delta(0, (worksheet.costpercapita_m124||0), 0.001); end
  def test_costpercapita_o124; assert_in_delta(0, (worksheet.costpercapita_o124||0), 0.001); end
  def test_costpercapita_p124; assert_in_delta(0, (worksheet.costpercapita_p124||0), 0.001); end
  def test_costpercapita_q124; assert_in_delta(0, (worksheet.costpercapita_q124||0), 0.001); end
  def test_costpercapita_r124; assert_in_delta(0, (worksheet.costpercapita_r124||0), 0.001); end
  def test_costpercapita_s124; assert_in_delta(0, (worksheet.costpercapita_s124||0), 0.001); end
  def test_costpercapita_t124; assert_in_delta(0, (worksheet.costpercapita_t124||0), 0.001); end
  def test_costpercapita_u124; assert_in_delta(0, (worksheet.costpercapita_u124||0), 0.001); end
  def test_costpercapita_v124; assert_in_delta(0, (worksheet.costpercapita_v124||0), 0.001); end
  def test_costpercapita_w124; assert_in_delta(0, (worksheet.costpercapita_w124||0), 0.001); end
  def test_costpercapita_av124; assert_in_delta(0, (worksheet.costpercapita_av124||0), 0.001); end
  def test_costpercapita_aw124; assert_in_epsilon(5, worksheet.costpercapita_aw124, 0.001); end
  def test_costpercapita_ay124; assert_in_delta(0, (worksheet.costpercapita_ay124||0), 0.001); end
  def test_costpercapita_az124; assert_in_delta(0, (worksheet.costpercapita_az124||0), 0.001); end
  def test_costpercapita_ba124; assert_in_delta(0, (worksheet.costpercapita_ba124||0), 0.001); end
  def test_costpercapita_bb124; assert_in_delta(0, (worksheet.costpercapita_bb124||0), 0.001); end
  def test_costpercapita_bc124; assert_in_delta(0, (worksheet.costpercapita_bc124||0), 0.001); end
  def test_costpercapita_bd124; assert_in_delta(0, (worksheet.costpercapita_bd124||0), 0.001); end
  def test_costpercapita_be124; assert_in_delta(0, (worksheet.costpercapita_be124||0), 0.001); end
  def test_costpercapita_bf124; assert_in_delta(0, (worksheet.costpercapita_bf124||0), 0.001); end
  def test_costpercapita_bg124; assert_in_delta(0, (worksheet.costpercapita_bg124||0), 0.001); end
  def test_costpercapita_bi124; assert_in_delta(0, (worksheet.costpercapita_bi124||0), 0.001); end
  def test_costpercapita_bj124; assert_in_delta(0, (worksheet.costpercapita_bj124||0), 0.001); end
  def test_costpercapita_bk124; assert_in_delta(0, (worksheet.costpercapita_bk124||0), 0.001); end
  def test_costpercapita_bl124; assert_in_delta(0, (worksheet.costpercapita_bl124||0), 0.001); end
  def test_costpercapita_bm124; assert_in_delta(0, (worksheet.costpercapita_bm124||0), 0.001); end
  def test_costpercapita_bn124; assert_in_delta(0, (worksheet.costpercapita_bn124||0), 0.001); end
  def test_costpercapita_bo124; assert_in_delta(0, (worksheet.costpercapita_bo124||0), 0.001); end
  def test_costpercapita_bp124; assert_in_delta(0, (worksheet.costpercapita_bp124||0), 0.001); end
  def test_costpercapita_bq124; assert_in_delta(0, (worksheet.costpercapita_bq124||0), 0.001); end
  def test_costpercapita_cf124; assert_in_delta(0, (worksheet.costpercapita_cf124||0), 0.001); end
  def test_costpercapita_cg124; assert_in_delta(0, (worksheet.costpercapita_cg124||0), 0.001); end
  def test_costpercapita_ch124; assert_in_delta(0, (worksheet.costpercapita_ch124||0), 0.001); end
  def test_costpercapita_ci124; assert_in_delta(0, (worksheet.costpercapita_ci124||0), 0.001); end
  def test_costpercapita_cj124; assert_in_delta(0, (worksheet.costpercapita_cj124||0), 0.001); end
  def test_costpercapita_ck124; assert_in_delta(0, (worksheet.costpercapita_ck124||0), 0.001); end
  def test_costpercapita_cl124; assert_in_delta(0, (worksheet.costpercapita_cl124||0), 0.001); end
  def test_costpercapita_cm124; assert_in_delta(0, (worksheet.costpercapita_cm124||0), 0.001); end
  def test_costpercapita_cn124; assert_in_delta(0, (worksheet.costpercapita_cn124||0), 0.001); end
  def test_costpercapita_cp124; assert_in_delta(0, (worksheet.costpercapita_cp124||0), 0.001); end
  def test_costpercapita_cq124; assert_in_delta(0, (worksheet.costpercapita_cq124||0), 0.001); end
  def test_costpercapita_bt124; assert_in_epsilon(4.949393701972193, worksheet.costpercapita_bt124, 0.001); end
  def test_costpercapita_bu124; assert_in_epsilon(4.1034511768581625, worksheet.costpercapita_bu124, 0.001); end
  def test_costpercapita_bv124; assert_in_epsilon(3.3136617249569666, worksheet.costpercapita_bv124, 0.001); end
  def test_costpercapita_bw124; assert_in_epsilon(2.5785055834571837, worksheet.costpercapita_bw124, 0.001); end
  def test_costpercapita_bx124; assert_in_epsilon(1.8883253177050265, worksheet.costpercapita_bx124, 0.001); end
  def test_costpercapita_by124; assert_in_epsilon(1.2320361083973466, worksheet.costpercapita_by124, 0.001); end
  def test_costpercapita_bz124; assert_in_delta(0.6037297720296557, worksheet.costpercapita_bz124, 0.001); end
  def test_costpercapita_ca124; assert_in_delta(0, (worksheet.costpercapita_ca124||0), 0.001); end
  def test_costpercapita_bs124; assert_in_epsilon(5.849332075368716, worksheet.costpercapita_bs124, 0.001); end
  def test_costpercapita_cd124; assert_in_epsilon(64.71715009447226, worksheet.costpercapita_cd124, 0.001); end
  def test_costpercapita_aj124; assert_in_epsilon(4.949393701972193, worksheet.costpercapita_aj124, 0.001); end
  def test_costpercapita_ak124; assert_in_epsilon(4.1034511768581625, worksheet.costpercapita_ak124, 0.001); end
  def test_costpercapita_al124; assert_in_epsilon(3.3136617249569666, worksheet.costpercapita_al124, 0.001); end
  def test_costpercapita_am124; assert_in_epsilon(2.5785055834571837, worksheet.costpercapita_am124, 0.001); end
  def test_costpercapita_an124; assert_in_epsilon(1.8883253177050265, worksheet.costpercapita_an124, 0.001); end
  def test_costpercapita_ao124; assert_in_epsilon(1.2320361083973466, worksheet.costpercapita_ao124, 0.001); end
  def test_costpercapita_ap124; assert_in_delta(0.6037297720296557, worksheet.costpercapita_ap124, 0.001); end
  def test_costpercapita_aq124; assert_in_delta(0, (worksheet.costpercapita_aq124||0), 0.001); end
  def test_costpercapita_ai124; assert_in_epsilon(5.849332075368716, worksheet.costpercapita_ai124, 0.001); end
  def test_costpercapita_at124; assert_in_epsilon(64.71715009447226, worksheet.costpercapita_at124, 0.001); end
  def test_costpercapita_cr124; assert_equal("ok", worksheet.costpercapita_cr124); end
  def test_costpercapita_a125; assert_equal("VI.a.Bioenergy", worksheet.costpercapita_a125); end
  def test_costpercapita_b125; assert_equal("Agriculture and land use", worksheet.costpercapita_b125); end
  def test_costpercapita_c125; assert_equal("Bioenergy", worksheet.costpercapita_c125); end
  def test_costpercapita_e125; assert_in_delta(0, (worksheet.costpercapita_e125||0), 0.001); end
  def test_costpercapita_f125; assert_in_delta(0, (worksheet.costpercapita_f125||0), 0.001); end
  def test_costpercapita_g125; assert_in_delta(0, (worksheet.costpercapita_g125||0), 0.001); end
  def test_costpercapita_h125; assert_in_delta(0, (worksheet.costpercapita_h125||0), 0.001); end
  def test_costpercapita_i125; assert_in_delta(0, (worksheet.costpercapita_i125||0), 0.001); end
  def test_costpercapita_j125; assert_in_delta(0, (worksheet.costpercapita_j125||0), 0.001); end
  def test_costpercapita_k125; assert_in_delta(0, (worksheet.costpercapita_k125||0), 0.001); end
  def test_costpercapita_l125; assert_in_delta(0, (worksheet.costpercapita_l125||0), 0.001); end
  def test_costpercapita_m125; assert_in_delta(0, (worksheet.costpercapita_m125||0), 0.001); end
  def test_costpercapita_o125; assert_in_delta(0, (worksheet.costpercapita_o125||0), 0.001); end
  def test_costpercapita_p125; assert_in_delta(0, (worksheet.costpercapita_p125||0), 0.001); end
  def test_costpercapita_q125; assert_in_delta(0, (worksheet.costpercapita_q125||0), 0.001); end
  def test_costpercapita_r125; assert_in_delta(0, (worksheet.costpercapita_r125||0), 0.001); end
  def test_costpercapita_s125; assert_in_delta(0, (worksheet.costpercapita_s125||0), 0.001); end
  def test_costpercapita_t125; assert_in_delta(0, (worksheet.costpercapita_t125||0), 0.001); end
  def test_costpercapita_u125; assert_in_delta(0, (worksheet.costpercapita_u125||0), 0.001); end
  def test_costpercapita_v125; assert_in_delta(0, (worksheet.costpercapita_v125||0), 0.001); end
  def test_costpercapita_w125; assert_in_delta(0, (worksheet.costpercapita_w125||0), 0.001); end
  def test_costpercapita_av125; assert_in_delta(0, (worksheet.costpercapita_av125||0), 0.001); end
  def test_costpercapita_aw125; assert_in_epsilon(5, worksheet.costpercapita_aw125, 0.001); end
  def test_costpercapita_ay125; assert_in_delta(0, (worksheet.costpercapita_ay125||0), 0.001); end
  def test_costpercapita_az125; assert_in_delta(0, (worksheet.costpercapita_az125||0), 0.001); end
  def test_costpercapita_ba125; assert_in_delta(0, (worksheet.costpercapita_ba125||0), 0.001); end
  def test_costpercapita_bb125; assert_in_delta(0, (worksheet.costpercapita_bb125||0), 0.001); end
  def test_costpercapita_bc125; assert_in_delta(0, (worksheet.costpercapita_bc125||0), 0.001); end
  def test_costpercapita_bd125; assert_in_delta(0, (worksheet.costpercapita_bd125||0), 0.001); end
  def test_costpercapita_be125; assert_in_delta(0, (worksheet.costpercapita_be125||0), 0.001); end
  def test_costpercapita_bf125; assert_in_delta(0, (worksheet.costpercapita_bf125||0), 0.001); end
  def test_costpercapita_bg125; assert_in_delta(0, (worksheet.costpercapita_bg125||0), 0.001); end
  def test_costpercapita_bi125; assert_in_delta(0, (worksheet.costpercapita_bi125||0), 0.001); end
  def test_costpercapita_bj125; assert_in_delta(0, (worksheet.costpercapita_bj125||0), 0.001); end
  def test_costpercapita_bk125; assert_in_delta(0, (worksheet.costpercapita_bk125||0), 0.001); end
  def test_costpercapita_bl125; assert_in_delta(0, (worksheet.costpercapita_bl125||0), 0.001); end
  def test_costpercapita_bm125; assert_in_delta(0, (worksheet.costpercapita_bm125||0), 0.001); end
  def test_costpercapita_bn125; assert_in_delta(0, (worksheet.costpercapita_bn125||0), 0.001); end
  def test_costpercapita_bo125; assert_in_delta(0, (worksheet.costpercapita_bo125||0), 0.001); end
  def test_costpercapita_bp125; assert_in_delta(0, (worksheet.costpercapita_bp125||0), 0.001); end
  def test_costpercapita_bq125; assert_in_delta(0, (worksheet.costpercapita_bq125||0), 0.001); end
  def test_costpercapita_cf125; assert_in_delta(0, (worksheet.costpercapita_cf125||0), 0.001); end
  def test_costpercapita_cg125; assert_in_delta(0, (worksheet.costpercapita_cg125||0), 0.001); end
  def test_costpercapita_ch125; assert_in_delta(0, (worksheet.costpercapita_ch125||0), 0.001); end
  def test_costpercapita_ci125; assert_in_delta(0, (worksheet.costpercapita_ci125||0), 0.001); end
  def test_costpercapita_cj125; assert_in_delta(0, (worksheet.costpercapita_cj125||0), 0.001); end
  def test_costpercapita_ck125; assert_in_delta(0, (worksheet.costpercapita_ck125||0), 0.001); end
  def test_costpercapita_cl125; assert_in_delta(0, (worksheet.costpercapita_cl125||0), 0.001); end
  def test_costpercapita_cm125; assert_in_delta(0, (worksheet.costpercapita_cm125||0), 0.001); end
  def test_costpercapita_cn125; assert_in_delta(0, (worksheet.costpercapita_cn125||0), 0.001); end
  def test_costpercapita_cp125; assert_in_delta(0, (worksheet.costpercapita_cp125||0), 0.001); end
  def test_costpercapita_cq125; assert_in_delta(0, (worksheet.costpercapita_cq125||0), 0.001); end
  def test_costpercapita_bt125; assert_in_epsilon(30.072587714581413, worksheet.costpercapita_bt125, 0.001); end
  def test_costpercapita_bu125; assert_in_epsilon(58.86154306202831, worksheet.costpercapita_bu125, 0.001); end
  def test_costpercapita_bv125; assert_in_epsilon(82.74618352727458, worksheet.costpercapita_bv125, 0.001); end
  def test_costpercapita_bw125; assert_in_epsilon(108.98697165817613, worksheet.costpercapita_bw125, 0.001); end
  def test_costpercapita_bx125; assert_in_epsilon(133.70728413086456, worksheet.costpercapita_bx125, 0.001); end
  def test_costpercapita_by125; assert_in_epsilon(162.21364451085662, worksheet.costpercapita_by125, 0.001); end
  def test_costpercapita_bz125; assert_in_epsilon(193.4835160033097, worksheet.costpercapita_bz125, 0.001); end
  def test_costpercapita_ca125; assert_in_epsilon(226.72786194028453, worksheet.costpercapita_ca125, 0.001); end
  def test_costpercapita_bs125; assert_in_epsilon(9.417819769846528, worksheet.costpercapita_bs125, 0.001); end
  def test_costpercapita_cd125; assert_in_epsilon(2035.1810595057907, worksheet.costpercapita_cd125, 0.001); end
  def test_costpercapita_aj125; assert_in_epsilon(30.072587714581413, worksheet.costpercapita_aj125, 0.001); end
  def test_costpercapita_ak125; assert_in_epsilon(58.86154306202831, worksheet.costpercapita_ak125, 0.001); end
  def test_costpercapita_al125; assert_in_epsilon(82.74618352727458, worksheet.costpercapita_al125, 0.001); end
  def test_costpercapita_am125; assert_in_epsilon(108.98697165817613, worksheet.costpercapita_am125, 0.001); end
  def test_costpercapita_an125; assert_in_epsilon(133.70728413086456, worksheet.costpercapita_an125, 0.001); end
  def test_costpercapita_ao125; assert_in_epsilon(162.21364451085662, worksheet.costpercapita_ao125, 0.001); end
  def test_costpercapita_ap125; assert_in_epsilon(193.4835160033097, worksheet.costpercapita_ap125, 0.001); end
  def test_costpercapita_aq125; assert_in_epsilon(226.72786194028453, worksheet.costpercapita_aq125, 0.001); end
  def test_costpercapita_ai125; assert_in_epsilon(9.417819769846528, worksheet.costpercapita_ai125, 0.001); end
  def test_costpercapita_at125; assert_in_epsilon(2035.1810595057907, worksheet.costpercapita_at125, 0.001); end
  def test_costpercapita_cr125; assert_equal("ok", worksheet.costpercapita_cr125); end
  def test_costpercapita_a126; assert_equal("VI.a.Emissions", worksheet.costpercapita_a126); end
  def test_costpercapita_b126; assert_equal("Agriculture and land use", worksheet.costpercapita_b126); end
  def test_costpercapita_c126; assert_equal("Bioenergy", worksheet.costpercapita_c126); end
  def test_costpercapita_e126; assert_in_delta(0, (worksheet.costpercapita_e126||0), 0.001); end
  def test_costpercapita_f126; assert_in_delta(0, (worksheet.costpercapita_f126||0), 0.001); end
  def test_costpercapita_g126; assert_in_delta(0, (worksheet.costpercapita_g126||0), 0.001); end
  def test_costpercapita_h126; assert_in_delta(0, (worksheet.costpercapita_h126||0), 0.001); end
  def test_costpercapita_i126; assert_in_delta(0, (worksheet.costpercapita_i126||0), 0.001); end
  def test_costpercapita_j126; assert_in_delta(0, (worksheet.costpercapita_j126||0), 0.001); end
  def test_costpercapita_k126; assert_in_delta(0, (worksheet.costpercapita_k126||0), 0.001); end
  def test_costpercapita_l126; assert_in_delta(0, (worksheet.costpercapita_l126||0), 0.001); end
  def test_costpercapita_m126; assert_in_delta(0, (worksheet.costpercapita_m126||0), 0.001); end
  def test_costpercapita_y126; assert_in_delta(0, (worksheet.costpercapita_y126||0), 0.001); end
  def test_costpercapita_z126; assert_in_delta(0, (worksheet.costpercapita_z126||0), 0.001); end
  def test_costpercapita_aa126; assert_in_delta(0, (worksheet.costpercapita_aa126||0), 0.001); end
  def test_costpercapita_ab126; assert_in_delta(0, (worksheet.costpercapita_ab126||0), 0.001); end
  def test_costpercapita_ac126; assert_in_delta(0, (worksheet.costpercapita_ac126||0), 0.001); end
  def test_costpercapita_ad126; assert_in_delta(0, (worksheet.costpercapita_ad126||0), 0.001); end
  def test_costpercapita_ae126; assert_in_delta(0, (worksheet.costpercapita_ae126||0), 0.001); end
  def test_costpercapita_af126; assert_in_delta(0, (worksheet.costpercapita_af126||0), 0.001); end
  def test_costpercapita_ag126; assert_in_delta(0, (worksheet.costpercapita_ag126||0), 0.001); end
  def test_costpercapita_av126; assert_in_delta(0, (worksheet.costpercapita_av126||0), 0.001); end
  def test_costpercapita_aw126; assert_in_epsilon(5, worksheet.costpercapita_aw126, 0.001); end
  def test_costpercapita_ay126; assert_in_delta(0, (worksheet.costpercapita_ay126||0), 0.001); end
  def test_costpercapita_az126; assert_in_delta(0, (worksheet.costpercapita_az126||0), 0.001); end
  def test_costpercapita_ba126; assert_in_delta(0, (worksheet.costpercapita_ba126||0), 0.001); end
  def test_costpercapita_bb126; assert_in_delta(0, (worksheet.costpercapita_bb126||0), 0.001); end
  def test_costpercapita_bc126; assert_in_delta(0, (worksheet.costpercapita_bc126||0), 0.001); end
  def test_costpercapita_bd126; assert_in_delta(0, (worksheet.costpercapita_bd126||0), 0.001); end
  def test_costpercapita_be126; assert_in_delta(0, (worksheet.costpercapita_be126||0), 0.001); end
  def test_costpercapita_bf126; assert_in_delta(0, (worksheet.costpercapita_bf126||0), 0.001); end
  def test_costpercapita_bg126; assert_in_delta(0, (worksheet.costpercapita_bg126||0), 0.001); end
  def test_costpercapita_bi126; assert_in_delta(0, (worksheet.costpercapita_bi126||0), 0.001); end
  def test_costpercapita_bj126; assert_in_delta(0, (worksheet.costpercapita_bj126||0), 0.001); end
  def test_costpercapita_bk126; assert_in_delta(0, (worksheet.costpercapita_bk126||0), 0.001); end
  def test_costpercapita_bl126; assert_in_delta(0, (worksheet.costpercapita_bl126||0), 0.001); end
  def test_costpercapita_bm126; assert_in_delta(0, (worksheet.costpercapita_bm126||0), 0.001); end
  def test_costpercapita_bn126; assert_in_delta(0, (worksheet.costpercapita_bn126||0), 0.001); end
  def test_costpercapita_bo126; assert_in_delta(0, (worksheet.costpercapita_bo126||0), 0.001); end
  def test_costpercapita_bp126; assert_in_delta(0, (worksheet.costpercapita_bp126||0), 0.001); end
  def test_costpercapita_bq126; assert_in_delta(0, (worksheet.costpercapita_bq126||0), 0.001); end
  def test_costpercapita_cf126; assert_in_delta(0, (worksheet.costpercapita_cf126||0), 0.001); end
  def test_costpercapita_cg126; assert_in_delta(0, (worksheet.costpercapita_cg126||0), 0.001); end
  def test_costpercapita_ch126; assert_in_delta(0, (worksheet.costpercapita_ch126||0), 0.001); end
  def test_costpercapita_ci126; assert_in_delta(0, (worksheet.costpercapita_ci126||0), 0.001); end
  def test_costpercapita_cj126; assert_in_delta(0, (worksheet.costpercapita_cj126||0), 0.001); end
  def test_costpercapita_ck126; assert_in_delta(0, (worksheet.costpercapita_ck126||0), 0.001); end
  def test_costpercapita_cl126; assert_in_delta(0, (worksheet.costpercapita_cl126||0), 0.001); end
  def test_costpercapita_cm126; assert_in_delta(0, (worksheet.costpercapita_cm126||0), 0.001); end
  def test_costpercapita_cn126; assert_in_delta(0, (worksheet.costpercapita_cn126||0), 0.001); end
  def test_costpercapita_cp126; assert_in_delta(0, (worksheet.costpercapita_cp126||0), 0.001); end
  def test_costpercapita_cq126; assert_in_delta(0, (worksheet.costpercapita_cq126||0), 0.001); end
  def test_costpercapita_bt126; assert_in_delta(4.7940679646211255e-08, worksheet.costpercapita_bt126, 0.001); end
  def test_costpercapita_bu126; assert_in_delta(1.4945163258348577e-08, worksheet.costpercapita_bu126, 0.001); end
  def test_costpercapita_bv126; assert_in_delta(1.988586341479224e-08, worksheet.costpercapita_bv126, 0.001); end
  def test_costpercapita_bw126; assert_in_delta(2.4510356112468317e-08, worksheet.costpercapita_bw126, 0.001); end
  def test_costpercapita_bx126; assert_in_delta(2.8894331060100988e-08, worksheet.costpercapita_bx126, 0.001); end
  def test_costpercapita_by126; assert_in_delta(3.305195970452638e-08, worksheet.costpercapita_by126, 0.001); end
  def test_costpercapita_bz126; assert_in_delta(3.699237680934668e-08, worksheet.costpercapita_bz126, 0.001); end
  def test_costpercapita_ca126; assert_in_delta(4.073966661552892e-08, worksheet.costpercapita_ca126, 0.001); end
  def test_costpercapita_bs126; assert_in_delta(3.3744784853612904e-08, worksheet.costpercapita_bs126, 0.001); end
  def test_costpercapita_cd126; assert_in_delta(6.403386605719254e-07, worksheet.costpercapita_cd126, 0.001); end
  def test_costpercapita_aj126; assert_in_delta(4.7940679646211255e-08, worksheet.costpercapita_aj126, 0.001); end
  def test_costpercapita_ak126; assert_in_delta(1.4945163258348577e-08, worksheet.costpercapita_ak126, 0.001); end
  def test_costpercapita_al126; assert_in_delta(1.988586341479224e-08, worksheet.costpercapita_al126, 0.001); end
  def test_costpercapita_am126; assert_in_delta(2.4510356112468317e-08, worksheet.costpercapita_am126, 0.001); end
  def test_costpercapita_an126; assert_in_delta(2.8894331060100988e-08, worksheet.costpercapita_an126, 0.001); end
  def test_costpercapita_ao126; assert_in_delta(3.305195970452638e-08, worksheet.costpercapita_ao126, 0.001); end
  def test_costpercapita_ap126; assert_in_delta(3.699237680934668e-08, worksheet.costpercapita_ap126, 0.001); end
  def test_costpercapita_aq126; assert_in_delta(4.073966661552892e-08, worksheet.costpercapita_aq126, 0.001); end
  def test_costpercapita_ai126; assert_in_delta(3.3744784853612904e-08, worksheet.costpercapita_ai126, 0.001); end
  def test_costpercapita_at126; assert_in_delta(6.403386605719254e-07, worksheet.costpercapita_at126, 0.001); end
  def test_costpercapita_cr126; assert_equal("ok", worksheet.costpercapita_cr126); end
  def test_costpercapita_a127; assert_equal("VI.b.Bioenergy", worksheet.costpercapita_a127); end
  def test_costpercapita_b127; assert_equal("Energy from waste", worksheet.costpercapita_b127); end
  def test_costpercapita_c127; assert_equal("Bioenergy", worksheet.costpercapita_c127); end
  def test_costpercapita_y127; assert_in_delta(0, (worksheet.costpercapita_y127||0), 0.001); end
  def test_costpercapita_z127; assert_in_delta(0, (worksheet.costpercapita_z127||0), 0.001); end
  def test_costpercapita_aa127; assert_in_delta(0, (worksheet.costpercapita_aa127||0), 0.001); end
  def test_costpercapita_ab127; assert_in_delta(0, (worksheet.costpercapita_ab127||0), 0.001); end
  def test_costpercapita_ac127; assert_in_delta(0, (worksheet.costpercapita_ac127||0), 0.001); end
  def test_costpercapita_ad127; assert_in_delta(0, (worksheet.costpercapita_ad127||0), 0.001); end
  def test_costpercapita_ae127; assert_in_delta(0, (worksheet.costpercapita_ae127||0), 0.001); end
  def test_costpercapita_af127; assert_in_delta(0, (worksheet.costpercapita_af127||0), 0.001); end
  def test_costpercapita_ag127; assert_in_delta(0, (worksheet.costpercapita_ag127||0), 0.001); end
  def test_costpercapita_av127; assert_in_delta(0.1, worksheet.costpercapita_av127, 0.001); end
  def test_costpercapita_aw127; assert_in_epsilon(15, worksheet.costpercapita_aw127, 0.001); end
  def test_costpercapita_bt127; assert_in_epsilon(7.668916615704266, worksheet.costpercapita_bt127, 0.001); end
  def test_costpercapita_bu127; assert_in_epsilon(11.497290603270027, worksheet.costpercapita_bu127, 0.001); end
  def test_costpercapita_bv127; assert_in_epsilon(12.75347465242141, worksheet.costpercapita_bv127, 0.001); end
  def test_costpercapita_bw127; assert_in_epsilon(12.71359612584189, worksheet.costpercapita_bw127, 0.001); end
  def test_costpercapita_bx127; assert_in_epsilon(11.816418164912601, worksheet.costpercapita_bx127, 0.001); end
  def test_costpercapita_by127; assert_in_epsilon(10.971065932759295, worksheet.costpercapita_by127, 0.001); end
  def test_costpercapita_bz127; assert_in_epsilon(10.15588990222611, worksheet.costpercapita_bz127, 0.001); end
  def test_costpercapita_ca127; assert_in_epsilon(9.39929743023368, worksheet.costpercapita_ca127, 0.001); end
  def test_costpercapita_bs127; assert_in_epsilon(4.166922114306484, worksheet.costpercapita_bs127, 0.001); end
  def test_costpercapita_cd127; assert_in_epsilon(219.82366052295106, worksheet.costpercapita_cd127, 0.001); end
  def test_costpercapita_cg127; assert_in_delta(-0.12057183066914191, worksheet.costpercapita_cg127, 0.001); end
  def test_costpercapita_ch127; assert_in_epsilon(1.9639798551205165, worksheet.costpercapita_ch127, 0.001); end
  def test_costpercapita_ci127; assert_in_epsilon(3.654817204158144, worksheet.costpercapita_ci127, 0.001); end
  def test_costpercapita_cj127; assert_in_epsilon(3.949517241298638, worksheet.costpercapita_cj127, 0.001); end
  def test_costpercapita_ck127; assert_in_epsilon(3.681046749178398, worksheet.costpercapita_ck127, 0.001); end
  def test_costpercapita_cl127; assert_in_epsilon(3.414522780015603, worksheet.costpercapita_cl127, 0.001); end
  def test_costpercapita_cm127; assert_in_epsilon(3.132649966297101, worksheet.costpercapita_cm127, 0.001); end
  def test_costpercapita_cn127; assert_in_epsilon(2.870107121368896, worksheet.costpercapita_cn127, 0.001); end
  def test_costpercapita_cf127; assert_in_epsilon(-1.8096512721539402, worksheet.costpercapita_cf127, 0.001); end
  def test_costpercapita_cq127; assert_in_epsilon(47.965247567100455, worksheet.costpercapita_cq127, 0.001); end
  def test_costpercapita_aj127; assert_in_epsilon(7.789488446373408, worksheet.costpercapita_aj127, 0.001); end
  def test_costpercapita_ak127; assert_in_epsilon(9.53331074814951, worksheet.costpercapita_ak127, 0.001); end
  def test_costpercapita_al127; assert_in_epsilon(9.098657448263266, worksheet.costpercapita_al127, 0.001); end
  def test_costpercapita_am127; assert_in_epsilon(8.764078884543254, worksheet.costpercapita_am127, 0.001); end
  def test_costpercapita_an127; assert_in_epsilon(8.135371415734204, worksheet.costpercapita_an127, 0.001); end
  def test_costpercapita_ao127; assert_in_epsilon(7.556543152743693, worksheet.costpercapita_ao127, 0.001); end
  def test_costpercapita_ap127; assert_in_epsilon(7.023239935929012, worksheet.costpercapita_ap127, 0.001); end
  def test_costpercapita_aq127; assert_in_epsilon(6.529190308864785, worksheet.costpercapita_aq127, 0.001); end
  def test_costpercapita_ai127; assert_in_epsilon(5.976573386460424, worksheet.costpercapita_ai127, 0.001); end
  def test_costpercapita_at127; assert_in_epsilon(171.8584129558506, worksheet.costpercapita_at127, 0.001); end
  def test_costpercapita_cr127; assert_equal("ok", worksheet.costpercapita_cr127); end
  def test_costpercapita_a128; assert_equal("VI.b.Waste", worksheet.costpercapita_a128); end
  def test_costpercapita_b128; assert_equal("Waste arising", worksheet.costpercapita_b128); end
  def test_costpercapita_c128; assert_equal("Bioenergy", worksheet.costpercapita_c128); end
  def test_costpercapita_y128; assert_in_delta(0, (worksheet.costpercapita_y128||0), 0.001); end
  def test_costpercapita_z128; assert_in_delta(0, (worksheet.costpercapita_z128||0), 0.001); end
  def test_costpercapita_aa128; assert_in_delta(0, (worksheet.costpercapita_aa128||0), 0.001); end
  def test_costpercapita_ab128; assert_in_delta(0, (worksheet.costpercapita_ab128||0), 0.001); end
  def test_costpercapita_ac128; assert_in_delta(0, (worksheet.costpercapita_ac128||0), 0.001); end
  def test_costpercapita_ad128; assert_in_delta(0, (worksheet.costpercapita_ad128||0), 0.001); end
  def test_costpercapita_ae128; assert_in_delta(0, (worksheet.costpercapita_ae128||0), 0.001); end
  def test_costpercapita_af128; assert_in_delta(0, (worksheet.costpercapita_af128||0), 0.001); end
  def test_costpercapita_ag128; assert_in_delta(0, (worksheet.costpercapita_ag128||0), 0.001); end
  def test_costpercapita_av128; assert_in_delta(0.1, worksheet.costpercapita_av128, 0.001); end
  def test_costpercapita_aw128; assert_in_epsilon(15, worksheet.costpercapita_aw128, 0.001); end
  def test_costpercapita_bt128; assert_in_epsilon(173.2187221713548, worksheet.costpercapita_bt128, 0.001); end
  def test_costpercapita_bu128; assert_in_epsilon(206.53747471051676, worksheet.costpercapita_bu128, 0.001); end
  def test_costpercapita_bv128; assert_in_epsilon(216.27867430106517, worksheet.costpercapita_bv128, 0.001); end
  def test_costpercapita_bw128; assert_in_epsilon(213.06352323015338, worksheet.costpercapita_bw128, 0.001); end
  def test_costpercapita_bx128; assert_in_epsilon(206.69253174995256, worksheet.costpercapita_bx128, 0.001); end
  def test_costpercapita_by128; assert_in_epsilon(201.07643429506237, worksheet.costpercapita_by128, 0.001); end
  def test_costpercapita_bz128; assert_in_epsilon(195.19711676977275, worksheet.costpercapita_bz128, 0.001); end
  def test_costpercapita_ca128; assert_in_epsilon(189.16230250226155, worksheet.costpercapita_ca128, 0.001); end
  def test_costpercapita_bs128; assert_in_epsilon(140.23247219979555, worksheet.costpercapita_bs128, 0.001); end
  def test_costpercapita_cd128; assert_in_epsilon(4128.6075265251875, worksheet.costpercapita_cd128, 0.001); end
  def test_costpercapita_cg128; assert_in_epsilon(1.697880593294451, worksheet.costpercapita_cg128, 0.001); end
  def test_costpercapita_ch128; assert_in_epsilon(32.066579701436915, worksheet.costpercapita_ch128, 0.001); end
  def test_costpercapita_ci128; assert_in_epsilon(47.72228563328966, worksheet.costpercapita_ci128, 0.001); end
  def test_costpercapita_cj128; assert_in_epsilon(47.97286232586946, worksheet.costpercapita_cj128, 0.001); end
  def test_costpercapita_ck128; assert_in_epsilon(45.94284726591083, worksheet.costpercapita_ck128, 0.001); end
  def test_costpercapita_cl128; assert_in_epsilon(45.9657827033173, worksheet.costpercapita_cl128, 0.001); end
  def test_costpercapita_cm128; assert_in_epsilon(44.74081616362564, worksheet.costpercapita_cm128, 0.001); end
  def test_costpercapita_cn128; assert_in_epsilon(42.96296190349752, worksheet.costpercapita_cn128, 0.001); end
  def test_costpercapita_cf128; assert_in_epsilon(-30.035632906977636, worksheet.costpercapita_cf128, 0.001); end
  def test_costpercapita_cq128; assert_in_epsilon(658.532854883308, worksheet.costpercapita_cq128, 0.001); end
  def test_costpercapita_aj128; assert_in_epsilon(171.52084157806036, worksheet.costpercapita_aj128, 0.001); end
  def test_costpercapita_ak128; assert_in_epsilon(174.47089500907987, worksheet.costpercapita_ak128, 0.001); end
  def test_costpercapita_al128; assert_in_epsilon(168.5563886677755, worksheet.costpercapita_al128, 0.001); end
  def test_costpercapita_am128; assert_in_epsilon(165.0906609042839, worksheet.costpercapita_am128, 0.001); end
  def test_costpercapita_an128; assert_in_epsilon(160.74968448404172, worksheet.costpercapita_an128, 0.001); end
  def test_costpercapita_ao128; assert_in_epsilon(155.11065159174507, worksheet.costpercapita_ao128, 0.001); end
  def test_costpercapita_ap128; assert_in_epsilon(150.45630060614712, worksheet.costpercapita_ap128, 0.001); end
  def test_costpercapita_aq128; assert_in_epsilon(146.19934059876405, worksheet.costpercapita_aq128, 0.001); end
  def test_costpercapita_ai128; assert_in_epsilon(170.2681051067732, worksheet.costpercapita_ai128, 0.001); end
  def test_costpercapita_at128; assert_in_epsilon(3470.0746716418807, worksheet.costpercapita_at128, 0.001); end
  def test_costpercapita_cr128; assert_equal("ok", worksheet.costpercapita_cr128); end
  def test_costpercapita_a129; assert_equal("VI.c", worksheet.costpercapita_a129); end
  def test_costpercapita_b129; assert_equal("Marine algae", worksheet.costpercapita_b129); end
  def test_costpercapita_c129; assert_equal("Bioenergy", worksheet.costpercapita_c129); end
  def test_costpercapita_e129; assert_in_delta(0, (worksheet.costpercapita_e129||0), 0.001); end
  def test_costpercapita_f129; assert_in_delta(0, (worksheet.costpercapita_f129||0), 0.001); end
  def test_costpercapita_g129; assert_in_delta(0, (worksheet.costpercapita_g129||0), 0.001); end
  def test_costpercapita_h129; assert_in_delta(0, (worksheet.costpercapita_h129||0), 0.001); end
  def test_costpercapita_i129; assert_in_delta(0, (worksheet.costpercapita_i129||0), 0.001); end
  def test_costpercapita_j129; assert_in_delta(0, (worksheet.costpercapita_j129||0), 0.001); end
  def test_costpercapita_k129; assert_in_delta(0, (worksheet.costpercapita_k129||0), 0.001); end
  def test_costpercapita_l129; assert_in_delta(0, (worksheet.costpercapita_l129||0), 0.001); end
  def test_costpercapita_m129; assert_in_delta(0, (worksheet.costpercapita_m129||0), 0.001); end
  def test_costpercapita_o129; assert_in_delta(0, (worksheet.costpercapita_o129||0), 0.001); end
  def test_costpercapita_p129; assert_in_delta(0, (worksheet.costpercapita_p129||0), 0.001); end
  def test_costpercapita_q129; assert_in_delta(0, (worksheet.costpercapita_q129||0), 0.001); end
  def test_costpercapita_r129; assert_in_delta(0, (worksheet.costpercapita_r129||0), 0.001); end
  def test_costpercapita_s129; assert_in_delta(0, (worksheet.costpercapita_s129||0), 0.001); end
  def test_costpercapita_t129; assert_in_delta(0, (worksheet.costpercapita_t129||0), 0.001); end
  def test_costpercapita_u129; assert_in_delta(0, (worksheet.costpercapita_u129||0), 0.001); end
  def test_costpercapita_v129; assert_in_delta(0, (worksheet.costpercapita_v129||0), 0.001); end
  def test_costpercapita_w129; assert_in_delta(0, (worksheet.costpercapita_w129||0), 0.001); end
  def test_costpercapita_av129; assert_in_delta(0, (worksheet.costpercapita_av129||0), 0.001); end
  def test_costpercapita_aw129; assert_in_epsilon(5, worksheet.costpercapita_aw129, 0.001); end
  def test_costpercapita_ay129; assert_in_delta(0, (worksheet.costpercapita_ay129||0), 0.001); end
  def test_costpercapita_az129; assert_in_delta(0, (worksheet.costpercapita_az129||0), 0.001); end
  def test_costpercapita_ba129; assert_in_delta(0, (worksheet.costpercapita_ba129||0), 0.001); end
  def test_costpercapita_bb129; assert_in_delta(0, (worksheet.costpercapita_bb129||0), 0.001); end
  def test_costpercapita_bc129; assert_in_delta(0, (worksheet.costpercapita_bc129||0), 0.001); end
  def test_costpercapita_bd129; assert_in_delta(0, (worksheet.costpercapita_bd129||0), 0.001); end
  def test_costpercapita_be129; assert_in_delta(0, (worksheet.costpercapita_be129||0), 0.001); end
  def test_costpercapita_bf129; assert_in_delta(0, (worksheet.costpercapita_bf129||0), 0.001); end
  def test_costpercapita_bg129; assert_in_delta(0, (worksheet.costpercapita_bg129||0), 0.001); end
  def test_costpercapita_bi129; assert_in_delta(0, (worksheet.costpercapita_bi129||0), 0.001); end
  def test_costpercapita_bj129; assert_in_delta(0, (worksheet.costpercapita_bj129||0), 0.001); end
  def test_costpercapita_bk129; assert_in_delta(0, (worksheet.costpercapita_bk129||0), 0.001); end
  def test_costpercapita_bl129; assert_in_delta(0, (worksheet.costpercapita_bl129||0), 0.001); end
  def test_costpercapita_bm129; assert_in_delta(0, (worksheet.costpercapita_bm129||0), 0.001); end
  def test_costpercapita_bn129; assert_in_delta(0, (worksheet.costpercapita_bn129||0), 0.001); end
  def test_costpercapita_bo129; assert_in_delta(0, (worksheet.costpercapita_bo129||0), 0.001); end
  def test_costpercapita_bp129; assert_in_delta(0, (worksheet.costpercapita_bp129||0), 0.001); end
  def test_costpercapita_bq129; assert_in_delta(0, (worksheet.costpercapita_bq129||0), 0.001); end
  def test_costpercapita_cf129; assert_in_delta(0, (worksheet.costpercapita_cf129||0), 0.001); end
  def test_costpercapita_cg129; assert_in_delta(0, (worksheet.costpercapita_cg129||0), 0.001); end
  def test_costpercapita_ch129; assert_in_delta(0, (worksheet.costpercapita_ch129||0), 0.001); end
  def test_costpercapita_ci129; assert_in_delta(0, (worksheet.costpercapita_ci129||0), 0.001); end
  def test_costpercapita_cj129; assert_in_delta(0, (worksheet.costpercapita_cj129||0), 0.001); end
  def test_costpercapita_ck129; assert_in_delta(0, (worksheet.costpercapita_ck129||0), 0.001); end
  def test_costpercapita_cl129; assert_in_delta(0, (worksheet.costpercapita_cl129||0), 0.001); end
  def test_costpercapita_cm129; assert_in_delta(0, (worksheet.costpercapita_cm129||0), 0.001); end
  def test_costpercapita_cn129; assert_in_delta(0, (worksheet.costpercapita_cn129||0), 0.001); end
  def test_costpercapita_cp129; assert_in_delta(0, (worksheet.costpercapita_cp129||0), 0.001); end
  def test_costpercapita_cq129; assert_in_delta(0, (worksheet.costpercapita_cq129||0), 0.001); end
  def test_costpercapita_bt129; assert_in_delta(0, (worksheet.costpercapita_bt129||0), 0.001); end
  def test_costpercapita_bu129; assert_in_delta(0.011821283924247455, worksheet.costpercapita_bu129, 0.001); end
  def test_costpercapita_bv129; assert_in_delta(0.763683726528361, worksheet.costpercapita_bv129, 0.001); end
  def test_costpercapita_bw129; assert_in_epsilon(3.7140988510119057, worksheet.costpercapita_bw129, 0.001); end
  def test_costpercapita_bx129; assert_in_epsilon(7.253221336493713, worksheet.costpercapita_bx129, 0.001); end
  def test_costpercapita_by129; assert_in_epsilon(14.197072673291725, worksheet.costpercapita_by129, 0.001); end
  def test_costpercapita_bz129; assert_in_epsilon(34.784676317987234, worksheet.costpercapita_bz129, 0.001); end
  def test_costpercapita_ca129; assert_in_epsilon(80.01492033746342, worksheet.costpercapita_ca129, 0.001); end
  def test_costpercapita_bs129; assert_in_delta(0, (worksheet.costpercapita_bs129||0), 0.001); end
  def test_costpercapita_cd129; assert_in_epsilon(211.80371848961045, worksheet.costpercapita_cd129, 0.001); end
  def test_costpercapita_aj129; assert_in_delta(0, (worksheet.costpercapita_aj129||0), 0.001); end
  def test_costpercapita_ak129; assert_in_delta(0.011821283924247455, worksheet.costpercapita_ak129, 0.001); end
  def test_costpercapita_al129; assert_in_delta(0.763683726528361, worksheet.costpercapita_al129, 0.001); end
  def test_costpercapita_am129; assert_in_epsilon(3.7140988510119057, worksheet.costpercapita_am129, 0.001); end
  def test_costpercapita_an129; assert_in_epsilon(7.253221336493713, worksheet.costpercapita_an129, 0.001); end
  def test_costpercapita_ao129; assert_in_epsilon(14.197072673291725, worksheet.costpercapita_ao129, 0.001); end
  def test_costpercapita_ap129; assert_in_epsilon(34.784676317987234, worksheet.costpercapita_ap129, 0.001); end
  def test_costpercapita_aq129; assert_in_epsilon(80.01492033746342, worksheet.costpercapita_aq129, 0.001); end
  def test_costpercapita_ai129; assert_in_delta(0, (worksheet.costpercapita_ai129||0), 0.001); end
  def test_costpercapita_at129; assert_in_epsilon(211.80371848961045, worksheet.costpercapita_at129, 0.001); end
  def test_costpercapita_cr129; assert_equal("ok", worksheet.costpercapita_cr129); end
  def test_costpercapita_a130; assert_equal("VII.a.Imports", worksheet.costpercapita_a130); end
  def test_costpercapita_b130; assert_equal("Electricity imports", worksheet.costpercapita_b130); end
  def test_costpercapita_c130; assert_equal("Electricity", worksheet.costpercapita_c130); end
  def test_costpercapita_y130; assert_in_delta(0, (worksheet.costpercapita_y130||0), 0.001); end
  def test_costpercapita_z130; assert_in_delta(0, (worksheet.costpercapita_z130||0), 0.001); end
  def test_costpercapita_aa130; assert_in_delta(0, (worksheet.costpercapita_aa130||0), 0.001); end
  def test_costpercapita_ab130; assert_in_delta(0, (worksheet.costpercapita_ab130||0), 0.001); end
  def test_costpercapita_ac130; assert_in_delta(0, (worksheet.costpercapita_ac130||0), 0.001); end
  def test_costpercapita_ad130; assert_in_delta(0, (worksheet.costpercapita_ad130||0), 0.001); end
  def test_costpercapita_ae130; assert_in_delta(0, (worksheet.costpercapita_ae130||0), 0.001); end
  def test_costpercapita_af130; assert_in_delta(0, (worksheet.costpercapita_af130||0), 0.001); end
  def test_costpercapita_ag130; assert_in_delta(0, (worksheet.costpercapita_ag130||0), 0.001); end
  def test_costpercapita_av130; assert_in_delta(0, (worksheet.costpercapita_av130||0), 0.001); end
  def test_costpercapita_aw130; assert_in_epsilon(5, worksheet.costpercapita_aw130, 0.001); end
  def test_costpercapita_bt130; assert_in_delta(0, (worksheet.costpercapita_bt130||0), 0.001); end
  def test_costpercapita_bu130; assert_in_delta(0, (worksheet.costpercapita_bu130||0), 0.001); end
  def test_costpercapita_bv130; assert_in_delta(0, (worksheet.costpercapita_bv130||0), 0.001); end
  def test_costpercapita_bw130; assert_in_delta(0, (worksheet.costpercapita_bw130||0), 0.001); end
  def test_costpercapita_bx130; assert_in_delta(0, (worksheet.costpercapita_bx130||0), 0.001); end
  def test_costpercapita_by130; assert_in_delta(0, (worksheet.costpercapita_by130||0), 0.001); end
  def test_costpercapita_bz130; assert_in_delta(0, (worksheet.costpercapita_bz130||0), 0.001); end
  def test_costpercapita_ca130; assert_in_delta(0, (worksheet.costpercapita_ca130||0), 0.001); end
  def test_costpercapita_bs130; assert_in_delta(0, (worksheet.costpercapita_bs130||0), 0.001); end
  def test_costpercapita_cd130; assert_in_delta(0, (worksheet.costpercapita_cd130||0), 0.001); end
  def test_costpercapita_cg130; assert_in_delta(0, (worksheet.costpercapita_cg130||0), 0.001); end
  def test_costpercapita_ch130; assert_in_delta(0, (worksheet.costpercapita_ch130||0), 0.001); end
  def test_costpercapita_ci130; assert_in_delta(0, (worksheet.costpercapita_ci130||0), 0.001); end
  def test_costpercapita_cj130; assert_in_delta(0, (worksheet.costpercapita_cj130||0), 0.001); end
  def test_costpercapita_ck130; assert_in_delta(0, (worksheet.costpercapita_ck130||0), 0.001); end
  def test_costpercapita_cl130; assert_in_delta(0, (worksheet.costpercapita_cl130||0), 0.001); end
  def test_costpercapita_cm130; assert_in_delta(0, (worksheet.costpercapita_cm130||0), 0.001); end
  def test_costpercapita_cn130; assert_in_delta(0, (worksheet.costpercapita_cn130||0), 0.001); end
  def test_costpercapita_cf130; assert_in_delta(0, (worksheet.costpercapita_cf130||0), 0.001); end
  def test_costpercapita_cq130; assert_in_delta(0, (worksheet.costpercapita_cq130||0), 0.001); end
  def test_costpercapita_aj130; assert_in_delta(0, (worksheet.costpercapita_aj130||0), 0.001); end
  def test_costpercapita_ak130; assert_in_delta(0, (worksheet.costpercapita_ak130||0), 0.001); end
  def test_costpercapita_al130; assert_in_delta(0, (worksheet.costpercapita_al130||0), 0.001); end
  def test_costpercapita_am130; assert_in_delta(0, (worksheet.costpercapita_am130||0), 0.001); end
  def test_costpercapita_an130; assert_in_delta(0, (worksheet.costpercapita_an130||0), 0.001); end
  def test_costpercapita_ao130; assert_in_delta(0, (worksheet.costpercapita_ao130||0), 0.001); end
  def test_costpercapita_ap130; assert_in_delta(0, (worksheet.costpercapita_ap130||0), 0.001); end
  def test_costpercapita_aq130; assert_in_delta(0, (worksheet.costpercapita_aq130||0), 0.001); end
  def test_costpercapita_ai130; assert_in_delta(0, (worksheet.costpercapita_ai130||0), 0.001); end
  def test_costpercapita_at130; assert_in_delta(0, (worksheet.costpercapita_at130||0), 0.001); end
  def test_costpercapita_cr130; assert_equal("ok", worksheet.costpercapita_cr130); end
  def test_costpercapita_a131; assert_equal("VII.a.Exports", worksheet.costpercapita_a131); end
  def test_costpercapita_b131; assert_equal("Electricity Exports", worksheet.costpercapita_b131); end
  def test_costpercapita_c131; assert_equal("Electricity", worksheet.costpercapita_c131); end
  def test_costpercapita_av131; assert_in_delta(0, (worksheet.costpercapita_av131||0), 0.001); end
  def test_costpercapita_aw131; assert_in_epsilon(5, worksheet.costpercapita_aw131, 0.001); end
  def test_costpercapita_bt131; assert_in_delta(-1.519495887716513e-13, worksheet.costpercapita_bt131, 0.001); end
  def test_costpercapita_bu131; assert_in_delta(-2.9395008054810466e-13, worksheet.costpercapita_bu131, 0.001); end
  def test_costpercapita_bv131; assert_in_delta(0, (worksheet.costpercapita_bv131||0), 0.001); end
  def test_costpercapita_bw131; assert_in_epsilon(-149.44276043140928, worksheet.costpercapita_bw131, 0.001); end
  def test_costpercapita_bx131; assert_in_epsilon(-379.21984696185353, worksheet.costpercapita_bx131, 0.001); end
  def test_costpercapita_by131; assert_in_epsilon(-475.7106920214553, worksheet.costpercapita_by131, 0.001); end
  def test_costpercapita_bz131; assert_in_epsilon(-551.0112942294445, worksheet.costpercapita_bz131, 0.001); end
  def test_costpercapita_ca131; assert_in_epsilon(-578.0540705961951, worksheet.costpercapita_ca131, 0.001); end
  def test_costpercapita_bs131; assert_in_delta(-1.571309941864344e-13, worksheet.costpercapita_bs131, 0.001); end
  def test_costpercapita_cd131; assert_in_epsilon(-3638.212490328705, worksheet.costpercapita_cd131, 0.001); end
  def test_costpercapita_cg131; assert_in_delta(0, (worksheet.costpercapita_cg131||0), 0.001); end
  def test_costpercapita_ch131; assert_in_delta(0, (worksheet.costpercapita_ch131||0), 0.001); end
  def test_costpercapita_ci131; assert_in_delta(0, (worksheet.costpercapita_ci131||0), 0.001); end
  def test_costpercapita_cj131; assert_in_delta(0, (worksheet.costpercapita_cj131||0), 0.001); end
  def test_costpercapita_ck131; assert_in_delta(0, (worksheet.costpercapita_ck131||0), 0.001); end
  def test_costpercapita_cl131; assert_in_delta(0, (worksheet.costpercapita_cl131||0), 0.001); end
  def test_costpercapita_cm131; assert_in_delta(0, (worksheet.costpercapita_cm131||0), 0.001); end
  def test_costpercapita_cn131; assert_in_delta(0, (worksheet.costpercapita_cn131||0), 0.001); end
  def test_costpercapita_cf131; assert_in_delta(0, (worksheet.costpercapita_cf131||0), 0.001); end
  def test_costpercapita_cq131; assert_in_delta(0, (worksheet.costpercapita_cq131||0), 0.001); end
  def test_costpercapita_aj131; assert_in_delta(-1.519495887716513e-13, worksheet.costpercapita_aj131, 0.001); end
  def test_costpercapita_ak131; assert_in_delta(-2.9395008054810466e-13, worksheet.costpercapita_ak131, 0.001); end
  def test_costpercapita_al131; assert_in_delta(0, (worksheet.costpercapita_al131||0), 0.001); end
  def test_costpercapita_am131; assert_in_epsilon(-149.44276043140928, worksheet.costpercapita_am131, 0.001); end
  def test_costpercapita_an131; assert_in_epsilon(-379.21984696185353, worksheet.costpercapita_an131, 0.001); end
  def test_costpercapita_ao131; assert_in_epsilon(-475.7106920214553, worksheet.costpercapita_ao131, 0.001); end
  def test_costpercapita_ap131; assert_in_epsilon(-551.0112942294445, worksheet.costpercapita_ap131, 0.001); end
  def test_costpercapita_aq131; assert_in_epsilon(-578.0540705961951, worksheet.costpercapita_aq131, 0.001); end
  def test_costpercapita_ai131; assert_in_delta(-1.571309941864344e-13, worksheet.costpercapita_ai131, 0.001); end
  def test_costpercapita_at131; assert_in_epsilon(-3638.212490328705, worksheet.costpercapita_at131, 0.001); end
  def test_costpercapita_cr131; assert_equal("ok", worksheet.costpercapita_cr131); end
  def test_costpercapita_a132; assert_equal("VII.b", worksheet.costpercapita_a132); end
  def test_costpercapita_b132; assert_equal("Electricity grid distribution", worksheet.costpercapita_b132); end
  def test_costpercapita_c132; assert_equal("Electricity", worksheet.costpercapita_c132); end
  def test_costpercapita_y132; assert_in_delta(0, (worksheet.costpercapita_y132||0), 0.001); end
  def test_costpercapita_z132; assert_in_delta(0, (worksheet.costpercapita_z132||0), 0.001); end
  def test_costpercapita_aa132; assert_in_delta(0, (worksheet.costpercapita_aa132||0), 0.001); end
  def test_costpercapita_ab132; assert_in_delta(0, (worksheet.costpercapita_ab132||0), 0.001); end
  def test_costpercapita_ac132; assert_in_delta(0, (worksheet.costpercapita_ac132||0), 0.001); end
  def test_costpercapita_ad132; assert_in_delta(0, (worksheet.costpercapita_ad132||0), 0.001); end
  def test_costpercapita_ae132; assert_in_delta(0, (worksheet.costpercapita_ae132||0), 0.001); end
  def test_costpercapita_af132; assert_in_delta(0, (worksheet.costpercapita_af132||0), 0.001); end
  def test_costpercapita_ag132; assert_in_delta(0, (worksheet.costpercapita_ag132||0), 0.001); end
  def test_costpercapita_av132; assert_in_delta(0.1, worksheet.costpercapita_av132, 0.001); end
  def test_costpercapita_aw132; assert_in_epsilon(20, worksheet.costpercapita_aw132, 0.001); end
  def test_costpercapita_bt132; assert_in_epsilon(245.80424874343694, worksheet.costpercapita_bt132, 0.001); end
  def test_costpercapita_bu132; assert_in_epsilon(465.1061973221528, worksheet.costpercapita_bu132, 0.001); end
  def test_costpercapita_bv132; assert_in_epsilon(716.7517703299561, worksheet.costpercapita_bv132, 0.001); end
  def test_costpercapita_bw132; assert_in_epsilon(905.0763234356755, worksheet.costpercapita_bw132, 0.001); end
  def test_costpercapita_bx132; assert_in_epsilon(1051.108373716046, worksheet.costpercapita_bx132, 0.001); end
  def test_costpercapita_by132; assert_in_epsilon(1152.0181573981993, worksheet.costpercapita_by132, 0.001); end
  def test_costpercapita_bz132; assert_in_epsilon(1485.1605097413824, worksheet.costpercapita_bz132, 0.001); end
  def test_costpercapita_ca132; assert_in_epsilon(1316.222246120586, worksheet.costpercapita_ca132, 0.001); end
  def test_costpercapita_bs132; assert_in_epsilon(92.31231545799179, worksheet.costpercapita_bs132, 0.001); end
  def test_costpercapita_cd132; assert_in_epsilon(15492.051527185246, worksheet.costpercapita_cd132, 0.001); end
  def test_costpercapita_cg132; assert_in_epsilon(-38.27926135760923, worksheet.costpercapita_cg132, 0.001); end
  def test_costpercapita_ch132; assert_in_epsilon(59.5782380917592, worksheet.costpercapita_ch132, 0.001); end
  def test_costpercapita_ci132; assert_in_epsilon(239.65392357740203, worksheet.costpercapita_ci132, 0.001); end
  def test_costpercapita_cj132; assert_in_epsilon(412.17801598862843, worksheet.costpercapita_cj132, 0.001); end
  def test_costpercapita_ck132; assert_in_epsilon(497.8850699017376, worksheet.costpercapita_ck132, 0.001); end
  def test_costpercapita_cl132; assert_in_epsilon(561.1256156021442, worksheet.costpercapita_cl132, 0.001); end
  def test_costpercapita_cm132; assert_in_epsilon(851.0268124160988, worksheet.costpercapita_cm132, 0.001); end
  def test_costpercapita_cn132; assert_in_epsilon(674.414702344728, worksheet.costpercapita_cn132, 0.001); end
  def test_costpercapita_cf132; assert_in_epsilon(-131.08230046326375, worksheet.costpercapita_cf132, 0.001); end
  def test_costpercapita_cq132; assert_in_epsilon(5924.572112074498, worksheet.costpercapita_cq132, 0.001); end
  def test_costpercapita_aj132; assert_in_epsilon(284.08351010104616, worksheet.costpercapita_aj132, 0.001); end
  def test_costpercapita_ak132; assert_in_epsilon(405.5279592303936, worksheet.costpercapita_ak132, 0.001); end
  def test_costpercapita_al132; assert_in_epsilon(477.09784675255406, worksheet.costpercapita_al132, 0.001); end
  def test_costpercapita_am132; assert_in_epsilon(492.89830744704705, worksheet.costpercapita_am132, 0.001); end
  def test_costpercapita_an132; assert_in_epsilon(553.2233038143082, worksheet.costpercapita_an132, 0.001); end
  def test_costpercapita_ao132; assert_in_epsilon(590.8925417960551, worksheet.costpercapita_ao132, 0.001); end
  def test_costpercapita_ap132; assert_in_epsilon(634.1336973252836, worksheet.costpercapita_ap132, 0.001); end
  def test_costpercapita_aq132; assert_in_epsilon(641.8075437758581, worksheet.costpercapita_aq132, 0.001); end
  def test_costpercapita_ai132; assert_in_epsilon(223.39461592125554, worksheet.costpercapita_ai132, 0.001); end
  def test_costpercapita_at132; assert_in_epsilon(9567.479415110745, worksheet.costpercapita_at132, 0.001); end
  def test_costpercapita_cr132; assert_equal("ok", worksheet.costpercapita_cr132); end
  def test_costpercapita_a133; assert_equal("VII.c", worksheet.costpercapita_a133); end
  def test_costpercapita_b133; assert_equal("Storage, demand shifting, backup", worksheet.costpercapita_b133); end
  def test_costpercapita_c133; assert_equal("Electricity", worksheet.costpercapita_c133); end
  def test_costpercapita_y133; assert_in_delta(0, (worksheet.costpercapita_y133||0), 0.001); end
  def test_costpercapita_z133; assert_in_delta(0, (worksheet.costpercapita_z133||0), 0.001); end
  def test_costpercapita_aa133; assert_in_delta(0, (worksheet.costpercapita_aa133||0), 0.001); end
  def test_costpercapita_ab133; assert_in_delta(0, (worksheet.costpercapita_ab133||0), 0.001); end
  def test_costpercapita_ac133; assert_in_delta(0, (worksheet.costpercapita_ac133||0), 0.001); end
  def test_costpercapita_ad133; assert_in_delta(0, (worksheet.costpercapita_ad133||0), 0.001); end
  def test_costpercapita_ae133; assert_in_delta(0, (worksheet.costpercapita_ae133||0), 0.001); end
  def test_costpercapita_af133; assert_in_delta(0, (worksheet.costpercapita_af133||0), 0.001); end
  def test_costpercapita_ag133; assert_in_delta(0, (worksheet.costpercapita_ag133||0), 0.001); end
  def test_costpercapita_av133; assert_in_delta(0.1, worksheet.costpercapita_av133, 0.001); end
  def test_costpercapita_aw133; assert_in_epsilon(15, worksheet.costpercapita_aw133, 0.001); end
  def test_costpercapita_bt133; assert_in_epsilon(4.93800514142745, worksheet.costpercapita_bt133, 0.001); end
  def test_costpercapita_bu133; assert_in_epsilon(24.07480391567403, worksheet.costpercapita_bu133, 0.001); end
  def test_costpercapita_bv133; assert_in_epsilon(83.01125901300821, worksheet.costpercapita_bv133, 0.001); end
  def test_costpercapita_bw133; assert_in_epsilon(121.16924377388874, worksheet.costpercapita_bw133, 0.001); end
  def test_costpercapita_bx133; assert_in_epsilon(154.48617830261026, worksheet.costpercapita_bx133, 0.001); end
  def test_costpercapita_by133; assert_in_epsilon(102.81971842850754, worksheet.costpercapita_by133, 0.001); end
  def test_costpercapita_bz133; assert_in_epsilon(107.88248077003742, worksheet.costpercapita_bz133, 0.001); end
  def test_costpercapita_ca133; assert_in_epsilon(55.686600084470584, worksheet.costpercapita_ca133, 0.001); end
  def test_costpercapita_bs133; assert_in_epsilon(2.6107540216924687, worksheet.costpercapita_bs133, 0.001); end
  def test_costpercapita_cd133; assert_in_epsilon(1410.560267317607, worksheet.costpercapita_cd133, 0.001); end
  def test_costpercapita_cg133; assert_in_epsilon(-1.2508369687183603, worksheet.costpercapita_cg133, 0.001); end
  def test_costpercapita_ch133; assert_in_epsilon(-6.030691154047834, worksheet.costpercapita_ch133, 0.001); end
  def test_costpercapita_ci133; assert_in_epsilon(-9.129938816209668, worksheet.costpercapita_ci133, 0.001); end
  def test_costpercapita_cj133; assert_in_epsilon(42.91998769037586, worksheet.costpercapita_cj133, 0.001); end
  def test_costpercapita_ck133; assert_in_epsilon(63.20097378458504, worksheet.costpercapita_ck133, 0.001); end
  def test_costpercapita_cl133; assert_in_epsilon(93.24168851478885, worksheet.costpercapita_cl133, 0.001); end
  def test_costpercapita_cm133; assert_in_epsilon(28.043687571192617, worksheet.costpercapita_cm133, 0.001); end
  def test_costpercapita_cn133; assert_in_epsilon(43.47960727974713, worksheet.costpercapita_cn133, 0.001); end
  def test_costpercapita_cf133; assert_in_delta(0, (worksheet.costpercapita_cf133||0), 0.001); end
  def test_costpercapita_cq133; assert_in_epsilon(454.5034329219976, worksheet.costpercapita_cq133, 0.001); end
  def test_costpercapita_aj133; assert_in_epsilon(6.18884211014581, worksheet.costpercapita_aj133, 0.001); end
  def test_costpercapita_ak133; assert_in_epsilon(30.105495069721865, worksheet.costpercapita_ak133, 0.001); end
  def test_costpercapita_al133; assert_in_epsilon(92.14119782921787, worksheet.costpercapita_al133, 0.001); end
  def test_costpercapita_am133; assert_in_epsilon(78.24925608351289, worksheet.costpercapita_am133, 0.001); end
  def test_costpercapita_an133; assert_in_epsilon(91.2852045180252, worksheet.costpercapita_an133, 0.001); end
  def test_costpercapita_ao133; assert_in_epsilon(9.578029913718687, worksheet.costpercapita_ao133, 0.001); end
  def test_costpercapita_ap133; assert_in_epsilon(79.8387931988448, worksheet.costpercapita_ap133, 0.001); end
  def test_costpercapita_aq133; assert_in_epsilon(12.206992804723459, worksheet.costpercapita_aq133, 0.001); end
  def test_costpercapita_ai133; assert_in_epsilon(2.6107540216924687, worksheet.costpercapita_ai133, 0.001); end
  def test_costpercapita_at133; assert_in_epsilon(956.0568343956097, worksheet.costpercapita_at133, 0.001); end
  def test_costpercapita_cr133; assert_equal("ok", worksheet.costpercapita_cr133); end
  def test_costpercapita_a134; assert_equal("VIII.a", worksheet.costpercapita_a134); end
  def test_costpercapita_b134; assert_equal("H2 Production", worksheet.costpercapita_b134); end
  def test_costpercapita_c134; assert_equal("Transport", worksheet.costpercapita_c134); end
  def test_costpercapita_y134; assert_in_delta(0, (worksheet.costpercapita_y134||0), 0.001); end
  def test_costpercapita_z134; assert_in_delta(0, (worksheet.costpercapita_z134||0), 0.001); end
  def test_costpercapita_aa134; assert_in_delta(0, (worksheet.costpercapita_aa134||0), 0.001); end
  def test_costpercapita_ab134; assert_in_delta(0, (worksheet.costpercapita_ab134||0), 0.001); end
  def test_costpercapita_ac134; assert_in_delta(0, (worksheet.costpercapita_ac134||0), 0.001); end
  def test_costpercapita_ad134; assert_in_delta(0, (worksheet.costpercapita_ad134||0), 0.001); end
  def test_costpercapita_ae134; assert_in_delta(0, (worksheet.costpercapita_ae134||0), 0.001); end
  def test_costpercapita_af134; assert_in_delta(0, (worksheet.costpercapita_af134||0), 0.001); end
  def test_costpercapita_ag134; assert_in_delta(0, (worksheet.costpercapita_ag134||0), 0.001); end
  def test_costpercapita_av134; assert_in_delta(0.1, worksheet.costpercapita_av134, 0.001); end
  def test_costpercapita_aw134; assert_in_epsilon(25, worksheet.costpercapita_aw134, 0.001); end
  def test_costpercapita_bt134; assert_in_delta(0, (worksheet.costpercapita_bt134||0), 0.001); end
  def test_costpercapita_bu134; assert_in_delta(0, (worksheet.costpercapita_bu134||0), 0.001); end
  def test_costpercapita_bv134; assert_in_delta(0, (worksheet.costpercapita_bv134||0), 0.001); end
  def test_costpercapita_bw134; assert_in_delta(0, (worksheet.costpercapita_bw134||0), 0.001); end
  def test_costpercapita_bx134; assert_in_delta(0, (worksheet.costpercapita_bx134||0), 0.001); end
  def test_costpercapita_by134; assert_in_delta(0, (worksheet.costpercapita_by134||0), 0.001); end
  def test_costpercapita_bz134; assert_in_delta(0, (worksheet.costpercapita_bz134||0), 0.001); end
  def test_costpercapita_ca134; assert_in_delta(0, (worksheet.costpercapita_ca134||0), 0.001); end
  def test_costpercapita_bs134; assert_in_delta(0, (worksheet.costpercapita_bs134||0), 0.001); end
  def test_costpercapita_cd134; assert_in_delta(0, (worksheet.costpercapita_cd134||0), 0.001); end
  def test_costpercapita_cg134; assert_in_delta(0, (worksheet.costpercapita_cg134||0), 0.001); end
  def test_costpercapita_ch134; assert_in_delta(0, (worksheet.costpercapita_ch134||0), 0.001); end
  def test_costpercapita_ci134; assert_in_delta(0, (worksheet.costpercapita_ci134||0), 0.001); end
  def test_costpercapita_cj134; assert_in_delta(0, (worksheet.costpercapita_cj134||0), 0.001); end
  def test_costpercapita_ck134; assert_in_delta(0, (worksheet.costpercapita_ck134||0), 0.001); end
  def test_costpercapita_cl134; assert_in_delta(0, (worksheet.costpercapita_cl134||0), 0.001); end
  def test_costpercapita_cm134; assert_in_delta(0, (worksheet.costpercapita_cm134||0), 0.001); end
  def test_costpercapita_cn134; assert_in_delta(0, (worksheet.costpercapita_cn134||0), 0.001); end
  def test_costpercapita_cf134; assert_in_delta(0, (worksheet.costpercapita_cf134||0), 0.001); end
  def test_costpercapita_cq134; assert_in_delta(0, (worksheet.costpercapita_cq134||0), 0.001); end
  def test_costpercapita_aj134; assert_in_delta(0, (worksheet.costpercapita_aj134||0), 0.001); end
  def test_costpercapita_ak134; assert_in_delta(0, (worksheet.costpercapita_ak134||0), 0.001); end
  def test_costpercapita_al134; assert_in_delta(0, (worksheet.costpercapita_al134||0), 0.001); end
  def test_costpercapita_am134; assert_in_delta(0, (worksheet.costpercapita_am134||0), 0.001); end
  def test_costpercapita_an134; assert_in_delta(0, (worksheet.costpercapita_an134||0), 0.001); end
  def test_costpercapita_ao134; assert_in_delta(0, (worksheet.costpercapita_ao134||0), 0.001); end
  def test_costpercapita_ap134; assert_in_delta(0, (worksheet.costpercapita_ap134||0), 0.001); end
  def test_costpercapita_aq134; assert_in_delta(0, (worksheet.costpercapita_aq134||0), 0.001); end
  def test_costpercapita_ai134; assert_in_delta(0, (worksheet.costpercapita_ai134||0), 0.001); end
  def test_costpercapita_at134; assert_in_delta(0, (worksheet.costpercapita_at134||0), 0.001); end
  def test_costpercapita_cr134; assert_equal("ok", worksheet.costpercapita_cr134); end
  def test_costpercapita_a135; assert_equal("IX.a.Heating", worksheet.costpercapita_a135); end
  def test_costpercapita_b135; assert_equal("Domestic heating", worksheet.costpercapita_b135); end
  def test_costpercapita_c135; assert_equal("Buildings", worksheet.costpercapita_c135); end
  def test_costpercapita_e135; assert_in_epsilon(167.35410759881364, worksheet.costpercapita_e135, 0.001); end
  def test_costpercapita_o135; assert_in_epsilon(86.2781517296441, worksheet.costpercapita_o135, 0.001); end
  def test_costpercapita_p135; assert_in_epsilon(84.06401100350773, worksheet.costpercapita_p135, 0.001); end
  def test_costpercapita_y135; assert_in_delta(0, (worksheet.costpercapita_y135||0), 0.001); end
  def test_costpercapita_z135; assert_in_delta(0, (worksheet.costpercapita_z135||0), 0.001); end
  def test_costpercapita_aa135; assert_in_delta(0, (worksheet.costpercapita_aa135||0), 0.001); end
  def test_costpercapita_ab135; assert_in_delta(0, (worksheet.costpercapita_ab135||0), 0.001); end
  def test_costpercapita_ac135; assert_in_delta(0, (worksheet.costpercapita_ac135||0), 0.001); end
  def test_costpercapita_ad135; assert_in_delta(0, (worksheet.costpercapita_ad135||0), 0.001); end
  def test_costpercapita_ae135; assert_in_delta(0, (worksheet.costpercapita_ae135||0), 0.001); end
  def test_costpercapita_af135; assert_in_delta(0, (worksheet.costpercapita_af135||0), 0.001); end
  def test_costpercapita_ag135; assert_in_delta(0, (worksheet.costpercapita_ag135||0), 0.001); end
  def test_costpercapita_ai135; assert_in_epsilon(253.63225932845774, worksheet.costpercapita_ai135, 0.001); end
  def test_costpercapita_av135; assert_in_delta(0.1, worksheet.costpercapita_av135, 0.001); end
  def test_costpercapita_aw135; assert_in_epsilon(15, worksheet.costpercapita_aw135, 0.001); end
  def test_costpercapita_ay135; assert_in_epsilon(66.00802981089512, worksheet.costpercapita_ay135, 0.001); end
  def test_costpercapita_bi135; assert_in_epsilon(66.00802981089512, worksheet.costpercapita_bi135, 0.001); end
  def test_costpercapita_bs135; assert_in_epsilon(152.28618154053922, worksheet.costpercapita_bs135, 0.001); end
  def test_costpercapita_cf135; assert_in_epsilon(-101.3460777879185, worksheet.costpercapita_cf135, 0.001); end
  def test_costpercapita_bt135; assert_in_epsilon(218.92087047536774, worksheet.costpercapita_bt135, 0.001); end
  def test_costpercapita_bu135; assert_in_epsilon(489.2729593332998, worksheet.costpercapita_bu135, 0.001); end
  def test_costpercapita_bv135; assert_in_epsilon(698.6402133545308, worksheet.costpercapita_bv135, 0.001); end
  def test_costpercapita_bw135; assert_in_epsilon(945.4331111735502, worksheet.costpercapita_bw135, 0.001); end
  def test_costpercapita_bx135; assert_in_epsilon(1080.5397954352238, worksheet.costpercapita_bx135, 0.001); end
  def test_costpercapita_by135; assert_in_epsilon(1252.6884746309884, worksheet.costpercapita_by135, 0.001); end
  def test_costpercapita_bz135; assert_in_epsilon(1431.7888459181863, worksheet.costpercapita_bz135, 0.001); end
  def test_costpercapita_ca135; assert_in_epsilon(1619.3361525557975, worksheet.costpercapita_ca135, 0.001); end
  def test_costpercapita_cd135; assert_in_epsilon(16133.241541239611, worksheet.costpercapita_cd135, 0.001); end
  def test_costpercapita_cg135; assert_in_epsilon(26.811817035833418, worksheet.costpercapita_cg135, 0.001); end
  def test_costpercapita_ch135; assert_in_epsilon(6.784723743774397, worksheet.costpercapita_ch135, 0.001); end
  def test_costpercapita_ci135; assert_in_epsilon(169.7864161563134, worksheet.costpercapita_ci135, 0.001); end
  def test_costpercapita_cj135; assert_in_epsilon(309.532268178928, worksheet.costpercapita_cj135, 0.001); end
  def test_costpercapita_ck135; assert_in_epsilon(338.9520588666999, worksheet.costpercapita_ck135, 0.001); end
  def test_costpercapita_cl135; assert_in_epsilon(405.0799647593178, worksheet.costpercapita_cl135, 0.001); end
  def test_costpercapita_cm135; assert_in_epsilon(466.05384992935603, worksheet.costpercapita_cm135, 0.001); end
  def test_costpercapita_cn135; assert_in_epsilon(534.9075538183724, worksheet.costpercapita_cn135, 0.001); end
  def test_costpercapita_cq135; assert_in_epsilon(4184.028810319934, worksheet.costpercapita_cq135, 0.001); end
  def test_costpercapita_aj135; assert_in_epsilon(192.10905343953434, worksheet.costpercapita_aj135, 0.001); end
  def test_costpercapita_ak135; assert_in_epsilon(482.4882355895254, worksheet.costpercapita_ak135, 0.001); end
  def test_costpercapita_al135; assert_in_epsilon(528.8537971982174, worksheet.costpercapita_al135, 0.001); end
  def test_costpercapita_am135; assert_in_epsilon(635.9008429946222, worksheet.costpercapita_am135, 0.001); end
  def test_costpercapita_an135; assert_in_epsilon(741.5877365685241, worksheet.costpercapita_an135, 0.001); end
  def test_costpercapita_ao135; assert_in_epsilon(847.6085098716704, worksheet.costpercapita_ao135, 0.001); end
  def test_costpercapita_ap135; assert_in_epsilon(965.7349959888302, worksheet.costpercapita_ap135, 0.001); end
  def test_costpercapita_aq135; assert_in_epsilon(1084.428598737425, worksheet.costpercapita_aq135, 0.001); end
  def test_costpercapita_at135; assert_in_epsilon(11949.212730919677, worksheet.costpercapita_at135, 0.001); end
  def test_costpercapita_cr135; assert_equal("ok", worksheet.costpercapita_cr135); end
  def test_costpercapita_a136; assert_equal("IX.a.Insulation", worksheet.costpercapita_a136); end
  def test_costpercapita_b136; assert_equal("Domestic insulation", worksheet.costpercapita_b136); end
  def test_costpercapita_c136; assert_equal("Buildings", worksheet.costpercapita_c136); end
  def test_costpercapita_o136; assert_in_delta(0, (worksheet.costpercapita_o136||0), 0.001); end
  def test_costpercapita_p136; assert_in_delta(0, (worksheet.costpercapita_p136||0), 0.001); end
  def test_costpercapita_q136; assert_in_delta(0, (worksheet.costpercapita_q136||0), 0.001); end
  def test_costpercapita_r136; assert_in_delta(0, (worksheet.costpercapita_r136||0), 0.001); end
  def test_costpercapita_s136; assert_in_delta(0, (worksheet.costpercapita_s136||0), 0.001); end
  def test_costpercapita_t136; assert_in_delta(0, (worksheet.costpercapita_t136||0), 0.001); end
  def test_costpercapita_u136; assert_in_delta(0, (worksheet.costpercapita_u136||0), 0.001); end
  def test_costpercapita_v136; assert_in_delta(0, (worksheet.costpercapita_v136||0), 0.001); end
  def test_costpercapita_w136; assert_in_delta(0, (worksheet.costpercapita_w136||0), 0.001); end
  def test_costpercapita_y136; assert_in_delta(0, (worksheet.costpercapita_y136||0), 0.001); end
  def test_costpercapita_z136; assert_in_delta(0, (worksheet.costpercapita_z136||0), 0.001); end
  def test_costpercapita_aa136; assert_in_delta(0, (worksheet.costpercapita_aa136||0), 0.001); end
  def test_costpercapita_ab136; assert_in_delta(0, (worksheet.costpercapita_ab136||0), 0.001); end
  def test_costpercapita_ac136; assert_in_delta(0, (worksheet.costpercapita_ac136||0), 0.001); end
  def test_costpercapita_ad136; assert_in_delta(0, (worksheet.costpercapita_ad136||0), 0.001); end
  def test_costpercapita_ae136; assert_in_delta(0, (worksheet.costpercapita_ae136||0), 0.001); end
  def test_costpercapita_af136; assert_in_delta(0, (worksheet.costpercapita_af136||0), 0.001); end
  def test_costpercapita_ag136; assert_in_delta(0, (worksheet.costpercapita_ag136||0), 0.001); end
  def test_costpercapita_av136; assert_in_delta(0.1, worksheet.costpercapita_av136, 0.001); end
  def test_costpercapita_aw136; assert_in_epsilon(30, worksheet.costpercapita_aw136, 0.001); end
  def test_costpercapita_bt136; assert_in_epsilon(342.7404600420068, worksheet.costpercapita_bt136, 0.001); end
  def test_costpercapita_bu136; assert_in_epsilon(538.1119418310758, worksheet.costpercapita_bu136, 0.001); end
  def test_costpercapita_bv136; assert_in_epsilon(685.0230510111663, worksheet.costpercapita_bv136, 0.001); end
  def test_costpercapita_bw136; assert_in_epsilon(816.2015851832875, worksheet.costpercapita_bw136, 0.001); end
  def test_costpercapita_bx136; assert_in_epsilon(932.9417164662046, worksheet.costpercapita_bx136, 0.001); end
  def test_costpercapita_by136; assert_in_epsilon(929.0468387199838, worksheet.costpercapita_by136, 0.001); end
  def test_costpercapita_bz136; assert_in_epsilon(975.72556231704, worksheet.costpercapita_bz136, 0.001); end
  def test_costpercapita_ca136; assert_in_epsilon(881.9359112504053, worksheet.costpercapita_ca136, 0.001); end
  def test_costpercapita_bs136; assert_in_epsilon(132.29068474029276, worksheet.costpercapita_bs136, 0.001); end
  def test_costpercapita_cd136; assert_in_epsilon(13875.188580621809, worksheet.costpercapita_cd136, 0.001); end
  def test_costpercapita_cg136; assert_in_epsilon(-62.26254163972795, worksheet.costpercapita_cg136, 0.001); end
  def test_costpercapita_ch136; assert_in_epsilon(148.60659759586594, worksheet.costpercapita_ch136, 0.001); end
  def test_costpercapita_ci136; assert_in_epsilon(376.6254569500752, worksheet.costpercapita_ci136, 0.001); end
  def test_costpercapita_cj136; assert_in_epsilon(533.5950032751551, worksheet.costpercapita_cj136, 0.001); end
  def test_costpercapita_ck136; assert_in_epsilon(676.5931284290185, worksheet.costpercapita_ck136, 0.001); end
  def test_costpercapita_cl136; assert_in_epsilon(688.7394085423194, worksheet.costpercapita_cl136, 0.001); end
  def test_costpercapita_cm136; assert_in_epsilon(771.6372553163621, worksheet.costpercapita_cm136, 0.001); end
  def test_costpercapita_cn136; assert_in_epsilon(687.0102943669134, worksheet.costpercapita_cn136, 0.001); end
  def test_costpercapita_cf136; assert_in_epsilon(-283.4069718683927, worksheet.costpercapita_cf136, 0.001); end
  def test_costpercapita_cq136; assert_in_epsilon(7200.867044884713, worksheet.costpercapita_cq136, 0.001); end
  def test_costpercapita_aj136; assert_in_epsilon(405.00300168173476, worksheet.costpercapita_aj136, 0.001); end
  def test_costpercapita_ak136; assert_in_epsilon(389.50534423520986, worksheet.costpercapita_ak136, 0.001); end
  def test_costpercapita_al136; assert_in_epsilon(308.3975940610911, worksheet.costpercapita_al136, 0.001); end
  def test_costpercapita_am136; assert_in_epsilon(282.60658190813234, worksheet.costpercapita_am136, 0.001); end
  def test_costpercapita_an136; assert_in_epsilon(256.3485880371861, worksheet.costpercapita_an136, 0.001); end
  def test_costpercapita_ao136; assert_in_epsilon(240.30743017766432, worksheet.costpercapita_ao136, 0.001); end
  def test_costpercapita_ap136; assert_in_epsilon(204.08830700067784, worksheet.costpercapita_ap136, 0.001); end
  def test_costpercapita_aq136; assert_in_epsilon(194.92561688349187, worksheet.costpercapita_aq136, 0.001); end
  def test_costpercapita_ai136; assert_in_epsilon(415.69765660868546, worksheet.costpercapita_ai136, 0.001); end
  def test_costpercapita_at136; assert_in_epsilon(6674.3215357370955, worksheet.costpercapita_at136, 0.001); end
  def test_costpercapita_cr136; assert_equal("ok", worksheet.costpercapita_cr136); end
  def test_costpercapita_a137; assert_equal("IX.c", worksheet.costpercapita_a137); end
  def test_costpercapita_b137; assert_equal("Commercial heating and cooling", worksheet.costpercapita_b137); end
  def test_costpercapita_c137; assert_equal("Buildings", worksheet.costpercapita_c137); end
  def test_costpercapita_y137; assert_in_delta(0, (worksheet.costpercapita_y137||0), 0.001); end
  def test_costpercapita_z137; assert_in_delta(0, (worksheet.costpercapita_z137||0), 0.001); end
  def test_costpercapita_aa137; assert_in_delta(0, (worksheet.costpercapita_aa137||0), 0.001); end
  def test_costpercapita_ab137; assert_in_delta(0, (worksheet.costpercapita_ab137||0), 0.001); end
  def test_costpercapita_ac137; assert_in_delta(0, (worksheet.costpercapita_ac137||0), 0.001); end
  def test_costpercapita_ad137; assert_in_delta(0, (worksheet.costpercapita_ad137||0), 0.001); end
  def test_costpercapita_ae137; assert_in_delta(0, (worksheet.costpercapita_ae137||0), 0.001); end
  def test_costpercapita_af137; assert_in_delta(0, (worksheet.costpercapita_af137||0), 0.001); end
  def test_costpercapita_ag137; assert_in_delta(0, (worksheet.costpercapita_ag137||0), 0.001); end
  def test_costpercapita_av137; assert_in_delta(0.1, worksheet.costpercapita_av137, 0.001); end
  def test_costpercapita_aw137; assert_in_epsilon(15, worksheet.costpercapita_aw137, 0.001); end
  def test_costpercapita_bt137; assert_in_epsilon(75.54339529363149, worksheet.costpercapita_bt137, 0.001); end
  def test_costpercapita_bu137; assert_in_epsilon(107.84617724038637, worksheet.costpercapita_bu137, 0.001); end
  def test_costpercapita_bv137; assert_in_epsilon(123.04898462247046, worksheet.costpercapita_bv137, 0.001); end
  def test_costpercapita_bw137; assert_in_epsilon(117.80368821115718, worksheet.costpercapita_bw137, 0.001); end
  def test_costpercapita_bx137; assert_in_epsilon(109.96212020488105, worksheet.costpercapita_bx137, 0.001); end
  def test_costpercapita_by137; assert_in_epsilon(103.71758726958986, worksheet.costpercapita_by137, 0.001); end
  def test_costpercapita_bz137; assert_in_epsilon(98.84349944816091, worksheet.costpercapita_bz137, 0.001); end
  def test_costpercapita_ca137; assert_in_epsilon(95.13366816264646, worksheet.costpercapita_ca137, 0.001); end
  def test_costpercapita_bs137; assert_in_epsilon(41.132441759321985, worksheet.costpercapita_bs137, 0.001); end
  def test_costpercapita_cd137; assert_in_epsilon(2100.0869806829, worksheet.costpercapita_cd137, 0.001); end
  def test_costpercapita_cg137; assert_in_epsilon(-3.701112444969796, worksheet.costpercapita_cg137, 0.001); end
  def test_costpercapita_ch137; assert_in_epsilon(29.90764536819578, worksheet.costpercapita_ch137, 0.001); end
  def test_costpercapita_ci137; assert_in_epsilon(52.24521900729675, worksheet.costpercapita_ci137, 0.001); end
  def test_costpercapita_cj137; assert_in_epsilon(53.0619356597928, worksheet.costpercapita_cj137, 0.001); end
  def test_costpercapita_ck137; assert_in_epsilon(50.1893338962523, worksheet.costpercapita_ck137, 0.001); end
  def test_costpercapita_cl137; assert_in_epsilon(47.75838113050647, worksheet.costpercapita_cl137, 0.001); end
  def test_costpercapita_cm137; assert_in_epsilon(46.119219317379454, worksheet.costpercapita_cm137, 0.001); end
  def test_costpercapita_cn137; assert_in_epsilon(45.11919444624257, worksheet.costpercapita_cn137, 0.001); end
  def test_costpercapita_cf137; assert_in_epsilon(-24.12865651942422, worksheet.costpercapita_cf137, 0.001); end
  def test_costpercapita_cq137; assert_in_epsilon(677.4987168992084, worksheet.costpercapita_cq137, 0.001); end
  def test_costpercapita_aj137; assert_in_epsilon(79.24450773860129, worksheet.costpercapita_aj137, 0.001); end
  def test_costpercapita_ak137; assert_in_epsilon(77.9385318721906, worksheet.costpercapita_ak137, 0.001); end
  def test_costpercapita_al137; assert_in_epsilon(70.80376561517369, worksheet.costpercapita_al137, 0.001); end
  def test_costpercapita_am137; assert_in_epsilon(64.74175255136437, worksheet.costpercapita_am137, 0.001); end
  def test_costpercapita_an137; assert_in_epsilon(59.772786308628746, worksheet.costpercapita_an137, 0.001); end
  def test_costpercapita_ao137; assert_in_epsilon(55.959206139083385, worksheet.costpercapita_ao137, 0.001); end
  def test_costpercapita_ap137; assert_in_epsilon(52.724280130781466, worksheet.costpercapita_ap137, 0.001); end
  def test_costpercapita_aq137; assert_in_epsilon(50.01447371640388, worksheet.costpercapita_aq137, 0.001); end
  def test_costpercapita_ai137; assert_in_epsilon(65.2610982787462, worksheet.costpercapita_ai137, 0.001); end
  def test_costpercapita_at137; assert_in_epsilon(1422.5882637836914, worksheet.costpercapita_at137, 0.001); end
  def test_costpercapita_cr137; assert_equal("ok", worksheet.costpercapita_cr137); end
  def test_costpercapita_a138; assert_equal("X.a", worksheet.costpercapita_a138); end
  def test_costpercapita_b138; assert_equal("Domestic lighting, appliances, and cooking", worksheet.costpercapita_b138); end
  def test_costpercapita_c138; assert_equal("Buildings", worksheet.costpercapita_c138); end
  def test_costpercapita_o138; assert_in_delta(0, (worksheet.costpercapita_o138||0), 0.001); end
  def test_costpercapita_p138; assert_in_delta(0, (worksheet.costpercapita_p138||0), 0.001); end
  def test_costpercapita_q138; assert_in_delta(0, (worksheet.costpercapita_q138||0), 0.001); end
  def test_costpercapita_r138; assert_in_delta(0, (worksheet.costpercapita_r138||0), 0.001); end
  def test_costpercapita_s138; assert_in_delta(0, (worksheet.costpercapita_s138||0), 0.001); end
  def test_costpercapita_t138; assert_in_delta(0, (worksheet.costpercapita_t138||0), 0.001); end
  def test_costpercapita_u138; assert_in_delta(0, (worksheet.costpercapita_u138||0), 0.001); end
  def test_costpercapita_v138; assert_in_delta(0, (worksheet.costpercapita_v138||0), 0.001); end
  def test_costpercapita_w138; assert_in_delta(0, (worksheet.costpercapita_w138||0), 0.001); end
  def test_costpercapita_y138; assert_in_delta(0, (worksheet.costpercapita_y138||0), 0.001); end
  def test_costpercapita_z138; assert_in_delta(0, (worksheet.costpercapita_z138||0), 0.001); end
  def test_costpercapita_aa138; assert_in_delta(0, (worksheet.costpercapita_aa138||0), 0.001); end
  def test_costpercapita_ab138; assert_in_delta(0, (worksheet.costpercapita_ab138||0), 0.001); end
  def test_costpercapita_ac138; assert_in_delta(0, (worksheet.costpercapita_ac138||0), 0.001); end
  def test_costpercapita_ad138; assert_in_delta(0, (worksheet.costpercapita_ad138||0), 0.001); end
  def test_costpercapita_ae138; assert_in_delta(0, (worksheet.costpercapita_ae138||0), 0.001); end
  def test_costpercapita_af138; assert_in_delta(0, (worksheet.costpercapita_af138||0), 0.001); end
  def test_costpercapita_ag138; assert_in_delta(0, (worksheet.costpercapita_ag138||0), 0.001); end
  def test_costpercapita_av138; assert_in_delta(0.1, worksheet.costpercapita_av138, 0.001); end
  def test_costpercapita_aw138; assert_in_epsilon(15, worksheet.costpercapita_aw138, 0.001); end
  def test_costpercapita_bt138; assert_in_epsilon(56.879614698425605, worksheet.costpercapita_bt138, 0.001); end
  def test_costpercapita_bu138; assert_in_epsilon(91.32322823698483, worksheet.costpercapita_bu138, 0.001); end
  def test_costpercapita_bv138; assert_in_epsilon(105.40984376355654, worksheet.costpercapita_bv138, 0.001); end
  def test_costpercapita_bw138; assert_in_epsilon(105.34625483554433, worksheet.costpercapita_bw138, 0.001); end
  def test_costpercapita_bx138; assert_in_epsilon(105.12148647773905, worksheet.costpercapita_bx138, 0.001); end
  def test_costpercapita_by138; assert_in_epsilon(104.76398545174348, worksheet.costpercapita_by138, 0.001); end
  def test_costpercapita_bz138; assert_in_epsilon(104.44417573596779, worksheet.costpercapita_bz138, 0.001); end
  def test_costpercapita_ca138; assert_in_epsilon(104.25242353943867, worksheet.costpercapita_ca138, 0.001); end
  def test_costpercapita_bs138; assert_in_epsilon(21.258492804422662, worksheet.costpercapita_bs138, 0.001); end
  def test_costpercapita_cd138; assert_in_epsilon(1871.4431941915054, worksheet.costpercapita_cd138, 0.001); end
  def test_costpercapita_cg138; assert_in_epsilon(1.6258248913264088, worksheet.costpercapita_cg138, 0.001); end
  def test_costpercapita_ch138; assert_in_epsilon(36.09434871215378, worksheet.costpercapita_ch138, 0.001); end
  def test_costpercapita_ci138; assert_in_epsilon(50.36755842961913, worksheet.costpercapita_ci138, 0.001); end
  def test_costpercapita_cj138; assert_in_epsilon(50.68703817054698, worksheet.costpercapita_cj138, 0.001); end
  def test_costpercapita_ck138; assert_in_epsilon(50.85807500813132, worksheet.costpercapita_ck138, 0.001); end
  def test_costpercapita_cl138; assert_in_epsilon(50.73496960383459, worksheet.costpercapita_cl138, 0.001); end
  def test_costpercapita_cm138; assert_in_epsilon(50.560094985688565, worksheet.costpercapita_cm138, 0.001); end
  def test_costpercapita_cn138; assert_in_epsilon(50.50357629056902, worksheet.costpercapita_cn138, 0.001); end
  def test_costpercapita_cf138; assert_in_epsilon(-32.63943601381834, worksheet.costpercapita_cf138, 0.001); end
  def test_costpercapita_cq138; assert_in_epsilon(722.4499974413603, worksheet.costpercapita_cq138, 0.001); end
  def test_costpercapita_aj138; assert_in_epsilon(55.253789807099196, worksheet.costpercapita_aj138, 0.001); end
  def test_costpercapita_ak138; assert_in_epsilon(55.22887952483105, worksheet.costpercapita_ak138, 0.001); end
  def test_costpercapita_al138; assert_in_epsilon(55.04228533393741, worksheet.costpercapita_al138, 0.001); end
  def test_costpercapita_am138; assert_in_epsilon(54.65921666499735, worksheet.costpercapita_am138, 0.001); end
  def test_costpercapita_an138; assert_in_epsilon(54.26341146960773, worksheet.costpercapita_an138, 0.001); end
  def test_costpercapita_ao138; assert_in_epsilon(54.029015847908894, worksheet.costpercapita_ao138, 0.001); end
  def test_costpercapita_ap138; assert_in_epsilon(53.88408075027923, worksheet.costpercapita_ap138, 0.001); end
  def test_costpercapita_aq138; assert_in_epsilon(53.74884724886964, worksheet.costpercapita_aq138, 0.001); end
  def test_costpercapita_ai138; assert_in_epsilon(53.897928818241006, worksheet.costpercapita_ai138, 0.001); end
  def test_costpercapita_at138; assert_in_epsilon(1148.9931967501452, worksheet.costpercapita_at138, 0.001); end
  def test_costpercapita_cr138; assert_equal("ok", worksheet.costpercapita_cr138); end
  def test_costpercapita_a139; assert_equal("X.b", worksheet.costpercapita_a139); end
  def test_costpercapita_b139; assert_equal("Commercial lighting, appliances, and catering", worksheet.costpercapita_b139); end
  def test_costpercapita_c139; assert_equal("Buildings", worksheet.costpercapita_c139); end
  def test_costpercapita_o139; assert_in_delta(0, (worksheet.costpercapita_o139||0), 0.001); end
  def test_costpercapita_p139; assert_in_delta(0, (worksheet.costpercapita_p139||0), 0.001); end
  def test_costpercapita_q139; assert_in_delta(0, (worksheet.costpercapita_q139||0), 0.001); end
  def test_costpercapita_r139; assert_in_delta(0, (worksheet.costpercapita_r139||0), 0.001); end
  def test_costpercapita_s139; assert_in_delta(0, (worksheet.costpercapita_s139||0), 0.001); end
  def test_costpercapita_t139; assert_in_delta(0, (worksheet.costpercapita_t139||0), 0.001); end
  def test_costpercapita_u139; assert_in_delta(0, (worksheet.costpercapita_u139||0), 0.001); end
  def test_costpercapita_v139; assert_in_delta(0, (worksheet.costpercapita_v139||0), 0.001); end
  def test_costpercapita_w139; assert_in_delta(0, (worksheet.costpercapita_w139||0), 0.001); end
  def test_costpercapita_y139; assert_in_delta(0, (worksheet.costpercapita_y139||0), 0.001); end
  def test_costpercapita_z139; assert_in_delta(0, (worksheet.costpercapita_z139||0), 0.001); end
  def test_costpercapita_aa139; assert_in_delta(0, (worksheet.costpercapita_aa139||0), 0.001); end
  def test_costpercapita_ab139; assert_in_delta(0, (worksheet.costpercapita_ab139||0), 0.001); end
  def test_costpercapita_ac139; assert_in_delta(0, (worksheet.costpercapita_ac139||0), 0.001); end
  def test_costpercapita_ad139; assert_in_delta(0, (worksheet.costpercapita_ad139||0), 0.001); end
  def test_costpercapita_ae139; assert_in_delta(0, (worksheet.costpercapita_ae139||0), 0.001); end
  def test_costpercapita_af139; assert_in_delta(0, (worksheet.costpercapita_af139||0), 0.001); end
  def test_costpercapita_ag139; assert_in_delta(0, (worksheet.costpercapita_ag139||0), 0.001); end
  def test_costpercapita_av139; assert_in_delta(0, (worksheet.costpercapita_av139||0), 0.001); end
  def test_costpercapita_aw139; assert_in_epsilon(5, worksheet.costpercapita_aw139, 0.001); end
  def test_costpercapita_bt139; assert_in_epsilon(9.135788040861133, worksheet.costpercapita_bt139, 0.001); end
  def test_costpercapita_bu139; assert_in_epsilon(15.642874706614014, worksheet.costpercapita_bu139, 0.001); end
  def test_costpercapita_bv139; assert_in_epsilon(19.843104369483182, worksheet.costpercapita_bv139, 0.001); end
  def test_costpercapita_bw139; assert_in_epsilon(18.03941756934186, worksheet.costpercapita_bw139, 0.001); end
  def test_costpercapita_bx139; assert_in_epsilon(16.528585543136767, worksheet.costpercapita_bx139, 0.001); end
  def test_costpercapita_by139; assert_in_epsilon(15.241745760826909, worksheet.costpercapita_by139, 0.001); end
  def test_costpercapita_bz139; assert_in_epsilon(14.13524506992659, worksheet.costpercapita_bz139, 0.001); end
  def test_costpercapita_ca139; assert_in_epsilon(13.184113263846426, worksheet.costpercapita_ca139, 0.001); end
  def test_costpercapita_bs139; assert_in_epsilon(1.6333140886172413, worksheet.costpercapita_bs139, 0.001); end
  def test_costpercapita_cd139; assert_in_epsilon(301.4105120317817, worksheet.costpercapita_cd139, 0.001); end
  def test_costpercapita_cg139; assert_in_epsilon(-2.3590252615633163, worksheet.costpercapita_cg139, 0.001); end
  def test_costpercapita_ch139; assert_in_epsilon(5.2892123562595055, worksheet.costpercapita_ch139, 0.001); end
  def test_costpercapita_ci139; assert_in_epsilon(10.464762615114998, worksheet.costpercapita_ci139, 0.001); end
  def test_costpercapita_cj139; assert_in_epsilon(9.478664523460623, worksheet.costpercapita_cj139, 0.001); end
  def test_costpercapita_ck139; assert_in_epsilon(8.651382983923654, worksheet.costpercapita_ck139, 0.001); end
  def test_costpercapita_cl139; assert_in_epsilon(7.945799227952841, worksheet.costpercapita_cl139, 0.001); end
  def test_costpercapita_cm139; assert_in_epsilon(7.3383205804911364, worksheet.costpercapita_cm139, 0.001); end
  def test_costpercapita_cn139; assert_in_epsilon(6.815281130861078, worksheet.costpercapita_cn139, 0.001); end
  def test_costpercapita_cf139; assert_in_epsilon(-2.507724850314866, worksheet.costpercapita_cf139, 0.001); end
  def test_costpercapita_cq139; assert_in_epsilon(114.12788447968444, worksheet.costpercapita_cq139, 0.001); end
  def test_costpercapita_aj139; assert_in_epsilon(11.494813302424449, worksheet.costpercapita_aj139, 0.001); end
  def test_costpercapita_ak139; assert_in_epsilon(10.35366235035451, worksheet.costpercapita_ak139, 0.001); end
  def test_costpercapita_al139; assert_in_epsilon(9.378341754368185, worksheet.costpercapita_al139, 0.001); end
  def test_costpercapita_am139; assert_in_epsilon(8.560753045881237, worksheet.costpercapita_am139, 0.001); end
  def test_costpercapita_an139; assert_in_epsilon(7.877202559213112, worksheet.costpercapita_an139, 0.001); end
  def test_costpercapita_ao139; assert_in_epsilon(7.295946532874068, worksheet.costpercapita_ao139, 0.001); end
  def test_costpercapita_ap139; assert_in_epsilon(6.796924489435453, worksheet.costpercapita_ap139, 0.001); end
  def test_costpercapita_aq139; assert_in_epsilon(6.3688321329853474, worksheet.costpercapita_aq139, 0.001); end
  def test_costpercapita_ai139; assert_in_epsilon(4.141038938932107, worksheet.costpercapita_ai139, 0.001); end
  def test_costpercapita_at139; assert_in_epsilon(187.28262755209724, worksheet.costpercapita_at139, 0.001); end
  def test_costpercapita_cr139; assert_equal("ok", worksheet.costpercapita_cr139); end
  def test_costpercapita_a140; assert_equal("XI.a", worksheet.costpercapita_a140); end
  def test_costpercapita_b140; assert_equal("Industrial processes", worksheet.costpercapita_b140); end
  def test_costpercapita_c140; assert_equal("Industry", worksheet.costpercapita_c140); end
  def test_costpercapita_y140; assert_in_delta(0, (worksheet.costpercapita_y140||0), 0.001); end
  def test_costpercapita_z140; assert_in_delta(0, (worksheet.costpercapita_z140||0), 0.001); end
  def test_costpercapita_aa140; assert_in_delta(0, (worksheet.costpercapita_aa140||0), 0.001); end
  def test_costpercapita_ab140; assert_in_delta(0, (worksheet.costpercapita_ab140||0), 0.001); end
  def test_costpercapita_ac140; assert_in_delta(0, (worksheet.costpercapita_ac140||0), 0.001); end
  def test_costpercapita_ad140; assert_in_delta(0, (worksheet.costpercapita_ad140||0), 0.001); end
  def test_costpercapita_ae140; assert_in_delta(0, (worksheet.costpercapita_ae140||0), 0.001); end
  def test_costpercapita_af140; assert_in_delta(0, (worksheet.costpercapita_af140||0), 0.001); end
  def test_costpercapita_ag140; assert_in_delta(0, (worksheet.costpercapita_ag140||0), 0.001); end
  def test_costpercapita_av140; assert_in_delta(0, (worksheet.costpercapita_av140||0), 0.001); end
  def test_costpercapita_aw140; assert_in_epsilon(5, worksheet.costpercapita_aw140, 0.001); end
  def test_costpercapita_bt140; assert_in_epsilon(184.77931034775142, worksheet.costpercapita_bt140, 0.001); end
  def test_costpercapita_bu140; assert_in_epsilon(187.26579466757036, worksheet.costpercapita_bu140, 0.001); end
  def test_costpercapita_bv140; assert_in_epsilon(189.8040068445323, worksheet.costpercapita_bv140, 0.001); end
  def test_costpercapita_bw140; assert_in_epsilon(193.23609270829797, worksheet.costpercapita_bw140, 0.001); end
  def test_costpercapita_bx140; assert_in_epsilon(197.99869758556034, worksheet.costpercapita_bx140, 0.001); end
  def test_costpercapita_by140; assert_in_epsilon(204.47300085393013, worksheet.costpercapita_by140, 0.001); end
  def test_costpercapita_bz140; assert_in_epsilon(213.2615489569517, worksheet.costpercapita_bz140, 0.001); end
  def test_costpercapita_ca140; assert_in_epsilon(225.6152362835886, worksheet.costpercapita_ca140, 0.001); end
  def test_costpercapita_bs140; assert_in_epsilon(182.83941613200906, worksheet.costpercapita_bs140, 0.001); end
  def test_costpercapita_cd140; assert_in_epsilon(4086.471937650977, worksheet.costpercapita_cd140, 0.001); end
  def test_costpercapita_cg140; assert_in_delta(0.07620637831322544, worksheet.costpercapita_cg140, 0.001); end
  def test_costpercapita_ch140; assert_in_delta(0.9088016515730218, worksheet.costpercapita_ch140, 0.001); end
  def test_costpercapita_ci140; assert_in_epsilon(1.5625950183395108, worksheet.costpercapita_ci140, 0.001); end
  def test_costpercapita_cj140; assert_in_epsilon(1.9711177686772534, worksheet.costpercapita_cj140, 0.001); end
  def test_costpercapita_ck140; assert_in_epsilon(2.286319637700089, worksheet.costpercapita_ck140, 0.001); end
  def test_costpercapita_cl140; assert_in_epsilon(2.877000983258373, worksheet.costpercapita_cl140, 0.001); end
  def test_costpercapita_cm140; assert_in_epsilon(3.8522484437701414, worksheet.costpercapita_cm140, 0.001); end
  def test_costpercapita_cn140; assert_in_epsilon(5.454339949320194, worksheet.costpercapita_cn140, 0.001); end
  def test_costpercapita_cf140; assert_in_epsilon(-1.032395501642433, worksheet.costpercapita_cf140, 0.001); end
  def test_costpercapita_cq140; assert_in_epsilon(35.23803248106351, worksheet.costpercapita_cq140, 0.001); end
  def test_costpercapita_aj140; assert_in_epsilon(184.7031039694382, worksheet.costpercapita_aj140, 0.001); end
  def test_costpercapita_ak140; assert_in_epsilon(186.35699301599732, worksheet.costpercapita_ak140, 0.001); end
  def test_costpercapita_al140; assert_in_epsilon(188.24141182619277, worksheet.costpercapita_al140, 0.001); end
  def test_costpercapita_am140; assert_in_epsilon(191.2649749396207, worksheet.costpercapita_am140, 0.001); end
  def test_costpercapita_an140; assert_in_epsilon(195.71237794786023, worksheet.costpercapita_an140, 0.001); end
  def test_costpercapita_ao140; assert_in_epsilon(201.59599987067173, worksheet.costpercapita_ao140, 0.001); end
  def test_costpercapita_ap140; assert_in_epsilon(209.40930051318156, worksheet.costpercapita_ap140, 0.001); end
  def test_costpercapita_aq140; assert_in_epsilon(220.16089633426836, worksheet.costpercapita_aq140, 0.001); end
  def test_costpercapita_ai140; assert_in_epsilon(183.8718116336515, worksheet.costpercapita_ai140, 0.001); end
  def test_costpercapita_at140; assert_in_epsilon(4051.233905169913, worksheet.costpercapita_at140, 0.001); end
  def test_costpercapita_cr140; assert_equal("ok", worksheet.costpercapita_cr140); end
  def test_costpercapita_a141; assert_equal("XII.a.ICE", worksheet.costpercapita_a141); end
  def test_costpercapita_b141; assert_equal("Conventional cars and buses", worksheet.costpercapita_b141); end
  def test_costpercapita_c141; assert_equal("Transport", worksheet.costpercapita_c141); end
  def test_costpercapita_y141; assert_in_delta(0, (worksheet.costpercapita_y141||0), 0.001); end
  def test_costpercapita_z141; assert_in_delta(0, (worksheet.costpercapita_z141||0), 0.001); end
  def test_costpercapita_aa141; assert_in_delta(0, (worksheet.costpercapita_aa141||0), 0.001); end
  def test_costpercapita_ab141; assert_in_delta(0, (worksheet.costpercapita_ab141||0), 0.001); end
  def test_costpercapita_ac141; assert_in_delta(0, (worksheet.costpercapita_ac141||0), 0.001); end
  def test_costpercapita_ad141; assert_in_delta(0, (worksheet.costpercapita_ad141||0), 0.001); end
  def test_costpercapita_ae141; assert_in_delta(0, (worksheet.costpercapita_ae141||0), 0.001); end
  def test_costpercapita_af141; assert_in_delta(0, (worksheet.costpercapita_af141||0), 0.001); end
  def test_costpercapita_ag141; assert_in_delta(0, (worksheet.costpercapita_ag141||0), 0.001); end
  def test_costpercapita_av141; assert_in_delta(0.1, worksheet.costpercapita_av141, 0.001); end
  def test_costpercapita_aw141; assert_in_epsilon(15, worksheet.costpercapita_aw141, 0.001); end
  def test_costpercapita_bt141; assert_in_epsilon(1605.6792086175662, worksheet.costpercapita_bt141, 0.001); end
  def test_costpercapita_bu141; assert_in_epsilon(1945.6833049903064, worksheet.costpercapita_bu141, 0.001); end
  def test_costpercapita_bv141; assert_in_epsilon(1488.9751191001874, worksheet.costpercapita_bv141, 0.001); end
  def test_costpercapita_bw141; assert_in_epsilon(807.9289696933382, worksheet.costpercapita_bw141, 0.001); end
  def test_costpercapita_bx141; assert_in_epsilon(475.3010346310159, worksheet.costpercapita_bx141, 0.001); end
  def test_costpercapita_by141; assert_in_epsilon(426.83896988657744, worksheet.costpercapita_by141, 0.001); end
  def test_costpercapita_bz141; assert_in_epsilon(398.61646033751254, worksheet.costpercapita_bz141, 0.001); end
  def test_costpercapita_ca141; assert_in_epsilon(235.18047036177617, worksheet.costpercapita_ca141, 0.001); end
  def test_costpercapita_bs141; assert_in_epsilon(1200.3242367067546, worksheet.costpercapita_bs141, 0.001); end
  def test_costpercapita_cd141; assert_in_epsilon(24020.88730807116, worksheet.costpercapita_cd141, 0.001); end
  def test_costpercapita_cg141; assert_in_epsilon(67.61901426616545, worksheet.costpercapita_cg141, 0.001); end
  def test_costpercapita_ch141; assert_in_epsilon(564.147224600541, worksheet.costpercapita_ch141, 0.001); end
  def test_costpercapita_ci141; assert_in_epsilon(832.0677282897574, worksheet.costpercapita_ci141, 0.001); end
  def test_costpercapita_cj141; assert_in_epsilon(535.8957950253413, worksheet.costpercapita_cj141, 0.001); end
  def test_costpercapita_ck141; assert_in_epsilon(55.132762052655124, worksheet.costpercapita_ck141, 0.001); end
  def test_costpercapita_cl141; assert_in_epsilon(74.98458330970072, worksheet.costpercapita_cl141, 0.001); end
  def test_costpercapita_cm141; assert_in_epsilon(205.60153529869314, worksheet.costpercapita_cm141, 0.001); end
  def test_costpercapita_cn141; assert_in_epsilon(134.64156952570121, worksheet.costpercapita_cn141, 0.001); end
  def test_costpercapita_cf141; assert_in_epsilon(-518.1819764101688, worksheet.costpercapita_cf141, 0.001); end
  def test_costpercapita_cq141; assert_in_epsilon(6340.669936185917, worksheet.costpercapita_cq141, 0.001); end
  def test_costpercapita_aj141; assert_in_epsilon(1538.060194351401, worksheet.costpercapita_aj141, 0.001); end
  def test_costpercapita_ak141; assert_in_epsilon(1381.5360803897654, worksheet.costpercapita_ak141, 0.001); end
  def test_costpercapita_al141; assert_in_epsilon(656.90739081043, worksheet.costpercapita_al141, 0.001); end
  def test_costpercapita_am141; assert_in_epsilon(272.033174667997, worksheet.costpercapita_am141, 0.001); end
  def test_costpercapita_an141; assert_in_epsilon(420.1682725783608, worksheet.costpercapita_an141, 0.001); end
  def test_costpercapita_ao141; assert_in_epsilon(351.85438657687666, worksheet.costpercapita_ao141, 0.001); end
  def test_costpercapita_ap141; assert_in_epsilon(193.0149250388194, worksheet.costpercapita_ap141, 0.001); end
  def test_costpercapita_aq141; assert_in_epsilon(100.53890083607497, worksheet.costpercapita_aq141, 0.001); end
  def test_costpercapita_ai141; assert_in_epsilon(1718.5062131169234, worksheet.costpercapita_ai141, 0.001); end
  def test_costpercapita_at141; assert_in_epsilon(17680.217371885243, worksheet.costpercapita_at141, 0.001); end
  def test_costpercapita_cr141; assert_equal("ok", worksheet.costpercapita_cr141); end
  def test_costpercapita_a142; assert_equal("XII.a.HEV", worksheet.costpercapita_a142); end
  def test_costpercapita_b142; assert_equal("Hybrid cars and buses", worksheet.costpercapita_b142); end
  def test_costpercapita_c142; assert_equal("Transport", worksheet.costpercapita_c142); end
  def test_costpercapita_y142; assert_in_delta(0, (worksheet.costpercapita_y142||0), 0.001); end
  def test_costpercapita_z142; assert_in_delta(0, (worksheet.costpercapita_z142||0), 0.001); end
  def test_costpercapita_aa142; assert_in_delta(0, (worksheet.costpercapita_aa142||0), 0.001); end
  def test_costpercapita_ab142; assert_in_delta(0, (worksheet.costpercapita_ab142||0), 0.001); end
  def test_costpercapita_ac142; assert_in_delta(0, (worksheet.costpercapita_ac142||0), 0.001); end
  def test_costpercapita_ad142; assert_in_delta(0, (worksheet.costpercapita_ad142||0), 0.001); end
  def test_costpercapita_ae142; assert_in_delta(0, (worksheet.costpercapita_ae142||0), 0.001); end
  def test_costpercapita_af142; assert_in_delta(0, (worksheet.costpercapita_af142||0), 0.001); end
  def test_costpercapita_ag142; assert_in_delta(0, (worksheet.costpercapita_ag142||0), 0.001); end
  def test_costpercapita_av142; assert_in_delta(0.1, worksheet.costpercapita_av142, 0.001); end
  def test_costpercapita_aw142; assert_in_epsilon(15, worksheet.costpercapita_aw142, 0.001); end
  def test_costpercapita_bt142; assert_in_epsilon(48.238220154221, worksheet.costpercapita_bt142, 0.001); end
  def test_costpercapita_bu142; assert_in_epsilon(105.30236398706924, worksheet.costpercapita_bu142, 0.001); end
  def test_costpercapita_bv142; assert_in_epsilon(912.9234393083104, worksheet.costpercapita_bv142, 0.001); end
  def test_costpercapita_bw142; assert_in_epsilon(1780.2609789793867, worksheet.costpercapita_bw142, 0.001); end
  def test_costpercapita_bx142; assert_in_epsilon(1836.9472250999277, worksheet.costpercapita_bx142, 0.001); end
  def test_costpercapita_by142; assert_in_epsilon(1374.8111262202153, worksheet.costpercapita_by142, 0.001); end
  def test_costpercapita_bz142; assert_in_epsilon(896.218602153237, worksheet.costpercapita_bz142, 0.001); end
  def test_costpercapita_ca142; assert_in_epsilon(832.9003598369366, worksheet.costpercapita_ca142, 0.001); end
  def test_costpercapita_bs142; assert_in_epsilon(1.0365157031422538, worksheet.costpercapita_bs142, 0.001); end
  def test_costpercapita_cd142; assert_in_epsilon(16592.205386803747, worksheet.costpercapita_cd142, 0.001); end
  def test_costpercapita_cg142; assert_in_epsilon(-14.716009737739421, worksheet.costpercapita_cg142, 0.001); end
  def test_costpercapita_ch142; assert_in_epsilon(8.009451745486466, worksheet.costpercapita_ch142, 0.001); end
  def test_costpercapita_ci142; assert_in_epsilon(-215.8393214126786, worksheet.costpercapita_ci142, 0.001); end
  def test_costpercapita_cj142; assert_in_epsilon(208.4338403966052, worksheet.costpercapita_cj142, 0.001); end
  def test_costpercapita_ck142; assert_in_epsilon(1063.2812290448949, worksheet.costpercapita_ck142, 0.001); end
  def test_costpercapita_cl142; assert_in_epsilon(791.1266632505967, worksheet.costpercapita_cl142, 0.001); end
  def test_costpercapita_cm142; assert_in_epsilon(269.1568986685173, worksheet.costpercapita_cm142, 0.001); end
  def test_costpercapita_cn142; assert_in_epsilon(265.8017611447304, worksheet.costpercapita_cn142, 0.001); end
  def test_costpercapita_cf142; assert_in_delta(-0.9356353776822495, worksheet.costpercapita_cf142, 0.001); end
  def test_costpercapita_cq142; assert_in_epsilon(4269.951348741932, worksheet.costpercapita_cq142, 0.001); end
  def test_costpercapita_aj142; assert_in_epsilon(62.954229891960416, worksheet.costpercapita_aj142, 0.001); end
  def test_costpercapita_ak142; assert_in_epsilon(97.29291224158277, worksheet.costpercapita_ak142, 0.001); end
  def test_costpercapita_al142; assert_in_epsilon(1128.762760720989, worksheet.costpercapita_al142, 0.001); end
  def test_costpercapita_am142; assert_in_epsilon(1571.8271385827818, worksheet.costpercapita_am142, 0.001); end
  def test_costpercapita_an142; assert_in_epsilon(773.6659960550328, worksheet.costpercapita_an142, 0.001); end
  def test_costpercapita_ao142; assert_in_epsilon(583.6844629696185, worksheet.costpercapita_ao142, 0.001); end
  def test_costpercapita_ap142; assert_in_epsilon(627.0617034847198, worksheet.costpercapita_ap142, 0.001); end
  def test_costpercapita_aq142; assert_in_epsilon(567.0985986922062, worksheet.costpercapita_aq142, 0.001); end
  def test_costpercapita_ai142; assert_in_epsilon(1.9721510808245033, worksheet.costpercapita_ai142, 0.001); end
  def test_costpercapita_at142; assert_in_epsilon(12322.25403806182, worksheet.costpercapita_at142, 0.001); end
  def test_costpercapita_cr142; assert_equal("ok", worksheet.costpercapita_cr142); end
  def test_costpercapita_a143; assert_equal("XII.a.EV", worksheet.costpercapita_a143); end
  def test_costpercapita_b143; assert_equal("Electric cars and buses", worksheet.costpercapita_b143); end
  def test_costpercapita_c143; assert_equal("Transport", worksheet.costpercapita_c143); end
  def test_costpercapita_y143; assert_in_delta(0, (worksheet.costpercapita_y143||0), 0.001); end
  def test_costpercapita_z143; assert_in_delta(0, (worksheet.costpercapita_z143||0), 0.001); end
  def test_costpercapita_aa143; assert_in_delta(0, (worksheet.costpercapita_aa143||0), 0.001); end
  def test_costpercapita_ab143; assert_in_delta(0, (worksheet.costpercapita_ab143||0), 0.001); end
  def test_costpercapita_ac143; assert_in_delta(0, (worksheet.costpercapita_ac143||0), 0.001); end
  def test_costpercapita_ad143; assert_in_delta(0, (worksheet.costpercapita_ad143||0), 0.001); end
  def test_costpercapita_ae143; assert_in_delta(0, (worksheet.costpercapita_ae143||0), 0.001); end
  def test_costpercapita_af143; assert_in_delta(0, (worksheet.costpercapita_af143||0), 0.001); end
  def test_costpercapita_ag143; assert_in_delta(0, (worksheet.costpercapita_ag143||0), 0.001); end
  def test_costpercapita_av143; assert_in_delta(0.1, worksheet.costpercapita_av143, 0.001); end
  def test_costpercapita_aw143; assert_in_epsilon(15, worksheet.costpercapita_aw143, 0.001); end
  def test_costpercapita_bt143; assert_in_epsilon(51.73753425149304, worksheet.costpercapita_bt143, 0.001); end
  def test_costpercapita_bu143; assert_in_epsilon(112.50875448230073, worksheet.costpercapita_bu143, 0.001); end
  def test_costpercapita_bv143; assert_in_epsilon(337.45658685757024, worksheet.costpercapita_bv143, 0.001); end
  def test_costpercapita_bw143; assert_in_epsilon(555.5086136031621, worksheet.costpercapita_bw143, 0.001); end
  def test_costpercapita_bx143; assert_in_epsilon(945.1410713448811, worksheet.costpercapita_bx143, 0.001); end
  def test_costpercapita_by143; assert_in_epsilon(1247.829388005893, worksheet.costpercapita_by143, 0.001); end
  def test_costpercapita_bz143; assert_in_epsilon(1529.6113984667766, worksheet.costpercapita_bz143, 0.001); end
  def test_costpercapita_ca143; assert_in_epsilon(1672.8938386691048, worksheet.costpercapita_ca143, 0.001); end
  def test_costpercapita_bs143; assert_in_delta(0, (worksheet.costpercapita_bs143||0), 0.001); end
  def test_costpercapita_cd143; assert_in_epsilon(11810.097111851012, worksheet.costpercapita_cd143, 0.001); end
  def test_costpercapita_cg143; assert_in_epsilon(-21.01304587809704, worksheet.costpercapita_cg143, 0.001); end
  def test_costpercapita_ch143; assert_in_epsilon(11.831329588306263, worksheet.costpercapita_ch143, 0.001); end
  def test_costpercapita_ci143; assert_in_epsilon(-8.56257166957582, worksheet.costpercapita_ci143, 0.001); end
  def test_costpercapita_cj143; assert_in_epsilon(111.55661159611, worksheet.costpercapita_cj143, 0.001); end
  def test_costpercapita_ck143; assert_in_epsilon(197.5077126975263, worksheet.costpercapita_ck143, 0.001); end
  def test_costpercapita_cl143; assert_in_epsilon(364.148663608337, worksheet.costpercapita_cl143, 0.001); end
  def test_costpercapita_cm143; assert_in_epsilon(553.1312555112507, worksheet.costpercapita_cm143, 0.001); end
  def test_costpercapita_cn143; assert_in_epsilon(629.4485282667213, worksheet.costpercapita_cn143, 0.001); end
  def test_costpercapita_cf143; assert_in_delta(0, (worksheet.costpercapita_cf143||0), 0.001); end
  def test_costpercapita_cq143; assert_in_epsilon(2959.123362365459, worksheet.costpercapita_cq143, 0.001); end
  def test_costpercapita_aj143; assert_in_epsilon(72.75058012959008, worksheet.costpercapita_aj143, 0.001); end
  def test_costpercapita_ak143; assert_in_epsilon(100.67742489399447, worksheet.costpercapita_ak143, 0.001); end
  def test_costpercapita_al143; assert_in_epsilon(346.01915852714615, worksheet.costpercapita_al143, 0.001); end
  def test_costpercapita_am143; assert_in_epsilon(443.9520020070521, worksheet.costpercapita_am143, 0.001); end
  def test_costpercapita_an143; assert_in_epsilon(747.6333586473548, worksheet.costpercapita_an143, 0.001); end
  def test_costpercapita_ao143; assert_in_epsilon(883.680724397556, worksheet.costpercapita_ao143, 0.001); end
  def test_costpercapita_ap143; assert_in_epsilon(976.4801429555259, worksheet.costpercapita_ap143, 0.001); end
  def test_costpercapita_aq143; assert_in_epsilon(1043.4453104023835, worksheet.costpercapita_aq143, 0.001); end
  def test_costpercapita_ai143; assert_in_delta(0, (worksheet.costpercapita_ai143||0), 0.001); end
  def test_costpercapita_at143; assert_in_epsilon(8850.973749485553, worksheet.costpercapita_at143, 0.001); end
  def test_costpercapita_cr143; assert_equal("ok", worksheet.costpercapita_cr143); end
  def test_costpercapita_a144; assert_equal("XII.a.FCV", worksheet.costpercapita_a144); end
  def test_costpercapita_b144; assert_equal("Fuel cell cars and buses", worksheet.costpercapita_b144); end
  def test_costpercapita_c144; assert_equal("Transport", worksheet.costpercapita_c144); end
  def test_costpercapita_y144; assert_in_delta(0, (worksheet.costpercapita_y144||0), 0.001); end
  def test_costpercapita_z144; assert_in_delta(0, (worksheet.costpercapita_z144||0), 0.001); end
  def test_costpercapita_aa144; assert_in_delta(0, (worksheet.costpercapita_aa144||0), 0.001); end
  def test_costpercapita_ab144; assert_in_delta(0, (worksheet.costpercapita_ab144||0), 0.001); end
  def test_costpercapita_ac144; assert_in_delta(0, (worksheet.costpercapita_ac144||0), 0.001); end
  def test_costpercapita_ad144; assert_in_delta(0, (worksheet.costpercapita_ad144||0), 0.001); end
  def test_costpercapita_ae144; assert_in_delta(0, (worksheet.costpercapita_ae144||0), 0.001); end
  def test_costpercapita_af144; assert_in_delta(0, (worksheet.costpercapita_af144||0), 0.001); end
  def test_costpercapita_ag144; assert_in_delta(0, (worksheet.costpercapita_ag144||0), 0.001); end
  def test_costpercapita_av144; assert_in_delta(0.1, worksheet.costpercapita_av144, 0.001); end
  def test_costpercapita_aw144; assert_in_epsilon(15, worksheet.costpercapita_aw144, 0.001); end
  def test_costpercapita_bt144; assert_in_delta(0, (worksheet.costpercapita_bt144||0), 0.001); end
  def test_costpercapita_bu144; assert_in_delta(0, (worksheet.costpercapita_bu144||0), 0.001); end
  def test_costpercapita_bv144; assert_in_delta(0, (worksheet.costpercapita_bv144||0), 0.001); end
  def test_costpercapita_bw144; assert_in_delta(0, (worksheet.costpercapita_bw144||0), 0.001); end
  def test_costpercapita_bx144; assert_in_delta(0, (worksheet.costpercapita_bx144||0), 0.001); end
  def test_costpercapita_by144; assert_in_delta(0, (worksheet.costpercapita_by144||0), 0.001); end
  def test_costpercapita_bz144; assert_in_delta(0, (worksheet.costpercapita_bz144||0), 0.001); end
  def test_costpercapita_ca144; assert_in_delta(0, (worksheet.costpercapita_ca144||0), 0.001); end
  def test_costpercapita_bs144; assert_in_delta(0, (worksheet.costpercapita_bs144||0), 0.001); end
  def test_costpercapita_cd144; assert_in_delta(0, (worksheet.costpercapita_cd144||0), 0.001); end
  def test_costpercapita_cg144; assert_in_delta(0, (worksheet.costpercapita_cg144||0), 0.001); end
  def test_costpercapita_ch144; assert_in_delta(0, (worksheet.costpercapita_ch144||0), 0.001); end
  def test_costpercapita_ci144; assert_in_delta(0, (worksheet.costpercapita_ci144||0), 0.001); end
  def test_costpercapita_cj144; assert_in_delta(0, (worksheet.costpercapita_cj144||0), 0.001); end
  def test_costpercapita_ck144; assert_in_delta(0, (worksheet.costpercapita_ck144||0), 0.001); end
  def test_costpercapita_cl144; assert_in_delta(0, (worksheet.costpercapita_cl144||0), 0.001); end
  def test_costpercapita_cm144; assert_in_delta(0, (worksheet.costpercapita_cm144||0), 0.001); end
  def test_costpercapita_cn144; assert_in_delta(0, (worksheet.costpercapita_cn144||0), 0.001); end
  def test_costpercapita_cf144; assert_in_delta(0, (worksheet.costpercapita_cf144||0), 0.001); end
  def test_costpercapita_cq144; assert_in_delta(0, (worksheet.costpercapita_cq144||0), 0.001); end
  def test_costpercapita_aj144; assert_in_delta(0, (worksheet.costpercapita_aj144||0), 0.001); end
  def test_costpercapita_ak144; assert_in_delta(0, (worksheet.costpercapita_ak144||0), 0.001); end
  def test_costpercapita_al144; assert_in_delta(0, (worksheet.costpercapita_al144||0), 0.001); end
  def test_costpercapita_am144; assert_in_delta(0, (worksheet.costpercapita_am144||0), 0.001); end
  def test_costpercapita_an144; assert_in_delta(0, (worksheet.costpercapita_an144||0), 0.001); end
  def test_costpercapita_ao144; assert_in_delta(0, (worksheet.costpercapita_ao144||0), 0.001); end
  def test_costpercapita_ap144; assert_in_delta(0, (worksheet.costpercapita_ap144||0), 0.001); end
  def test_costpercapita_aq144; assert_in_delta(0, (worksheet.costpercapita_aq144||0), 0.001); end
  def test_costpercapita_ai144; assert_in_delta(0, (worksheet.costpercapita_ai144||0), 0.001); end
  def test_costpercapita_at144; assert_in_delta(0, (worksheet.costpercapita_at144||0), 0.001); end
  def test_costpercapita_cr144; assert_equal("ok", worksheet.costpercapita_cr144); end
  def test_costpercapita_a145; assert_equal("XII.a.Bike", worksheet.costpercapita_a145); end
  def test_costpercapita_b145; assert_equal("Bikes", worksheet.costpercapita_b145); end
  def test_costpercapita_c145; assert_equal("Transport", worksheet.costpercapita_c145); end
  def test_costpercapita_e145; assert_in_epsilon(14.66818348062713, worksheet.costpercapita_e145, 0.001); end
  def test_costpercapita_o145; assert_in_epsilon(12.000000000000002, worksheet.costpercapita_o145, 0.001); end
  def test_costpercapita_y145; assert_in_delta(0, (worksheet.costpercapita_y145||0), 0.001); end
  def test_costpercapita_z145; assert_in_delta(0, (worksheet.costpercapita_z145||0), 0.001); end
  def test_costpercapita_aa145; assert_in_delta(0, (worksheet.costpercapita_aa145||0), 0.001); end
  def test_costpercapita_ab145; assert_in_delta(0, (worksheet.costpercapita_ab145||0), 0.001); end
  def test_costpercapita_ac145; assert_in_delta(0, (worksheet.costpercapita_ac145||0), 0.001); end
  def test_costpercapita_ad145; assert_in_delta(0, (worksheet.costpercapita_ad145||0), 0.001); end
  def test_costpercapita_ae145; assert_in_delta(0, (worksheet.costpercapita_ae145||0), 0.001); end
  def test_costpercapita_af145; assert_in_delta(0, (worksheet.costpercapita_af145||0), 0.001); end
  def test_costpercapita_ag145; assert_in_delta(0, (worksheet.costpercapita_ag145||0), 0.001); end
  def test_costpercapita_ai145; assert_in_epsilon(26.668183480627132, worksheet.costpercapita_ai145, 0.001); end
  def test_costpercapita_av145; assert_in_delta(0.1, worksheet.costpercapita_av145, 0.001); end
  def test_costpercapita_aw145; assert_in_epsilon(5, worksheet.costpercapita_aw145, 0.001); end
  def test_costpercapita_ay145; assert_in_epsilon(11.60828955007361, worksheet.costpercapita_ay145, 0.001); end
  def test_costpercapita_bi145; assert_in_epsilon(11.60828955007361, worksheet.costpercapita_bi145, 0.001); end
  def test_costpercapita_bs145; assert_in_epsilon(23.60828955007361, worksheet.costpercapita_bs145, 0.001); end
  def test_costpercapita_cf145; assert_in_epsilon(-3.0598939305535184, worksheet.costpercapita_cf145, 0.001); end
  def test_costpercapita_bt145; assert_in_epsilon(43.6814630935186, worksheet.costpercapita_bt145, 0.001); end
  def test_costpercapita_bu145; assert_in_epsilon(60.424128239227954, worksheet.costpercapita_bu145, 0.001); end
  def test_costpercapita_bv145; assert_in_epsilon(73.71870905727418, worksheet.costpercapita_bv145, 0.001); end
  def test_costpercapita_bw145; assert_in_epsilon(89.37497982508386, worksheet.costpercapita_bw145, 0.001); end
  def test_costpercapita_bx145; assert_in_epsilon(106.50792225786297, worksheet.costpercapita_bx145, 0.001); end
  def test_costpercapita_by145; assert_in_epsilon(125.16125138933647, worksheet.costpercapita_by145, 0.001); end
  def test_costpercapita_bz145; assert_in_epsilon(145.33056362422596, worksheet.costpercapita_bz145, 0.001); end
  def test_costpercapita_ca145; assert_in_epsilon(166.99616628875722, worksheet.costpercapita_ca145, 0.001); end
  def test_costpercapita_cd145; assert_in_epsilon(1759.256953799072, worksheet.costpercapita_cd145, 0.001); end
  def test_costpercapita_cg145; assert_in_epsilon(6.8305947714044395, worksheet.costpercapita_cg145, 0.001); end
  def test_costpercapita_ch145; assert_in_epsilon(9.691914426638602, worksheet.costpercapita_ch145, 0.001); end
  def test_costpercapita_ci145; assert_in_epsilon(11.922867703482957, worksheet.costpercapita_ci145, 0.001); end
  def test_costpercapita_cj145; assert_in_epsilon(14.64061461332691, worksheet.costpercapita_cj145, 0.001); end
  def test_costpercapita_ck145; assert_in_epsilon(17.63111999231282, worksheet.costpercapita_ck145, 0.001); end
  def test_costpercapita_cl145; assert_in_epsilon(20.90495599987184, worksheet.costpercapita_cl145, 0.001); end
  def test_costpercapita_cm145; assert_in_epsilon(24.46105765886944, worksheet.costpercapita_cm145, 0.001); end
  def test_costpercapita_cn145; assert_in_epsilon(28.29466244097093, worksheet.costpercapita_cn145, 0.001); end
  def test_costpercapita_cq145; assert_in_epsilon(282.0583753199693, worksheet.costpercapita_cq145, 0.001); end
  def test_costpercapita_aj145; assert_in_epsilon(36.85086832211416, worksheet.costpercapita_aj145, 0.001); end
  def test_costpercapita_ak145; assert_in_epsilon(50.73221381258936, worksheet.costpercapita_ak145, 0.001); end
  def test_costpercapita_al145; assert_in_epsilon(61.79584135379122, worksheet.costpercapita_al145, 0.001); end
  def test_costpercapita_am145; assert_in_epsilon(74.73436521175694, worksheet.costpercapita_am145, 0.001); end
  def test_costpercapita_an145; assert_in_epsilon(88.87680226555015, worksheet.costpercapita_an145, 0.001); end
  def test_costpercapita_ao145; assert_in_epsilon(104.25629538946461, worksheet.costpercapita_ao145, 0.001); end
  def test_costpercapita_ap145; assert_in_epsilon(120.86950596535651, worksheet.costpercapita_ap145, 0.001); end
  def test_costpercapita_aq145; assert_in_epsilon(138.7015038477863, worksheet.costpercapita_aq145, 0.001); end
  def test_costpercapita_at145; assert_in_epsilon(1477.1985784791025, worksheet.costpercapita_at145, 0.001); end
  def test_costpercapita_cr145; assert_equal("ok", worksheet.costpercapita_cr145); end
  def test_costpercapita_a146; assert_equal("XII.a.Rail", worksheet.costpercapita_a146); end
  def test_costpercapita_b146; assert_equal("Rail", worksheet.costpercapita_b146); end
  def test_costpercapita_c146; assert_equal("Transport", worksheet.costpercapita_c146); end
  def test_costpercapita_y146; assert_in_delta(0, (worksheet.costpercapita_y146||0), 0.001); end
  def test_costpercapita_z146; assert_in_delta(0, (worksheet.costpercapita_z146||0), 0.001); end
  def test_costpercapita_aa146; assert_in_delta(0, (worksheet.costpercapita_aa146||0), 0.001); end
  def test_costpercapita_ab146; assert_in_delta(0, (worksheet.costpercapita_ab146||0), 0.001); end
  def test_costpercapita_ac146; assert_in_delta(0, (worksheet.costpercapita_ac146||0), 0.001); end
  def test_costpercapita_ad146; assert_in_delta(0, (worksheet.costpercapita_ad146||0), 0.001); end
  def test_costpercapita_ae146; assert_in_delta(0, (worksheet.costpercapita_ae146||0), 0.001); end
  def test_costpercapita_af146; assert_in_delta(0, (worksheet.costpercapita_af146||0), 0.001); end
  def test_costpercapita_ag146; assert_in_delta(0, (worksheet.costpercapita_ag146||0), 0.001); end
  def test_costpercapita_av146; assert_in_delta(0.1, worksheet.costpercapita_av146, 0.001); end
  def test_costpercapita_aw146; assert_in_epsilon(30, worksheet.costpercapita_aw146, 0.001); end
  def test_costpercapita_bt146; assert_in_epsilon(162.36811145736783, worksheet.costpercapita_bt146, 0.001); end
  def test_costpercapita_bu146; assert_in_epsilon(179.02248769579512, worksheet.costpercapita_bu146, 0.001); end
  def test_costpercapita_bv146; assert_in_epsilon(194.5355563144517, worksheet.costpercapita_bv146, 0.001); end
  def test_costpercapita_bw146; assert_in_epsilon(209.28856696202374, worksheet.costpercapita_bw146, 0.001); end
  def test_costpercapita_bx146; assert_in_epsilon(223.06523733776942, worksheet.costpercapita_bx146, 0.001); end
  def test_costpercapita_by146; assert_in_epsilon(235.27042242356254, worksheet.costpercapita_by146, 0.001); end
  def test_costpercapita_bz146; assert_in_epsilon(247.8072507868332, worksheet.costpercapita_bz146, 0.001); end
  def test_costpercapita_ca146; assert_in_epsilon(257.2818336987287, worksheet.costpercapita_ca146, 0.001); end
  def test_costpercapita_bs146; assert_in_epsilon(145.13120205195497, worksheet.costpercapita_bs146, 0.001); end
  def test_costpercapita_cd146; assert_in_epsilon(4182.610322486021, worksheet.costpercapita_cd146, 0.001); end
  def test_costpercapita_cg146; assert_in_delta(-0.4923924863087982, worksheet.costpercapita_cg146, 0.001); end
  def test_costpercapita_ch146; assert_in_delta(0.4981587028114325, worksheet.costpercapita_ch146, 0.001); end
  def test_costpercapita_ci146; assert_in_epsilon(2.334589997932657, worksheet.costpercapita_ci146, 0.001); end
  def test_costpercapita_cj146; assert_in_epsilon(3.677302449790925, worksheet.costpercapita_cj146, 0.001); end
  def test_costpercapita_ck146; assert_in_epsilon(5.409432169871528, worksheet.costpercapita_ck146, 0.001); end
  def test_costpercapita_cl146; assert_in_epsilon(6.376448303919821, worksheet.costpercapita_cl146, 0.001); end
  def test_costpercapita_cm146; assert_in_epsilon(8.619484316352914, worksheet.costpercapita_cm146, 0.001); end
  def test_costpercapita_cn146; assert_in_epsilon(8.755211741499616, worksheet.costpercapita_cn146, 0.001); end
  def test_costpercapita_cf146; assert_in_epsilon(-1.697765099117183, worksheet.costpercapita_cf146, 0.001); end
  def test_costpercapita_cq146; assert_in_epsilon(61.85720313601816, worksheet.costpercapita_cq146, 0.001); end
  def test_costpercapita_aj146; assert_in_epsilon(162.86050394367663, worksheet.costpercapita_aj146, 0.001); end
  def test_costpercapita_ak146; assert_in_epsilon(178.5243289929837, worksheet.costpercapita_ak146, 0.001); end
  def test_costpercapita_al146; assert_in_epsilon(192.20096631651901, worksheet.costpercapita_al146, 0.001); end
  def test_costpercapita_am146; assert_in_epsilon(205.6112645122328, worksheet.costpercapita_am146, 0.001); end
  def test_costpercapita_an146; assert_in_epsilon(217.6558051678979, worksheet.costpercapita_an146, 0.001); end
  def test_costpercapita_ao146; assert_in_epsilon(228.8939741196427, worksheet.costpercapita_ao146, 0.001); end
  def test_costpercapita_ap146; assert_in_epsilon(239.1877664704803, worksheet.costpercapita_ap146, 0.001); end
  def test_costpercapita_aq146; assert_in_epsilon(248.52662195722905, worksheet.costpercapita_aq146, 0.001); end
  def test_costpercapita_ai146; assert_in_epsilon(146.82896715107213, worksheet.costpercapita_ai146, 0.001); end
  def test_costpercapita_at146; assert_in_epsilon(4120.7531193500035, worksheet.costpercapita_at146, 0.001); end
  def test_costpercapita_cr146; assert_equal("ok", worksheet.costpercapita_cr146); end
  def test_costpercapita_a147; assert_equal("XII.a.Air", worksheet.costpercapita_a147); end
  def test_costpercapita_b147; assert_equal("Domestic aviation", worksheet.costpercapita_b147); end
  def test_costpercapita_c147; assert_equal("Transport", worksheet.costpercapita_c147); end
  def test_costpercapita_y147; assert_in_delta(0, (worksheet.costpercapita_y147||0), 0.001); end
  def test_costpercapita_z147; assert_in_delta(0, (worksheet.costpercapita_z147||0), 0.001); end
  def test_costpercapita_aa147; assert_in_delta(0, (worksheet.costpercapita_aa147||0), 0.001); end
  def test_costpercapita_ab147; assert_in_delta(0, (worksheet.costpercapita_ab147||0), 0.001); end
  def test_costpercapita_ac147; assert_in_delta(0, (worksheet.costpercapita_ac147||0), 0.001); end
  def test_costpercapita_ad147; assert_in_delta(0, (worksheet.costpercapita_ad147||0), 0.001); end
  def test_costpercapita_ae147; assert_in_delta(0, (worksheet.costpercapita_ae147||0), 0.001); end
  def test_costpercapita_af147; assert_in_delta(0, (worksheet.costpercapita_af147||0), 0.001); end
  def test_costpercapita_ag147; assert_in_delta(0, (worksheet.costpercapita_ag147||0), 0.001); end
  def test_costpercapita_av147; assert_in_delta(0.1, worksheet.costpercapita_av147, 0.001); end
  def test_costpercapita_aw147; assert_in_epsilon(30, worksheet.costpercapita_aw147, 0.001); end
  def test_costpercapita_bt147; assert_in_epsilon(5.660798139928166, worksheet.costpercapita_bt147, 0.001); end
  def test_costpercapita_bu147; assert_in_epsilon(6.55297743736143, worksheet.costpercapita_bu147, 0.001); end
  def test_costpercapita_bv147; assert_in_epsilon(7.211510371409194, worksheet.costpercapita_bv147, 0.001); end
  def test_costpercapita_bw147; assert_in_epsilon(7.652480534945759, worksheet.costpercapita_bw147, 0.001); end
  def test_costpercapita_bx147; assert_in_epsilon(7.903888057608106, worksheet.costpercapita_bx147, 0.001); end
  def test_costpercapita_by147; assert_in_epsilon(7.161474398137777, worksheet.costpercapita_by147, 0.001); end
  def test_costpercapita_bz147; assert_in_epsilon(6.650109384653927, worksheet.costpercapita_bz147, 0.001); end
  def test_costpercapita_ca147; assert_in_epsilon(5.379424007697033, worksheet.costpercapita_ca147, 0.001); end
  def test_costpercapita_bs147; assert_in_epsilon(4.526006927879419, worksheet.costpercapita_bs147, 0.001); end
  def test_costpercapita_cd147; assert_in_epsilon(139.1659747432814, worksheet.costpercapita_cd147, 0.001); end
  def test_costpercapita_cg147; assert_in_delta(-0.36235176770377436, worksheet.costpercapita_cg147, 0.001); end
  def test_costpercapita_ch147; assert_in_epsilon(1.2274429118358634, worksheet.costpercapita_ch147, 0.001); end
  def test_costpercapita_ci147; assert_in_epsilon(2.5826272241515826, worksheet.costpercapita_ci147, 0.001); end
  def test_costpercapita_cj147; assert_in_epsilon(3.7161511545526045, worksheet.costpercapita_cj147, 0.001); end
  def test_costpercapita_ck147; assert_in_epsilon(4.620395063024187, worksheet.costpercapita_ck147, 0.001); end
  def test_costpercapita_cl147; assert_in_epsilon(4.469625546680229, worksheet.costpercapita_cl147, 0.001); end
  def test_costpercapita_cm147; assert_in_epsilon(4.504998575330945, worksheet.costpercapita_cm147, 0.001); end
  def test_costpercapita_cn147; assert_in_epsilon(3.7481356674654966, worksheet.costpercapita_cn147, 0.001); end
  def test_costpercapita_cf147; assert_in_epsilon(-2.1132618726299643, worksheet.costpercapita_cf147, 0.001); end
  def test_costpercapita_cq147; assert_in_epsilon(47.38636412826288, worksheet.costpercapita_cq147, 0.001); end
  def test_costpercapita_aj147; assert_in_epsilon(6.0231499076319395, worksheet.costpercapita_aj147, 0.001); end
  def test_costpercapita_ak147; assert_in_epsilon(5.325534525525567, worksheet.costpercapita_ak147, 0.001); end
  def test_costpercapita_al147; assert_in_epsilon(4.628883147257611, worksheet.costpercapita_al147, 0.001); end
  def test_costpercapita_am147; assert_in_epsilon(3.936329380393156, worksheet.costpercapita_am147, 0.001); end
  def test_costpercapita_an147; assert_in_epsilon(3.2834929945839195, worksheet.costpercapita_an147, 0.001); end
  def test_costpercapita_ao147; assert_in_epsilon(2.691848851457548, worksheet.costpercapita_ao147, 0.001); end
  def test_costpercapita_ap147; assert_in_epsilon(2.1451108093229814, worksheet.costpercapita_ap147, 0.001); end
  def test_costpercapita_aq147; assert_in_epsilon(1.631288340231537, worksheet.costpercapita_aq147, 0.001); end
  def test_costpercapita_ai147; assert_in_epsilon(6.639268800509384, worksheet.costpercapita_ai147, 0.001); end
  def test_costpercapita_at147; assert_in_epsilon(91.7796106150185, worksheet.costpercapita_at147, 0.001); end
  def test_costpercapita_cr147; assert_equal("ok", worksheet.costpercapita_cr147); end
  def test_costpercapita_a148; assert_equal("XII.b", worksheet.costpercapita_a148); end
  def test_costpercapita_b148; assert_equal("Domestic freight", worksheet.costpercapita_b148); end
  def test_costpercapita_c148; assert_equal("Transport", worksheet.costpercapita_c148); end
  def test_costpercapita_y148; assert_in_delta(0, (worksheet.costpercapita_y148||0), 0.001); end
  def test_costpercapita_z148; assert_in_delta(0, (worksheet.costpercapita_z148||0), 0.001); end
  def test_costpercapita_aa148; assert_in_delta(0, (worksheet.costpercapita_aa148||0), 0.001); end
  def test_costpercapita_ab148; assert_in_delta(0, (worksheet.costpercapita_ab148||0), 0.001); end
  def test_costpercapita_ac148; assert_in_delta(0, (worksheet.costpercapita_ac148||0), 0.001); end
  def test_costpercapita_ad148; assert_in_delta(0, (worksheet.costpercapita_ad148||0), 0.001); end
  def test_costpercapita_ae148; assert_in_delta(0, (worksheet.costpercapita_ae148||0), 0.001); end
  def test_costpercapita_af148; assert_in_delta(0, (worksheet.costpercapita_af148||0), 0.001); end
  def test_costpercapita_ag148; assert_in_delta(0, (worksheet.costpercapita_ag148||0), 0.001); end
  def test_costpercapita_av148; assert_in_delta(0.1, worksheet.costpercapita_av148, 0.001); end
  def test_costpercapita_aw148; assert_in_epsilon(10, worksheet.costpercapita_aw148, 0.001); end
  def test_costpercapita_bt148; assert_in_epsilon(193.68461952982298, worksheet.costpercapita_bt148, 0.001); end
  def test_costpercapita_bu148; assert_in_epsilon(214.14875657171413, worksheet.costpercapita_bu148, 0.001); end
  def test_costpercapita_bv148; assert_in_epsilon(196.14305281573206, worksheet.costpercapita_bv148, 0.001); end
  def test_costpercapita_bw148; assert_in_epsilon(183.4083307004681, worksheet.costpercapita_bw148, 0.001); end
  def test_costpercapita_bx148; assert_in_epsilon(172.11752316522598, worksheet.costpercapita_bx148, 0.001); end
  def test_costpercapita_by148; assert_in_epsilon(169.01217211671127, worksheet.costpercapita_by148, 0.001); end
  def test_costpercapita_bz148; assert_in_epsilon(194.406636272914, worksheet.costpercapita_bz148, 0.001); end
  def test_costpercapita_ca148; assert_in_epsilon(229.94850783541858, worksheet.costpercapita_ca148, 0.001); end
  def test_costpercapita_bs148; assert_in_epsilon(120.17391843318693, worksheet.costpercapita_bs148, 0.001); end
  def test_costpercapita_cd148; assert_in_epsilon(4009.6520907137306, worksheet.costpercapita_cd148, 0.001); end
  def test_costpercapita_cg148; assert_in_epsilon(10.49495625454766, worksheet.costpercapita_cg148, 0.001); end
  def test_costpercapita_ch148; assert_in_epsilon(47.82195970574058, worksheet.costpercapita_ch148, 0.001); end
  def test_costpercapita_ci148; assert_in_epsilon(41.064698712244855, worksheet.costpercapita_ci148, 0.001); end
  def test_costpercapita_cj148; assert_in_epsilon(38.296954096349616, worksheet.costpercapita_cj148, 0.001); end
  def test_costpercapita_ck148; assert_in_epsilon(35.93534300917342, worksheet.costpercapita_ck148, 0.001); end
  def test_costpercapita_cl148; assert_in_epsilon(32.225880045862944, worksheet.costpercapita_cl148, 0.001); end
  def test_costpercapita_cm148; assert_in_epsilon(30.869259565879897, worksheet.costpercapita_cm148, 0.001); end
  def test_costpercapita_cn148; assert_in_epsilon(51.36423556145342, worksheet.costpercapita_cn148, 0.001); end
  def test_costpercapita_cf148; assert_in_epsilon(-26.83197270472006, worksheet.costpercapita_cf148, 0.001); end
  def test_costpercapita_cq148; assert_in_epsilon(654.6053383383306, worksheet.costpercapita_cq148, 0.001); end
  def test_costpercapita_aj148; assert_in_epsilon(183.1896632752753, worksheet.costpercapita_aj148, 0.001); end
  def test_costpercapita_ak148; assert_in_epsilon(166.32679686597356, worksheet.costpercapita_ak148, 0.001); end
  def test_costpercapita_al148; assert_in_epsilon(155.07835410348721, worksheet.costpercapita_al148, 0.001); end
  def test_costpercapita_am148; assert_in_epsilon(145.11137660411848, worksheet.costpercapita_am148, 0.001); end
  def test_costpercapita_an148; assert_in_epsilon(136.18218015605257, worksheet.costpercapita_an148, 0.001); end
  def test_costpercapita_ao148; assert_in_epsilon(136.7862920708483, worksheet.costpercapita_ao148, 0.001); end
  def test_costpercapita_ap148; assert_in_epsilon(163.53737670703413, worksheet.costpercapita_ap148, 0.001); end
  def test_costpercapita_aq148; assert_in_epsilon(178.58427227396518, worksheet.costpercapita_aq148, 0.001); end
  def test_costpercapita_ai148; assert_in_epsilon(147.00589113790699, worksheet.costpercapita_ai148, 0.001); end
  def test_costpercapita_at148; assert_in_epsilon(3355.0467523754, worksheet.costpercapita_at148, 0.001); end
  def test_costpercapita_cr148; assert_equal("ok", worksheet.costpercapita_cr148); end
  def test_costpercapita_a149; assert_equal("XII.c", worksheet.costpercapita_a149); end
  def test_costpercapita_b149; assert_equal("International aviation", worksheet.costpercapita_b149); end
  def test_costpercapita_c149; assert_equal("Transport", worksheet.costpercapita_c149); end
  def test_costpercapita_e149; assert_in_delta(0, (worksheet.costpercapita_e149||0), 0.001); end
  def test_costpercapita_f149; assert_in_delta(0, (worksheet.costpercapita_f149||0), 0.001); end
  def test_costpercapita_g149; assert_in_delta(0, (worksheet.costpercapita_g149||0), 0.001); end
  def test_costpercapita_h149; assert_in_delta(0, (worksheet.costpercapita_h149||0), 0.001); end
  def test_costpercapita_i149; assert_in_delta(0, (worksheet.costpercapita_i149||0), 0.001); end
  def test_costpercapita_j149; assert_in_delta(0, (worksheet.costpercapita_j149||0), 0.001); end
  def test_costpercapita_k149; assert_in_delta(0, (worksheet.costpercapita_k149||0), 0.001); end
  def test_costpercapita_l149; assert_in_delta(0, (worksheet.costpercapita_l149||0), 0.001); end
  def test_costpercapita_m149; assert_in_delta(0, (worksheet.costpercapita_m149||0), 0.001); end
  def test_costpercapita_y149; assert_in_delta(0, (worksheet.costpercapita_y149||0), 0.001); end
  def test_costpercapita_z149; assert_in_delta(0, (worksheet.costpercapita_z149||0), 0.001); end
  def test_costpercapita_aa149; assert_in_delta(0, (worksheet.costpercapita_aa149||0), 0.001); end
  def test_costpercapita_ab149; assert_in_delta(0, (worksheet.costpercapita_ab149||0), 0.001); end
  def test_costpercapita_ac149; assert_in_delta(0, (worksheet.costpercapita_ac149||0), 0.001); end
  def test_costpercapita_ad149; assert_in_delta(0, (worksheet.costpercapita_ad149||0), 0.001); end
  def test_costpercapita_ae149; assert_in_delta(0, (worksheet.costpercapita_ae149||0), 0.001); end
  def test_costpercapita_af149; assert_in_delta(0, (worksheet.costpercapita_af149||0), 0.001); end
  def test_costpercapita_ag149; assert_in_delta(0, (worksheet.costpercapita_ag149||0), 0.001); end
  def test_costpercapita_av149; assert_in_delta(0.1, worksheet.costpercapita_av149, 0.001); end
  def test_costpercapita_aw149; assert_in_epsilon(15, worksheet.costpercapita_aw149, 0.001); end
  def test_costpercapita_ay149; assert_in_delta(0, (worksheet.costpercapita_ay149||0), 0.001); end
  def test_costpercapita_az149; assert_in_delta(0, (worksheet.costpercapita_az149||0), 0.001); end
  def test_costpercapita_ba149; assert_in_delta(0, (worksheet.costpercapita_ba149||0), 0.001); end
  def test_costpercapita_bb149; assert_in_delta(0, (worksheet.costpercapita_bb149||0), 0.001); end
  def test_costpercapita_bc149; assert_in_delta(0, (worksheet.costpercapita_bc149||0), 0.001); end
  def test_costpercapita_bd149; assert_in_delta(0, (worksheet.costpercapita_bd149||0), 0.001); end
  def test_costpercapita_be149; assert_in_delta(0, (worksheet.costpercapita_be149||0), 0.001); end
  def test_costpercapita_bf149; assert_in_delta(0, (worksheet.costpercapita_bf149||0), 0.001); end
  def test_costpercapita_bg149; assert_in_delta(0, (worksheet.costpercapita_bg149||0), 0.001); end
  def test_costpercapita_bi149; assert_in_delta(0, (worksheet.costpercapita_bi149||0), 0.001); end
  def test_costpercapita_bj149; assert_in_delta(0, (worksheet.costpercapita_bj149||0), 0.001); end
  def test_costpercapita_bk149; assert_in_delta(0, (worksheet.costpercapita_bk149||0), 0.001); end
  def test_costpercapita_bl149; assert_in_delta(0, (worksheet.costpercapita_bl149||0), 0.001); end
  def test_costpercapita_bm149; assert_in_delta(0, (worksheet.costpercapita_bm149||0), 0.001); end
  def test_costpercapita_bn149; assert_in_delta(0, (worksheet.costpercapita_bn149||0), 0.001); end
  def test_costpercapita_bo149; assert_in_delta(0, (worksheet.costpercapita_bo149||0), 0.001); end
  def test_costpercapita_bp149; assert_in_delta(0, (worksheet.costpercapita_bp149||0), 0.001); end
  def test_costpercapita_bq149; assert_in_delta(0, (worksheet.costpercapita_bq149||0), 0.001); end
  def test_costpercapita_cf149; assert_in_delta(0, (worksheet.costpercapita_cf149||0), 0.001); end
  def test_costpercapita_cg149; assert_in_delta(0, (worksheet.costpercapita_cg149||0), 0.001); end
  def test_costpercapita_ch149; assert_in_delta(0, (worksheet.costpercapita_ch149||0), 0.001); end
  def test_costpercapita_ci149; assert_in_delta(0, (worksheet.costpercapita_ci149||0), 0.001); end
  def test_costpercapita_cj149; assert_in_delta(0, (worksheet.costpercapita_cj149||0), 0.001); end
  def test_costpercapita_ck149; assert_in_delta(0, (worksheet.costpercapita_ck149||0), 0.001); end
  def test_costpercapita_cl149; assert_in_delta(0, (worksheet.costpercapita_cl149||0), 0.001); end
  def test_costpercapita_cm149; assert_in_delta(0, (worksheet.costpercapita_cm149||0), 0.001); end
  def test_costpercapita_cn149; assert_in_delta(0, (worksheet.costpercapita_cn149||0), 0.001); end
  def test_costpercapita_cp149; assert_in_delta(0, (worksheet.costpercapita_cp149||0), 0.001); end
  def test_costpercapita_cq149; assert_in_delta(0, (worksheet.costpercapita_cq149||0), 0.001); end
  def test_costpercapita_bt149; assert_in_epsilon(16.995264105403493, worksheet.costpercapita_bt149, 0.001); end
  def test_costpercapita_bu149; assert_in_epsilon(51.260272035079076, worksheet.costpercapita_bu149, 0.001); end
  def test_costpercapita_bv149; assert_in_epsilon(67.40076500279213, worksheet.costpercapita_bv149, 0.001); end
  def test_costpercapita_bw149; assert_in_epsilon(73.70808659252967, worksheet.costpercapita_bw149, 0.001); end
  def test_costpercapita_bx149; assert_in_epsilon(167.70067583437094, worksheet.costpercapita_bx149, 0.001); end
  def test_costpercapita_by149; assert_in_epsilon(152.95641381148806, worksheet.costpercapita_by149, 0.001); end
  def test_costpercapita_bz149; assert_in_epsilon(230.55154071212598, worksheet.costpercapita_bz149, 0.001); end
  def test_costpercapita_ca149; assert_in_epsilon(159.1471315602158, worksheet.costpercapita_ca149, 0.001); end
  def test_costpercapita_bs149; assert_in_epsilon(-10.295675329529756, worksheet.costpercapita_bs149, 0.001); end
  def test_costpercapita_cd149; assert_in_epsilon(1821.833676009623, worksheet.costpercapita_cd149, 0.001); end
  def test_costpercapita_aj149; assert_in_epsilon(16.995264105403493, worksheet.costpercapita_aj149, 0.001); end
  def test_costpercapita_ak149; assert_in_epsilon(51.260272035079076, worksheet.costpercapita_ak149, 0.001); end
  def test_costpercapita_al149; assert_in_epsilon(67.40076500279213, worksheet.costpercapita_al149, 0.001); end
  def test_costpercapita_am149; assert_in_epsilon(73.70808659252967, worksheet.costpercapita_am149, 0.001); end
  def test_costpercapita_an149; assert_in_epsilon(167.70067583437094, worksheet.costpercapita_an149, 0.001); end
  def test_costpercapita_ao149; assert_in_epsilon(152.95641381148806, worksheet.costpercapita_ao149, 0.001); end
  def test_costpercapita_ap149; assert_in_epsilon(230.55154071212598, worksheet.costpercapita_ap149, 0.001); end
  def test_costpercapita_aq149; assert_in_epsilon(159.1471315602158, worksheet.costpercapita_aq149, 0.001); end
  def test_costpercapita_ai149; assert_in_epsilon(-10.295675329529756, worksheet.costpercapita_ai149, 0.001); end
  def test_costpercapita_at149; assert_in_epsilon(1821.833676009623, worksheet.costpercapita_at149, 0.001); end
  def test_costpercapita_cr149; assert_equal("ok", worksheet.costpercapita_cr149); end
  def test_costpercapita_a150; assert_equal("XII.e", worksheet.costpercapita_a150); end
  def test_costpercapita_b150; assert_equal("International shipping (maritime bunkers)", worksheet.costpercapita_b150); end
  def test_costpercapita_c150; assert_equal("Transport", worksheet.costpercapita_c150); end
  def test_costpercapita_e150; assert_in_delta(0, (worksheet.costpercapita_e150||0), 0.001); end
  def test_costpercapita_f150; assert_in_delta(0, (worksheet.costpercapita_f150||0), 0.001); end
  def test_costpercapita_g150; assert_in_delta(0, (worksheet.costpercapita_g150||0), 0.001); end
  def test_costpercapita_h150; assert_in_delta(0, (worksheet.costpercapita_h150||0), 0.001); end
  def test_costpercapita_i150; assert_in_delta(0, (worksheet.costpercapita_i150||0), 0.001); end
  def test_costpercapita_j150; assert_in_delta(0, (worksheet.costpercapita_j150||0), 0.001); end
  def test_costpercapita_k150; assert_in_delta(0, (worksheet.costpercapita_k150||0), 0.001); end
  def test_costpercapita_l150; assert_in_delta(0, (worksheet.costpercapita_l150||0), 0.001); end
  def test_costpercapita_m150; assert_in_delta(0, (worksheet.costpercapita_m150||0), 0.001); end
  def test_costpercapita_y150; assert_in_delta(0, (worksheet.costpercapita_y150||0), 0.001); end
  def test_costpercapita_z150; assert_in_delta(0, (worksheet.costpercapita_z150||0), 0.001); end
  def test_costpercapita_aa150; assert_in_delta(0, (worksheet.costpercapita_aa150||0), 0.001); end
  def test_costpercapita_ab150; assert_in_delta(0, (worksheet.costpercapita_ab150||0), 0.001); end
  def test_costpercapita_ac150; assert_in_delta(0, (worksheet.costpercapita_ac150||0), 0.001); end
  def test_costpercapita_ad150; assert_in_delta(0, (worksheet.costpercapita_ad150||0), 0.001); end
  def test_costpercapita_ae150; assert_in_delta(0, (worksheet.costpercapita_ae150||0), 0.001); end
  def test_costpercapita_af150; assert_in_delta(0, (worksheet.costpercapita_af150||0), 0.001); end
  def test_costpercapita_ag150; assert_in_delta(0, (worksheet.costpercapita_ag150||0), 0.001); end
  def test_costpercapita_av150; assert_in_delta(0.1, worksheet.costpercapita_av150, 0.001); end
  def test_costpercapita_aw150; assert_in_epsilon(15, worksheet.costpercapita_aw150, 0.001); end
  def test_costpercapita_ay150; assert_in_delta(0, (worksheet.costpercapita_ay150||0), 0.001); end
  def test_costpercapita_az150; assert_in_delta(0, (worksheet.costpercapita_az150||0), 0.001); end
  def test_costpercapita_ba150; assert_in_delta(0, (worksheet.costpercapita_ba150||0), 0.001); end
  def test_costpercapita_bb150; assert_in_delta(0, (worksheet.costpercapita_bb150||0), 0.001); end
  def test_costpercapita_bc150; assert_in_delta(0, (worksheet.costpercapita_bc150||0), 0.001); end
  def test_costpercapita_bd150; assert_in_delta(0, (worksheet.costpercapita_bd150||0), 0.001); end
  def test_costpercapita_be150; assert_in_delta(0, (worksheet.costpercapita_be150||0), 0.001); end
  def test_costpercapita_bf150; assert_in_delta(0, (worksheet.costpercapita_bf150||0), 0.001); end
  def test_costpercapita_bg150; assert_in_delta(0, (worksheet.costpercapita_bg150||0), 0.001); end
  def test_costpercapita_bi150; assert_in_delta(0, (worksheet.costpercapita_bi150||0), 0.001); end
  def test_costpercapita_bj150; assert_in_delta(0, (worksheet.costpercapita_bj150||0), 0.001); end
  def test_costpercapita_bk150; assert_in_delta(0, (worksheet.costpercapita_bk150||0), 0.001); end
  def test_costpercapita_bl150; assert_in_delta(0, (worksheet.costpercapita_bl150||0), 0.001); end
  def test_costpercapita_bm150; assert_in_delta(0, (worksheet.costpercapita_bm150||0), 0.001); end
  def test_costpercapita_bn150; assert_in_delta(0, (worksheet.costpercapita_bn150||0), 0.001); end
  def test_costpercapita_bo150; assert_in_delta(0, (worksheet.costpercapita_bo150||0), 0.001); end
  def test_costpercapita_bp150; assert_in_delta(0, (worksheet.costpercapita_bp150||0), 0.001); end
  def test_costpercapita_bq150; assert_in_delta(0, (worksheet.costpercapita_bq150||0), 0.001); end
  def test_costpercapita_cf150; assert_in_delta(0, (worksheet.costpercapita_cf150||0), 0.001); end
  def test_costpercapita_cg150; assert_in_delta(0, (worksheet.costpercapita_cg150||0), 0.001); end
  def test_costpercapita_ch150; assert_in_delta(0, (worksheet.costpercapita_ch150||0), 0.001); end
  def test_costpercapita_ci150; assert_in_delta(0, (worksheet.costpercapita_ci150||0), 0.001); end
  def test_costpercapita_cj150; assert_in_delta(0, (worksheet.costpercapita_cj150||0), 0.001); end
  def test_costpercapita_ck150; assert_in_delta(0, (worksheet.costpercapita_ck150||0), 0.001); end
  def test_costpercapita_cl150; assert_in_delta(0, (worksheet.costpercapita_cl150||0), 0.001); end
  def test_costpercapita_cm150; assert_in_delta(0, (worksheet.costpercapita_cm150||0), 0.001); end
  def test_costpercapita_cn150; assert_in_delta(0, (worksheet.costpercapita_cn150||0), 0.001); end
  def test_costpercapita_cp150; assert_in_delta(0, (worksheet.costpercapita_cp150||0), 0.001); end
  def test_costpercapita_cq150; assert_in_delta(0, (worksheet.costpercapita_cq150||0), 0.001); end
  def test_costpercapita_bt150; assert_in_epsilon(2.2628595687100987, worksheet.costpercapita_bt150, 0.001); end
  def test_costpercapita_bu150; assert_in_epsilon(7.4058418875517225, worksheet.costpercapita_bu150, 0.001); end
  def test_costpercapita_bv150; assert_in_epsilon(12.499027516222807, worksheet.costpercapita_bv150, 0.001); end
  def test_costpercapita_bw150; assert_in_epsilon(19.001435831344192, worksheet.costpercapita_bw150, 0.001); end
  def test_costpercapita_bx150; assert_in_epsilon(23.254680335469203, worksheet.costpercapita_bx150, 0.001); end
  def test_costpercapita_by150; assert_in_epsilon(27.776029551673084, worksheet.costpercapita_by150, 0.001); end
  def test_costpercapita_bz150; assert_in_epsilon(32.60095997722088, worksheet.costpercapita_bz150, 0.001); end
  def test_costpercapita_ca150; assert_in_epsilon(37.78259474072222, worksheet.costpercapita_ca150, 0.001); end
  def test_costpercapita_bs150; assert_in_delta(0, (worksheet.costpercapita_bs150||0), 0.001); end
  def test_costpercapita_cd150; assert_in_epsilon(319.68568642179446, worksheet.costpercapita_cd150, 0.001); end
  def test_costpercapita_aj150; assert_in_epsilon(2.2628595687100987, worksheet.costpercapita_aj150, 0.001); end
  def test_costpercapita_ak150; assert_in_epsilon(7.4058418875517225, worksheet.costpercapita_ak150, 0.001); end
  def test_costpercapita_al150; assert_in_epsilon(12.499027516222807, worksheet.costpercapita_al150, 0.001); end
  def test_costpercapita_am150; assert_in_epsilon(19.001435831344192, worksheet.costpercapita_am150, 0.001); end
  def test_costpercapita_an150; assert_in_epsilon(23.254680335469203, worksheet.costpercapita_an150, 0.001); end
  def test_costpercapita_ao150; assert_in_epsilon(27.776029551673084, worksheet.costpercapita_ao150, 0.001); end
  def test_costpercapita_ap150; assert_in_epsilon(32.60095997722088, worksheet.costpercapita_ap150, 0.001); end
  def test_costpercapita_aq150; assert_in_epsilon(37.78259474072222, worksheet.costpercapita_aq150, 0.001); end
  def test_costpercapita_ai150; assert_in_delta(0, (worksheet.costpercapita_ai150||0), 0.001); end
  def test_costpercapita_at150; assert_in_epsilon(319.68568642179446, worksheet.costpercapita_at150, 0.001); end
  def test_costpercapita_cr150; assert_equal("ok", worksheet.costpercapita_cr150); end
  def test_costpercapita_a151; assert_equal("XIV.a", worksheet.costpercapita_a151); end
  def test_costpercapita_b151; assert_equal("Geosequestration", worksheet.costpercapita_b151); end
  def test_costpercapita_c151; assert_equal("Other", worksheet.costpercapita_c151); end
  def test_costpercapita_y151; assert_in_delta(0, (worksheet.costpercapita_y151||0), 0.001); end
  def test_costpercapita_z151; assert_in_delta(0, (worksheet.costpercapita_z151||0), 0.001); end
  def test_costpercapita_aa151; assert_in_delta(0, (worksheet.costpercapita_aa151||0), 0.001); end
  def test_costpercapita_ab151; assert_in_delta(0, (worksheet.costpercapita_ab151||0), 0.001); end
  def test_costpercapita_ac151; assert_in_delta(0, (worksheet.costpercapita_ac151||0), 0.001); end
  def test_costpercapita_ad151; assert_in_delta(0, (worksheet.costpercapita_ad151||0), 0.001); end
  def test_costpercapita_ae151; assert_in_delta(0, (worksheet.costpercapita_ae151||0), 0.001); end
  def test_costpercapita_af151; assert_in_delta(0, (worksheet.costpercapita_af151||0), 0.001); end
  def test_costpercapita_ag151; assert_in_delta(0, (worksheet.costpercapita_ag151||0), 0.001); end
  def test_costpercapita_av151; assert_in_delta(0, (worksheet.costpercapita_av151||0), 0.001); end
  def test_costpercapita_aw151; assert_in_epsilon(5, worksheet.costpercapita_aw151, 0.001); end
  def test_costpercapita_bt151; assert_in_delta(0, (worksheet.costpercapita_bt151||0), 0.001); end
  def test_costpercapita_bu151; assert_in_delta(0, (worksheet.costpercapita_bu151||0), 0.001); end
  def test_costpercapita_bv151; assert_in_delta(0, (worksheet.costpercapita_bv151||0), 0.001); end
  def test_costpercapita_bw151; assert_in_delta(0, (worksheet.costpercapita_bw151||0), 0.001); end
  def test_costpercapita_bx151; assert_in_delta(0, (worksheet.costpercapita_bx151||0), 0.001); end
  def test_costpercapita_by151; assert_in_delta(0, (worksheet.costpercapita_by151||0), 0.001); end
  def test_costpercapita_bz151; assert_in_delta(0, (worksheet.costpercapita_bz151||0), 0.001); end
  def test_costpercapita_ca151; assert_in_delta(0, (worksheet.costpercapita_ca151||0), 0.001); end
  def test_costpercapita_bs151; assert_in_delta(0, (worksheet.costpercapita_bs151||0), 0.001); end
  def test_costpercapita_cd151; assert_in_delta(0, (worksheet.costpercapita_cd151||0), 0.001); end
  def test_costpercapita_cg151; assert_in_delta(0, (worksheet.costpercapita_cg151||0), 0.001); end
  def test_costpercapita_ch151; assert_in_delta(0, (worksheet.costpercapita_ch151||0), 0.001); end
  def test_costpercapita_ci151; assert_in_delta(0, (worksheet.costpercapita_ci151||0), 0.001); end
  def test_costpercapita_cj151; assert_in_delta(0, (worksheet.costpercapita_cj151||0), 0.001); end
  def test_costpercapita_ck151; assert_in_delta(0, (worksheet.costpercapita_ck151||0), 0.001); end
  def test_costpercapita_cl151; assert_in_delta(0, (worksheet.costpercapita_cl151||0), 0.001); end
  def test_costpercapita_cm151; assert_in_delta(0, (worksheet.costpercapita_cm151||0), 0.001); end
  def test_costpercapita_cn151; assert_in_delta(0, (worksheet.costpercapita_cn151||0), 0.001); end
  def test_costpercapita_cf151; assert_in_delta(0, (worksheet.costpercapita_cf151||0), 0.001); end
  def test_costpercapita_cq151; assert_in_delta(0, (worksheet.costpercapita_cq151||0), 0.001); end
  def test_costpercapita_aj151; assert_in_delta(0, (worksheet.costpercapita_aj151||0), 0.001); end
  def test_costpercapita_ak151; assert_in_delta(0, (worksheet.costpercapita_ak151||0), 0.001); end
  def test_costpercapita_al151; assert_in_delta(0, (worksheet.costpercapita_al151||0), 0.001); end
  def test_costpercapita_am151; assert_in_delta(0, (worksheet.costpercapita_am151||0), 0.001); end
  def test_costpercapita_an151; assert_in_delta(0, (worksheet.costpercapita_an151||0), 0.001); end
  def test_costpercapita_ao151; assert_in_delta(0, (worksheet.costpercapita_ao151||0), 0.001); end
  def test_costpercapita_ap151; assert_in_delta(0, (worksheet.costpercapita_ap151||0), 0.001); end
  def test_costpercapita_aq151; assert_in_delta(0, (worksheet.costpercapita_aq151||0), 0.001); end
  def test_costpercapita_ai151; assert_in_delta(0, (worksheet.costpercapita_ai151||0), 0.001); end
  def test_costpercapita_at151; assert_in_delta(0, (worksheet.costpercapita_at151||0), 0.001); end
  def test_costpercapita_cr151; assert_equal("ok", worksheet.costpercapita_cr151); end
  def test_costpercapita_a152; assert_equal("XV.a", worksheet.costpercapita_a152); end
  def test_costpercapita_b152; assert_equal("Petroleum refineries", worksheet.costpercapita_b152); end
  def test_costpercapita_c152; assert_equal("Industry", worksheet.costpercapita_c152); end
  def test_costpercapita_y152; assert_in_delta(0, (worksheet.costpercapita_y152||0), 0.001); end
  def test_costpercapita_z152; assert_in_delta(0, (worksheet.costpercapita_z152||0), 0.001); end
  def test_costpercapita_aa152; assert_in_delta(0, (worksheet.costpercapita_aa152||0), 0.001); end
  def test_costpercapita_ab152; assert_in_delta(0, (worksheet.costpercapita_ab152||0), 0.001); end
  def test_costpercapita_ac152; assert_in_delta(0, (worksheet.costpercapita_ac152||0), 0.001); end
  def test_costpercapita_ad152; assert_in_delta(0, (worksheet.costpercapita_ad152||0), 0.001); end
  def test_costpercapita_ae152; assert_in_delta(0, (worksheet.costpercapita_ae152||0), 0.001); end
  def test_costpercapita_af152; assert_in_delta(0, (worksheet.costpercapita_af152||0), 0.001); end
  def test_costpercapita_ag152; assert_in_delta(0, (worksheet.costpercapita_ag152||0), 0.001); end
  def test_costpercapita_av152; assert_in_delta(0.1, worksheet.costpercapita_av152, 0.001); end
  def test_costpercapita_aw152; assert_in_epsilon(15, worksheet.costpercapita_aw152, 0.001); end
  def test_costpercapita_bt152; assert_in_epsilon(22.478705854465115, worksheet.costpercapita_bt152, 0.001); end
  def test_costpercapita_bu152; assert_in_epsilon(26.301850060156312, worksheet.costpercapita_bu152, 0.001); end
  def test_costpercapita_bv152; assert_in_epsilon(26.38641950508761, worksheet.costpercapita_bv152, 0.001); end
  def test_costpercapita_bw152; assert_in_epsilon(24.56836005253546, worksheet.costpercapita_bw152, 0.001); end
  def test_costpercapita_bx152; assert_in_epsilon(23.11664244899586, worksheet.costpercapita_bx152, 0.001); end
  def test_costpercapita_by152; assert_in_epsilon(21.960405930368935, worksheet.costpercapita_by152, 0.001); end
  def test_costpercapita_bz152; assert_in_epsilon(21.019374675582362, worksheet.costpercapita_bz152, 0.001); end
  def test_costpercapita_ca152; assert_in_epsilon(20.245193500632958, worksheet.costpercapita_ca152, 0.001); end
  def test_costpercapita_bs152; assert_in_epsilon(18.11454409624157, worksheet.costpercapita_bs152, 0.001); end
  def test_costpercapita_cd152; assert_in_epsilon(493.6249462097008, worksheet.costpercapita_cd152, 0.001); end
  def test_costpercapita_cg152; assert_in_delta(0.6586633540643606, worksheet.costpercapita_cg152, 0.001); end
  def test_costpercapita_ch152; assert_in_epsilon(6.2904035615901535, worksheet.costpercapita_ch152, 0.001); end
  def test_costpercapita_ci152; assert_in_epsilon(7.887709056490008, worksheet.costpercapita_ci152, 0.001); end
  def test_costpercapita_cj152; assert_in_epsilon(7.250641452297782, worksheet.costpercapita_cj152, 0.001); end
  def test_costpercapita_ck152; assert_in_epsilon(6.71731024407467, worksheet.costpercapita_ck152, 0.001); end
  def test_costpercapita_cl152; assert_in_epsilon(6.297369429751234, worksheet.costpercapita_cl152, 0.001); end
  def test_costpercapita_cm152; assert_in_epsilon(5.961927223485228, worksheet.costpercapita_cm152, 0.001); end
  def test_costpercapita_cn152; assert_in_epsilon(5.6913403317606726, worksheet.costpercapita_cn152, 0.001); end
  def test_costpercapita_cf152; assert_in_epsilon(-5.753907782085004, worksheet.costpercapita_cf152, 0.001); end
  def test_costpercapita_cq152; assert_in_epsilon(103.21152318463781, worksheet.costpercapita_cq152, 0.001); end
  def test_costpercapita_aj152; assert_in_epsilon(21.820042500400756, worksheet.costpercapita_aj152, 0.001); end
  def test_costpercapita_ak152; assert_in_epsilon(20.011446498566155, worksheet.costpercapita_ak152, 0.001); end
  def test_costpercapita_al152; assert_in_epsilon(18.498710448597603, worksheet.costpercapita_al152, 0.001); end
  def test_costpercapita_am152; assert_in_epsilon(17.31771860023768, worksheet.costpercapita_am152, 0.001); end
  def test_costpercapita_an152; assert_in_epsilon(16.39933220492119, worksheet.costpercapita_an152, 0.001); end
  def test_costpercapita_ao152; assert_in_epsilon(15.663036500617702, worksheet.costpercapita_ao152, 0.001); end
  def test_costpercapita_ap152; assert_in_epsilon(15.057447452097135, worksheet.costpercapita_ap152, 0.001); end
  def test_costpercapita_aq152; assert_in_epsilon(14.553853168872289, worksheet.costpercapita_aq152, 0.001); end
  def test_costpercapita_ai152; assert_in_epsilon(23.868451878326578, worksheet.costpercapita_ai152, 0.001); end
  def test_costpercapita_at152; assert_in_epsilon(390.413423025063, worksheet.costpercapita_at152, 0.001); end
  def test_costpercapita_cr152; assert_equal("ok", worksheet.costpercapita_cr152); end
  def test_costpercapita_a153; assert_equal("XV.b.Coal", worksheet.costpercapita_a153); end
  def test_costpercapita_b153; assert_equal("Indigenous fossil-fuel production - Coal", worksheet.costpercapita_b153); end
  def test_costpercapita_c153; assert_equal("Fossil Fuels", worksheet.costpercapita_c153); end
  def test_costpercapita_e153; assert_in_delta(0, (worksheet.costpercapita_e153||0), 0.001); end
  def test_costpercapita_f153; assert_in_delta(0, (worksheet.costpercapita_f153||0), 0.001); end
  def test_costpercapita_g153; assert_in_delta(0, (worksheet.costpercapita_g153||0), 0.001); end
  def test_costpercapita_h153; assert_in_delta(0, (worksheet.costpercapita_h153||0), 0.001); end
  def test_costpercapita_i153; assert_in_delta(0, (worksheet.costpercapita_i153||0), 0.001); end
  def test_costpercapita_j153; assert_in_delta(0, (worksheet.costpercapita_j153||0), 0.001); end
  def test_costpercapita_k153; assert_in_delta(0, (worksheet.costpercapita_k153||0), 0.001); end
  def test_costpercapita_l153; assert_in_delta(0, (worksheet.costpercapita_l153||0), 0.001); end
  def test_costpercapita_m153; assert_in_delta(0, (worksheet.costpercapita_m153||0), 0.001); end
  def test_costpercapita_o153; assert_in_delta(0, (worksheet.costpercapita_o153||0), 0.001); end
  def test_costpercapita_p153; assert_in_delta(0, (worksheet.costpercapita_p153||0), 0.001); end
  def test_costpercapita_q153; assert_in_delta(0, (worksheet.costpercapita_q153||0), 0.001); end
  def test_costpercapita_r153; assert_in_delta(0, (worksheet.costpercapita_r153||0), 0.001); end
  def test_costpercapita_s153; assert_in_delta(0, (worksheet.costpercapita_s153||0), 0.001); end
  def test_costpercapita_t153; assert_in_delta(0, (worksheet.costpercapita_t153||0), 0.001); end
  def test_costpercapita_u153; assert_in_delta(0, (worksheet.costpercapita_u153||0), 0.001); end
  def test_costpercapita_v153; assert_in_delta(0, (worksheet.costpercapita_v153||0), 0.001); end
  def test_costpercapita_w153; assert_in_delta(0, (worksheet.costpercapita_w153||0), 0.001); end
  def test_costpercapita_av153; assert_in_delta(0, (worksheet.costpercapita_av153||0), 0.001); end
  def test_costpercapita_aw153; assert_in_epsilon(5, worksheet.costpercapita_aw153, 0.001); end
  def test_costpercapita_ay153; assert_in_delta(0, (worksheet.costpercapita_ay153||0), 0.001); end
  def test_costpercapita_az153; assert_in_delta(0, (worksheet.costpercapita_az153||0), 0.001); end
  def test_costpercapita_ba153; assert_in_delta(0, (worksheet.costpercapita_ba153||0), 0.001); end
  def test_costpercapita_bb153; assert_in_delta(0, (worksheet.costpercapita_bb153||0), 0.001); end
  def test_costpercapita_bc153; assert_in_delta(0, (worksheet.costpercapita_bc153||0), 0.001); end
  def test_costpercapita_bd153; assert_in_delta(0, (worksheet.costpercapita_bd153||0), 0.001); end
  def test_costpercapita_be153; assert_in_delta(0, (worksheet.costpercapita_be153||0), 0.001); end
  def test_costpercapita_bf153; assert_in_delta(0, (worksheet.costpercapita_bf153||0), 0.001); end
  def test_costpercapita_bg153; assert_in_delta(0, (worksheet.costpercapita_bg153||0), 0.001); end
  def test_costpercapita_bi153; assert_in_delta(0, (worksheet.costpercapita_bi153||0), 0.001); end
  def test_costpercapita_bj153; assert_in_delta(0, (worksheet.costpercapita_bj153||0), 0.001); end
  def test_costpercapita_bk153; assert_in_delta(0, (worksheet.costpercapita_bk153||0), 0.001); end
  def test_costpercapita_bl153; assert_in_delta(0, (worksheet.costpercapita_bl153||0), 0.001); end
  def test_costpercapita_bm153; assert_in_delta(0, (worksheet.costpercapita_bm153||0), 0.001); end
  def test_costpercapita_bn153; assert_in_delta(0, (worksheet.costpercapita_bn153||0), 0.001); end
  def test_costpercapita_bo153; assert_in_delta(0, (worksheet.costpercapita_bo153||0), 0.001); end
  def test_costpercapita_bp153; assert_in_delta(0, (worksheet.costpercapita_bp153||0), 0.001); end
  def test_costpercapita_bq153; assert_in_delta(0, (worksheet.costpercapita_bq153||0), 0.001); end
  def test_costpercapita_cf153; assert_in_delta(0, (worksheet.costpercapita_cf153||0), 0.001); end
  def test_costpercapita_cg153; assert_in_delta(0, (worksheet.costpercapita_cg153||0), 0.001); end
  def test_costpercapita_ch153; assert_in_delta(0, (worksheet.costpercapita_ch153||0), 0.001); end
  def test_costpercapita_ci153; assert_in_delta(0, (worksheet.costpercapita_ci153||0), 0.001); end
  def test_costpercapita_cj153; assert_in_delta(0, (worksheet.costpercapita_cj153||0), 0.001); end
  def test_costpercapita_ck153; assert_in_delta(0, (worksheet.costpercapita_ck153||0), 0.001); end
  def test_costpercapita_cl153; assert_in_delta(0, (worksheet.costpercapita_cl153||0), 0.001); end
  def test_costpercapita_cm153; assert_in_delta(0, (worksheet.costpercapita_cm153||0), 0.001); end
  def test_costpercapita_cn153; assert_in_delta(0, (worksheet.costpercapita_cn153||0), 0.001); end
  def test_costpercapita_cp153; assert_in_delta(0, (worksheet.costpercapita_cp153||0), 0.001); end
  def test_costpercapita_cq153; assert_in_delta(0, (worksheet.costpercapita_cq153||0), 0.001); end
  def test_costpercapita_bt153; assert_in_epsilon(18.685654248629497, worksheet.costpercapita_bt153, 0.001); end
  def test_costpercapita_bu153; assert_in_epsilon(20.65590912986651, worksheet.costpercapita_bu153, 0.001); end
  def test_costpercapita_bv153; assert_in_epsilon(22.51837171017997, worksheet.costpercapita_bv153, 0.001); end
  def test_costpercapita_bw153; assert_in_epsilon(12.16842574865352, worksheet.costpercapita_bw153, 0.001); end
  def test_costpercapita_bx153; assert_in_epsilon(11.881790013158467, worksheet.costpercapita_bx153, 0.001); end
  def test_costpercapita_by153; assert_in_epsilon(11.628394369883353, worksheet.costpercapita_by153, 0.001); end
  def test_costpercapita_bz153; assert_in_epsilon(11.39643202687115, worksheet.costpercapita_bz153, 0.001); end
  def test_costpercapita_ca153; assert_in_epsilon(11.183754829847869, worksheet.costpercapita_ca153, 0.001); end
  def test_costpercapita_bs153; assert_in_epsilon(16.56242208548784, worksheet.costpercapita_bs153, 0.001); end
  def test_costpercapita_cd153; assert_in_epsilon(344.4155704400995, worksheet.costpercapita_cd153, 0.001); end
  def test_costpercapita_aj153; assert_in_epsilon(18.685654248629497, worksheet.costpercapita_aj153, 0.001); end
  def test_costpercapita_ak153; assert_in_epsilon(20.65590912986651, worksheet.costpercapita_ak153, 0.001); end
  def test_costpercapita_al153; assert_in_epsilon(22.51837171017997, worksheet.costpercapita_al153, 0.001); end
  def test_costpercapita_am153; assert_in_epsilon(12.16842574865352, worksheet.costpercapita_am153, 0.001); end
  def test_costpercapita_an153; assert_in_epsilon(11.881790013158467, worksheet.costpercapita_an153, 0.001); end
  def test_costpercapita_ao153; assert_in_epsilon(11.628394369883353, worksheet.costpercapita_ao153, 0.001); end
  def test_costpercapita_ap153; assert_in_epsilon(11.39643202687115, worksheet.costpercapita_ap153, 0.001); end
  def test_costpercapita_aq153; assert_in_epsilon(11.183754829847869, worksheet.costpercapita_aq153, 0.001); end
  def test_costpercapita_ai153; assert_in_epsilon(16.56242208548784, worksheet.costpercapita_ai153, 0.001); end
  def test_costpercapita_at153; assert_in_epsilon(344.4155704400995, worksheet.costpercapita_at153, 0.001); end
  def test_costpercapita_cr153; assert_equal("ok", worksheet.costpercapita_cr153); end
  def test_costpercapita_a154; assert_equal("XV.b.Oil", worksheet.costpercapita_a154); end
  def test_costpercapita_b154; assert_equal("Indigenous fossil-fuel production - Oil", worksheet.costpercapita_b154); end
  def test_costpercapita_c154; assert_equal("Fossil Fuels", worksheet.costpercapita_c154); end
  def test_costpercapita_e154; assert_in_delta(0, (worksheet.costpercapita_e154||0), 0.001); end
  def test_costpercapita_f154; assert_in_delta(0, (worksheet.costpercapita_f154||0), 0.001); end
  def test_costpercapita_g154; assert_in_delta(0, (worksheet.costpercapita_g154||0), 0.001); end
  def test_costpercapita_h154; assert_in_delta(0, (worksheet.costpercapita_h154||0), 0.001); end
  def test_costpercapita_i154; assert_in_delta(0, (worksheet.costpercapita_i154||0), 0.001); end
  def test_costpercapita_j154; assert_in_delta(0, (worksheet.costpercapita_j154||0), 0.001); end
  def test_costpercapita_k154; assert_in_delta(0, (worksheet.costpercapita_k154||0), 0.001); end
  def test_costpercapita_l154; assert_in_delta(0, (worksheet.costpercapita_l154||0), 0.001); end
  def test_costpercapita_m154; assert_in_delta(0, (worksheet.costpercapita_m154||0), 0.001); end
  def test_costpercapita_o154; assert_in_delta(0, (worksheet.costpercapita_o154||0), 0.001); end
  def test_costpercapita_p154; assert_in_delta(0, (worksheet.costpercapita_p154||0), 0.001); end
  def test_costpercapita_q154; assert_in_delta(0, (worksheet.costpercapita_q154||0), 0.001); end
  def test_costpercapita_r154; assert_in_delta(0, (worksheet.costpercapita_r154||0), 0.001); end
  def test_costpercapita_s154; assert_in_delta(0, (worksheet.costpercapita_s154||0), 0.001); end
  def test_costpercapita_t154; assert_in_delta(0, (worksheet.costpercapita_t154||0), 0.001); end
  def test_costpercapita_u154; assert_in_delta(0, (worksheet.costpercapita_u154||0), 0.001); end
  def test_costpercapita_v154; assert_in_delta(0, (worksheet.costpercapita_v154||0), 0.001); end
  def test_costpercapita_w154; assert_in_delta(0, (worksheet.costpercapita_w154||0), 0.001); end
  def test_costpercapita_av154; assert_in_delta(0, (worksheet.costpercapita_av154||0), 0.001); end
  def test_costpercapita_aw154; assert_in_epsilon(5, worksheet.costpercapita_aw154, 0.001); end
  def test_costpercapita_ay154; assert_in_delta(0, (worksheet.costpercapita_ay154||0), 0.001); end
  def test_costpercapita_az154; assert_in_delta(0, (worksheet.costpercapita_az154||0), 0.001); end
  def test_costpercapita_ba154; assert_in_delta(0, (worksheet.costpercapita_ba154||0), 0.001); end
  def test_costpercapita_bb154; assert_in_delta(0, (worksheet.costpercapita_bb154||0), 0.001); end
  def test_costpercapita_bc154; assert_in_delta(0, (worksheet.costpercapita_bc154||0), 0.001); end
  def test_costpercapita_bd154; assert_in_delta(0, (worksheet.costpercapita_bd154||0), 0.001); end
  def test_costpercapita_be154; assert_in_delta(0, (worksheet.costpercapita_be154||0), 0.001); end
  def test_costpercapita_bf154; assert_in_delta(0, (worksheet.costpercapita_bf154||0), 0.001); end
  def test_costpercapita_bg154; assert_in_delta(0, (worksheet.costpercapita_bg154||0), 0.001); end
  def test_costpercapita_bi154; assert_in_delta(0, (worksheet.costpercapita_bi154||0), 0.001); end
  def test_costpercapita_bj154; assert_in_delta(0, (worksheet.costpercapita_bj154||0), 0.001); end
  def test_costpercapita_bk154; assert_in_delta(0, (worksheet.costpercapita_bk154||0), 0.001); end
  def test_costpercapita_bl154; assert_in_delta(0, (worksheet.costpercapita_bl154||0), 0.001); end
  def test_costpercapita_bm154; assert_in_delta(0, (worksheet.costpercapita_bm154||0), 0.001); end
  def test_costpercapita_bn154; assert_in_delta(0, (worksheet.costpercapita_bn154||0), 0.001); end
  def test_costpercapita_bo154; assert_in_delta(0, (worksheet.costpercapita_bo154||0), 0.001); end
  def test_costpercapita_bp154; assert_in_delta(0, (worksheet.costpercapita_bp154||0), 0.001); end
  def test_costpercapita_bq154; assert_in_delta(0, (worksheet.costpercapita_bq154||0), 0.001); end
  def test_costpercapita_cf154; assert_in_delta(0, (worksheet.costpercapita_cf154||0), 0.001); end
  def test_costpercapita_cg154; assert_in_delta(0, (worksheet.costpercapita_cg154||0), 0.001); end
  def test_costpercapita_ch154; assert_in_delta(0, (worksheet.costpercapita_ch154||0), 0.001); end
  def test_costpercapita_ci154; assert_in_delta(0, (worksheet.costpercapita_ci154||0), 0.001); end
  def test_costpercapita_cj154; assert_in_delta(0, (worksheet.costpercapita_cj154||0), 0.001); end
  def test_costpercapita_ck154; assert_in_delta(0, (worksheet.costpercapita_ck154||0), 0.001); end
  def test_costpercapita_cl154; assert_in_delta(0, (worksheet.costpercapita_cl154||0), 0.001); end
  def test_costpercapita_cm154; assert_in_delta(0, (worksheet.costpercapita_cm154||0), 0.001); end
  def test_costpercapita_cn154; assert_in_delta(0, (worksheet.costpercapita_cn154||0), 0.001); end
  def test_costpercapita_cp154; assert_in_delta(0, (worksheet.costpercapita_cp154||0), 0.001); end
  def test_costpercapita_cq154; assert_in_delta(0, (worksheet.costpercapita_cq154||0), 0.001); end
  def test_costpercapita_bt154; assert_in_epsilon(403.23585682698973, worksheet.costpercapita_bt154, 0.001); end
  def test_costpercapita_bu154; assert_in_epsilon(366.58283373821, worksheet.costpercapita_bu154, 0.001); end
  def test_costpercapita_bv154; assert_in_epsilon(322.86537140717735, worksheet.costpercapita_bv154, 0.001); end
  def test_costpercapita_bw154; assert_in_epsilon(279.12363862554867, worksheet.costpercapita_bw154, 0.001); end
  def test_costpercapita_bx154; assert_in_epsilon(210.892978617878, worksheet.costpercapita_bx154, 0.001); end
  def test_costpercapita_by154; assert_in_epsilon(159.70482107536617, worksheet.costpercapita_by154, 0.001); end
  def test_costpercapita_bz154; assert_in_epsilon(121.11145045492978, worksheet.costpercapita_bz154, 0.001); end
  def test_costpercapita_ca154; assert_in_epsilon(91.96487082730361, worksheet.costpercapita_ca154, 0.001); end
  def test_costpercapita_bs154; assert_in_epsilon(407.9280784216838, worksheet.costpercapita_bs154, 0.001); end
  def test_costpercapita_cd154; assert_in_epsilon(6108.548251556941, worksheet.costpercapita_cd154, 0.001); end
  def test_costpercapita_aj154; assert_in_epsilon(403.23585682698973, worksheet.costpercapita_aj154, 0.001); end
  def test_costpercapita_ak154; assert_in_epsilon(366.58283373821, worksheet.costpercapita_ak154, 0.001); end
  def test_costpercapita_al154; assert_in_epsilon(322.86537140717735, worksheet.costpercapita_al154, 0.001); end
  def test_costpercapita_am154; assert_in_epsilon(279.12363862554867, worksheet.costpercapita_am154, 0.001); end
  def test_costpercapita_an154; assert_in_epsilon(210.892978617878, worksheet.costpercapita_an154, 0.001); end
  def test_costpercapita_ao154; assert_in_epsilon(159.70482107536617, worksheet.costpercapita_ao154, 0.001); end
  def test_costpercapita_ap154; assert_in_epsilon(121.11145045492978, worksheet.costpercapita_ap154, 0.001); end
  def test_costpercapita_aq154; assert_in_epsilon(91.96487082730361, worksheet.costpercapita_aq154, 0.001); end
  def test_costpercapita_ai154; assert_in_epsilon(407.9280784216838, worksheet.costpercapita_ai154, 0.001); end
  def test_costpercapita_at154; assert_in_epsilon(6108.548251556941, worksheet.costpercapita_at154, 0.001); end
  def test_costpercapita_cr154; assert_equal("ok", worksheet.costpercapita_cr154); end
  def test_costpercapita_a155; assert_equal("XV.b.Gas", worksheet.costpercapita_a155); end
  def test_costpercapita_b155; assert_equal("Indigenous fossil-fuel production - Gas", worksheet.costpercapita_b155); end
  def test_costpercapita_c155; assert_equal("Fossil Fuels", worksheet.costpercapita_c155); end
  def test_costpercapita_e155; assert_in_delta(0, (worksheet.costpercapita_e155||0), 0.001); end
  def test_costpercapita_f155; assert_in_delta(0, (worksheet.costpercapita_f155||0), 0.001); end
  def test_costpercapita_g155; assert_in_delta(0, (worksheet.costpercapita_g155||0), 0.001); end
  def test_costpercapita_h155; assert_in_delta(0, (worksheet.costpercapita_h155||0), 0.001); end
  def test_costpercapita_i155; assert_in_delta(0, (worksheet.costpercapita_i155||0), 0.001); end
  def test_costpercapita_j155; assert_in_delta(0, (worksheet.costpercapita_j155||0), 0.001); end
  def test_costpercapita_k155; assert_in_delta(0, (worksheet.costpercapita_k155||0), 0.001); end
  def test_costpercapita_l155; assert_in_delta(0, (worksheet.costpercapita_l155||0), 0.001); end
  def test_costpercapita_m155; assert_in_delta(0, (worksheet.costpercapita_m155||0), 0.001); end
  def test_costpercapita_o155; assert_in_delta(0, (worksheet.costpercapita_o155||0), 0.001); end
  def test_costpercapita_p155; assert_in_delta(0, (worksheet.costpercapita_p155||0), 0.001); end
  def test_costpercapita_q155; assert_in_delta(0, (worksheet.costpercapita_q155||0), 0.001); end
  def test_costpercapita_r155; assert_in_delta(0, (worksheet.costpercapita_r155||0), 0.001); end
  def test_costpercapita_s155; assert_in_delta(0, (worksheet.costpercapita_s155||0), 0.001); end
  def test_costpercapita_t155; assert_in_delta(0, (worksheet.costpercapita_t155||0), 0.001); end
  def test_costpercapita_u155; assert_in_delta(0, (worksheet.costpercapita_u155||0), 0.001); end
  def test_costpercapita_v155; assert_in_delta(0, (worksheet.costpercapita_v155||0), 0.001); end
  def test_costpercapita_w155; assert_in_delta(0, (worksheet.costpercapita_w155||0), 0.001); end
  def test_costpercapita_av155; assert_in_delta(0, (worksheet.costpercapita_av155||0), 0.001); end
  def test_costpercapita_aw155; assert_in_epsilon(5, worksheet.costpercapita_aw155, 0.001); end
  def test_costpercapita_ay155; assert_in_delta(0, (worksheet.costpercapita_ay155||0), 0.001); end
  def test_costpercapita_az155; assert_in_delta(0, (worksheet.costpercapita_az155||0), 0.001); end
  def test_costpercapita_ba155; assert_in_delta(0, (worksheet.costpercapita_ba155||0), 0.001); end
  def test_costpercapita_bb155; assert_in_delta(0, (worksheet.costpercapita_bb155||0), 0.001); end
  def test_costpercapita_bc155; assert_in_delta(0, (worksheet.costpercapita_bc155||0), 0.001); end
  def test_costpercapita_bd155; assert_in_delta(0, (worksheet.costpercapita_bd155||0), 0.001); end
  def test_costpercapita_be155; assert_in_delta(0, (worksheet.costpercapita_be155||0), 0.001); end
  def test_costpercapita_bf155; assert_in_delta(0, (worksheet.costpercapita_bf155||0), 0.001); end
  def test_costpercapita_bg155; assert_in_delta(0, (worksheet.costpercapita_bg155||0), 0.001); end
  def test_costpercapita_bi155; assert_in_delta(0, (worksheet.costpercapita_bi155||0), 0.001); end
  def test_costpercapita_bj155; assert_in_delta(0, (worksheet.costpercapita_bj155||0), 0.001); end
  def test_costpercapita_bk155; assert_in_delta(0, (worksheet.costpercapita_bk155||0), 0.001); end
  def test_costpercapita_bl155; assert_in_delta(0, (worksheet.costpercapita_bl155||0), 0.001); end
  def test_costpercapita_bm155; assert_in_delta(0, (worksheet.costpercapita_bm155||0), 0.001); end
  def test_costpercapita_bn155; assert_in_delta(0, (worksheet.costpercapita_bn155||0), 0.001); end
  def test_costpercapita_bo155; assert_in_delta(0, (worksheet.costpercapita_bo155||0), 0.001); end
  def test_costpercapita_bp155; assert_in_delta(0, (worksheet.costpercapita_bp155||0), 0.001); end
  def test_costpercapita_bq155; assert_in_delta(0, (worksheet.costpercapita_bq155||0), 0.001); end
  def test_costpercapita_cf155; assert_in_delta(0, (worksheet.costpercapita_cf155||0), 0.001); end
  def test_costpercapita_cg155; assert_in_delta(0, (worksheet.costpercapita_cg155||0), 0.001); end
  def test_costpercapita_ch155; assert_in_delta(0, (worksheet.costpercapita_ch155||0), 0.001); end
  def test_costpercapita_ci155; assert_in_delta(0, (worksheet.costpercapita_ci155||0), 0.001); end
  def test_costpercapita_cj155; assert_in_delta(0, (worksheet.costpercapita_cj155||0), 0.001); end
  def test_costpercapita_ck155; assert_in_delta(0, (worksheet.costpercapita_ck155||0), 0.001); end
  def test_costpercapita_cl155; assert_in_delta(0, (worksheet.costpercapita_cl155||0), 0.001); end
  def test_costpercapita_cm155; assert_in_delta(0, (worksheet.costpercapita_cm155||0), 0.001); end
  def test_costpercapita_cn155; assert_in_delta(0, (worksheet.costpercapita_cn155||0), 0.001); end
  def test_costpercapita_cp155; assert_in_delta(0, (worksheet.costpercapita_cp155||0), 0.001); end
  def test_costpercapita_cq155; assert_in_delta(0, (worksheet.costpercapita_cq155||0), 0.001); end
  def test_costpercapita_bt155; assert_in_epsilon(148.07770551122937, worksheet.costpercapita_bt155, 0.001); end
  def test_costpercapita_bu155; assert_in_epsilon(137.36957684062, worksheet.costpercapita_bu155, 0.001); end
  def test_costpercapita_bv155; assert_in_epsilon(123.03103814107529, worksheet.costpercapita_bv155, 0.001); end
  def test_costpercapita_bw155; assert_in_epsilon(107.67234745556414, worksheet.costpercapita_bw155, 0.001); end
  def test_costpercapita_bx155; assert_in_epsilon(81.35227163667624, worksheet.costpercapita_bx155, 0.001); end
  def test_costpercapita_by155; assert_in_epsilon(61.60636580201707, worksheet.costpercapita_by155, 0.001); end
  def test_costpercapita_bz155; assert_in_epsilon(46.71891724557404, worksheet.costpercapita_bz155, 0.001); end
  def test_costpercapita_ca155; assert_in_epsilon(35.47558198289116, worksheet.costpercapita_ca155, 0.001); end
  def test_costpercapita_bs155; assert_in_epsilon(151.2771269277196, worksheet.costpercapita_bs155, 0.001); end
  def test_costpercapita_cd155; assert_in_epsilon(2300.005390441694, worksheet.costpercapita_cd155, 0.001); end
  def test_costpercapita_aj155; assert_in_epsilon(148.07770551122937, worksheet.costpercapita_aj155, 0.001); end
  def test_costpercapita_ak155; assert_in_epsilon(137.36957684062, worksheet.costpercapita_ak155, 0.001); end
  def test_costpercapita_al155; assert_in_epsilon(123.03103814107529, worksheet.costpercapita_al155, 0.001); end
  def test_costpercapita_am155; assert_in_epsilon(107.67234745556414, worksheet.costpercapita_am155, 0.001); end
  def test_costpercapita_an155; assert_in_epsilon(81.35227163667624, worksheet.costpercapita_an155, 0.001); end
  def test_costpercapita_ao155; assert_in_epsilon(61.60636580201707, worksheet.costpercapita_ao155, 0.001); end
  def test_costpercapita_ap155; assert_in_epsilon(46.71891724557404, worksheet.costpercapita_ap155, 0.001); end
  def test_costpercapita_aq155; assert_in_epsilon(35.47558198289116, worksheet.costpercapita_aq155, 0.001); end
  def test_costpercapita_ai155; assert_in_epsilon(151.2771269277196, worksheet.costpercapita_ai155, 0.001); end
  def test_costpercapita_at155; assert_in_epsilon(2300.005390441694, worksheet.costpercapita_at155, 0.001); end
  def test_costpercapita_cr155; assert_equal("ok", worksheet.costpercapita_cr155); end
  def test_costpercapita_a156; assert_equal("XVI.a", worksheet.costpercapita_a156); end
  def test_costpercapita_b156; assert_equal("Fossil fuel transfers", worksheet.costpercapita_b156); end
  def test_costpercapita_c156; assert_equal("Fossil Fuels", worksheet.costpercapita_c156); end
  def test_costpercapita_y156; assert_in_delta(0, (worksheet.costpercapita_y156||0), 0.001); end
  def test_costpercapita_z156; assert_in_delta(0, (worksheet.costpercapita_z156||0), 0.001); end
  def test_costpercapita_aa156; assert_in_delta(0, (worksheet.costpercapita_aa156||0), 0.001); end
  def test_costpercapita_ab156; assert_in_delta(0, (worksheet.costpercapita_ab156||0), 0.001); end
  def test_costpercapita_ac156; assert_in_delta(0, (worksheet.costpercapita_ac156||0), 0.001); end
  def test_costpercapita_ad156; assert_in_delta(0, (worksheet.costpercapita_ad156||0), 0.001); end
  def test_costpercapita_ae156; assert_in_delta(0, (worksheet.costpercapita_ae156||0), 0.001); end
  def test_costpercapita_af156; assert_in_delta(0, (worksheet.costpercapita_af156||0), 0.001); end
  def test_costpercapita_ag156; assert_in_delta(0, (worksheet.costpercapita_ag156||0), 0.001); end
  def test_costpercapita_av156; assert_in_delta(0.1, worksheet.costpercapita_av156, 0.001); end
  def test_costpercapita_aw156; assert_in_epsilon(15, worksheet.costpercapita_aw156, 0.001); end
  def test_costpercapita_bt156; assert_in_epsilon(20.020559642547408, worksheet.costpercapita_bt156, 0.001); end
  def test_costpercapita_bu156; assert_in_epsilon(26.264264272497535, worksheet.costpercapita_bu156, 0.001); end
  def test_costpercapita_bv156; assert_in_epsilon(19.006760917116562, worksheet.costpercapita_bv156, 0.001); end
  def test_costpercapita_bw156; assert_in_epsilon(17.002050118638138, worksheet.costpercapita_bw156, 0.001); end
  def test_costpercapita_bx156; assert_in_epsilon(13.49978568250517, worksheet.costpercapita_bx156, 0.001); end
  def test_costpercapita_by156; assert_in_epsilon(10.27214694623693, worksheet.costpercapita_by156, 0.001); end
  def test_costpercapita_bz156; assert_in_epsilon(7.513313916274413, worksheet.costpercapita_bz156, 0.001); end
  def test_costpercapita_ca156; assert_in_epsilon(5.13326433803175, worksheet.costpercapita_ca156, 0.001); end
  def test_costpercapita_bs156; assert_in_epsilon(13.73839182209719, worksheet.costpercapita_bs156, 0.001); end
  def test_costpercapita_cd156; assert_in_epsilon(355.7766965407075, worksheet.costpercapita_cd156, 0.001); end
  def test_costpercapita_cg156; assert_in_epsilon(9.734831360474367, worksheet.costpercapita_cg156, 0.001); end
  def test_costpercapita_ch156; assert_in_epsilon(15.679364172347393, worksheet.costpercapita_ch156, 0.001); end
  def test_costpercapita_ci156; assert_in_epsilon(9.878079812944641, worksheet.costpercapita_ci156, 0.001); end
  def test_costpercapita_cj156; assert_in_epsilon(9.913574716104922, worksheet.costpercapita_cj156, 0.001); end
  def test_costpercapita_ck156; assert_in_epsilon(8.503716161284679, worksheet.costpercapita_ck156, 0.001); end
  def test_costpercapita_cl156; assert_in_epsilon(6.275312881248406, worksheet.costpercapita_cl156, 0.001); end
  def test_costpercapita_cm156; assert_in_epsilon(4.768731206627377, worksheet.costpercapita_cm156, 0.001); end
  def test_costpercapita_cn156; assert_in_epsilon(3.8473176810276932, worksheet.costpercapita_cn156, 0.001); end
  def test_costpercapita_cf156; assert_in_epsilon(-21.00703839353431, worksheet.costpercapita_cf156, 0.001); end
  def test_costpercapita_cq156; assert_in_epsilon(171.54201911395617, worksheet.costpercapita_cq156, 0.001); end
  def test_costpercapita_aj156; assert_in_epsilon(10.28572828207304, worksheet.costpercapita_aj156, 0.001); end
  def test_costpercapita_ak156; assert_in_epsilon(10.584900100150143, worksheet.costpercapita_ak156, 0.001); end
  def test_costpercapita_al156; assert_in_epsilon(9.128681104171923, worksheet.costpercapita_al156, 0.001); end
  def test_costpercapita_am156; assert_in_epsilon(7.088475402533215, worksheet.costpercapita_am156, 0.001); end
  def test_costpercapita_an156; assert_in_epsilon(4.996069521220491, worksheet.costpercapita_an156, 0.001); end
  def test_costpercapita_ao156; assert_in_epsilon(3.996834064988523, worksheet.costpercapita_ao156, 0.001); end
  def test_costpercapita_ap156; assert_in_epsilon(2.7445827096470343, worksheet.costpercapita_ap156, 0.001); end
  def test_costpercapita_aq156; assert_in_epsilon(1.285946657004056, worksheet.costpercapita_aq156, 0.001); end
  def test_costpercapita_ai156; assert_in_epsilon(34.7454302156315, worksheet.costpercapita_ai156, 0.001); end
  def test_costpercapita_at156; assert_in_epsilon(184.23467742675132, worksheet.costpercapita_at156, 0.001); end
  def test_costpercapita_cr156; assert_equal("ok", worksheet.costpercapita_cr156); end
  def test_costpercapita_a157; assert_equal("XVI.b.Coal", worksheet.costpercapita_a157); end
  def test_costpercapita_b157; assert_equal("Balancing imports - Coal", worksheet.costpercapita_b157); end
  def test_costpercapita_c157; assert_equal("Fossil Fuels", worksheet.costpercapita_c157); end
  def test_costpercapita_e157; assert_in_delta(0, (worksheet.costpercapita_e157||0), 0.001); end
  def test_costpercapita_f157; assert_in_delta(0, (worksheet.costpercapita_f157||0), 0.001); end
  def test_costpercapita_g157; assert_in_delta(0, (worksheet.costpercapita_g157||0), 0.001); end
  def test_costpercapita_h157; assert_in_delta(0, (worksheet.costpercapita_h157||0), 0.001); end
  def test_costpercapita_i157; assert_in_delta(0, (worksheet.costpercapita_i157||0), 0.001); end
  def test_costpercapita_j157; assert_in_delta(0, (worksheet.costpercapita_j157||0), 0.001); end
  def test_costpercapita_k157; assert_in_delta(0, (worksheet.costpercapita_k157||0), 0.001); end
  def test_costpercapita_l157; assert_in_delta(0, (worksheet.costpercapita_l157||0), 0.001); end
  def test_costpercapita_m157; assert_in_delta(0, (worksheet.costpercapita_m157||0), 0.001); end
  def test_costpercapita_o157; assert_in_delta(0, (worksheet.costpercapita_o157||0), 0.001); end
  def test_costpercapita_p157; assert_in_delta(0, (worksheet.costpercapita_p157||0), 0.001); end
  def test_costpercapita_q157; assert_in_delta(0, (worksheet.costpercapita_q157||0), 0.001); end
  def test_costpercapita_r157; assert_in_delta(0, (worksheet.costpercapita_r157||0), 0.001); end
  def test_costpercapita_s157; assert_in_delta(0, (worksheet.costpercapita_s157||0), 0.001); end
  def test_costpercapita_t157; assert_in_delta(0, (worksheet.costpercapita_t157||0), 0.001); end
  def test_costpercapita_u157; assert_in_delta(0, (worksheet.costpercapita_u157||0), 0.001); end
  def test_costpercapita_v157; assert_in_delta(0, (worksheet.costpercapita_v157||0), 0.001); end
  def test_costpercapita_w157; assert_in_delta(0, (worksheet.costpercapita_w157||0), 0.001); end
  def test_costpercapita_av157; assert_in_delta(0, (worksheet.costpercapita_av157||0), 0.001); end
  def test_costpercapita_aw157; assert_in_epsilon(5, worksheet.costpercapita_aw157, 0.001); end
  def test_costpercapita_ay157; assert_in_delta(0, (worksheet.costpercapita_ay157||0), 0.001); end
  def test_costpercapita_az157; assert_in_delta(0, (worksheet.costpercapita_az157||0), 0.001); end
  def test_costpercapita_ba157; assert_in_delta(0, (worksheet.costpercapita_ba157||0), 0.001); end
  def test_costpercapita_bb157; assert_in_delta(0, (worksheet.costpercapita_bb157||0), 0.001); end
  def test_costpercapita_bc157; assert_in_delta(0, (worksheet.costpercapita_bc157||0), 0.001); end
  def test_costpercapita_bd157; assert_in_delta(0, (worksheet.costpercapita_bd157||0), 0.001); end
  def test_costpercapita_be157; assert_in_delta(0, (worksheet.costpercapita_be157||0), 0.001); end
  def test_costpercapita_bf157; assert_in_delta(0, (worksheet.costpercapita_bf157||0), 0.001); end
  def test_costpercapita_bg157; assert_in_delta(0, (worksheet.costpercapita_bg157||0), 0.001); end
  def test_costpercapita_bi157; assert_in_delta(0, (worksheet.costpercapita_bi157||0), 0.001); end
  def test_costpercapita_bj157; assert_in_delta(0, (worksheet.costpercapita_bj157||0), 0.001); end
  def test_costpercapita_bk157; assert_in_delta(0, (worksheet.costpercapita_bk157||0), 0.001); end
  def test_costpercapita_bl157; assert_in_delta(0, (worksheet.costpercapita_bl157||0), 0.001); end
  def test_costpercapita_bm157; assert_in_delta(0, (worksheet.costpercapita_bm157||0), 0.001); end
  def test_costpercapita_bn157; assert_in_delta(0, (worksheet.costpercapita_bn157||0), 0.001); end
  def test_costpercapita_bo157; assert_in_delta(0, (worksheet.costpercapita_bo157||0), 0.001); end
  def test_costpercapita_bp157; assert_in_delta(0, (worksheet.costpercapita_bp157||0), 0.001); end
  def test_costpercapita_bq157; assert_in_delta(0, (worksheet.costpercapita_bq157||0), 0.001); end
  def test_costpercapita_cf157; assert_in_delta(0, (worksheet.costpercapita_cf157||0), 0.001); end
  def test_costpercapita_cg157; assert_in_delta(0, (worksheet.costpercapita_cg157||0), 0.001); end
  def test_costpercapita_ch157; assert_in_delta(0, (worksheet.costpercapita_ch157||0), 0.001); end
  def test_costpercapita_ci157; assert_in_delta(0, (worksheet.costpercapita_ci157||0), 0.001); end
  def test_costpercapita_cj157; assert_in_delta(0, (worksheet.costpercapita_cj157||0), 0.001); end
  def test_costpercapita_ck157; assert_in_delta(0, (worksheet.costpercapita_ck157||0), 0.001); end
  def test_costpercapita_cl157; assert_in_delta(0, (worksheet.costpercapita_cl157||0), 0.001); end
  def test_costpercapita_cm157; assert_in_delta(0, (worksheet.costpercapita_cm157||0), 0.001); end
  def test_costpercapita_cn157; assert_in_delta(0, (worksheet.costpercapita_cn157||0), 0.001); end
  def test_costpercapita_cp157; assert_in_delta(0, (worksheet.costpercapita_cp157||0), 0.001); end
  def test_costpercapita_cq157; assert_in_delta(0, (worksheet.costpercapita_cq157||0), 0.001); end
  def test_costpercapita_bt157; assert_in_epsilon(30.844154871657018, worksheet.costpercapita_bt157, 0.001); end
  def test_costpercapita_bu157; assert_in_epsilon(16.508830359901502, worksheet.costpercapita_bu157, 0.001); end
  def test_costpercapita_bv157; assert_in_epsilon(-5.939959649853833, worksheet.costpercapita_bv157, 0.001); end
  def test_costpercapita_bw157; assert_in_epsilon(-10.709914275552226, worksheet.costpercapita_bw157, 0.001); end
  def test_costpercapita_bx157; assert_in_epsilon(-10.174502789216543, worksheet.costpercapita_bx157, 0.001); end
  def test_costpercapita_by157; assert_in_epsilon(-10.950609435613993, worksheet.costpercapita_by157, 0.001); end
  def test_costpercapita_bz157; assert_in_epsilon(-12.457111323972118, worksheet.costpercapita_bz157, 0.001); end
  def test_costpercapita_ca157; assert_in_epsilon(-12.126678611843047, worksheet.costpercapita_ca157, 0.001); end
  def test_costpercapita_bs157; assert_in_epsilon(37.55568640361976, worksheet.costpercapita_bs157, 0.001); end
  def test_costpercapita_cd157; assert_in_epsilon(105.03260194632847, worksheet.costpercapita_cd157, 0.001); end
  def test_costpercapita_aj157; assert_in_epsilon(30.844154871657018, worksheet.costpercapita_aj157, 0.001); end
  def test_costpercapita_ak157; assert_in_epsilon(16.508830359901502, worksheet.costpercapita_ak157, 0.001); end
  def test_costpercapita_al157; assert_in_epsilon(-5.939959649853833, worksheet.costpercapita_al157, 0.001); end
  def test_costpercapita_am157; assert_in_epsilon(-10.709914275552226, worksheet.costpercapita_am157, 0.001); end
  def test_costpercapita_an157; assert_in_epsilon(-10.174502789216543, worksheet.costpercapita_an157, 0.001); end
  def test_costpercapita_ao157; assert_in_epsilon(-10.950609435613993, worksheet.costpercapita_ao157, 0.001); end
  def test_costpercapita_ap157; assert_in_epsilon(-12.457111323972118, worksheet.costpercapita_ap157, 0.001); end
  def test_costpercapita_aq157; assert_in_epsilon(-12.126678611843047, worksheet.costpercapita_aq157, 0.001); end
  def test_costpercapita_ai157; assert_in_epsilon(37.55568640361976, worksheet.costpercapita_ai157, 0.001); end
  def test_costpercapita_at157; assert_in_epsilon(105.03260194632847, worksheet.costpercapita_at157, 0.001); end
  def test_costpercapita_cr157; assert_equal("ok", worksheet.costpercapita_cr157); end
  def test_costpercapita_a158; assert_equal("XVI.b.Oil", worksheet.costpercapita_a158); end
  def test_costpercapita_b158; assert_equal("Balancing imports - Oil", worksheet.costpercapita_b158); end
  def test_costpercapita_c158; assert_equal("Fossil Fuels", worksheet.costpercapita_c158); end
  def test_costpercapita_e158; assert_in_delta(0, (worksheet.costpercapita_e158||0), 0.001); end
  def test_costpercapita_f158; assert_in_delta(0, (worksheet.costpercapita_f158||0), 0.001); end
  def test_costpercapita_g158; assert_in_delta(0, (worksheet.costpercapita_g158||0), 0.001); end
  def test_costpercapita_h158; assert_in_delta(0, (worksheet.costpercapita_h158||0), 0.001); end
  def test_costpercapita_i158; assert_in_delta(0, (worksheet.costpercapita_i158||0), 0.001); end
  def test_costpercapita_j158; assert_in_delta(0, (worksheet.costpercapita_j158||0), 0.001); end
  def test_costpercapita_k158; assert_in_delta(0, (worksheet.costpercapita_k158||0), 0.001); end
  def test_costpercapita_l158; assert_in_delta(0, (worksheet.costpercapita_l158||0), 0.001); end
  def test_costpercapita_m158; assert_in_delta(0, (worksheet.costpercapita_m158||0), 0.001); end
  def test_costpercapita_o158; assert_in_delta(0, (worksheet.costpercapita_o158||0), 0.001); end
  def test_costpercapita_p158; assert_in_delta(0, (worksheet.costpercapita_p158||0), 0.001); end
  def test_costpercapita_q158; assert_in_delta(0, (worksheet.costpercapita_q158||0), 0.001); end
  def test_costpercapita_r158; assert_in_delta(0, (worksheet.costpercapita_r158||0), 0.001); end
  def test_costpercapita_s158; assert_in_delta(0, (worksheet.costpercapita_s158||0), 0.001); end
  def test_costpercapita_t158; assert_in_delta(0, (worksheet.costpercapita_t158||0), 0.001); end
  def test_costpercapita_u158; assert_in_delta(0, (worksheet.costpercapita_u158||0), 0.001); end
  def test_costpercapita_v158; assert_in_delta(0, (worksheet.costpercapita_v158||0), 0.001); end
  def test_costpercapita_w158; assert_in_delta(0, (worksheet.costpercapita_w158||0), 0.001); end
  def test_costpercapita_av158; assert_in_delta(0, (worksheet.costpercapita_av158||0), 0.001); end
  def test_costpercapita_aw158; assert_in_epsilon(5, worksheet.costpercapita_aw158, 0.001); end
  def test_costpercapita_ay158; assert_in_delta(0, (worksheet.costpercapita_ay158||0), 0.001); end
  def test_costpercapita_az158; assert_in_delta(0, (worksheet.costpercapita_az158||0), 0.001); end
  def test_costpercapita_ba158; assert_in_delta(0, (worksheet.costpercapita_ba158||0), 0.001); end
  def test_costpercapita_bb158; assert_in_delta(0, (worksheet.costpercapita_bb158||0), 0.001); end
  def test_costpercapita_bc158; assert_in_delta(0, (worksheet.costpercapita_bc158||0), 0.001); end
  def test_costpercapita_bd158; assert_in_delta(0, (worksheet.costpercapita_bd158||0), 0.001); end
  def test_costpercapita_be158; assert_in_delta(0, (worksheet.costpercapita_be158||0), 0.001); end
  def test_costpercapita_bf158; assert_in_delta(0, (worksheet.costpercapita_bf158||0), 0.001); end
  def test_costpercapita_bg158; assert_in_delta(0, (worksheet.costpercapita_bg158||0), 0.001); end
  def test_costpercapita_bi158; assert_in_delta(0, (worksheet.costpercapita_bi158||0), 0.001); end
  def test_costpercapita_bj158; assert_in_delta(0, (worksheet.costpercapita_bj158||0), 0.001); end
  def test_costpercapita_bk158; assert_in_delta(0, (worksheet.costpercapita_bk158||0), 0.001); end
  def test_costpercapita_bl158; assert_in_delta(0, (worksheet.costpercapita_bl158||0), 0.001); end
  def test_costpercapita_bm158; assert_in_delta(0, (worksheet.costpercapita_bm158||0), 0.001); end
  def test_costpercapita_bn158; assert_in_delta(0, (worksheet.costpercapita_bn158||0), 0.001); end
  def test_costpercapita_bo158; assert_in_delta(0, (worksheet.costpercapita_bo158||0), 0.001); end
  def test_costpercapita_bp158; assert_in_delta(0, (worksheet.costpercapita_bp158||0), 0.001); end
  def test_costpercapita_bq158; assert_in_delta(0, (worksheet.costpercapita_bq158||0), 0.001); end
  def test_costpercapita_cf158; assert_in_delta(0, (worksheet.costpercapita_cf158||0), 0.001); end
  def test_costpercapita_cg158; assert_in_delta(0, (worksheet.costpercapita_cg158||0), 0.001); end
  def test_costpercapita_ch158; assert_in_delta(0, (worksheet.costpercapita_ch158||0), 0.001); end
  def test_costpercapita_ci158; assert_in_delta(0, (worksheet.costpercapita_ci158||0), 0.001); end
  def test_costpercapita_cj158; assert_in_delta(0, (worksheet.costpercapita_cj158||0), 0.001); end
  def test_costpercapita_ck158; assert_in_delta(0, (worksheet.costpercapita_ck158||0), 0.001); end
  def test_costpercapita_cl158; assert_in_delta(0, (worksheet.costpercapita_cl158||0), 0.001); end
  def test_costpercapita_cm158; assert_in_delta(0, (worksheet.costpercapita_cm158||0), 0.001); end
  def test_costpercapita_cn158; assert_in_delta(0, (worksheet.costpercapita_cn158||0), 0.001); end
  def test_costpercapita_cp158; assert_in_delta(0, (worksheet.costpercapita_cp158||0), 0.001); end
  def test_costpercapita_cq158; assert_in_delta(0, (worksheet.costpercapita_cq158||0), 0.001); end
  def test_costpercapita_bt158; assert_in_epsilon(66.11728151372989, worksheet.costpercapita_bt158, 0.001); end
  def test_costpercapita_bu158; assert_in_epsilon(103.1854955707491, worksheet.costpercapita_bu158, 0.001); end
  def test_costpercapita_bv158; assert_in_epsilon(90.83932630665234, worksheet.costpercapita_bv158, 0.001); end
  def test_costpercapita_bw158; assert_in_epsilon(63.58179926432008, worksheet.costpercapita_bw158, 0.001); end
  def test_costpercapita_bx158; assert_in_epsilon(63.95545262739851, worksheet.costpercapita_bx158, 0.001); end
  def test_costpercapita_by158; assert_in_epsilon(50.35793225157396, worksheet.costpercapita_by158, 0.001); end
  def test_costpercapita_bz158; assert_in_epsilon(21.72836668641221, worksheet.costpercapita_bz158, 0.001); end
  def test_costpercapita_ca158; assert_in_epsilon(-13.72216679045791, worksheet.costpercapita_ca158, 0.001); end
  def test_costpercapita_bs158; assert_in_epsilon(25.305851963681697, worksheet.costpercapita_bs158, 0.001); end
  def test_costpercapita_cd158; assert_in_epsilon(1340.4970889625088, worksheet.costpercapita_cd158, 0.001); end
  def test_costpercapita_aj158; assert_in_epsilon(66.11728151372989, worksheet.costpercapita_aj158, 0.001); end
  def test_costpercapita_ak158; assert_in_epsilon(103.1854955707491, worksheet.costpercapita_ak158, 0.001); end
  def test_costpercapita_al158; assert_in_epsilon(90.83932630665234, worksheet.costpercapita_al158, 0.001); end
  def test_costpercapita_am158; assert_in_epsilon(63.58179926432008, worksheet.costpercapita_am158, 0.001); end
  def test_costpercapita_an158; assert_in_epsilon(63.95545262739851, worksheet.costpercapita_an158, 0.001); end
  def test_costpercapita_ao158; assert_in_epsilon(50.35793225157396, worksheet.costpercapita_ao158, 0.001); end
  def test_costpercapita_ap158; assert_in_epsilon(21.72836668641221, worksheet.costpercapita_ap158, 0.001); end
  def test_costpercapita_aq158; assert_in_epsilon(-13.72216679045791, worksheet.costpercapita_aq158, 0.001); end
  def test_costpercapita_ai158; assert_in_epsilon(25.305851963681697, worksheet.costpercapita_ai158, 0.001); end
  def test_costpercapita_at158; assert_in_epsilon(1340.4970889625088, worksheet.costpercapita_at158, 0.001); end
  def test_costpercapita_cr158; assert_equal("ok", worksheet.costpercapita_cr158); end
  def test_costpercapita_a159; assert_equal("XVI.b.Gas", worksheet.costpercapita_a159); end
  def test_costpercapita_b159; assert_equal("Balancing imports - Gas", worksheet.costpercapita_b159); end
  def test_costpercapita_c159; assert_equal("Fossil Fuels", worksheet.costpercapita_c159); end
  def test_costpercapita_e159; assert_in_delta(0, (worksheet.costpercapita_e159||0), 0.001); end
  def test_costpercapita_f159; assert_in_delta(0, (worksheet.costpercapita_f159||0), 0.001); end
  def test_costpercapita_g159; assert_in_delta(0, (worksheet.costpercapita_g159||0), 0.001); end
  def test_costpercapita_h159; assert_in_delta(0, (worksheet.costpercapita_h159||0), 0.001); end
  def test_costpercapita_i159; assert_in_delta(0, (worksheet.costpercapita_i159||0), 0.001); end
  def test_costpercapita_j159; assert_in_delta(0, (worksheet.costpercapita_j159||0), 0.001); end
  def test_costpercapita_k159; assert_in_delta(0, (worksheet.costpercapita_k159||0), 0.001); end
  def test_costpercapita_l159; assert_in_delta(0, (worksheet.costpercapita_l159||0), 0.001); end
  def test_costpercapita_m159; assert_in_delta(0, (worksheet.costpercapita_m159||0), 0.001); end
  def test_costpercapita_o159; assert_in_delta(0, (worksheet.costpercapita_o159||0), 0.001); end
  def test_costpercapita_p159; assert_in_delta(0, (worksheet.costpercapita_p159||0), 0.001); end
  def test_costpercapita_q159; assert_in_delta(0, (worksheet.costpercapita_q159||0), 0.001); end
  def test_costpercapita_r159; assert_in_delta(0, (worksheet.costpercapita_r159||0), 0.001); end
  def test_costpercapita_s159; assert_in_delta(0, (worksheet.costpercapita_s159||0), 0.001); end
  def test_costpercapita_t159; assert_in_delta(0, (worksheet.costpercapita_t159||0), 0.001); end
  def test_costpercapita_u159; assert_in_delta(0, (worksheet.costpercapita_u159||0), 0.001); end
  def test_costpercapita_v159; assert_in_delta(0, (worksheet.costpercapita_v159||0), 0.001); end
  def test_costpercapita_w159; assert_in_delta(0, (worksheet.costpercapita_w159||0), 0.001); end
  def test_costpercapita_av159; assert_in_delta(0, (worksheet.costpercapita_av159||0), 0.001); end
  def test_costpercapita_aw159; assert_in_epsilon(5, worksheet.costpercapita_aw159, 0.001); end
  def test_costpercapita_ay159; assert_in_delta(0, (worksheet.costpercapita_ay159||0), 0.001); end
  def test_costpercapita_az159; assert_in_delta(0, (worksheet.costpercapita_az159||0), 0.001); end
  def test_costpercapita_ba159; assert_in_delta(0, (worksheet.costpercapita_ba159||0), 0.001); end
  def test_costpercapita_bb159; assert_in_delta(0, (worksheet.costpercapita_bb159||0), 0.001); end
  def test_costpercapita_bc159; assert_in_delta(0, (worksheet.costpercapita_bc159||0), 0.001); end
  def test_costpercapita_bd159; assert_in_delta(0, (worksheet.costpercapita_bd159||0), 0.001); end
  def test_costpercapita_be159; assert_in_delta(0, (worksheet.costpercapita_be159||0), 0.001); end
  def test_costpercapita_bf159; assert_in_delta(0, (worksheet.costpercapita_bf159||0), 0.001); end
  def test_costpercapita_bg159; assert_in_delta(0, (worksheet.costpercapita_bg159||0), 0.001); end
  def test_costpercapita_bi159; assert_in_delta(0, (worksheet.costpercapita_bi159||0), 0.001); end
  def test_costpercapita_bj159; assert_in_delta(0, (worksheet.costpercapita_bj159||0), 0.001); end
  def test_costpercapita_bk159; assert_in_delta(0, (worksheet.costpercapita_bk159||0), 0.001); end
  def test_costpercapita_bl159; assert_in_delta(0, (worksheet.costpercapita_bl159||0), 0.001); end
  def test_costpercapita_bm159; assert_in_delta(0, (worksheet.costpercapita_bm159||0), 0.001); end
  def test_costpercapita_bn159; assert_in_delta(0, (worksheet.costpercapita_bn159||0), 0.001); end
  def test_costpercapita_bo159; assert_in_delta(0, (worksheet.costpercapita_bo159||0), 0.001); end
  def test_costpercapita_bp159; assert_in_delta(0, (worksheet.costpercapita_bp159||0), 0.001); end
  def test_costpercapita_bq159; assert_in_delta(0, (worksheet.costpercapita_bq159||0), 0.001); end
  def test_costpercapita_cf159; assert_in_delta(0, (worksheet.costpercapita_cf159||0), 0.001); end
  def test_costpercapita_cg159; assert_in_delta(0, (worksheet.costpercapita_cg159||0), 0.001); end
  def test_costpercapita_ch159; assert_in_delta(0, (worksheet.costpercapita_ch159||0), 0.001); end
  def test_costpercapita_ci159; assert_in_delta(0, (worksheet.costpercapita_ci159||0), 0.001); end
  def test_costpercapita_cj159; assert_in_delta(0, (worksheet.costpercapita_cj159||0), 0.001); end
  def test_costpercapita_ck159; assert_in_delta(0, (worksheet.costpercapita_ck159||0), 0.001); end
  def test_costpercapita_cl159; assert_in_delta(0, (worksheet.costpercapita_cl159||0), 0.001); end
  def test_costpercapita_cm159; assert_in_delta(0, (worksheet.costpercapita_cm159||0), 0.001); end
  def test_costpercapita_cn159; assert_in_delta(0, (worksheet.costpercapita_cn159||0), 0.001); end
  def test_costpercapita_cp159; assert_in_delta(0, (worksheet.costpercapita_cp159||0), 0.001); end
  def test_costpercapita_cq159; assert_in_delta(0, (worksheet.costpercapita_cq159||0), 0.001); end
  def test_costpercapita_bt159; assert_in_epsilon(79.43438417869316, worksheet.costpercapita_bt159, 0.001); end
  def test_costpercapita_bu159; assert_in_epsilon(65.497573450456, worksheet.costpercapita_bu159, 0.001); end
  def test_costpercapita_bv159; assert_in_epsilon(37.78718121737819, worksheet.costpercapita_bv159, 0.001); end
  def test_costpercapita_bw159; assert_in_epsilon(7.204366147041324, worksheet.costpercapita_bw159, 0.001); end
  def test_costpercapita_bx159; assert_in_delta(0.2147953806831896, worksheet.costpercapita_bx159, 0.001); end
  def test_costpercapita_by159; assert_in_epsilon(-11.216764065287494, worksheet.costpercapita_by159, 0.001); end
  def test_costpercapita_bz159; assert_in_epsilon(-25.24877240887084, worksheet.costpercapita_bz159, 0.001); end
  def test_costpercapita_ca159; assert_in_epsilon(-35.47558198289116, worksheet.costpercapita_ca159, 0.001); end
  def test_costpercapita_bs159; assert_in_epsilon(57.913740413014594, worksheet.costpercapita_bs159, 0.001); end
  def test_costpercapita_cd159; assert_in_epsilon(650.0124746497122, worksheet.costpercapita_cd159, 0.001); end
  def test_costpercapita_aj159; assert_in_epsilon(79.43438417869316, worksheet.costpercapita_aj159, 0.001); end
  def test_costpercapita_ak159; assert_in_epsilon(65.497573450456, worksheet.costpercapita_ak159, 0.001); end
  def test_costpercapita_al159; assert_in_epsilon(37.78718121737819, worksheet.costpercapita_al159, 0.001); end
  def test_costpercapita_am159; assert_in_epsilon(7.204366147041324, worksheet.costpercapita_am159, 0.001); end
  def test_costpercapita_an159; assert_in_delta(0.2147953806831896, worksheet.costpercapita_an159, 0.001); end
  def test_costpercapita_ao159; assert_in_epsilon(-11.216764065287494, worksheet.costpercapita_ao159, 0.001); end
  def test_costpercapita_ap159; assert_in_epsilon(-25.24877240887084, worksheet.costpercapita_ap159, 0.001); end
  def test_costpercapita_aq159; assert_in_epsilon(-35.47558198289116, worksheet.costpercapita_aq159, 0.001); end
  def test_costpercapita_ai159; assert_in_epsilon(57.913740413014594, worksheet.costpercapita_ai159, 0.001); end
  def test_costpercapita_at159; assert_in_epsilon(650.0124746497122, worksheet.costpercapita_at159, 0.001); end
  def test_costpercapita_cr159; assert_equal("ok", worksheet.costpercapita_cr159); end
  def test_costpercapita_a160; assert_equal("XVII.a", worksheet.costpercapita_a160); end
  def test_costpercapita_b160; assert_equal("District heating effective demand", worksheet.costpercapita_b160); end
  def test_costpercapita_c160; assert_equal("Buildings", worksheet.costpercapita_c160); end
  def test_costpercapita_y160; assert_in_delta(0, (worksheet.costpercapita_y160||0), 0.001); end
  def test_costpercapita_z160; assert_in_delta(0, (worksheet.costpercapita_z160||0), 0.001); end
  def test_costpercapita_aa160; assert_in_delta(0, (worksheet.costpercapita_aa160||0), 0.001); end
  def test_costpercapita_ab160; assert_in_delta(0, (worksheet.costpercapita_ab160||0), 0.001); end
  def test_costpercapita_ac160; assert_in_delta(0, (worksheet.costpercapita_ac160||0), 0.001); end
  def test_costpercapita_ad160; assert_in_delta(0, (worksheet.costpercapita_ad160||0), 0.001); end
  def test_costpercapita_ae160; assert_in_delta(0, (worksheet.costpercapita_ae160||0), 0.001); end
  def test_costpercapita_af160; assert_in_delta(0, (worksheet.costpercapita_af160||0), 0.001); end
  def test_costpercapita_ag160; assert_in_delta(0, (worksheet.costpercapita_ag160||0), 0.001); end
  def test_costpercapita_av160; assert_in_delta(0.1, worksheet.costpercapita_av160, 0.001); end
  def test_costpercapita_aw160; assert_in_epsilon(15, worksheet.costpercapita_aw160, 0.001); end
  def test_costpercapita_bt160; assert_in_delta(0.8327064024893526, worksheet.costpercapita_bt160, 0.001); end
  def test_costpercapita_bu160; assert_in_epsilon(2.0038730464271666, worksheet.costpercapita_bu160, 0.001); end
  def test_costpercapita_bv160; assert_in_epsilon(2.6585083462060313, worksheet.costpercapita_bv160, 0.001); end
  def test_costpercapita_bw160; assert_in_epsilon(3.154583567780299, worksheet.costpercapita_bw160, 0.001); end
  def test_costpercapita_bx160; assert_in_epsilon(2.7386944892743643, worksheet.costpercapita_bx160, 0.001); end
  def test_costpercapita_by160; assert_in_epsilon(2.3176630678320955, worksheet.costpercapita_by160, 0.001); end
  def test_costpercapita_bz160; assert_in_epsilon(2.0109074301235914, worksheet.costpercapita_bz160, 0.001); end
  def test_costpercapita_ca160; assert_in_epsilon(1.8695602267316214, worksheet.costpercapita_ca160, 0.001); end
  def test_costpercapita_bs160; assert_in_delta(0.5178543498142979, worksheet.costpercapita_bs160, 0.001); end
  def test_costpercapita_cd160; assert_in_epsilon(42.478689931813896, worksheet.costpercapita_cd160, 0.001); end
  def test_costpercapita_cg160; assert_in_delta(0.17078341040698536, worksheet.costpercapita_cg160, 0.001); end
  def test_costpercapita_ch160; assert_in_delta(0.06980993340416003, worksheet.costpercapita_ch160, 0.001); end
  def test_costpercapita_ci160; assert_in_delta(0.8965040635207104, worksheet.costpercapita_ci160, 0.001); end
  def test_costpercapita_cj160; assert_in_epsilon(1.598813799636106, worksheet.costpercapita_cj160, 0.001); end
  def test_costpercapita_ck160; assert_in_epsilon(1.4182223273448207, worksheet.costpercapita_ck160, 0.001); end
  def test_costpercapita_cl160; assert_in_epsilon(1.1955940668677834, worksheet.costpercapita_cl160, 0.001); end
  def test_costpercapita_cm160; assert_in_delta(0.9355833196587517, worksheet.costpercapita_cm160, 0.001); end
  def test_costpercapita_cn160; assert_in_delta(0.8033036181125507, worksheet.costpercapita_cn160, 0.001); end
  def test_costpercapita_cf160; assert_in_delta(-0.5505026454753682, worksheet.costpercapita_cf160, 0.001); end
  def test_costpercapita_cq160; assert_in_epsilon(14.741901776783763, worksheet.costpercapita_cq160, 0.001); end
  def test_costpercapita_aj160; assert_in_delta(0.6619229920823673, worksheet.costpercapita_aj160, 0.001); end
  def test_costpercapita_ak160; assert_in_epsilon(1.9340631130230066, worksheet.costpercapita_ak160, 0.001); end
  def test_costpercapita_al160; assert_in_epsilon(1.7620042826853206, worksheet.costpercapita_al160, 0.001); end
  def test_costpercapita_am160; assert_in_epsilon(1.5557697681441929, worksheet.costpercapita_am160, 0.001); end
  def test_costpercapita_an160; assert_in_epsilon(1.3204721619295436, worksheet.costpercapita_an160, 0.001); end
  def test_costpercapita_ao160; assert_in_epsilon(1.122069000964312, worksheet.costpercapita_ao160, 0.001); end
  def test_costpercapita_ap160; assert_in_epsilon(1.0753241104648397, worksheet.costpercapita_ap160, 0.001); end
  def test_costpercapita_aq160; assert_in_epsilon(1.0662566086190706, worksheet.costpercapita_aq160, 0.001); end
  def test_costpercapita_ai160; assert_in_epsilon(1.0683569952896659, worksheet.costpercapita_ai160, 0.001); end
  def test_costpercapita_at160; assert_in_epsilon(27.73678815503013, worksheet.costpercapita_at160, 0.001); end
  def test_costpercapita_cr160; assert_equal("ok", worksheet.costpercapita_cr160); end
  def test_costpercapita_a161; assert_equal("XVIII.a", worksheet.costpercapita_a161); end
  def test_costpercapita_b161; assert_equal("Storage of captured CO2", worksheet.costpercapita_b161); end
  def test_costpercapita_c161; assert_equal("Other", worksheet.costpercapita_c161); end
  def test_costpercapita_y161; assert_in_delta(0, (worksheet.costpercapita_y161||0), 0.001); end
  def test_costpercapita_z161; assert_in_delta(0, (worksheet.costpercapita_z161||0), 0.001); end
  def test_costpercapita_aa161; assert_in_delta(0, (worksheet.costpercapita_aa161||0), 0.001); end
  def test_costpercapita_ab161; assert_in_delta(0, (worksheet.costpercapita_ab161||0), 0.001); end
  def test_costpercapita_ac161; assert_in_delta(0, (worksheet.costpercapita_ac161||0), 0.001); end
  def test_costpercapita_ad161; assert_in_delta(0, (worksheet.costpercapita_ad161||0), 0.001); end
  def test_costpercapita_ae161; assert_in_delta(0, (worksheet.costpercapita_ae161||0), 0.001); end
  def test_costpercapita_af161; assert_in_delta(0, (worksheet.costpercapita_af161||0), 0.001); end
  def test_costpercapita_ag161; assert_in_delta(0, (worksheet.costpercapita_ag161||0), 0.001); end
  def test_costpercapita_av161; assert_in_delta(0.1, worksheet.costpercapita_av161, 0.001); end
  def test_costpercapita_aw161; assert_in_epsilon(15, worksheet.costpercapita_aw161, 0.001); end
  def test_costpercapita_bt161; assert_in_epsilon(1.7486098577152653, worksheet.costpercapita_bt161, 0.001); end
  def test_costpercapita_bu161; assert_in_epsilon(5.82900040008078, worksheet.costpercapita_bu161, 0.001); end
  def test_costpercapita_bv161; assert_in_epsilon(9.583073871251198, worksheet.costpercapita_bv161, 0.001); end
  def test_costpercapita_bw161; assert_in_epsilon(11.807366542110907, worksheet.costpercapita_bw161, 0.001); end
  def test_costpercapita_bx161; assert_in_epsilon(12.134153614648719, worksheet.costpercapita_bx161, 0.001); end
  def test_costpercapita_by161; assert_in_epsilon(13.076156568677423, worksheet.costpercapita_by161, 0.001); end
  def test_costpercapita_bz161; assert_in_epsilon(14.892867838533153, worksheet.costpercapita_bz161, 0.001); end
  def test_costpercapita_ca161; assert_in_epsilon(18.166924280986272, worksheet.costpercapita_ca161, 0.001); end
  def test_costpercapita_bs161; assert_in_delta(0, (worksheet.costpercapita_bs161||0), 0.001); end
  def test_costpercapita_cd161; assert_in_epsilon(182.22511807815408, worksheet.costpercapita_cd161, 0.001); end
  def test_costpercapita_cg161; assert_in_delta(-0.860326775170233, worksheet.costpercapita_cg161, 0.001); end
  def test_costpercapita_ch161; assert_in_delta(-0.4591536987255439, worksheet.costpercapita_ch161, 0.001); end
  def test_costpercapita_ci161; assert_in_epsilon(3.3482268883105957, worksheet.costpercapita_ci161, 0.001); end
  def test_costpercapita_cj161; assert_in_epsilon(5.443738046901127, worksheet.costpercapita_cj161, 0.001); end
  def test_costpercapita_ck161; assert_in_epsilon(5.352809892123491, worksheet.costpercapita_ck161, 0.001); end
  def test_costpercapita_cl161; assert_in_epsilon(5.3732101294473775, worksheet.costpercapita_cl161, 0.001); end
  def test_costpercapita_cm161; assert_in_epsilon(5.6608159472350525, worksheet.costpercapita_cm161, 0.001); end
  def test_costpercapita_cn161; assert_in_epsilon(6.228904805407936, worksheet.costpercapita_cn161, 0.001); end
  def test_costpercapita_cf161; assert_in_delta(0, (worksheet.costpercapita_cf161||0), 0.001); end
  def test_costpercapita_cq161; assert_in_epsilon(56.27457603866964, worksheet.costpercapita_cq161, 0.001); end
  def test_costpercapita_aj161; assert_in_epsilon(2.6089366328854986, worksheet.costpercapita_aj161, 0.001); end
  def test_costpercapita_ak161; assert_in_epsilon(6.288154098806324, worksheet.costpercapita_ak161, 0.001); end
  def test_costpercapita_al161; assert_in_epsilon(6.234846982940603, worksheet.costpercapita_al161, 0.001); end
  def test_costpercapita_am161; assert_in_epsilon(6.363628495209781, worksheet.costpercapita_am161, 0.001); end
  def test_costpercapita_an161; assert_in_epsilon(6.781343722525227, worksheet.costpercapita_an161, 0.001); end
  def test_costpercapita_ao161; assert_in_epsilon(7.702946439230044, worksheet.costpercapita_ao161, 0.001); end
  def test_costpercapita_ap161; assert_in_epsilon(9.232051891298102, worksheet.costpercapita_ap161, 0.001); end
  def test_costpercapita_aq161; assert_in_epsilon(11.938019475578335, worksheet.costpercapita_aq161, 0.001); end
  def test_costpercapita_ai161; assert_in_delta(0, (worksheet.costpercapita_ai161||0), 0.001); end
  def test_costpercapita_at161; assert_in_epsilon(125.95054203948447, worksheet.costpercapita_at161, 0.001); end
  def test_costpercapita_cr161; assert_equal("ok", worksheet.costpercapita_cr161); end
  def test_costpercapita_a162; assert_equal("Total", worksheet.costpercapita_a162); end
  def test_costpercapita_b162; assert_equal("Total", worksheet.costpercapita_b162); end
  def test_costpercapita_c162; assert_equal("Total", worksheet.costpercapita_c162); end
  def test_costpercapita_e162; assert_in_epsilon(2453.1174615210443, worksheet.costpercapita_e162, 0.001); end
  def test_costpercapita_f162; assert_in_epsilon(2610.55147716873, worksheet.costpercapita_f162, 0.001); end
  def test_costpercapita_g162; assert_in_epsilon(3113.1630228437834, worksheet.costpercapita_g162, 0.001); end
  def test_costpercapita_h162; assert_in_epsilon(3689.74959023698, worksheet.costpercapita_h162, 0.001); end
  def test_costpercapita_i162; assert_in_epsilon(3969.545987112196, worksheet.costpercapita_i162, 0.001); end
  def test_costpercapita_j162; assert_in_epsilon(4095.9091791149517, worksheet.costpercapita_j162, 0.001); end
  def test_costpercapita_k162; assert_in_epsilon(4542.990536365575, worksheet.costpercapita_k162, 0.001); end
  def test_costpercapita_l162; assert_in_epsilon(5283.628410684736, worksheet.costpercapita_l162, 0.001); end
  def test_costpercapita_m162; assert_in_epsilon(5523.833834635617, worksheet.costpercapita_m162, 0.001); end
  def test_costpercapita_o162; assert_in_epsilon(1728.7314950724285, worksheet.costpercapita_o162, 0.001); end
  def test_costpercapita_p162; assert_in_epsilon(1793.0637138541283, worksheet.costpercapita_p162, 0.001); end
  def test_costpercapita_q162; assert_in_epsilon(1932.308735354872, worksheet.costpercapita_q162, 0.001); end
  def test_costpercapita_r162; assert_in_epsilon(2182.438844946226, worksheet.costpercapita_r162, 0.001); end
  def test_costpercapita_s162; assert_in_epsilon(2382.5874653643705, worksheet.costpercapita_s162, 0.001); end
  def test_costpercapita_t162; assert_in_epsilon(2547.0250326238447, worksheet.costpercapita_t162, 0.001); end
  def test_costpercapita_u162; assert_in_epsilon(2593.6654529007737, worksheet.costpercapita_u162, 0.001); end
  def test_costpercapita_v162; assert_in_epsilon(2787.1087538058023, worksheet.costpercapita_v162, 0.001); end
  def test_costpercapita_w162; assert_in_epsilon(2805.52529699518, worksheet.costpercapita_w162, 0.001); end
  def test_costpercapita_y162; assert_in_epsilon(714.4836141166693, worksheet.costpercapita_y162, 0.001); end
  def test_costpercapita_z162; assert_in_epsilon(783.5887506700044, worksheet.costpercapita_z162, 0.001); end
  def test_costpercapita_aa162; assert_in_epsilon(773.9773966755956, worksheet.costpercapita_aa162, 0.001); end
  def test_costpercapita_ab162; assert_in_epsilon(678.3125896722199, worksheet.costpercapita_ab162, 0.001); end
  def test_costpercapita_ac162; assert_in_epsilon(425.2546173020594, worksheet.costpercapita_ac162, 0.001); end
  def test_costpercapita_ad162; assert_in_epsilon(121.75176930978765, worksheet.costpercapita_ad162, 0.001); end
  def test_costpercapita_ae162; assert_in_epsilon(-36.93779873097054, worksheet.costpercapita_ae162, 0.001); end
  def test_costpercapita_af162; assert_in_epsilon(-158.89008945517372, worksheet.costpercapita_af162, 0.001); end
  def test_costpercapita_ag162; assert_in_epsilon(-194.01150806359658, worksheet.costpercapita_ag162, 0.001); end
  def test_costpercapita_ai162; assert_in_epsilon(4896.332570710144, worksheet.costpercapita_ai162, 0.001); end
  def test_costpercapita_aj162; assert_in_epsilon(5187.203941692862, worksheet.costpercapita_aj162, 0.001); end
  def test_costpercapita_ak162; assert_in_epsilon(5819.449154874253, worksheet.costpercapita_ak162, 0.001); end
  def test_costpercapita_al162; assert_in_epsilon(6550.501024855426, worksheet.costpercapita_al162, 0.001); end
  def test_costpercapita_am162; assert_in_epsilon(6777.388069778627, worksheet.costpercapita_am162, 0.001); end
  def test_costpercapita_an162; assert_in_epsilon(6764.685981048581, worksheet.costpercapita_an162, 0.001); end
  def test_costpercapita_ao162; assert_in_epsilon(7099.718190535379, worksheet.costpercapita_ao162, 0.001); end
  def test_costpercapita_ap162; assert_in_epsilon(7911.8470750353645, worksheet.costpercapita_ap162, 0.001); end
  def test_costpercapita_aq162; assert_in_epsilon(8135.347623567197, worksheet.costpercapita_aq162, 0.001); end
  def test_costpercapita_as162; assert_in_epsilon(6571.385959121982, worksheet.costpercapita_as162, 0.001); end
  def test_costpercapita_ay162; assert_in_epsilon(903.6908066943245, worksheet.costpercapita_ay162, 0.001); end
  def test_costpercapita_az162; assert_in_epsilon(1605.3973125873601, worksheet.costpercapita_az162, 0.001); end
  def test_costpercapita_ba162; assert_in_epsilon(1923.9094653193317, worksheet.costpercapita_ba162, 0.001); end
  def test_costpercapita_bb162; assert_in_epsilon(2309.799117733984, worksheet.costpercapita_bb162, 0.001); end
  def test_costpercapita_bc162; assert_in_epsilon(2489.936259977305, worksheet.costpercapita_bc162, 0.001); end
  def test_costpercapita_bd162; assert_in_epsilon(2550.912326765534, worksheet.costpercapita_bd162, 0.001); end
  def test_costpercapita_be162; assert_in_epsilon(2803.345204788797, worksheet.costpercapita_be162, 0.001); end
  def test_costpercapita_bf162; assert_in_epsilon(3249.2487015310426, worksheet.costpercapita_bf162, 0.001); end
  def test_costpercapita_bg162; assert_in_epsilon(3400.7339099898004, worksheet.costpercapita_bg162, 0.001); end
  def test_costpercapita_bi162; assert_in_epsilon(903.6908066943245, worksheet.costpercapita_bi162, 0.001); end
  def test_costpercapita_bj162; assert_in_epsilon(2468.0633469511326, worksheet.costpercapita_bj162, 0.001); end
  def test_costpercapita_bk162; assert_in_epsilon(4259.909784465025, worksheet.costpercapita_bk162, 0.001); end
  def test_costpercapita_bl162; assert_in_epsilon(5903.7673475730735, worksheet.costpercapita_bl162, 0.001); end
  def test_costpercapita_bm162; assert_in_epsilon(7345.248617546591, worksheet.costpercapita_bm162, 0.001); end
  def test_costpercapita_bn162; assert_in_epsilon(8421.226452816372, worksheet.costpercapita_bn162, 0.001); end
  def test_costpercapita_bo162; assert_in_epsilon(9017.376259926192, worksheet.costpercapita_bo162, 0.001); end
  def test_costpercapita_bp162; assert_in_epsilon(10720.829414704805, worksheet.costpercapita_bp162, 0.001); end
  def test_costpercapita_bq162; assert_in_epsilon(11088.9882287352, worksheet.costpercapita_bq162, 0.001); end
  def test_costpercapita_bs162; assert_in_epsilon(3346.9059158834225, worksheet.costpercapita_bs162, 0.001); end
  def test_costpercapita_bt162; assert_in_epsilon(5044.7158114752665, worksheet.costpercapita_bt162, 0.001); end
  def test_costpercapita_bu162; assert_in_epsilon(6966.19591649549, worksheet.costpercapita_bu162, 0.001); end
  def test_costpercapita_bv162; assert_in_epsilon(8764.518782191524, worksheet.costpercapita_bv162, 0.001); end
  def test_costpercapita_bw162; assert_in_epsilon(10153.090700213024, worksheet.costpercapita_bw162, 0.001); end
  def test_costpercapita_bx162; assert_in_epsilon(11090.003254750009, worksheet.costpercapita_bx162, 0.001); end
  def test_costpercapita_by162; assert_in_epsilon(11574.103914095997, worksheet.costpercapita_by162, 0.001); end
  def test_costpercapita_bz162; assert_in_epsilon(13349.048079055436, worksheet.costpercapita_bz162, 0.001); end
  def test_costpercapita_ca162; assert_in_epsilon(13700.502017666779, worksheet.costpercapita_ca162, 0.001); end
  def test_costpercapita_cc162; assert_in_epsilon(9332.120487980772, worksheet.costpercapita_cc162, 0.001); end
  def test_costpercapita_cf162; assert_in_epsilon(-1549.4266548267199, worksheet.costpercapita_cf162, 0.001); end
  def test_costpercapita_cg162; assert_in_epsilon(-142.48813021759756, worksheet.costpercapita_cg162, 0.001); end
  def test_costpercapita_ch162; assert_in_epsilon(1146.7467616212418, worksheet.costpercapita_ch162, 0.001); end
  def test_costpercapita_ci162; assert_in_epsilon(2214.0177573360934, worksheet.costpercapita_ci162, 0.001); end
  def test_costpercapita_cj162; assert_in_epsilon(3375.702630434395, worksheet.costpercapita_cj162, 0.001); end
  def test_costpercapita_ck162; assert_in_epsilon(4325.317273701421, worksheet.costpercapita_ck162, 0.001); end
  def test_costpercapita_cl162; assert_in_epsilon(4474.3857235606165, worksheet.costpercapita_cl162, 0.001); end
  def test_costpercapita_cm162; assert_in_epsilon(5437.2010040200685, worksheet.costpercapita_cm162, 0.001); end
  def test_costpercapita_cn162; assert_in_epsilon(5565.1543940995825, worksheet.costpercapita_cn162, 0.001); end
  def test_costpercapita_cp162; assert_in_epsilon(2760.734528858789, worksheet.costpercapita_cp162, 0.001); end
  def test_costpercapita_cd162; assert_in_epsilon(183701.69455635114, worksheet.costpercapita_cd162, 0.001); end
  def test_costpercapita_cq162; assert_in_epsilon(49859.31104750553, worksheet.costpercapita_cq162, 0.001); end
  def test_costpercapita_at162; assert_in_epsilon(133842.38350884555, worksheet.costpercapita_at162, 0.001); end
  def test_costpercapita_cr162; assert_equal("ok", worksheet.costpercapita_cr162); end
  def test_costpercapita_c164; assert_equal("£m", worksheet.costpercapita_c164); end
  def test_costpercapita_e164; assert_equal("C1.Low", worksheet.costpercapita_e164); end
  def test_costpercapita_f164; assert_equal("Low estimate of capital costs", worksheet.costpercapita_f164); end
  def test_costpercapita_o164; assert_equal("C2.Low", worksheet.costpercapita_o164); end
  def test_costpercapita_p164; assert_equal("Low estimate of operating costs", worksheet.costpercapita_p164); end
  def test_costpercapita_y164; assert_equal("C3.Low", worksheet.costpercapita_y164); end
  def test_costpercapita_z164; assert_equal("Low estimate of fuel costs", worksheet.costpercapita_z164); end
  def test_costpercapita_ai164; assert_equal("Low estimate of total cost", worksheet.costpercapita_ai164); end
  def test_costpercapita_as164; assert_equal("Cashflow capital basis", worksheet.costpercapita_as164); end
  def test_costpercapita_av164; assert_equal("Loan", worksheet.costpercapita_av164); end
  def test_costpercapita_ay164; assert_equal("Repayments for capital spent in that period", worksheet.costpercapita_ay164); end
  def test_costpercapita_bi164; assert_equal("Repayments for outstanding capital", worksheet.costpercapita_bi164); end
  def test_costpercapita_bs164; assert_equal("Total cost (amortised capital)", worksheet.costpercapita_bs164); end
  def test_costpercapita_cc164; assert_equal("Amortised Capital", worksheet.costpercapita_cc164); end
  def test_costpercapita_cf164; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cf164); end
  def test_costpercapita_cp164; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cp164); end
  def test_costpercapita_c165; assert_equal("Category", worksheet.costpercapita_c165); end
  def test_costpercapita_e165; assert_equal("2010", worksheet.costpercapita_e165); end
  def test_costpercapita_f165; assert_equal("2015", worksheet.costpercapita_f165); end
  def test_costpercapita_g165; assert_equal("2020", worksheet.costpercapita_g165); end
  def test_costpercapita_h165; assert_equal("2025", worksheet.costpercapita_h165); end
  def test_costpercapita_i165; assert_equal("2030", worksheet.costpercapita_i165); end
  def test_costpercapita_j165; assert_equal("2035", worksheet.costpercapita_j165); end
  def test_costpercapita_k165; assert_equal("2040", worksheet.costpercapita_k165); end
  def test_costpercapita_l165; assert_equal("2045", worksheet.costpercapita_l165); end
  def test_costpercapita_m165; assert_equal("2050", worksheet.costpercapita_m165); end
  def test_costpercapita_o165; assert_equal("2010", worksheet.costpercapita_o165); end
  def test_costpercapita_p165; assert_equal("2015", worksheet.costpercapita_p165); end
  def test_costpercapita_q165; assert_equal("2020", worksheet.costpercapita_q165); end
  def test_costpercapita_r165; assert_equal("2025", worksheet.costpercapita_r165); end
  def test_costpercapita_s165; assert_equal("2030", worksheet.costpercapita_s165); end
  def test_costpercapita_t165; assert_equal("2035", worksheet.costpercapita_t165); end
  def test_costpercapita_u165; assert_equal("2040", worksheet.costpercapita_u165); end
  def test_costpercapita_v165; assert_equal("2045", worksheet.costpercapita_v165); end
  def test_costpercapita_w165; assert_equal("2050", worksheet.costpercapita_w165); end
  def test_costpercapita_y165; assert_equal("2010", worksheet.costpercapita_y165); end
  def test_costpercapita_z165; assert_equal("2015", worksheet.costpercapita_z165); end
  def test_costpercapita_aa165; assert_equal("2020", worksheet.costpercapita_aa165); end
  def test_costpercapita_ab165; assert_equal("2025", worksheet.costpercapita_ab165); end
  def test_costpercapita_ac165; assert_equal("2030", worksheet.costpercapita_ac165); end
  def test_costpercapita_ad165; assert_equal("2035", worksheet.costpercapita_ad165); end
  def test_costpercapita_ae165; assert_equal("2040", worksheet.costpercapita_ae165); end
  def test_costpercapita_af165; assert_equal("2045", worksheet.costpercapita_af165); end
  def test_costpercapita_ag165; assert_equal("2050", worksheet.costpercapita_ag165); end
  def test_costpercapita_ai165; assert_equal("2010", worksheet.costpercapita_ai165); end
  def test_costpercapita_aj165; assert_equal("2015", worksheet.costpercapita_aj165); end
  def test_costpercapita_ak165; assert_equal("2020", worksheet.costpercapita_ak165); end
  def test_costpercapita_al165; assert_equal("2025", worksheet.costpercapita_al165); end
  def test_costpercapita_am165; assert_equal("2030", worksheet.costpercapita_am165); end
  def test_costpercapita_an165; assert_equal("2035", worksheet.costpercapita_an165); end
  def test_costpercapita_ao165; assert_equal("2040", worksheet.costpercapita_ao165); end
  def test_costpercapita_ap165; assert_equal("2045", worksheet.costpercapita_ap165); end
  def test_costpercapita_aq165; assert_equal("2050", worksheet.costpercapita_aq165); end
  def test_costpercapita_as165; assert_equal("Mean", worksheet.costpercapita_as165); end
  def test_costpercapita_at165; assert_equal("NPV", worksheet.costpercapita_at165); end
  def test_costpercapita_av165; assert_equal("Rate", worksheet.costpercapita_av165); end
  def test_costpercapita_aw165; assert_equal("Years", worksheet.costpercapita_aw165); end
  def test_costpercapita_ay165; assert_in_epsilon(2010, worksheet.costpercapita_ay165, 0.001); end
  def test_costpercapita_az165; assert_in_epsilon(2015, worksheet.costpercapita_az165, 0.001); end
  def test_costpercapita_ba165; assert_in_epsilon(2020, worksheet.costpercapita_ba165, 0.001); end
  def test_costpercapita_bb165; assert_in_epsilon(2025, worksheet.costpercapita_bb165, 0.001); end
  def test_costpercapita_bc165; assert_in_epsilon(2030, worksheet.costpercapita_bc165, 0.001); end
  def test_costpercapita_bd165; assert_in_epsilon(2035, worksheet.costpercapita_bd165, 0.001); end
  def test_costpercapita_be165; assert_in_epsilon(2040, worksheet.costpercapita_be165, 0.001); end
  def test_costpercapita_bf165; assert_in_epsilon(2045, worksheet.costpercapita_bf165, 0.001); end
  def test_costpercapita_bg165; assert_in_epsilon(2050, worksheet.costpercapita_bg165, 0.001); end
  def test_costpercapita_bi165; assert_in_epsilon(2010, worksheet.costpercapita_bi165, 0.001); end
  def test_costpercapita_bj165; assert_in_epsilon(2015, worksheet.costpercapita_bj165, 0.001); end
  def test_costpercapita_bk165; assert_in_epsilon(2020, worksheet.costpercapita_bk165, 0.001); end
  def test_costpercapita_bl165; assert_in_epsilon(2025, worksheet.costpercapita_bl165, 0.001); end
  def test_costpercapita_bm165; assert_in_epsilon(2030, worksheet.costpercapita_bm165, 0.001); end
  def test_costpercapita_bn165; assert_in_epsilon(2035, worksheet.costpercapita_bn165, 0.001); end
  def test_costpercapita_bo165; assert_in_epsilon(2040, worksheet.costpercapita_bo165, 0.001); end
  def test_costpercapita_bp165; assert_in_epsilon(2045, worksheet.costpercapita_bp165, 0.001); end
  def test_costpercapita_bq165; assert_in_epsilon(2050, worksheet.costpercapita_bq165, 0.001); end
  def test_costpercapita_bs165; assert_equal("2010", worksheet.costpercapita_bs165); end
  def test_costpercapita_bt165; assert_equal("2015", worksheet.costpercapita_bt165); end
  def test_costpercapita_bu165; assert_equal("2020", worksheet.costpercapita_bu165); end
  def test_costpercapita_bv165; assert_equal("2025", worksheet.costpercapita_bv165); end
  def test_costpercapita_bw165; assert_equal("2030", worksheet.costpercapita_bw165); end
  def test_costpercapita_bx165; assert_equal("2035", worksheet.costpercapita_bx165); end
  def test_costpercapita_by165; assert_equal("2040", worksheet.costpercapita_by165); end
  def test_costpercapita_bz165; assert_equal("2045", worksheet.costpercapita_bz165); end
  def test_costpercapita_ca165; assert_equal("2050", worksheet.costpercapita_ca165); end
  def test_costpercapita_cc165; assert_equal("Mean", worksheet.costpercapita_cc165); end
  def test_costpercapita_cd165; assert_equal("NPV", worksheet.costpercapita_cd165); end
  def test_costpercapita_cf165; assert_equal("2010", worksheet.costpercapita_cf165); end
  def test_costpercapita_cg165; assert_equal("2015", worksheet.costpercapita_cg165); end
  def test_costpercapita_ch165; assert_equal("2020", worksheet.costpercapita_ch165); end
  def test_costpercapita_ci165; assert_equal("2025", worksheet.costpercapita_ci165); end
  def test_costpercapita_cj165; assert_equal("2030", worksheet.costpercapita_cj165); end
  def test_costpercapita_ck165; assert_equal("2035", worksheet.costpercapita_ck165); end
  def test_costpercapita_cl165; assert_equal("2040", worksheet.costpercapita_cl165); end
  def test_costpercapita_cm165; assert_equal("2045", worksheet.costpercapita_cm165); end
  def test_costpercapita_cn165; assert_equal("2050", worksheet.costpercapita_cn165); end
  def test_costpercapita_cp165; assert_equal("Mean", worksheet.costpercapita_cp165); end
  def test_costpercapita_cq165; assert_equal("NPV", worksheet.costpercapita_cq165); end
  def test_costpercapita_c166; assert_equal("Fossil Fuels", worksheet.costpercapita_c166); end
  def test_costpercapita_e166; assert_in_epsilon(11.563066015575156, worksheet.costpercapita_e166, 0.001); end
  def test_costpercapita_f166; assert_in_epsilon(10.203854734275321, worksheet.costpercapita_f166, 0.001); end
  def test_costpercapita_g166; assert_in_epsilon(8.420872602617925, worksheet.costpercapita_g166, 0.001); end
  def test_costpercapita_h166; assert_in_epsilon(6.059767081005619, worksheet.costpercapita_h166, 0.001); end
  def test_costpercapita_i166; assert_in_epsilon(4.036856094881025, worksheet.costpercapita_i166, 0.001); end
  def test_costpercapita_j166; assert_in_epsilon(2.4895223615588917, worksheet.costpercapita_j166, 0.001); end
  def test_costpercapita_k166; assert_in_epsilon(1.7716962992262562, worksheet.costpercapita_k166, 0.001); end
  def test_costpercapita_l166; assert_in_epsilon(1.0960405717852684, worksheet.costpercapita_l166, 0.001); end
  def test_costpercapita_m166; assert_in_delta(0.4676169661832931, worksheet.costpercapita_m166, 0.001); end
  def test_costpercapita_o166; assert_in_delta(0.03307774641531319, worksheet.costpercapita_o166, 0.001); end
  def test_costpercapita_p166; assert_in_delta(0.027291182599239305, worksheet.costpercapita_p166, 0.001); end
  def test_costpercapita_q166; assert_in_delta(0.01960311562591352, worksheet.costpercapita_q166, 0.001); end
  def test_costpercapita_r166; assert_in_delta(0.013010160887831764, worksheet.costpercapita_r166, 0.001); end
  def test_costpercapita_s166; assert_in_delta(0.00799241216380728, worksheet.costpercapita_s166, 0.001); end
  def test_costpercapita_t166; assert_in_delta(0.005674932700902415, worksheet.costpercapita_t166, 0.001); end
  def test_costpercapita_u166; assert_in_delta(0.003505797243149091, worksheet.costpercapita_u166, 0.001); end
  def test_costpercapita_v166; assert_in_delta(0.0014937600612878158, worksheet.costpercapita_v166, 0.001); end
  def test_costpercapita_w166; assert_in_delta(0, (worksheet.costpercapita_w166||0), 0.001); end
  def test_costpercapita_y166; assert_in_epsilon(721.031101604935, worksheet.costpercapita_y166, 0.001); end
  def test_costpercapita_z166; assert_in_epsilon(595.394259989327, worksheet.costpercapita_z166, 0.001); end
  def test_costpercapita_aa166; assert_in_epsilon(457.69191784289126, worksheet.costpercapita_aa166, 0.001); end
  def test_costpercapita_ab166; assert_in_epsilon(318.1656186652481, worksheet.costpercapita_ab166, 0.001); end
  def test_costpercapita_ac166; assert_in_epsilon(211.0332203280779, worksheet.costpercapita_ac166, 0.001); end
  def test_costpercapita_ad166; assert_in_epsilon(164.42833616364823, worksheet.costpercapita_ad166, 0.001); end
  def test_costpercapita_ae166; assert_in_epsilon(119.92953080244689, worksheet.costpercapita_ae166, 0.001); end
  def test_costpercapita_af166; assert_in_epsilon(75.33921420208549, worksheet.costpercapita_af166, 0.001); end
  def test_costpercapita_ag166; assert_in_epsilon(36.46777822407008, worksheet.costpercapita_ag166, 0.001); end
  def test_costpercapita_ai166; assert_in_epsilon(732.6272453669254, worksheet.costpercapita_ai166, 0.001); end
  def test_costpercapita_aj166; assert_in_epsilon(605.6254059062015, worksheet.costpercapita_aj166, 0.001); end
  def test_costpercapita_ak166; assert_in_epsilon(466.1323935611351, worksheet.costpercapita_ak166, 0.001); end
  def test_costpercapita_al166; assert_in_epsilon(324.23839590714147, worksheet.costpercapita_al166, 0.001); end
  def test_costpercapita_am166; assert_in_epsilon(215.07806883512274, worksheet.costpercapita_am166, 0.001); end
  def test_costpercapita_an166; assert_in_epsilon(166.923533457908, worksheet.costpercapita_an166, 0.001); end
  def test_costpercapita_ao166; assert_in_epsilon(121.70473289891629, worksheet.costpercapita_ao166, 0.001); end
  def test_costpercapita_ap166; assert_in_epsilon(76.43674853393205, worksheet.costpercapita_ap166, 0.001); end
  def test_costpercapita_aq166; assert_in_epsilon(36.93539519025338, worksheet.costpercapita_aq166, 0.001); end
  def test_costpercapita_as166; assert_in_epsilon(305.07799107305965, worksheet.costpercapita_as166, 0.001); end
  def test_costpercapita_ay166; assert_in_epsilon(2.3126132031150313, worksheet.costpercapita_ay166, 0.001); end
  def test_costpercapita_az166; assert_in_epsilon(3.401284911425107, worksheet.costpercapita_az166, 0.001); end
  def test_costpercapita_ba166; assert_in_epsilon(2.8069575342059747, worksheet.costpercapita_ba166, 0.001); end
  def test_costpercapita_bb166; assert_in_epsilon(2.0199223603352063, worksheet.costpercapita_bb166, 0.001); end
  def test_costpercapita_bc166; assert_in_epsilon(1.3456186982936749, worksheet.costpercapita_bc166, 0.001); end
  def test_costpercapita_bd166; assert_in_delta(0.8298407871862973, worksheet.costpercapita_bd166, 0.001); end
  def test_costpercapita_be166; assert_in_delta(0.5905654330754186, worksheet.costpercapita_be166, 0.001); end
  def test_costpercapita_bf166; assert_in_delta(0.36534685726175603, worksheet.costpercapita_bf166, 0.001); end
  def test_costpercapita_bg166; assert_in_delta(0.1558723220610977, worksheet.costpercapita_bg166, 0.001); end
  def test_costpercapita_bi166; assert_in_epsilon(2.3126132031150313, worksheet.costpercapita_bi166, 0.001); end
  def test_costpercapita_bj166; assert_in_epsilon(5.63763953401654, worksheet.costpercapita_bj166, 0.001); end
  def test_costpercapita_bk166; assert_in_epsilon(8.260031176990708, worksheet.costpercapita_bk166, 0.001); end
  def test_costpercapita_bl166; assert_in_epsilon(7.928032108544156, worksheet.costpercapita_bl166, 0.001); end
  def test_costpercapita_bm166; assert_in_epsilon(5.956088817201241, worksheet.costpercapita_bm166, 0.001); end
  def test_costpercapita_bn166; assert_in_epsilon(4.062219507626272, worksheet.costpercapita_bn166, 0.001); end
  def test_costpercapita_bo166; assert_in_epsilon(2.6886092266746178, worksheet.costpercapita_bo166, 0.001); end
  def test_costpercapita_bp166; assert_in_epsilon(1.7400744436035358, worksheet.costpercapita_bp166, 0.001); end
  def test_costpercapita_bq166; assert_in_epsilon(1.082384920754476, worksheet.costpercapita_bq166, 0.001); end
  def test_costpercapita_bs166; assert_in_epsilon(723.3767925544653, worksheet.costpercapita_bs166, 0.001); end
  def test_costpercapita_bt166; assert_in_epsilon(601.0591907059428, worksheet.costpercapita_bt166, 0.001); end
  def test_costpercapita_bu166; assert_in_epsilon(465.97155213550786, worksheet.costpercapita_bu166, 0.001); end
  def test_costpercapita_bv166; assert_in_epsilon(326.10666093468, worksheet.costpercapita_bv166, 0.001); end
  def test_costpercapita_bw166; assert_in_epsilon(216.99730155744294, worksheet.costpercapita_bw166, 0.001); end
  def test_costpercapita_bx166; assert_in_epsilon(168.4962306039754, worksheet.costpercapita_bx166, 0.001); end
  def test_costpercapita_by166; assert_in_epsilon(122.62164582636466, worksheet.costpercapita_by166, 0.001); end
  def test_costpercapita_bz166; assert_in_epsilon(77.08078240575031, worksheet.costpercapita_bz166, 0.001); end
  def test_costpercapita_ca166; assert_in_epsilon(37.55016314482456, worksheet.costpercapita_ca166, 0.001); end
  def test_costpercapita_cc166; assert_in_epsilon(304.3622577632172, worksheet.costpercapita_cc166, 0.001); end
  def test_costpercapita_cf166; assert_in_epsilon(-9.250452812460123, worksheet.costpercapita_cf166, 0.001); end
  def test_costpercapita_cg166; assert_in_epsilon(-4.566215200258781, worksheet.costpercapita_cg166, 0.001); end
  def test_costpercapita_ch166; assert_in_delta(-0.16084142562721557, worksheet.costpercapita_ch166, 0.001); end
  def test_costpercapita_ci166; assert_in_epsilon(1.8682650275385366, worksheet.costpercapita_ci166, 0.001); end
  def test_costpercapita_cj166; assert_in_epsilon(1.919232722320216, worksheet.costpercapita_cj166, 0.001); end
  def test_costpercapita_ck166; assert_in_epsilon(1.5726971460673809, worksheet.costpercapita_ck166, 0.001); end
  def test_costpercapita_cl166; assert_in_delta(0.9169129274483615, worksheet.costpercapita_cl166, 0.001); end
  def test_costpercapita_cm166; assert_in_delta(0.6440338718182674, worksheet.costpercapita_cm166, 0.001); end
  def test_costpercapita_cn166; assert_in_delta(0.6147679545711829, worksheet.costpercapita_cn166, 0.001); end
  def test_costpercapita_cp166; assert_in_delta(-0.7157333098424639, worksheet.costpercapita_cp166, 0.001); end
  def test_costpercapita_cd166; assert_in_epsilon(7167.1125289290185, worksheet.costpercapita_cd166, 0.001); end
  def test_costpercapita_cq166; assert_in_epsilon(-11.87993811297461, worksheet.costpercapita_cq166, 0.001); end
  def test_costpercapita_at166; assert_in_epsilon(7178.992467041992, worksheet.costpercapita_at166, 0.001); end
  def test_costpercapita_cr166; assert_equal("ok", worksheet.costpercapita_cr166); end
  def test_costpercapita_c167; assert_equal("Bioenergy", worksheet.costpercapita_c167); end
  def test_costpercapita_e167; assert_in_epsilon(46.09134286565994, worksheet.costpercapita_e167, 0.001); end
  def test_costpercapita_f167; assert_in_epsilon(47.27255508773856, worksheet.costpercapita_f167, 0.001); end
  def test_costpercapita_g167; assert_in_epsilon(49.322774869514475, worksheet.costpercapita_g167, 0.001); end
  def test_costpercapita_h167; assert_in_epsilon(47.83155477217679, worksheet.costpercapita_h167, 0.001); end
  def test_costpercapita_i167; assert_in_epsilon(47.478718318474094, worksheet.costpercapita_i167, 0.001); end
  def test_costpercapita_j167; assert_in_epsilon(47.07732271858905, worksheet.costpercapita_j167, 0.001); end
  def test_costpercapita_k167; assert_in_epsilon(46.23838255495646, worksheet.costpercapita_k167, 0.001); end
  def test_costpercapita_l167; assert_in_epsilon(46.183248559666296, worksheet.costpercapita_l167, 0.001); end
  def test_costpercapita_m167; assert_in_epsilon(42.45380347561115, worksheet.costpercapita_m167, 0.001); end
  def test_costpercapita_o167; assert_in_epsilon(59.362785766616504, worksheet.costpercapita_o167, 0.001); end
  def test_costpercapita_p167; assert_in_epsilon(60.17333273898444, worksheet.costpercapita_p167, 0.001); end
  def test_costpercapita_q167; assert_in_epsilon(61.08921427427467, worksheet.costpercapita_q167, 0.001); end
  def test_costpercapita_r167; assert_in_epsilon(60.474897768287505, worksheet.costpercapita_r167, 0.001); end
  def test_costpercapita_s167; assert_in_epsilon(59.725621697537946, worksheet.costpercapita_s167, 0.001); end
  def test_costpercapita_t167; assert_in_epsilon(58.802795698407294, worksheet.costpercapita_t167, 0.001); end
  def test_costpercapita_u167; assert_in_epsilon(58.189616825780696, worksheet.costpercapita_u167, 0.001); end
  def test_costpercapita_v167; assert_in_epsilon(57.85809748763247, worksheet.costpercapita_v167, 0.001); end
  def test_costpercapita_w167; assert_in_epsilon(57.84046043281126, worksheet.costpercapita_w167, 0.001); end
  def test_costpercapita_y167; assert_in_epsilon(2.9543252449201507, worksheet.costpercapita_y167, 0.001); end
  def test_costpercapita_z167; assert_in_epsilon(5.564410099854221, worksheet.costpercapita_z167, 0.001); end
  def test_costpercapita_aa167; assert_in_epsilon(9.998360823520223, worksheet.costpercapita_aa167, 0.001); end
  def test_costpercapita_ab167; assert_in_epsilon(14.780744297895481, worksheet.costpercapita_ab167, 0.001); end
  def test_costpercapita_ac167; assert_in_epsilon(20.639461284667618, worksheet.costpercapita_ac167, 0.001); end
  def test_costpercapita_ad167; assert_in_epsilon(25.645390410865172, worksheet.costpercapita_ad167, 0.001); end
  def test_costpercapita_ae167; assert_in_epsilon(31.728793436541753, worksheet.costpercapita_ae167, 0.001); end
  def test_costpercapita_af167; assert_in_epsilon(38.73587453588244, worksheet.costpercapita_af167, 0.001); end
  def test_costpercapita_ag167; assert_in_epsilon(46.60509142305019, worksheet.costpercapita_ag167, 0.001); end
  def test_costpercapita_ai167; assert_in_epsilon(108.40845387719659, worksheet.costpercapita_ai167, 0.001); end
  def test_costpercapita_aj167; assert_in_epsilon(113.01029792657721, worksheet.costpercapita_aj167, 0.001); end
  def test_costpercapita_ak167; assert_in_epsilon(120.41034996730936, worksheet.costpercapita_ak167, 0.001); end
  def test_costpercapita_al167; assert_in_epsilon(123.08719683835979, worksheet.costpercapita_al167, 0.001); end
  def test_costpercapita_am167; assert_in_epsilon(127.84380130067967, worksheet.costpercapita_am167, 0.001); end
  def test_costpercapita_an167; assert_in_epsilon(131.5255088278615, worksheet.costpercapita_an167, 0.001); end
  def test_costpercapita_ao167; assert_in_epsilon(136.15679281727893, worksheet.costpercapita_ao167, 0.001); end
  def test_costpercapita_ap167; assert_in_epsilon(142.77722058318122, worksheet.costpercapita_ap167, 0.001); end
  def test_costpercapita_aq167; assert_in_epsilon(146.8993553314726, worksheet.costpercapita_aq167, 0.001); end
  def test_costpercapita_as167; assert_in_epsilon(127.79099749665743, worksheet.costpercapita_as167, 0.001); end
  def test_costpercapita_ay167; assert_in_epsilon(8.994952270805527, worksheet.costpercapita_ay167, 0.001); end
  def test_costpercapita_az167; assert_in_epsilon(15.350973816057834, worksheet.costpercapita_az167, 0.001); end
  def test_costpercapita_ba167; assert_in_epsilon(16.008898833552134, worksheet.costpercapita_ba167, 0.001); end
  def test_costpercapita_bb167; assert_in_epsilon(15.473517754483794, worksheet.costpercapita_bb167, 0.001); end
  def test_costpercapita_bc167; assert_in_epsilon(15.317485585736943, worksheet.costpercapita_bc167, 0.001); end
  def test_costpercapita_bd167; assert_in_epsilon(15.107192470877019, worksheet.costpercapita_bd167, 0.001); end
  def test_costpercapita_be167; assert_in_epsilon(14.703955277235128, worksheet.costpercapita_be167, 0.001); end
  def test_costpercapita_bf167; assert_in_epsilon(14.5034438164655, worksheet.costpercapita_bf167, 0.001); end
  def test_costpercapita_bg167; assert_in_epsilon(13.715862667799149, worksheet.costpercapita_bg167, 0.001); end
  def test_costpercapita_bi167; assert_in_epsilon(8.994952270805527, worksheet.costpercapita_bi167, 0.001); end
  def test_costpercapita_bj167; assert_in_epsilon(24.04931691282371, worksheet.costpercapita_bj167, 0.001); end
  def test_costpercapita_bk167; assert_in_epsilon(39.27088559113104, worksheet.costpercapita_bk167, 0.001); end
  def test_costpercapita_bl167; assert_in_epsilon(45.577793188838356, worksheet.costpercapita_bl167, 0.001); end
  def test_costpercapita_bm167; assert_in_epsilon(46.02518228475201, worksheet.costpercapita_bm167, 0.001); end
  def test_costpercapita_bn167; assert_in_epsilon(45.71189540818527, worksheet.costpercapita_bn167, 0.001); end
  def test_costpercapita_bo167; assert_in_epsilon(45.30718578046382, worksheet.costpercapita_bo167, 0.001); end
  def test_costpercapita_bp167; assert_in_epsilon(45.166958095481114, worksheet.costpercapita_bp167, 0.001); end
  def test_costpercapita_bq167; assert_in_epsilon(43.99686279286381, worksheet.costpercapita_bq167, 0.001); end
  def test_costpercapita_bs167; assert_in_epsilon(71.31206328234218, worksheet.costpercapita_bs167, 0.001); end
  def test_costpercapita_bt167; assert_in_epsilon(89.78705975166237, worksheet.costpercapita_bt167, 0.001); end
  def test_costpercapita_bu167; assert_in_epsilon(110.35846068892593, worksheet.costpercapita_bu167, 0.001); end
  def test_costpercapita_bv167; assert_in_epsilon(120.83343525502134, worksheet.costpercapita_bv167, 0.001); end
  def test_costpercapita_bw167; assert_in_epsilon(126.39026526695758, worksheet.costpercapita_bw167, 0.001); end
  def test_costpercapita_bx167; assert_in_epsilon(130.1600815174577, worksheet.costpercapita_bx167, 0.001); end
  def test_costpercapita_by167; assert_in_epsilon(135.22559604278626, worksheet.costpercapita_by167, 0.001); end
  def test_costpercapita_bz167; assert_in_epsilon(141.76093011899601, worksheet.costpercapita_bz167, 0.001); end
  def test_costpercapita_ca167; assert_in_epsilon(148.44241464872525, worksheet.costpercapita_ca167, 0.001); end
  def test_costpercapita_cc167; assert_in_epsilon(119.36336739698608, worksheet.costpercapita_cc167, 0.001); end
  def test_costpercapita_cf167; assert_in_epsilon(-37.09639059485441, worksheet.costpercapita_cf167, 0.001); end
  def test_costpercapita_cg167; assert_in_epsilon(-23.223238174914854, worksheet.costpercapita_cg167, 0.001); end
  def test_costpercapita_ch167; assert_in_epsilon(-10.051889278383435, worksheet.costpercapita_ch167, 0.001); end
  def test_costpercapita_ci167; assert_in_epsilon(-2.253761583338431, worksheet.costpercapita_ci167, 0.001); end
  def test_costpercapita_cj167; assert_in_epsilon(-1.4535360337220853, worksheet.costpercapita_cj167, 0.001); end
  def test_costpercapita_ck167; assert_in_epsilon(-1.3654273104037822, worksheet.costpercapita_ck167, 0.001); end
  def test_costpercapita_cl167; assert_in_delta(-0.931196774492638, worksheet.costpercapita_cl167, 0.001); end
  def test_costpercapita_cm167; assert_in_epsilon(-1.0162904641851864, worksheet.costpercapita_cm167, 0.001); end
  def test_costpercapita_cn167; assert_in_epsilon(1.5430593172526605, worksheet.costpercapita_cn167, 0.001); end
  def test_costpercapita_cp167; assert_in_epsilon(-8.427630099671351, worksheet.costpercapita_cp167, 0.001); end
  def test_costpercapita_cd167; assert_in_epsilon(2449.5723926941846, worksheet.costpercapita_cd167, 0.001); end
  def test_costpercapita_cq167; assert_in_epsilon(-184.9357338040125, worksheet.costpercapita_cq167, 0.001); end
  def test_costpercapita_at167; assert_in_epsilon(2634.508126498197, worksheet.costpercapita_at167, 0.001); end
  def test_costpercapita_cr167; assert_equal("ok", worksheet.costpercapita_cr167); end
  def test_costpercapita_c168; assert_equal("Electricity", worksheet.costpercapita_c168); end
  def test_costpercapita_e168; assert_in_epsilon(218.32496716509795, worksheet.costpercapita_e168, 0.001); end
  def test_costpercapita_f168; assert_in_epsilon(234.9712503554646, worksheet.costpercapita_f168, 0.001); end
  def test_costpercapita_g168; assert_in_epsilon(294.8808038255464, worksheet.costpercapita_g168, 0.001); end
  def test_costpercapita_h168; assert_in_epsilon(298.0686681293392, worksheet.costpercapita_h168, 0.001); end
  def test_costpercapita_i168; assert_in_epsilon(287.2453882762825, worksheet.costpercapita_i168, 0.001); end
  def test_costpercapita_j168; assert_in_epsilon(289.4997079808939, worksheet.costpercapita_j168, 0.001); end
  def test_costpercapita_k168; assert_in_epsilon(307.0538467788753, worksheet.costpercapita_k168, 0.001); end
  def test_costpercapita_l168; assert_in_epsilon(306.7250637140313, worksheet.costpercapita_l168, 0.001); end
  def test_costpercapita_m168; assert_in_epsilon(239.24183888211195, worksheet.costpercapita_m168, 0.001); end
  def test_costpercapita_o168; assert_in_epsilon(34.140144460608255, worksheet.costpercapita_o168, 0.001); end
  def test_costpercapita_p168; assert_in_epsilon(33.1588501763358, worksheet.costpercapita_p168, 0.001); end
  def test_costpercapita_q168; assert_in_epsilon(39.349968504131205, worksheet.costpercapita_q168, 0.001); end
  def test_costpercapita_r168; assert_in_epsilon(48.10959276065595, worksheet.costpercapita_r168, 0.001); end
  def test_costpercapita_s168; assert_in_epsilon(54.67491204415503, worksheet.costpercapita_s168, 0.001); end
  def test_costpercapita_t168; assert_in_epsilon(62.78655407276436, worksheet.costpercapita_t168, 0.001); end
  def test_costpercapita_u168; assert_in_epsilon(67.97196641994272, worksheet.costpercapita_u168, 0.001); end
  def test_costpercapita_v168; assert_in_epsilon(73.39673237384565, worksheet.costpercapita_v168, 0.001); end
  def test_costpercapita_w168; assert_in_epsilon(75.15038025341487, worksheet.costpercapita_w168, 0.001); end
  def test_costpercapita_y168; assert_in_delta(0.2769900418633962, worksheet.costpercapita_y168, 0.001); end
  def test_costpercapita_z168; assert_in_delta(0.22499927188292207, worksheet.costpercapita_z168, 0.001); end
  def test_costpercapita_aa168; assert_in_delta(0.1243618353539784, worksheet.costpercapita_aa168, 0.001); end
  def test_costpercapita_ab168; assert_in_delta(0.04017038693498128, worksheet.costpercapita_ab168, 0.001); end
  def test_costpercapita_ac168; assert_in_epsilon(-17.337992240628964, worksheet.costpercapita_ac168, 0.001); end
  def test_costpercapita_ad168; assert_in_epsilon(-44.095331042076, worksheet.costpercapita_ad168, 0.001); end
  def test_costpercapita_ae168; assert_in_epsilon(-55.315196746680854, worksheet.costpercapita_ae168, 0.001); end
  def test_costpercapita_af168; assert_in_epsilon(-64.071080724354, worksheet.costpercapita_af168, 0.001); end
  def test_costpercapita_ag168; assert_in_epsilon(-67.21558960420873, worksheet.costpercapita_ag168, 0.001); end
  def test_costpercapita_ai168; assert_in_epsilon(252.74210166756959, worksheet.costpercapita_ai168, 0.001); end
  def test_costpercapita_aj168; assert_in_epsilon(268.3550998036833, worksheet.costpercapita_aj168, 0.001); end
  def test_costpercapita_ak168; assert_in_epsilon(334.3551341650316, worksheet.costpercapita_ak168, 0.001); end
  def test_costpercapita_al168; assert_in_epsilon(346.21843127693006, worksheet.costpercapita_al168, 0.001); end
  def test_costpercapita_am168; assert_in_epsilon(324.58230807980857, worksheet.costpercapita_am168, 0.001); end
  def test_costpercapita_an168; assert_in_epsilon(308.19093101158234, worksheet.costpercapita_an168, 0.001); end
  def test_costpercapita_ao168; assert_in_epsilon(319.7106164521371, worksheet.costpercapita_ao168, 0.001); end
  def test_costpercapita_ap168; assert_in_epsilon(316.050715363523, worksheet.costpercapita_ap168, 0.001); end
  def test_costpercapita_aq168; assert_in_epsilon(247.1766295313181, worksheet.costpercapita_aq168, 0.001); end
  def test_costpercapita_as168; assert_in_epsilon(301.9313297057315, worksheet.costpercapita_as168, 0.001); end
  def test_costpercapita_ay168; assert_in_epsilon(27.30035433696364, worksheet.costpercapita_ay168, 0.001); end
  def test_costpercapita_az168; assert_in_epsilon(50.639504018326335, worksheet.costpercapita_az168, 0.001); end
  def test_costpercapita_ba168; assert_in_epsilon(67.33974532218939, worksheet.costpercapita_ba168, 0.001); end
  def test_costpercapita_bb168; assert_in_epsilon(70.05188515960087, worksheet.costpercapita_bb168, 0.001); end
  def test_costpercapita_bc168; assert_in_epsilon(66.86240455904137, worksheet.costpercapita_bc168, 0.001); end
  def test_costpercapita_bd168; assert_in_epsilon(66.57655712175234, worksheet.costpercapita_bd168, 0.001); end
  def test_costpercapita_be168; assert_in_epsilon(67.93316998247772, worksheet.costpercapita_be168, 0.001); end
  def test_costpercapita_bf168; assert_in_epsilon(68.14699897805086, worksheet.costpercapita_bf168, 0.001); end
  def test_costpercapita_bg168; assert_in_epsilon(53.456445732962706, worksheet.costpercapita_bg168, 0.001); end
  def test_costpercapita_bi168; assert_in_epsilon(27.30035433696364, worksheet.costpercapita_bi168, 0.001); end
  def test_costpercapita_bj168; assert_in_epsilon(77.03962728045056, worksheet.costpercapita_bj168, 0.001); end
  def test_costpercapita_bk168; assert_in_epsilon(141.8572376943351, worksheet.costpercapita_bk168, 0.001); end
  def test_costpercapita_bl168; assert_in_epsilon(207.51672985623043, worksheet.costpercapita_bl168, 0.001); end
  def test_costpercapita_bm168; assert_in_epsilon(263.33254187375695, worksheet.costpercapita_bm168, 0.001); end
  def test_costpercapita_bn168; assert_in_epsilon(286.38046448321006, worksheet.costpercapita_bn168, 0.001); end
  def test_costpercapita_bo168; assert_in_epsilon(281.706523358993, worksheet.costpercapita_bo168, 0.001); end
  def test_costpercapita_bp168; assert_in_epsilon(339.1101711044086, worksheet.costpercapita_bp168, 0.001); end
  def test_costpercapita_bq168; assert_in_epsilon(287.375104719729, worksheet.costpercapita_bq168, 0.001); end
  def test_costpercapita_bs168; assert_in_epsilon(61.71748883943528, worksheet.costpercapita_bs168, 0.001); end
  def test_costpercapita_bt168; assert_in_epsilon(110.42347672866929, worksheet.costpercapita_bt168, 0.001); end
  def test_costpercapita_bu168; assert_in_epsilon(181.3315680338203, worksheet.costpercapita_bu168, 0.001); end
  def test_costpercapita_bv168; assert_in_epsilon(255.6664930038213, worksheet.costpercapita_bv168, 0.001); end
  def test_costpercapita_bw168; assert_in_epsilon(300.669461677283, worksheet.costpercapita_bw168, 0.001); end
  def test_costpercapita_bx168; assert_in_epsilon(305.07168751389844, worksheet.costpercapita_bx168, 0.001); end
  def test_costpercapita_by168; assert_in_epsilon(294.3632930322549, worksheet.costpercapita_by168, 0.001); end
  def test_costpercapita_bz168; assert_in_epsilon(348.4358227539002, worksheet.costpercapita_bz168, 0.001); end
  def test_costpercapita_ca168; assert_in_epsilon(295.30989536893514, worksheet.costpercapita_ca168, 0.001); end
  def test_costpercapita_cc168; assert_in_epsilon(239.2210207724464, worksheet.costpercapita_cc168, 0.001); end
  def test_costpercapita_cf168; assert_in_epsilon(-191.0246128281343, worksheet.costpercapita_cf168, 0.001); end
  def test_costpercapita_cg168; assert_in_epsilon(-157.93162307501404, worksheet.costpercapita_cg168, 0.001); end
  def test_costpercapita_ch168; assert_in_epsilon(-153.02356613121134, worksheet.costpercapita_ch168, 0.001); end
  def test_costpercapita_ci168; assert_in_epsilon(-90.55193827310875, worksheet.costpercapita_ci168, 0.001); end
  def test_costpercapita_cj168; assert_in_epsilon(-23.91284640252557, worksheet.costpercapita_cj168, 0.001); end
  def test_costpercapita_ck168; assert_in_epsilon(-3.119243497683841, worksheet.costpercapita_ck168, 0.001); end
  def test_costpercapita_cl168; assert_in_epsilon(-25.34732341988223, worksheet.costpercapita_cl168, 0.001); end
  def test_costpercapita_cm168; assert_in_epsilon(32.38510739037725, worksheet.costpercapita_cm168, 0.001); end
  def test_costpercapita_cn168; assert_in_epsilon(48.133265837617046, worksheet.costpercapita_cn168, 0.001); end
  def test_costpercapita_cp168; assert_in_epsilon(-62.710308933285084, worksheet.costpercapita_cp168, 0.001); end
  def test_costpercapita_cd168; assert_in_epsilon(4784.577320065149, worksheet.costpercapita_cd168, 0.001); end
  def test_costpercapita_cq168; assert_in_epsilon(-1666.8257657903252, worksheet.costpercapita_cq168, 0.001); end
  def test_costpercapita_at168; assert_in_epsilon(6451.403085855473, worksheet.costpercapita_at168, 0.001); end
  def test_costpercapita_cr168; assert_equal("ok", worksheet.costpercapita_cr168); end
  def test_costpercapita_c169; assert_equal("Buildings", worksheet.costpercapita_c169); end
  def test_costpercapita_e169; assert_in_epsilon(391.09299345605376, worksheet.costpercapita_e169, 0.001); end
  def test_costpercapita_f169; assert_in_epsilon(369.06975232628247, worksheet.costpercapita_f169, 0.001); end
  def test_costpercapita_g169; assert_in_epsilon(515.532828731788, worksheet.costpercapita_g169, 0.001); end
  def test_costpercapita_h169; assert_in_epsilon(530.2101021923833, worksheet.costpercapita_h169, 0.001); end
  def test_costpercapita_i169; assert_in_epsilon(569.4792377966703, worksheet.costpercapita_i169, 0.001); end
  def test_costpercapita_j169; assert_in_epsilon(612.494528156461, worksheet.costpercapita_j169, 0.001); end
  def test_costpercapita_k169; assert_in_epsilon(662.8562867822277, worksheet.costpercapita_k169, 0.001); end
  def test_costpercapita_l169; assert_in_epsilon(720.5863644730091, worksheet.costpercapita_l169, 0.001); end
  def test_costpercapita_m169; assert_in_epsilon(785.2878391317687, worksheet.costpercapita_m169, 0.001); end
  def test_costpercapita_o169; assert_in_epsilon(82.6535889649068, worksheet.costpercapita_o169, 0.001); end
  def test_costpercapita_p169; assert_in_epsilon(82.50037982941569, worksheet.costpercapita_p169, 0.001); end
  def test_costpercapita_q169; assert_in_epsilon(82.64051298405701, worksheet.costpercapita_q169, 0.001); end
  def test_costpercapita_r169; assert_in_epsilon(82.8986216342401, worksheet.costpercapita_r169, 0.001); end
  def test_costpercapita_s169; assert_in_epsilon(83.26233723062356, worksheet.costpercapita_s169, 0.001); end
  def test_costpercapita_t169; assert_in_epsilon(83.7110576523694, worksheet.costpercapita_t169, 0.001); end
  def test_costpercapita_u169; assert_in_epsilon(84.22369707004124, worksheet.costpercapita_u169, 0.001); end
  def test_costpercapita_v169; assert_in_epsilon(84.7862896025184, worksheet.costpercapita_v169, 0.001); end
  def test_costpercapita_w169; assert_in_epsilon(85.40263155438237, worksheet.costpercapita_w169, 0.001); end
  def test_costpercapita_y169; assert_in_delta(0, (worksheet.costpercapita_y169||0), 0.001); end
  def test_costpercapita_z169; assert_in_delta(0, (worksheet.costpercapita_z169||0), 0.001); end
  def test_costpercapita_aa169; assert_in_delta(0, (worksheet.costpercapita_aa169||0), 0.001); end
  def test_costpercapita_ab169; assert_in_delta(0, (worksheet.costpercapita_ab169||0), 0.001); end
  def test_costpercapita_ac169; assert_in_delta(0, (worksheet.costpercapita_ac169||0), 0.001); end
  def test_costpercapita_ad169; assert_in_delta(0, (worksheet.costpercapita_ad169||0), 0.001); end
  def test_costpercapita_ae169; assert_in_delta(0, (worksheet.costpercapita_ae169||0), 0.001); end
  def test_costpercapita_af169; assert_in_delta(0, (worksheet.costpercapita_af169||0), 0.001); end
  def test_costpercapita_ag169; assert_in_delta(0, (worksheet.costpercapita_ag169||0), 0.001); end
  def test_costpercapita_ai169; assert_in_epsilon(473.74658242096064, worksheet.costpercapita_ai169, 0.001); end
  def test_costpercapita_aj169; assert_in_epsilon(451.5701321556982, worksheet.costpercapita_aj169, 0.001); end
  def test_costpercapita_ak169; assert_in_epsilon(598.1733417158449, worksheet.costpercapita_ak169, 0.001); end
  def test_costpercapita_al169; assert_in_epsilon(613.1087238266233, worksheet.costpercapita_al169, 0.001); end
  def test_costpercapita_am169; assert_in_epsilon(652.7415750272938, worksheet.costpercapita_am169, 0.001); end
  def test_costpercapita_an169; assert_in_epsilon(696.2055858088305, worksheet.costpercapita_an169, 0.001); end
  def test_costpercapita_ao169; assert_in_epsilon(747.0799838522688, worksheet.costpercapita_ao169, 0.001); end
  def test_costpercapita_ap169; assert_in_epsilon(805.3726540755275, worksheet.costpercapita_ap169, 0.001); end
  def test_costpercapita_aq169; assert_in_epsilon(870.690470686151, worksheet.costpercapita_aq169, 0.001); end
  def test_costpercapita_as169; assert_in_epsilon(656.5210055076888, worksheet.costpercapita_as169, 0.001); end
  def test_costpercapita_ay169; assert_in_epsilon(59.91241422404899, worksheet.costpercapita_ay169, 0.001); end
  def test_costpercapita_az169; assert_in_epsilon(94.3623155780782, worksheet.costpercapita_az169, 0.001); end
  def test_costpercapita_ba169; assert_in_epsilon(142.20416875787777, worksheet.costpercapita_ba169, 0.001); end
  def test_costpercapita_bb169; assert_in_epsilon(147.54661494179294, worksheet.costpercapita_bb169, 0.001); end
  def test_costpercapita_bc169; assert_in_epsilon(161.28185114430914, worksheet.costpercapita_bc169, 0.001); end
  def test_costpercapita_bd169; assert_in_epsilon(175.95700851394, worksheet.costpercapita_bd169, 0.001); end
  def test_costpercapita_be169; assert_in_epsilon(191.94092552380707, worksheet.costpercapita_be169, 0.001); end
  def test_costpercapita_bf169; assert_in_epsilon(210.7716863992778, worksheet.costpercapita_bf169, 0.001); end
  def test_costpercapita_bg169; assert_in_epsilon(230.82370441018332, worksheet.costpercapita_bg169, 0.001); end
  def test_costpercapita_bi169; assert_in_epsilon(59.91241422404899, worksheet.costpercapita_bi169, 0.001); end
  def test_costpercapita_bj169; assert_in_epsilon(151.09776742614704, worksheet.costpercapita_bj169, 0.001); end
  def test_costpercapita_bk169; assert_in_epsilon(282.79602755420564, worksheet.costpercapita_bk169, 0.001); end
  def test_costpercapita_bl169; assert_in_epsilon(381.51565151067524, worksheet.costpercapita_bl169, 0.001); end
  def test_costpercapita_bm169; assert_in_epsilon(478.99895142033586, worksheet.costpercapita_bm169, 0.001); end
  def test_costpercapita_bn169; assert_in_epsilon(544.4485824870827, worksheet.costpercapita_bn169, 0.001); end
  def test_costpercapita_bo169; assert_in_epsilon(602.0175042226933, worksheet.costpercapita_bo169, 0.001); end
  def test_costpercapita_bp169; assert_in_epsilon(694.0912794219005, worksheet.costpercapita_bp169, 0.001); end
  def test_costpercapita_bq169; assert_in_epsilon(731.7377462548798, worksheet.costpercapita_bq169, 0.001); end
  def test_costpercapita_bs169; assert_in_epsilon(142.5660031889558, worksheet.costpercapita_bs169, 0.001); end
  def test_costpercapita_bt169; assert_in_epsilon(233.5981472555627, worksheet.costpercapita_bt169, 0.001); end
  def test_costpercapita_bu169; assert_in_epsilon(365.4365405382626, worksheet.costpercapita_bu169, 0.001); end
  def test_costpercapita_bv169; assert_in_epsilon(464.4142731449154, worksheet.costpercapita_bv169, 0.001); end
  def test_costpercapita_bw169; assert_in_epsilon(562.2612886509595, worksheet.costpercapita_bw169, 0.001); end
  def test_costpercapita_bx169; assert_in_epsilon(628.1596401394521, worksheet.costpercapita_bx169, 0.001); end
  def test_costpercapita_by169; assert_in_epsilon(686.2412012927344, worksheet.costpercapita_by169, 0.001); end
  def test_costpercapita_bz169; assert_in_epsilon(778.8775690244191, worksheet.costpercapita_bz169, 0.001); end
  def test_costpercapita_ca169; assert_in_epsilon(817.1403778092621, worksheet.costpercapita_ca169, 0.001); end
  def test_costpercapita_cc169; assert_in_epsilon(519.8550045605027, worksheet.costpercapita_cc169, 0.001); end
  def test_costpercapita_cf169; assert_in_epsilon(-331.1805792320048, worksheet.costpercapita_cf169, 0.001); end
  def test_costpercapita_cg169; assert_in_epsilon(-217.97198490013545, worksheet.costpercapita_cg169, 0.001); end
  def test_costpercapita_ch169; assert_in_epsilon(-232.73680117758238, worksheet.costpercapita_ch169, 0.001); end
  def test_costpercapita_ci169; assert_in_epsilon(-148.69445068170802, worksheet.costpercapita_ci169, 0.001); end
  def test_costpercapita_cj169; assert_in_epsilon(-90.48028637633445, worksheet.costpercapita_cj169, 0.001); end
  def test_costpercapita_ck169; assert_in_epsilon(-68.04594566937831, worksheet.costpercapita_ck169, 0.001); end
  def test_costpercapita_cl169; assert_in_epsilon(-60.838782559534465, worksheet.costpercapita_cl169, 0.001); end
  def test_costpercapita_cm169; assert_in_epsilon(-26.49508505110844, worksheet.costpercapita_cm169, 0.001); end
  def test_costpercapita_cn169; assert_in_epsilon(-53.550092876888925, worksheet.costpercapita_cn169, 0.001); end
  def test_costpercapita_cp169; assert_in_epsilon(-136.66600094718615, worksheet.costpercapita_cp169, 0.001); end
  def test_costpercapita_cd169; assert_in_epsilon(10051.676539149821, worksheet.costpercapita_cd169, 0.001); end
  def test_costpercapita_cq169; assert_in_epsilon(-3108.9443282618276, worksheet.costpercapita_cq169, 0.001); end
  def test_costpercapita_at169; assert_in_epsilon(13160.62086741165, worksheet.costpercapita_at169, 0.001); end
  def test_costpercapita_cr169; assert_equal("ok", worksheet.costpercapita_cr169); end
  def test_costpercapita_c170; assert_equal("Transport", worksheet.costpercapita_c170); end
  def test_costpercapita_e170; assert_in_epsilon(732.4925066901753, worksheet.costpercapita_e170, 0.001); end
  def test_costpercapita_f170; assert_in_epsilon(726.22277967027, worksheet.costpercapita_f170, 0.001); end
  def test_costpercapita_g170; assert_in_epsilon(664.901210011917, worksheet.costpercapita_g170, 0.001); end
  def test_costpercapita_h170; assert_in_epsilon(729.919544958311, worksheet.costpercapita_h170, 0.001); end
  def test_costpercapita_i170; assert_in_epsilon(682.4421156820779, worksheet.costpercapita_i170, 0.001); end
  def test_costpercapita_j170; assert_in_epsilon(555.4704943449938, worksheet.costpercapita_j170, 0.001); end
  def test_costpercapita_k170; assert_in_epsilon(485.99721021214634, worksheet.costpercapita_k170, 0.001); end
  def test_costpercapita_l170; assert_in_epsilon(427.7117089406323, worksheet.costpercapita_l170, 0.001); end
  def test_costpercapita_m170; assert_in_epsilon(355.9182200159096, worksheet.costpercapita_m170, 0.001); end
  def test_costpercapita_o170; assert_in_epsilon(1107.410746919577, worksheet.costpercapita_o170, 0.001); end
  def test_costpercapita_p170; assert_in_epsilon(1017.7963075650473, worksheet.costpercapita_p170, 0.001); end
  def test_costpercapita_q170; assert_in_epsilon(929.003523822013, worksheet.costpercapita_q170, 0.001); end
  def test_costpercapita_r170; assert_in_epsilon(908.2660702564942, worksheet.costpercapita_r170, 0.001); end
  def test_costpercapita_s170; assert_in_epsilon(847.9811893063439, worksheet.costpercapita_s170, 0.001); end
  def test_costpercapita_t170; assert_in_epsilon(804.4465664829427, worksheet.costpercapita_t170, 0.001); end
  def test_costpercapita_u170; assert_in_epsilon(670.6220576763614, worksheet.costpercapita_u170, 0.001); end
  def test_costpercapita_v170; assert_in_epsilon(648.5023413850256, worksheet.costpercapita_v170, 0.001); end
  def test_costpercapita_w170; assert_in_epsilon(486.31488412158143, worksheet.costpercapita_w170, 0.001); end
  def test_costpercapita_y170; assert_in_delta(0, (worksheet.costpercapita_y170||0), 0.001); end
  def test_costpercapita_z170; assert_in_delta(0, (worksheet.costpercapita_z170||0), 0.001); end
  def test_costpercapita_aa170; assert_in_delta(0, (worksheet.costpercapita_aa170||0), 0.001); end
  def test_costpercapita_ab170; assert_in_delta(0, (worksheet.costpercapita_ab170||0), 0.001); end
  def test_costpercapita_ac170; assert_in_delta(0, (worksheet.costpercapita_ac170||0), 0.001); end
  def test_costpercapita_ad170; assert_in_delta(0, (worksheet.costpercapita_ad170||0), 0.001); end
  def test_costpercapita_ae170; assert_in_delta(0, (worksheet.costpercapita_ae170||0), 0.001); end
  def test_costpercapita_af170; assert_in_delta(0, (worksheet.costpercapita_af170||0), 0.001); end
  def test_costpercapita_ag170; assert_in_delta(0, (worksheet.costpercapita_ag170||0), 0.001); end
  def test_costpercapita_ai170; assert_in_epsilon(1839.903253609752, worksheet.costpercapita_ai170, 0.001); end
  def test_costpercapita_aj170; assert_in_epsilon(1744.0190872353173, worksheet.costpercapita_aj170, 0.001); end
  def test_costpercapita_ak170; assert_in_epsilon(1593.9047338339303, worksheet.costpercapita_ak170, 0.001); end
  def test_costpercapita_al170; assert_in_epsilon(1638.1856152148055, worksheet.costpercapita_al170, 0.001); end
  def test_costpercapita_am170; assert_in_epsilon(1530.423304988422, worksheet.costpercapita_am170, 0.001); end
  def test_costpercapita_an170; assert_in_epsilon(1359.9170608279362, worksheet.costpercapita_an170, 0.001); end
  def test_costpercapita_ao170; assert_in_epsilon(1156.6192678885077, worksheet.costpercapita_ao170, 0.001); end
  def test_costpercapita_ap170; assert_in_epsilon(1076.214050325658, worksheet.costpercapita_ap170, 0.001); end
  def test_costpercapita_aq170; assert_in_epsilon(842.233104137491, worksheet.costpercapita_aq170, 0.001); end
  def test_costpercapita_as170; assert_in_epsilon(1420.1577197846466, worksheet.costpercapita_as170, 0.001); end
  def test_costpercapita_ay170; assert_in_epsilon(157.04981652840897, worksheet.costpercapita_ay170, 0.001); end
  def test_costpercapita_az170; assert_in_epsilon(265.0027995393117, worksheet.costpercapita_az170, 0.001); end
  def test_costpercapita_ba170; assert_in_epsilon(244.54922925212574, worksheet.costpercapita_ba170, 0.001); end
  def test_costpercapita_bb170; assert_in_epsilon(265.67101861936425, worksheet.costpercapita_bb170, 0.001); end
  def test_costpercapita_bc170; assert_in_epsilon(249.49880855619904, worksheet.costpercapita_bc170, 0.001); end
  def test_costpercapita_bd170; assert_in_epsilon(206.8439182151696, worksheet.costpercapita_bd170, 0.001); end
  def test_costpercapita_be170; assert_in_epsilon(183.70288401300982, worksheet.costpercapita_be170, 0.001); end
  def test_costpercapita_bf170; assert_in_epsilon(164.65007628972612, worksheet.costpercapita_bf170, 0.001); end
  def test_costpercapita_bg170; assert_in_epsilon(139.58702314666297, worksheet.costpercapita_bg170, 0.001); end
  def test_costpercapita_bi170; assert_in_epsilon(157.04981652840897, worksheet.costpercapita_bi170, 0.001); end
  def test_costpercapita_bj170; assert_in_epsilon(408.3631880230927, worksheet.costpercapita_bj170, 0.001); end
  def test_costpercapita_bk170; assert_in_epsilon(607.996597319566, worksheet.costpercapita_bk170, 0.001); end
  def test_costpercapita_bl170; assert_in_epsilon(681.1338342998368, worksheet.costpercapita_bl170, 0.001); end
  def test_costpercapita_bm170; assert_in_epsilon(671.1573832821801, worksheet.costpercapita_bm170, 0.001); end
  def test_costpercapita_bn170; assert_in_epsilon(637.6159650396501, worksheet.costpercapita_bn170, 0.001); end
  def test_costpercapita_bo170; assert_in_epsilon(560.5367316302151, worksheet.costpercapita_bo170, 0.001); end
  def test_costpercapita_bp170; assert_in_epsilon(480.7362850808077, worksheet.costpercapita_bp170, 0.001); end
  def test_costpercapita_bq170; assert_in_epsilon(415.4358167837369, worksheet.costpercapita_bq170, 0.001); end
  def test_costpercapita_bs170; assert_in_epsilon(1264.460563447986, worksheet.costpercapita_bs170, 0.001); end
  def test_costpercapita_bt170; assert_in_epsilon(1426.15949558814, worksheet.costpercapita_bt170, 0.001); end
  def test_costpercapita_bu170; assert_in_epsilon(1537.0001211415793, worksheet.costpercapita_bu170, 0.001); end
  def test_costpercapita_bv170; assert_in_epsilon(1589.3999045563312, worksheet.costpercapita_bv170, 0.001); end
  def test_costpercapita_bw170; assert_in_epsilon(1519.1385725885243, worksheet.costpercapita_bw170, 0.001); end
  def test_costpercapita_bx170; assert_in_epsilon(1442.0625315225925, worksheet.costpercapita_bx170, 0.001); end
  def test_costpercapita_by170; assert_in_epsilon(1231.1587893065764, worksheet.costpercapita_by170, 0.001); end
  def test_costpercapita_bz170; assert_in_epsilon(1129.2386264658332, worksheet.costpercapita_bz170, 0.001); end
  def test_costpercapita_ca170; assert_in_epsilon(901.7507009053182, worksheet.costpercapita_ca170, 0.001); end
  def test_costpercapita_cc170; assert_in_epsilon(1337.8188117247644, worksheet.costpercapita_cc170, 0.001); end
  def test_costpercapita_cf170; assert_in_epsilon(-575.4426901617662, worksheet.costpercapita_cf170, 0.001); end
  def test_costpercapita_cg170; assert_in_epsilon(-317.8595916471774, worksheet.costpercapita_cg170, 0.001); end
  def test_costpercapita_ch170; assert_in_epsilon(-56.90461269235095, worksheet.costpercapita_ch170, 0.001); end
  def test_costpercapita_ci170; assert_in_epsilon(-48.78571065847418, worksheet.costpercapita_ci170, 0.001); end
  def test_costpercapita_cj170; assert_in_epsilon(-11.284732399897827, worksheet.costpercapita_cj170, 0.001); end
  def test_costpercapita_ck170; assert_in_epsilon(82.14547069465634, worksheet.costpercapita_ck170, 0.001); end
  def test_costpercapita_cl170; assert_in_epsilon(74.53952141806857, worksheet.costpercapita_cl170, 0.001); end
  def test_costpercapita_cm170; assert_in_epsilon(53.02457614017534, worksheet.costpercapita_cm170, 0.001); end
  def test_costpercapita_cn170; assert_in_epsilon(59.51759676782734, worksheet.costpercapita_cn170, 0.001); end
  def test_costpercapita_cp170; assert_in_epsilon(-82.33890805988209, worksheet.costpercapita_cp170, 0.001); end
  def test_costpercapita_cd170; assert_in_epsilon(29451.995881472918, worksheet.costpercapita_cd170, 0.001); end
  def test_costpercapita_cq170; assert_in_epsilon(-1822.2939339244626, worksheet.costpercapita_cq170, 0.001); end
  def test_costpercapita_at170; assert_in_epsilon(31274.289815397377, worksheet.costpercapita_at170, 0.001); end
  def test_costpercapita_cr170; assert_equal("ok", worksheet.costpercapita_cr170); end
  def test_costpercapita_c171; assert_equal("Industry", worksheet.costpercapita_c171); end
  def test_costpercapita_e171; assert_in_epsilon(5.4047015656688275, worksheet.costpercapita_e171, 0.001); end
  def test_costpercapita_f171; assert_in_epsilon(4.984246780861958, worksheet.costpercapita_f171, 0.001); end
  def test_costpercapita_g171; assert_in_epsilon(4.858356386405024, worksheet.costpercapita_g171, 0.001); end
  def test_costpercapita_h171; assert_in_epsilon(4.700888290000853, worksheet.costpercapita_h171, 0.001); end
  def test_costpercapita_i171; assert_in_epsilon(4.728630539175748, worksheet.costpercapita_i171, 0.001); end
  def test_costpercapita_j171; assert_in_epsilon(5.010705813286479, worksheet.costpercapita_j171, 0.001); end
  def test_costpercapita_k171; assert_in_epsilon(5.628208343685769, worksheet.costpercapita_k171, 0.001); end
  def test_costpercapita_l171; assert_in_epsilon(6.791215962085182, worksheet.costpercapita_l171, 0.001); end
  def test_costpercapita_m171; assert_in_epsilon(8.841580657001476, worksheet.costpercapita_m171, 0.001); end
  def test_costpercapita_o171; assert_in_epsilon(103.24543259955918, worksheet.costpercapita_o171, 0.001); end
  def test_costpercapita_p171; assert_in_epsilon(102.65864893246626, worksheet.costpercapita_p171, 0.001); end
  def test_costpercapita_q171; assert_in_epsilon(102.25631773828056, worksheet.costpercapita_q171, 0.001); end
  def test_costpercapita_r171; assert_in_epsilon(102.24945924745845, worksheet.costpercapita_r171, 0.001); end
  def test_costpercapita_s171; assert_in_epsilon(102.81243706631844, worksheet.costpercapita_s171, 0.001); end
  def test_costpercapita_t171; assert_in_epsilon(103.93865214583896, worksheet.costpercapita_t171, 0.001); end
  def test_costpercapita_u171; assert_in_epsilon(105.45980682589112, worksheet.costpercapita_u171, 0.001); end
  def test_costpercapita_v171; assert_in_epsilon(107.29244909292589, worksheet.costpercapita_v171, 0.001); end
  def test_costpercapita_w171; assert_in_epsilon(109.44621995856852, worksheet.costpercapita_w171, 0.001); end
  def test_costpercapita_y171; assert_in_delta(0, (worksheet.costpercapita_y171||0), 0.001); end
  def test_costpercapita_z171; assert_in_delta(0, (worksheet.costpercapita_z171||0), 0.001); end
  def test_costpercapita_aa171; assert_in_delta(0, (worksheet.costpercapita_aa171||0), 0.001); end
  def test_costpercapita_ab171; assert_in_delta(0, (worksheet.costpercapita_ab171||0), 0.001); end
  def test_costpercapita_ac171; assert_in_delta(0, (worksheet.costpercapita_ac171||0), 0.001); end
  def test_costpercapita_ad171; assert_in_delta(0, (worksheet.costpercapita_ad171||0), 0.001); end
  def test_costpercapita_ae171; assert_in_delta(0, (worksheet.costpercapita_ae171||0), 0.001); end
  def test_costpercapita_af171; assert_in_delta(0, (worksheet.costpercapita_af171||0), 0.001); end
  def test_costpercapita_ag171; assert_in_delta(0, (worksheet.costpercapita_ag171||0), 0.001); end
  def test_costpercapita_ai171; assert_in_epsilon(108.65013416522801, worksheet.costpercapita_ai171, 0.001); end
  def test_costpercapita_aj171; assert_in_epsilon(107.64289571332822, worksheet.costpercapita_aj171, 0.001); end
  def test_costpercapita_ak171; assert_in_epsilon(107.11467412468558, worksheet.costpercapita_ak171, 0.001); end
  def test_costpercapita_al171; assert_in_epsilon(106.9503475374593, worksheet.costpercapita_al171, 0.001); end
  def test_costpercapita_am171; assert_in_epsilon(107.54106760549419, worksheet.costpercapita_am171, 0.001); end
  def test_costpercapita_an171; assert_in_epsilon(108.94935795912544, worksheet.costpercapita_an171, 0.001); end
  def test_costpercapita_ao171; assert_in_epsilon(111.0880151695769, worksheet.costpercapita_ao171, 0.001); end
  def test_costpercapita_ap171; assert_in_epsilon(114.08366505501107, worksheet.costpercapita_ap171, 0.001); end
  def test_costpercapita_aq171; assert_in_epsilon(118.28780061557, worksheet.costpercapita_aq171, 0.001); end
  def test_costpercapita_as171; assert_in_epsilon(110.03421754949765, worksheet.costpercapita_as171, 0.001); end
  def test_costpercapita_ay171; assert_in_epsilon(1.4219019598744653, worksheet.costpercapita_ay171, 0.001); end
  def test_costpercapita_az171; assert_in_epsilon(2.219871876260929, worksheet.costpercapita_az171, 0.001); end
  def test_costpercapita_ba171; assert_in_epsilon(2.3245562711971113, worksheet.costpercapita_ba171, 0.001); end
  def test_costpercapita_bb171; assert_in_epsilon(2.3719716640187167, worksheet.costpercapita_bb171, 0.001); end
  def test_costpercapita_bc171; assert_in_epsilon(2.5595849683183416, worksheet.costpercapita_bc171, 0.001); end
  def test_costpercapita_bd171; assert_in_epsilon(2.96547168436814, worksheet.costpercapita_bd171, 0.001); end
  def test_costpercapita_be171; assert_in_epsilon(3.6816595297844574, worksheet.costpercapita_be171, 0.001); end
  def test_costpercapita_bf171; assert_in_epsilon(4.925257230209449, worksheet.costpercapita_bf171, 0.001); end
  def test_costpercapita_bg171; assert_in_epsilon(7.042154384587883, worksheet.costpercapita_bg171, 0.001); end
  def test_costpercapita_bi171; assert_in_epsilon(1.4219019598744653, worksheet.costpercapita_bi171, 0.001); end
  def test_costpercapita_bj171; assert_in_epsilon(3.100308901299125, worksheet.costpercapita_bj171, 0.001); end
  def test_costpercapita_bk171; assert_in_epsilon(4.513106607991152, worksheet.costpercapita_bk171, 0.001); end
  def test_costpercapita_bl171; assert_in_epsilon(4.895185064241884, worksheet.costpercapita_bl171, 0.001); end
  def test_costpercapita_bm171; assert_in_epsilon(4.886362332850974, worksheet.costpercapita_bm171, 0.001); end
  def test_costpercapita_bn171; assert_in_epsilon(5.1304126703288215, worksheet.costpercapita_bn171, 0.001); end
  def test_costpercapita_bo171; assert_in_epsilon(5.718859831045535, worksheet.costpercapita_bo171, 0.001); end
  def test_costpercapita_bp171; assert_in_epsilon(6.859961119846306, worksheet.costpercapita_bp171, 0.001); end
  def test_costpercapita_bq171; assert_in_epsilon(8.893781663014998, worksheet.costpercapita_bq171, 0.001); end
  def test_costpercapita_bs171; assert_in_epsilon(104.66733455943364, worksheet.costpercapita_bs171, 0.001); end
  def test_costpercapita_bt171; assert_in_epsilon(105.7589578337654, worksheet.costpercapita_bt171, 0.001); end
  def test_costpercapita_bu171; assert_in_epsilon(106.7694243462717, worksheet.costpercapita_bu171, 0.001); end
  def test_costpercapita_bv171; assert_in_epsilon(107.14464431170033, worksheet.costpercapita_bv171, 0.001); end
  def test_costpercapita_bw171; assert_in_epsilon(107.69879939916942, worksheet.costpercapita_bw171, 0.001); end
  def test_costpercapita_bx171; assert_in_epsilon(109.06906481616777, worksheet.costpercapita_bx171, 0.001); end
  def test_costpercapita_by171; assert_in_epsilon(111.17866665693667, worksheet.costpercapita_by171, 0.001); end
  def test_costpercapita_bz171; assert_in_epsilon(114.1524102127722, worksheet.costpercapita_bz171, 0.001); end
  def test_costpercapita_ca171; assert_in_epsilon(118.34000162158353, worksheet.costpercapita_ca171, 0.001); end
  def test_costpercapita_cc171; assert_in_epsilon(109.41992263975563, worksheet.costpercapita_cc171, 0.001); end
  def test_costpercapita_cf171; assert_in_epsilon(-3.9827996057943613, worksheet.costpercapita_cf171, 0.001); end
  def test_costpercapita_cg171; assert_in_epsilon(-1.883937879562833, worksheet.costpercapita_cg171, 0.001); end
  def test_costpercapita_ch171; assert_in_delta(-0.34524977841387133, worksheet.costpercapita_ch171, 0.001); end
  def test_costpercapita_ci171; assert_in_delta(0.19429677424103087, worksheet.costpercapita_ci171, 0.001); end
  def test_costpercapita_cj171; assert_in_delta(0.15773179367522586, worksheet.costpercapita_cj171, 0.001); end
  def test_costpercapita_ck171; assert_in_delta(0.11970685704234228, worksheet.costpercapita_ck171, 0.001); end
  def test_costpercapita_cl171; assert_in_delta(0.09065148735976566, worksheet.costpercapita_cl171, 0.001); end
  def test_costpercapita_cm171; assert_in_delta(0.06874515776112332, worksheet.costpercapita_cm171, 0.001); end
  def test_costpercapita_cn171; assert_in_delta(0.052201006013522865, worksheet.costpercapita_cn171, 0.001); end
  def test_costpercapita_cp171; assert_in_delta(-0.6142949097420061, worksheet.costpercapita_cp171, 0.001); end
  def test_costpercapita_cd171; assert_in_epsilon(2279.837586390372, worksheet.costpercapita_cd171, 0.001); end
  def test_costpercapita_cq171; assert_in_epsilon(-11.571888617472682, worksheet.costpercapita_cq171, 0.001); end
  def test_costpercapita_at171; assert_in_epsilon(2291.409475007845, worksheet.costpercapita_at171, 0.001); end
  def test_costpercapita_cr171; assert_equal("ok", worksheet.costpercapita_cr171); end
  def test_costpercapita_c172; assert_equal("Other", worksheet.costpercapita_c172); end
  def test_costpercapita_e172; assert_in_delta(0, (worksheet.costpercapita_e172||0), 0.001); end
  def test_costpercapita_f172; assert_in_epsilon(1.4837383107049151, worksheet.costpercapita_f172, 0.001); end
  def test_costpercapita_g172; assert_in_epsilon(3.545357803074612, worksheet.costpercapita_g172, 0.001); end
  def test_costpercapita_h172; assert_in_epsilon(3.4852828641524165, worksheet.costpercapita_h172, 0.001); end
  def test_costpercapita_i172; assert_in_epsilon(3.5271510475965733, worksheet.costpercapita_i172, 0.001); end
  def test_costpercapita_j172; assert_in_epsilon(3.7271180260958783, worksheet.costpercapita_j172, 0.001); end
  def test_costpercapita_k172; assert_in_epsilon(4.198392438241272, worksheet.costpercapita_k172, 0.001); end
  def test_costpercapita_l172; assert_in_epsilon(4.99026105105412, worksheet.costpercapita_l172, 0.001); end
  def test_costpercapita_m172; assert_in_epsilon(6.400085872733202, worksheet.costpercapita_m172, 0.001); end
  def test_costpercapita_o172; assert_in_delta(0, (worksheet.costpercapita_o172||0), 0.001); end
  def test_costpercapita_p172; assert_in_delta(0.04679482364530887, worksheet.costpercapita_p172, 0.001); end
  def test_costpercapita_q172; assert_in_delta(0.11181513071235313, worksheet.costpercapita_q172, 0.001); end
  def test_costpercapita_r172; assert_in_delta(0.10992045956173005, worksheet.costpercapita_r172, 0.001); end
  def test_costpercapita_s172; assert_in_delta(0.11124091765496884, worksheet.costpercapita_s172, 0.001); end
  def test_costpercapita_t172; assert_in_delta(0.11754756851533153, worksheet.costpercapita_t172, 0.001); end
  def test_costpercapita_u172; assert_in_delta(0.13241083843684012, worksheet.costpercapita_u172, 0.001); end
  def test_costpercapita_v172; assert_in_delta(0.15738515622555302, worksheet.costpercapita_v172, 0.001); end
  def test_costpercapita_w172; assert_in_delta(0.20184886214004713, worksheet.costpercapita_w172, 0.001); end
  def test_costpercapita_y172; assert_in_delta(0, (worksheet.costpercapita_y172||0), 0.001); end
  def test_costpercapita_z172; assert_in_delta(0, (worksheet.costpercapita_z172||0), 0.001); end
  def test_costpercapita_aa172; assert_in_delta(0, (worksheet.costpercapita_aa172||0), 0.001); end
  def test_costpercapita_ab172; assert_in_delta(0, (worksheet.costpercapita_ab172||0), 0.001); end
  def test_costpercapita_ac172; assert_in_delta(0, (worksheet.costpercapita_ac172||0), 0.001); end
  def test_costpercapita_ad172; assert_in_delta(0, (worksheet.costpercapita_ad172||0), 0.001); end
  def test_costpercapita_ae172; assert_in_delta(0, (worksheet.costpercapita_ae172||0), 0.001); end
  def test_costpercapita_af172; assert_in_delta(0, (worksheet.costpercapita_af172||0), 0.001); end
  def test_costpercapita_ag172; assert_in_delta(0, (worksheet.costpercapita_ag172||0), 0.001); end
  def test_costpercapita_ai172; assert_in_delta(0, (worksheet.costpercapita_ai172||0), 0.001); end
  def test_costpercapita_aj172; assert_in_epsilon(1.5305331343502242, worksheet.costpercapita_aj172, 0.001); end
  def test_costpercapita_ak172; assert_in_epsilon(3.6571729337869647, worksheet.costpercapita_ak172, 0.001); end
  def test_costpercapita_al172; assert_in_epsilon(3.5952033237141463, worksheet.costpercapita_al172, 0.001); end
  def test_costpercapita_am172; assert_in_epsilon(3.638391965251542, worksheet.costpercapita_am172, 0.001); end
  def test_costpercapita_an172; assert_in_epsilon(3.84466559461121, worksheet.costpercapita_an172, 0.001); end
  def test_costpercapita_ao172; assert_in_epsilon(4.330803276678112, worksheet.costpercapita_ao172, 0.001); end
  def test_costpercapita_ap172; assert_in_epsilon(5.147646207279673, worksheet.costpercapita_ap172, 0.001); end
  def test_costpercapita_aq172; assert_in_epsilon(6.601934734873249, worksheet.costpercapita_aq172, 0.001); end
  def test_costpercapita_as172; assert_in_epsilon(3.5940390189494575, worksheet.costpercapita_as172, 0.001); end
  def test_costpercapita_ay172; assert_in_delta(0, (worksheet.costpercapita_ay172||0), 0.001); end
  def test_costpercapita_az172; assert_in_delta(0.49457943690163836, worksheet.costpercapita_az172, 0.001); end
  def test_costpercapita_ba172; assert_in_epsilon(1.1817859343582038, worksheet.costpercapita_ba172, 0.001); end
  def test_costpercapita_bb172; assert_in_epsilon(1.161760954717472, worksheet.costpercapita_bb172, 0.001); end
  def test_costpercapita_bc172; assert_in_epsilon(1.1757170158655244, worksheet.costpercapita_bc172, 0.001); end
  def test_costpercapita_bd172; assert_in_epsilon(1.2423726753652928, worksheet.costpercapita_bd172, 0.001); end
  def test_costpercapita_be172; assert_in_epsilon(1.399464146080424, worksheet.costpercapita_be172, 0.001); end
  def test_costpercapita_bf172; assert_in_epsilon(1.6634203503513736, worksheet.costpercapita_bf172, 0.001); end
  def test_costpercapita_bg172; assert_in_epsilon(2.133361957577734, worksheet.costpercapita_bg172, 0.001); end
  def test_costpercapita_bi172; assert_in_delta(0, (worksheet.costpercapita_bi172||0), 0.001); end
  def test_costpercapita_bj172; assert_in_delta(0.49457943690163836, worksheet.costpercapita_bj172, 0.001); end
  def test_costpercapita_bk172; assert_in_epsilon(1.660173755246457, worksheet.costpercapita_bk172, 0.001); end
  def test_costpercapita_bl172; assert_in_epsilon(2.7705299618097907, worksheet.costpercapita_bl172, 0.001); end
  def test_costpercapita_bm172; assert_in_epsilon(3.4196453506797555, worksheet.costpercapita_bm172, 0.001); end
  def test_costpercapita_bn172; assert_in_epsilon(3.4937978844568316, worksheet.costpercapita_bn172, 0.001); end
  def test_costpercapita_bo172; assert_in_epsilon(3.7388805208474225, worksheet.costpercapita_bo172, 0.001); end
  def test_costpercapita_bp172; assert_in_epsilon(4.226591215158667, worksheet.costpercapita_bp172, 0.001); end
  def test_costpercapita_bq172; assert_in_epsilon(5.111692276750545, worksheet.costpercapita_bq172, 0.001); end
  def test_costpercapita_bs172; assert_in_delta(0, (worksheet.costpercapita_bs172||0), 0.001); end
  def test_costpercapita_bt172; assert_in_delta(0.5413742605469473, worksheet.costpercapita_bt172, 0.001); end
  def test_costpercapita_bu172; assert_in_epsilon(1.7719888859588102, worksheet.costpercapita_bu172, 0.001); end
  def test_costpercapita_bv172; assert_in_epsilon(2.8804504213715205, worksheet.costpercapita_bv172, 0.001); end
  def test_costpercapita_bw172; assert_in_epsilon(3.5308862683347244, worksheet.costpercapita_bw172, 0.001); end
  def test_costpercapita_bx172; assert_in_epsilon(3.6113454529721634, worksheet.costpercapita_bx172, 0.001); end
  def test_costpercapita_by172; assert_in_epsilon(3.8712913592842626, worksheet.costpercapita_by172, 0.001); end
  def test_costpercapita_bz172; assert_in_epsilon(4.38397637138422, worksheet.costpercapita_bz172, 0.001); end
  def test_costpercapita_ca172; assert_in_epsilon(5.313541138890592, worksheet.costpercapita_ca172, 0.001); end
  def test_costpercapita_cc172; assert_in_epsilon(2.878317128749249, worksheet.costpercapita_cc172, 0.001); end
  def test_costpercapita_cf172; assert_in_delta(0, (worksheet.costpercapita_cf172||0), 0.001); end
  def test_costpercapita_cg172; assert_in_delta(-0.9891588738032768, worksheet.costpercapita_cg172, 0.001); end
  def test_costpercapita_ch172; assert_in_epsilon(-1.8851840478281547, worksheet.costpercapita_ch172, 0.001); end
  def test_costpercapita_ci172; assert_in_delta(-0.7147529023426258, worksheet.costpercapita_ci172, 0.001); end
  def test_costpercapita_cj172; assert_in_delta(-0.10750569691681777, worksheet.costpercapita_cj172, 0.001); end
  def test_costpercapita_ck172; assert_in_delta(-0.23332014163904682, worksheet.costpercapita_ck172, 0.001); end
  def test_costpercapita_cl172; assert_in_delta(-0.45951191739384967, worksheet.costpercapita_cl172, 0.001); end
  def test_costpercapita_cm172; assert_in_delta(-0.7636698358954535, worksheet.costpercapita_cm172, 0.001); end
  def test_costpercapita_cn172; assert_in_epsilon(-1.2883935959826573, worksheet.costpercapita_cn172, 0.001); end
  def test_costpercapita_cp172; assert_in_delta(-0.7157218902002092, worksheet.costpercapita_cp172, 0.001); end
  def test_costpercapita_cd172; assert_in_epsilon(54.34594961667932, worksheet.costpercapita_cd172, 0.001); end
  def test_costpercapita_cq172; assert_in_epsilon(-17.443227114941376, worksheet.costpercapita_cq172, 0.001); end
  def test_costpercapita_at172; assert_in_epsilon(71.78917673162069, worksheet.costpercapita_at172, 0.001); end
  def test_costpercapita_cr172; assert_equal("ok", worksheet.costpercapita_cr172); end
  def test_costpercapita_c173; assert_equal("Total", worksheet.costpercapita_c173); end
  def test_costpercapita_e3; assert_in_delta(0, (worksheet.costpercapita_e3||0), 0.001); end
  def test_costpercapita_e4; assert_in_delta(0, (worksheet.costpercapita_e4||0), 0.001); end
  def test_costpercapita_e5; assert_in_delta(0, (worksheet.costpercapita_e5||0), 0.001); end
  def test_costpercapita_e6; assert_in_epsilon(8.615117827148735, worksheet.costpercapita_e6, 0.001); end
  def test_costpercapita_e7; assert_in_epsilon(11.705323134712977, worksheet.costpercapita_e7, 0.001); end
  def test_costpercapita_e8; assert_in_epsilon(1.703845049721616, worksheet.costpercapita_e8, 0.001); end
  def test_costpercapita_e9; assert_in_delta(0.02446176846015897, worksheet.costpercapita_e9, 0.001); end
  def test_costpercapita_e10; assert_in_delta(0, (worksheet.costpercapita_e10||0), 0.001); end
  def test_costpercapita_e11; assert_in_epsilon(178.2641600898213, worksheet.costpercapita_e11, 0.001); end
  def test_costpercapita_e12; assert_in_epsilon(8.618962432915923, worksheet.costpercapita_e12, 0.001); end
  def test_costpercapita_e13; assert_in_delta(0.46835313991076033, worksheet.costpercapita_e13, 0.001); end
  def test_costpercapita_e14; assert_in_epsilon(2.2331630232645865, worksheet.costpercapita_e14, 0.001); end
  def test_costpercapita_e18; assert_in_epsilon(8.610082127493534, worksheet.costpercapita_e18, 0.001); end
  def test_costpercapita_e19; assert_in_epsilon(35.24809771490182, worksheet.costpercapita_e19, 0.001); end
  def test_costpercapita_e21; assert_in_delta(0, (worksheet.costpercapita_e21||0), 0.001); end
  def test_costpercapita_e22; assert_in_delta(0, (worksheet.costpercapita_e22||0), 0.001); end
  def test_costpercapita_e23; assert_in_epsilon(17.54370615532239, worksheet.costpercapita_e23, 0.001); end
  def test_costpercapita_e24; assert_in_delta(0, (worksheet.costpercapita_e24||0), 0.001); end
  def test_costpercapita_e25; assert_in_delta(0, (worksheet.costpercapita_e25||0), 0.001); end
  def test_costpercapita_e27; assert_in_epsilon(187.034441333024, worksheet.costpercapita_e27, 0.001); end
  def test_costpercapita_e28; assert_in_epsilon(26.19134715888665, worksheet.costpercapita_e28, 0.001); end
  def test_costpercapita_e29; assert_in_epsilon(35.931952545494006, worksheet.costpercapita_e29, 0.001); end
  def test_costpercapita_e30; assert_in_epsilon(2.0705194694660536, worksheet.costpercapita_e30, 0.001); end
  def test_costpercapita_e31; assert_in_delta(0.8524041168517503, worksheet.costpercapita_e31, 0.001); end
  def test_costpercapita_e32; assert_in_epsilon(658.2589487651188, worksheet.costpercapita_e32, 0.001); end
  def test_costpercapita_e33; assert_in_epsilon(1.5450269718139802, worksheet.costpercapita_e33, 0.001); end
  def test_costpercapita_e34; assert_in_delta(0, (worksheet.costpercapita_e34||0), 0.001); end
  def test_costpercapita_e35; assert_in_delta(0, (worksheet.costpercapita_e35||0), 0.001); end
  def test_costpercapita_e37; assert_in_epsilon(2.490259743866717, worksheet.costpercapita_e37, 0.001); end
  def test_costpercapita_e38; assert_in_epsilon(3.099705001825792, worksheet.costpercapita_e38, 0.001); end
  def test_costpercapita_e39; assert_in_epsilon(52.430382726922915, worksheet.costpercapita_e39, 0.001); end
  def test_costpercapita_e42; assert_in_delta(0, (worksheet.costpercapita_e42||0), 0.001); end
  def test_costpercapita_e43; assert_in_epsilon(4.552297448817077, worksheet.costpercapita_e43, 0.001); end
  def test_costpercapita_e47; assert_in_epsilon(11.563066015575156, worksheet.costpercapita_e47, 0.001); end
  def test_costpercapita_e51; assert_in_delta(0.4545261196842244, worksheet.costpercapita_e51, 0.001); end
  def test_costpercapita_e52; assert_in_delta(0, (worksheet.costpercapita_e52||0), 0.001); end
  def test_costpercapita_e173; assert_in_epsilon(1404.969577758231, worksheet.costpercapita_e173, 0.001); end
  def test_costpercapita_f3; assert_in_epsilon(2.394716597733955, worksheet.costpercapita_f3, 0.001); end
  def test_costpercapita_f4; assert_in_epsilon(2.0425903169823227, worksheet.costpercapita_f4, 0.001); end
  def test_costpercapita_f5; assert_in_delta(0, (worksheet.costpercapita_f5||0), 0.001); end
  def test_costpercapita_f6; assert_in_epsilon(7.415203332529532, worksheet.costpercapita_f6, 0.001); end
  def test_costpercapita_f7; assert_in_epsilon(39.112061057099496, worksheet.costpercapita_f7, 0.001); end
  def test_costpercapita_f8; assert_in_delta(0.3220183663610414, worksheet.costpercapita_f8, 0.001); end
  def test_costpercapita_f9; assert_in_delta(0.315665569548088, worksheet.costpercapita_f9, 0.001); end
  def test_costpercapita_f10; assert_in_delta(0.15280680657307869, worksheet.costpercapita_f10, 0.001); end
  def test_costpercapita_f11; assert_in_epsilon(154.29801778360078, worksheet.costpercapita_f11, 0.001); end
  def test_costpercapita_f12; assert_in_epsilon(22.983899821109123, worksheet.costpercapita_f12, 0.001); end
  def test_costpercapita_f13; assert_in_epsilon(5.176379282507545, worksheet.costpercapita_f13, 0.001); end
  def test_costpercapita_f14; assert_in_epsilon(2.4392672791301186, worksheet.costpercapita_f14, 0.001); end
  def test_costpercapita_f18; assert_in_epsilon(8.135703885835413, worksheet.costpercapita_f18, 0.001); end
  def test_costpercapita_f19; assert_in_epsilon(36.69758392277303, worksheet.costpercapita_f19, 0.001); end
  def test_costpercapita_f21; assert_in_delta(0, (worksheet.costpercapita_f21||0), 0.001); end
  def test_costpercapita_f22; assert_in_delta(0, (worksheet.costpercapita_f22||0), 0.001); end
  def test_costpercapita_f23; assert_in_epsilon(22.52489751250606, worksheet.costpercapita_f23, 0.001); end
  def test_costpercapita_f24; assert_in_epsilon(1.2168937300226612, worksheet.costpercapita_f24, 0.001); end
  def test_costpercapita_f25; assert_in_delta(0, (worksheet.costpercapita_f25||0), 0.001); end
  def test_costpercapita_f26; assert_in_epsilon(82.34779292525863, worksheet.costpercapita_f26, 0.001); end
  def test_costpercapita_f27; assert_in_epsilon(183.46328787839016, worksheet.costpercapita_f27, 0.001); end
  def test_costpercapita_f28; assert_in_epsilon(37.43475239464172, worksheet.costpercapita_f28, 0.001); end
  def test_costpercapita_f29; assert_in_epsilon(36.83585987139947, worksheet.costpercapita_f29, 0.001); end
  def test_costpercapita_f30; assert_in_epsilon(5.747406651212224, worksheet.costpercapita_f30, 0.001); end
  def test_costpercapita_f31; assert_in_delta(0.8376844239604146, worksheet.costpercapita_f31, 0.001); end
  def test_costpercapita_f32; assert_in_epsilon(568.1770863124565, worksheet.costpercapita_f32, 0.001); end
  def test_costpercapita_f33; assert_in_epsilon(33.24392652722606, worksheet.costpercapita_f33, 0.001); end
  def test_costpercapita_f34; assert_in_epsilon(29.18244783636547, worksheet.costpercapita_f34, 0.001); end
  def test_costpercapita_f35; assert_in_delta(0, (worksheet.costpercapita_f35||0), 0.001); end
  def test_costpercapita_f36; assert_in_epsilon(17.404056806484274, worksheet.costpercapita_f36, 0.001); end
  def test_costpercapita_f37; assert_in_epsilon(2.529685077832016, worksheet.costpercapita_f37, 0.001); end
  def test_costpercapita_f38; assert_in_epsilon(2.6004406813403134, worksheet.costpercapita_f38, 0.001); end
  def test_costpercapita_f39; assert_in_epsilon(73.08513642856543, worksheet.costpercapita_f39, 0.001); end
  def test_costpercapita_f42; assert_in_delta(0, (worksheet.costpercapita_f42||0), 0.001); end
  def test_costpercapita_f43; assert_in_epsilon(4.146562356901543, worksheet.costpercapita_f43, 0.001); end
  def test_costpercapita_f47; assert_in_epsilon(10.203854734275321, worksheet.costpercapita_f47, 0.001); end
  def test_costpercapita_f51; assert_in_delta(0.25675278427115733, worksheet.costpercapita_f51, 0.001); end
  def test_costpercapita_f52; assert_in_epsilon(1.4837383107049151, worksheet.costpercapita_f52, 0.001); end
  def test_costpercapita_f173; assert_in_epsilon(1394.208177265598, worksheet.costpercapita_f173, 0.001); end
  def test_costpercapita_g3; assert_in_delta(0, (worksheet.costpercapita_g3||0), 0.001); end
  def test_costpercapita_g4; assert_in_epsilon(1.831688307690023, worksheet.costpercapita_g4, 0.001); end
  def test_costpercapita_g5; assert_in_delta(0, (worksheet.costpercapita_g5||0), 0.001); end
  def test_costpercapita_g6; assert_in_epsilon(7.118701640219212, worksheet.costpercapita_g6, 0.001); end
  def test_costpercapita_g7; assert_in_epsilon(105.11373812190409, worksheet.costpercapita_g7, 0.001); end
  def test_costpercapita_g8; assert_in_delta(0.31147608063634685, worksheet.costpercapita_g8, 0.001); end
  def test_costpercapita_g9; assert_in_epsilon(2.65591569719696, worksheet.costpercapita_g9, 0.001); end
  def test_costpercapita_g10; assert_in_delta(0.9705058007759901, worksheet.costpercapita_g10, 0.001); end
  def test_costpercapita_g11; assert_in_epsilon(131.75088016724735, worksheet.costpercapita_g11, 0.001); end
  def test_costpercapita_g12; assert_in_epsilon(37.34883720930233, worksheet.costpercapita_g12, 0.001); end
  def test_costpercapita_g13; assert_in_epsilon(2.9737900788715246, worksheet.costpercapita_g13, 0.001); end
  def test_costpercapita_g14; assert_in_epsilon(2.5921567377161363, worksheet.costpercapita_g14, 0.001); end
  def test_costpercapita_g18; assert_in_epsilon(7.685131115044382, worksheet.costpercapita_g18, 0.001); end
  def test_costpercapita_g19; assert_in_epsilon(39.04548701675395, worksheet.costpercapita_g19, 0.001); end
  def test_costpercapita_g21; assert_in_delta(0, (worksheet.costpercapita_g21||0), 0.001); end
  def test_costpercapita_g22; assert_in_delta(0, (worksheet.costpercapita_g22||0), 0.001); end
  def test_costpercapita_g23; assert_in_epsilon(32.50338982771118, worksheet.costpercapita_g23, 0.001); end
  def test_costpercapita_g24; assert_in_epsilon(9.650718103293757, worksheet.costpercapita_g24, 0.001); end
  def test_costpercapita_g25; assert_in_delta(0, (worksheet.costpercapita_g25||0), 0.001); end
  def test_costpercapita_g26; assert_in_epsilon(215.66148584807507, worksheet.costpercapita_g26, 0.001); end
  def test_costpercapita_g27; assert_in_epsilon(179.87355101236724, worksheet.costpercapita_g27, 0.001); end
  def test_costpercapita_g28; assert_in_epsilon(39.78885569887224, worksheet.costpercapita_g28, 0.001); end
  def test_costpercapita_g29; assert_in_epsilon(36.81925301655403, worksheet.costpercapita_g29, 0.001); end
  def test_costpercapita_g30; assert_in_epsilon(5.176831175177255, worksheet.costpercapita_g30, 0.001); end
  def test_costpercapita_g31; assert_in_epsilon(1.0576562135931546, worksheet.costpercapita_g31, 0.001); end
  def test_costpercapita_g32; assert_in_epsilon(500.0234629200779, worksheet.costpercapita_g32, 0.001); end
  def test_costpercapita_g33; assert_in_epsilon(43.276430961099386, worksheet.costpercapita_g33, 0.001); end
  def test_costpercapita_g34; assert_in_epsilon(35.304549988452465, worksheet.costpercapita_g34, 0.001); end
  def test_costpercapita_g35; assert_in_delta(0, (worksheet.costpercapita_g35||0), 0.001); end
  def test_costpercapita_g36; assert_in_epsilon(20.480646451104583, worksheet.costpercapita_g36, 0.001); end
  def test_costpercapita_g37; assert_in_epsilon(3.058366485739952, worksheet.costpercapita_g37, 0.001); end
  def test_costpercapita_g38; assert_in_epsilon(2.0645085176000184, worksheet.costpercapita_g38, 0.001); end
  def test_costpercapita_g39; assert_in_epsilon(60.69324468784261, worksheet.costpercapita_g39, 0.001); end
  def test_costpercapita_g42; assert_in_delta(0, (worksheet.costpercapita_g42||0), 0.001); end
  def test_costpercapita_g43; assert_in_epsilon(3.8007001728118692, worksheet.costpercapita_g43, 0.001); end
  def test_costpercapita_g47; assert_in_epsilon(8.420872602617925, worksheet.costpercapita_g47, 0.001); end
  def test_costpercapita_g51; assert_in_delta(0.8640147714398403, worksheet.costpercapita_g51, 0.001); end
  def test_costpercapita_g52; assert_in_epsilon(3.545357803074612, worksheet.costpercapita_g52, 0.001); end
  def test_costpercapita_g173; assert_in_epsilon(1541.4622042308633, worksheet.costpercapita_g173, 0.001); end
  def test_costpercapita_h3; assert_in_delta(0, (worksheet.costpercapita_h3||0), 0.001); end
  def test_costpercapita_h4; assert_in_delta(-2.1497699895078375e-16, worksheet.costpercapita_h4, 0.001); end
  def test_costpercapita_h5; assert_in_delta(0, (worksheet.costpercapita_h5||0), 0.001); end
  def test_costpercapita_h6; assert_in_epsilon(6.8462042799268765, worksheet.costpercapita_h6, 0.001); end
  def test_costpercapita_h7; assert_in_epsilon(114.04059081577988, worksheet.costpercapita_h7, 0.001); end
  def test_costpercapita_h8; assert_in_delta(0.15091584943889025, worksheet.costpercapita_h8, 0.001); end
  def test_costpercapita_h9; assert_in_epsilon(1.9805752187969512, worksheet.costpercapita_h9, 0.001); end
  def test_costpercapita_h10; assert_in_epsilon(7.026539979706188, worksheet.costpercapita_h10, 0.001); end
  def test_costpercapita_h11; assert_in_epsilon(110.7174370670068, worksheet.costpercapita_h11, 0.001); end
  def test_costpercapita_h12; assert_in_epsilon(51.713774597495544, worksheet.costpercapita_h12, 0.001); end
  def test_costpercapita_h13; assert_in_delta(0, (worksheet.costpercapita_h13||0), 0.001); end
  def test_costpercapita_h14; assert_in_epsilon(2.822003017450806, worksheet.costpercapita_h14, 0.001); end
  def test_costpercapita_h18; assert_in_epsilon(7.163637414591245, worksheet.costpercapita_h18, 0.001); end
  def test_costpercapita_h19; assert_in_epsilon(37.84591434013473, worksheet.costpercapita_h19, 0.001); end
  def test_costpercapita_h21; assert_in_delta(0, (worksheet.costpercapita_h21||0), 0.001); end
  def test_costpercapita_h22; assert_in_delta(0, (worksheet.costpercapita_h22||0), 0.001); end
  def test_costpercapita_h23; assert_in_epsilon(38.11191009522706, worksheet.costpercapita_h23, 0.001); end
  def test_costpercapita_h24; assert_in_epsilon(19.194494823456505, worksheet.costpercapita_h24, 0.001); end
  def test_costpercapita_h25; assert_in_delta(0, (worksheet.costpercapita_h25||0), 0.001); end
  def test_costpercapita_h26; assert_in_epsilon(230.84478031218336, worksheet.costpercapita_h26, 0.001); end
  def test_costpercapita_h27; assert_in_epsilon(168.04031094399758, worksheet.costpercapita_h27, 0.001); end
  def test_costpercapita_h28; assert_in_epsilon(37.467386713371496, worksheet.costpercapita_h28, 0.001); end
  def test_costpercapita_h29; assert_in_epsilon(36.69485688929161, worksheet.costpercapita_h29, 0.001); end
  def test_costpercapita_h30; assert_in_epsilon(4.689170877184092, worksheet.costpercapita_h30, 0.001); end
  def test_costpercapita_h31; assert_in_epsilon(1.2075133510276488, worksheet.costpercapita_h31, 0.001); end
  def test_costpercapita_h32; assert_in_epsilon(136.23176975934717, worksheet.costpercapita_h32, 0.001); end
  def test_costpercapita_h33; assert_in_epsilon(401.1959993123592, worksheet.costpercapita_h33, 0.001); end
  def test_costpercapita_h34; assert_in_epsilon(113.48799538950767, worksheet.costpercapita_h34, 0.001); end
  def test_costpercapita_h35; assert_in_delta(0, (worksheet.costpercapita_h35||0), 0.001); end
  def test_costpercapita_h36; assert_in_epsilon(21.20085885099907, worksheet.costpercapita_h36, 0.001); end
  def test_costpercapita_h37; assert_in_epsilon(2.6330184279954394, worksheet.costpercapita_h37, 0.001); end
  def test_costpercapita_h38; assert_in_epsilon(1.5766491972699157, worksheet.costpercapita_h38, 0.001); end
  def test_costpercapita_h39; assert_in_epsilon(53.59325402083249, worksheet.costpercapita_h39, 0.001); end
  def test_costpercapita_h42; assert_in_delta(0, (worksheet.costpercapita_h42||0), 0.001); end
  def test_costpercapita_h43; assert_in_epsilon(3.4933749389732043, worksheet.costpercapita_h43, 0.001); end
  def test_costpercapita_h47; assert_in_epsilon(6.059767081005619, worksheet.costpercapita_h47, 0.001); end
  def test_costpercapita_h51; assert_in_delta(0.7598218588596074, worksheet.costpercapita_h51, 0.001); end
  def test_costpercapita_h52; assert_in_epsilon(3.4852828641524165, worksheet.costpercapita_h52, 0.001); end
  def test_costpercapita_h173; assert_in_epsilon(1620.2758082873693, worksheet.costpercapita_h173, 0.001); end
  def test_costpercapita_i3; assert_in_delta(0, (worksheet.costpercapita_i3||0), 0.001); end
  def test_costpercapita_i4; assert_in_delta(0, (worksheet.costpercapita_i4||0), 0.001); end
  def test_costpercapita_i5; assert_in_delta(0, (worksheet.costpercapita_i5||0), 0.001); end
  def test_costpercapita_i6; assert_in_delta(0, (worksheet.costpercapita_i6||0), 0.001); end
  def test_costpercapita_i7; assert_in_epsilon(121.75617663762397, worksheet.costpercapita_i7, 0.001); end
  def test_costpercapita_i8; assert_in_delta(0.14679280532754627, worksheet.costpercapita_i8, 0.001); end
  def test_costpercapita_i9; assert_in_epsilon(4.694546313048724, worksheet.costpercapita_i9, 0.001); end
  def test_costpercapita_i10; assert_in_epsilon(18.913567177672828, worksheet.costpercapita_i10, 0.001); end
  def test_costpercapita_i11; assert_in_epsilon(91.20182696312055, worksheet.costpercapita_i11, 0.001); end
  def test_costpercapita_i12; assert_in_epsilon(73.67754291904126, worksheet.costpercapita_i12, 0.001); end
  def test_costpercapita_i13; assert_in_delta(0, (worksheet.costpercapita_i13||0), 0.001); end
  def test_costpercapita_i14; assert_in_epsilon(3.0525231225265297, worksheet.costpercapita_i14, 0.001); end
  def test_costpercapita_i18; assert_in_epsilon(6.692136635309967, worksheet.costpercapita_i18, 0.001); end
  def test_costpercapita_i19; assert_in_epsilon(37.7340585606376, worksheet.costpercapita_i19, 0.001); end
  def test_costpercapita_i21; assert_in_delta(0, (worksheet.costpercapita_i21||0), 0.001); end
  def test_costpercapita_i22; assert_in_delta(0, (worksheet.costpercapita_i22||0), 0.001); end
  def test_costpercapita_i23; assert_in_epsilon(39.00921289698774, worksheet.costpercapita_i23, 0.001); end
  def test_costpercapita_i24; assert_in_epsilon(11.523265482501152, worksheet.costpercapita_i24, 0.001); end
  def test_costpercapita_i25; assert_in_delta(0, (worksheet.costpercapita_i25||0), 0.001); end
  def test_costpercapita_i26; assert_in_epsilon(267.2961795235789, worksheet.costpercapita_i26, 0.001); end
  def test_costpercapita_i27; assert_in_epsilon(151.5501033597275, worksheet.costpercapita_i27, 0.001); end
  def test_costpercapita_i28; assert_in_epsilon(35.58826226434154, worksheet.costpercapita_i28, 0.001); end
  def test_costpercapita_i29; assert_in_epsilon(36.4394777766649, worksheet.costpercapita_i29, 0.001); end
  def test_costpercapita_i30; assert_in_epsilon(4.280376522940618, worksheet.costpercapita_i30, 0.001); end
  def test_costpercapita_i31; assert_in_epsilon(1.4750621828896382, worksheet.costpercapita_i31, 0.001); end
  def test_costpercapita_i32; assert_in_epsilon(5.65540231580311, worksheet.costpercapita_i32, 0.001); end
  def test_costpercapita_i33; assert_in_epsilon(475.6422674778217, worksheet.costpercapita_i33, 0.001); end
  def test_costpercapita_i34; assert_in_epsilon(127.64199031644331, worksheet.costpercapita_i34, 0.001); end
  def test_costpercapita_i35; assert_in_delta(0, (worksheet.costpercapita_i35||0), 0.001); end
  def test_costpercapita_i36; assert_in_epsilon(22.138628144549237, worksheet.costpercapita_i36, 0.001); end
  def test_costpercapita_i37; assert_in_epsilon(2.7634890108891637, worksheet.costpercapita_i37, 0.001); end
  def test_costpercapita_i38; assert_in_epsilon(1.1413710054203146, worksheet.costpercapita_i38, 0.001); end
  def test_costpercapita_i39; assert_in_epsilon(47.45896741115108, worksheet.costpercapita_i39, 0.001); end
  def test_costpercapita_i42; assert_in_delta(0, (worksheet.costpercapita_i42||0), 0.001); end
  def test_costpercapita_i43; assert_in_epsilon(3.25356835628611, worksheet.costpercapita_i43, 0.001); end
  def test_costpercapita_i47; assert_in_epsilon(4.036856094881025, worksheet.costpercapita_i47, 0.001); end
  def test_costpercapita_i51; assert_in_delta(0.6472954303755271, worksheet.costpercapita_i51, 0.001); end
  def test_costpercapita_i52; assert_in_epsilon(3.5271510475965733, worksheet.costpercapita_i52, 0.001); end
  def test_costpercapita_i173; assert_in_epsilon(1598.9380977551582, worksheet.costpercapita_i173, 0.001); end
  def test_costpercapita_j3; assert_in_delta(0, (worksheet.costpercapita_j3||0), 0.001); end
  def test_costpercapita_j4; assert_in_delta(0, (worksheet.costpercapita_j4||0), 0.001); end
  def test_costpercapita_j5; assert_in_delta(0, (worksheet.costpercapita_j5||0), 0.001); end
  def test_costpercapita_j6; assert_in_delta(0, (worksheet.costpercapita_j6||0), 0.001); end
  def test_costpercapita_j7; assert_in_epsilon(108.83331080143275, worksheet.costpercapita_j7, 0.001); end
  def test_costpercapita_j8; assert_in_delta(0.14333499865727306, worksheet.costpercapita_j8, 0.001); end
  def test_costpercapita_j9; assert_in_epsilon(9.697359917609058, worksheet.costpercapita_j9, 0.001); end
  def test_costpercapita_j10; assert_in_delta(0, (worksheet.costpercapita_j10||0), 0.001); end
  def test_costpercapita_j11; assert_in_epsilon(116.7783581760825, worksheet.costpercapita_j11, 0.001); end
  def test_costpercapita_j12; assert_in_epsilon(100.9045770360261, worksheet.costpercapita_j12, 0.001); end
  def test_costpercapita_j13; assert_in_delta(0, (worksheet.costpercapita_j13||0), 0.001); end
  def test_costpercapita_j14; assert_in_epsilon(3.5114906119159968, worksheet.costpercapita_j14, 0.001); end
  def test_costpercapita_j18; assert_in_epsilon(6.354153940958431, worksheet.costpercapita_j18, 0.001); end
  def test_costpercapita_j19; assert_in_epsilon(37.21167816571462, worksheet.costpercapita_j19, 0.001); end
  def test_costpercapita_j21; assert_in_delta(0, (worksheet.costpercapita_j21||0), 0.001); end
  def test_costpercapita_j22; assert_in_delta(0, (worksheet.costpercapita_j22||0), 0.001); end
  def test_costpercapita_j23; assert_in_epsilon(43.72007274685007, worksheet.costpercapita_j23, 0.001); end
  def test_costpercapita_j24; assert_in_epsilon(10.327271340262254, worksheet.costpercapita_j24, 0.001); end
  def test_costpercapita_j25; assert_in_delta(0, (worksheet.costpercapita_j25||0), 0.001); end
  def test_costpercapita_j26; assert_in_epsilon(302.1833247456701, worksheet.costpercapita_j26, 0.001); end
  def test_costpercapita_j27; assert_in_epsilon(134.54912182969525, worksheet.costpercapita_j27, 0.001); end
  def test_costpercapita_j28; assert_in_epsilon(34.2157004056378, worksheet.costpercapita_j28, 0.001); end
  def test_costpercapita_j29; assert_in_epsilon(36.175607646405155, worksheet.costpercapita_j29, 0.001); end
  def test_costpercapita_j30; assert_in_epsilon(3.938601279606556, worksheet.costpercapita_j30, 0.001); end
  def test_costpercapita_j31; assert_in_epsilon(1.94285461990897, worksheet.costpercapita_j31, 0.001); end
  def test_costpercapita_j32; assert_in_epsilon(137.5806218997476, worksheet.costpercapita_j32, 0.001); end
  def test_costpercapita_j33; assert_in_epsilon(152.36027156154256, worksheet.costpercapita_j33, 0.001); end
  def test_costpercapita_j34; assert_in_epsilon(197.2877536698708, worksheet.costpercapita_j34, 0.001); end
  def test_costpercapita_j35; assert_in_delta(0, (worksheet.costpercapita_j35||0), 0.001); end
  def test_costpercapita_j36; assert_in_epsilon(22.84582245580723, worksheet.costpercapita_j36, 0.001); end
  def test_costpercapita_j37; assert_in_epsilon(2.545368492608016, worksheet.costpercapita_j37, 0.001); end
  def test_costpercapita_j38; assert_in_delta(0.7830284975039993, worksheet.costpercapita_j38, 0.001); end
  def test_costpercapita_j39; assert_in_epsilon(42.067627767913514, worksheet.costpercapita_j39, 0.001); end
  def test_costpercapita_j42; assert_in_delta(0, (worksheet.costpercapita_j42||0), 0.001); end
  def test_costpercapita_j43; assert_in_epsilon(3.067851193377509, worksheet.costpercapita_j43, 0.001); end
  def test_costpercapita_j47; assert_in_epsilon(2.4895223615588917, worksheet.costpercapita_j47, 0.001); end
  def test_costpercapita_j51; assert_in_delta(0.5275952134200101, worksheet.costpercapita_j51, 0.001); end
  def test_costpercapita_j52; assert_in_epsilon(3.7271180260958783, worksheet.costpercapita_j52, 0.001); end
  def test_costpercapita_j173; assert_in_epsilon(1515.769399401879, worksheet.costpercapita_j173, 0.001); end
  def test_costpercapita_k3; assert_in_delta(0, (worksheet.costpercapita_k3||0), 0.001); end
  def test_costpercapita_k4; assert_in_delta(0, (worksheet.costpercapita_k4||0), 0.001); end
  def test_costpercapita_k5; assert_in_delta(0, (worksheet.costpercapita_k5||0), 0.001); end
  def test_costpercapita_k6; assert_in_delta(0, (worksheet.costpercapita_k6||0), 0.001); end
  def test_costpercapita_k7; assert_in_epsilon(96.67190805692648, worksheet.costpercapita_k7, 0.001); end
  def test_costpercapita_k8; assert_in_delta(0.14027818111139942, worksheet.costpercapita_k8, 0.001); end
  def test_costpercapita_k9; assert_in_epsilon(18.949393203684526, worksheet.costpercapita_k9, 0.001); end
  def test_costpercapita_k10; assert_in_delta(0.09187611546372913, worksheet.costpercapita_k10, 0.001); end
  def test_costpercapita_k11; assert_in_epsilon(144.69783915469853, worksheet.costpercapita_k11, 0.001); end
  def test_costpercapita_k12; assert_in_epsilon(128.44986630843985, worksheet.costpercapita_k12, 0.001); end
  def test_costpercapita_k13; assert_in_delta(0, (worksheet.costpercapita_k13||0), 0.001); end
  def test_costpercapita_k14; assert_in_epsilon(4.253033446502152, worksheet.costpercapita_k14, 0.001); end
  def test_costpercapita_k18; assert_in_epsilon(6.042144142249225, worksheet.costpercapita_k18, 0.001); end
  def test_costpercapita_k19; assert_in_epsilon(35.94320496620508, worksheet.costpercapita_k19, 0.001); end
  def test_costpercapita_k21; assert_in_delta(0, (worksheet.costpercapita_k21||0), 0.001); end
  def test_costpercapita_k22; assert_in_delta(0, (worksheet.costpercapita_k22||0), 0.001); end
  def test_costpercapita_k23; assert_in_epsilon(46.50255206699061, worksheet.costpercapita_k23, 0.001); end
  def test_costpercapita_k24; assert_in_delta(0, (worksheet.costpercapita_k24||0), 0.001); end
  def test_costpercapita_k25; assert_in_delta(0, (worksheet.costpercapita_k25||0), 0.001); end
  def test_costpercapita_k26; assert_in_epsilon(336.431808920447, worksheet.costpercapita_k26, 0.001); end
  def test_costpercapita_k27; assert_in_epsilon(124.43398033314101, worksheet.costpercapita_k27, 0.001); end
  def test_costpercapita_k28; assert_in_epsilon(33.440606997924476, worksheet.costpercapita_k28, 0.001); end
  def test_costpercapita_k29; assert_in_epsilon(36.019343898605925, worksheet.costpercapita_k29, 0.001); end
  def test_costpercapita_k30; assert_in_epsilon(3.647973266437034, worksheet.costpercapita_k30, 0.001); end
  def test_costpercapita_k31; assert_in_epsilon(2.7083851228338016, worksheet.costpercapita_k31, 0.001); end
  def test_costpercapita_k32; assert_in_epsilon(112.05517681681322, worksheet.costpercapita_k32, 0.001); end
  def test_costpercapita_k33; assert_in_epsilon(103.4068449143069, worksheet.costpercapita_k33, 0.001); end
  def test_costpercapita_k34; assert_in_epsilon(204.46676878277896, worksheet.costpercapita_k34, 0.001); end
  def test_costpercapita_k35; assert_in_delta(0, (worksheet.costpercapita_k35||0), 0.001); end
  def test_costpercapita_k36; assert_in_epsilon(23.336983690020343, worksheet.costpercapita_k36, 0.001); end
  def test_costpercapita_k37; assert_in_epsilon(2.420574088625576, worksheet.costpercapita_k37, 0.001); end
  def test_costpercapita_k38; assert_in_delta(0.5076694686453294, worksheet.costpercapita_k38, 0.001); end
  def test_costpercapita_k39; assert_in_epsilon(39.803192450956054, worksheet.costpercapita_k39, 0.001); end
  def test_costpercapita_k42; assert_in_delta(0, (worksheet.costpercapita_k42||0), 0.001); end
  def test_costpercapita_k43; assert_in_epsilon(2.919823220851967, worksheet.costpercapita_k43, 0.001); end
  def test_costpercapita_k47; assert_in_epsilon(1.7716962992262562, worksheet.costpercapita_k47, 0.001); end
  def test_costpercapita_k51; assert_in_delta(0.4327070572323477, worksheet.costpercapita_k51, 0.001); end
  def test_costpercapita_k52; assert_in_epsilon(4.198392438241272, worksheet.costpercapita_k52, 0.001); end
  def test_costpercapita_k173; assert_in_epsilon(1513.7440234093592, worksheet.costpercapita_k173, 0.001); end
  def test_costpercapita_l3; assert_in_delta(0, (worksheet.costpercapita_l3||0), 0.001); end
  def test_costpercapita_l4; assert_in_delta(0, (worksheet.costpercapita_l4||0), 0.001); end
  def test_costpercapita_l5; assert_in_delta(0, (worksheet.costpercapita_l5||0), 0.001); end
  def test_costpercapita_l6; assert_in_delta(0, (worksheet.costpercapita_l6||0), 0.001); end
  def test_costpercapita_l7; assert_in_epsilon(85.09941772574312, worksheet.costpercapita_l7, 0.001); end
  def test_costpercapita_l8; assert_in_delta(0.13747992242416604, worksheet.costpercapita_l8, 0.001); end
  def test_costpercapita_l9; assert_in_epsilon(23.886853215901493, worksheet.costpercapita_l9, 0.001); end
  def test_costpercapita_l10; assert_in_delta(0.6556544894931234, worksheet.costpercapita_l10, 0.001); end
  def test_costpercapita_l11; assert_in_epsilon(140.72558785079886, worksheet.costpercapita_l11, 0.001); end
  def test_costpercapita_l12; assert_in_epsilon(156.28325945214868, worksheet.costpercapita_l12, 0.001); end
  def test_costpercapita_l13; assert_in_delta(0, (worksheet.costpercapita_l13||0), 0.001); end
  def test_costpercapita_l14; assert_in_epsilon(5.3458342205395875, worksheet.costpercapita_l14, 0.001); end
  def test_costpercapita_l18; assert_in_epsilon(5.748638026484737, worksheet.costpercapita_l18, 0.001); end
  def test_costpercapita_l19; assert_in_epsilon(35.088776312641976, worksheet.costpercapita_l19, 0.001); end
  def test_costpercapita_l21; assert_in_delta(0, (worksheet.costpercapita_l21||0), 0.001); end
  def test_costpercapita_l22; assert_in_delta(0, (worksheet.costpercapita_l22||0), 0.001); end
  def test_costpercapita_l23; assert_in_epsilon(49.77819537265332, worksheet.costpercapita_l23, 0.001); end
  def test_costpercapita_l24; assert_in_epsilon(6.4418751370172345, worksheet.costpercapita_l24, 0.001); end
  def test_costpercapita_l25; assert_in_delta(0, (worksheet.costpercapita_l25||0), 0.001); end
  def test_costpercapita_l26; assert_in_epsilon(379.6452174686632, worksheet.costpercapita_l26, 0.001); end
  def test_costpercapita_l27; assert_in_epsilon(111.994829803148, worksheet.costpercapita_l27, 0.001); end
  def test_costpercapita_l28; assert_in_epsilon(32.922649747513624, worksheet.costpercapita_l28, 0.001); end
  def test_costpercapita_l29; assert_in_epsilon(35.92272050018615, worksheet.costpercapita_l29, 0.001); end
  def test_costpercapita_l30; assert_in_epsilon(3.3984622447177264, worksheet.costpercapita_l30, 0.001); end
  def test_costpercapita_l31; assert_in_epsilon(3.9922778642715824, worksheet.costpercapita_l31, 0.001); end
  def test_costpercapita_l32; assert_in_epsilon(41.473024450653156, worksheet.costpercapita_l32, 0.001); end
  def test_costpercapita_l33; assert_in_epsilon(121.32848893912173, worksheet.costpercapita_l33, 0.001); end
  def test_costpercapita_l34; assert_in_epsilon(198.09997660284102, worksheet.costpercapita_l34, 0.001); end
  def test_costpercapita_l35; assert_in_delta(0, (worksheet.costpercapita_l35||0), 0.001); end
  def test_costpercapita_l36; assert_in_epsilon(23.608166168900702, worksheet.costpercapita_l36, 0.001); end
  def test_costpercapita_l37; assert_in_epsilon(2.2823680693353086, worksheet.costpercapita_l37, 0.001); end
  def test_costpercapita_l38; assert_in_delta(0.29647072947793657, worksheet.costpercapita_l38, 0.001); end
  def test_costpercapita_l39; assert_in_epsilon(40.62321398030247, worksheet.costpercapita_l39, 0.001); end
  def test_costpercapita_l42; assert_in_delta(0, (worksheet.costpercapita_l42||0), 0.001); end
  def test_costpercapita_l43; assert_in_epsilon(2.7989380978136005, worksheet.costpercapita_l43, 0.001); end
  def test_costpercapita_l47; assert_in_epsilon(1.0960405717852684, worksheet.costpercapita_l47, 0.001); end
  def test_costpercapita_l51; assert_in_delta(0.41922525663167576, worksheet.costpercapita_l51, 0.001); end
  def test_costpercapita_l52; assert_in_epsilon(4.99026105105412, worksheet.costpercapita_l52, 0.001); end
  def test_costpercapita_l173; assert_in_epsilon(1514.0839032722638, worksheet.costpercapita_l173, 0.001); end
  def test_costpercapita_m3; assert_in_delta(0, (worksheet.costpercapita_m3||0), 0.001); end
  def test_costpercapita_m4; assert_in_delta(0, (worksheet.costpercapita_m4||0), 0.001); end
  def test_costpercapita_m5; assert_in_delta(0, (worksheet.costpercapita_m5||0), 0.001); end
  def test_costpercapita_m6; assert_in_delta(0, (worksheet.costpercapita_m6||0), 0.001); end
  def test_costpercapita_m7; assert_in_epsilon(68.36873742202432, worksheet.costpercapita_m7, 0.001); end
  def test_costpercapita_m8; assert_in_delta(0.13491430851279562, worksheet.costpercapita_m8, 0.001); end
  def test_costpercapita_m9; assert_in_epsilon(9.296895800549919, worksheet.costpercapita_m9, 0.001); end
  def test_costpercapita_m10; assert_in_epsilon(4.6394686626552755, worksheet.costpercapita_m10, 0.001); end
  def test_costpercapita_m11; assert_in_epsilon(106.72112757354571, worksheet.costpercapita_m11, 0.001); end
  def test_costpercapita_m12; assert_in_epsilon(184.27007379338673, worksheet.costpercapita_m12, 0.001); end
  def test_costpercapita_m13; assert_in_delta(0, (worksheet.costpercapita_m13||0), 0.001); end
  def test_costpercapita_m14; assert_in_epsilon(2.612430944427415, worksheet.costpercapita_m14, 0.001); end
  def test_costpercapita_m18; assert_in_epsilon(5.47160865765954, worksheet.costpercapita_m18, 0.001); end
  def test_costpercapita_m19; assert_in_epsilon(34.3697638735242, worksheet.costpercapita_m19, 0.001); end
  def test_costpercapita_m21; assert_in_delta(0, (worksheet.costpercapita_m21||0), 0.001); end
  def test_costpercapita_m22; assert_in_delta(0, (worksheet.costpercapita_m22||0), 0.001); end
  def test_costpercapita_m23; assert_in_epsilon(50.08069511482394, worksheet.costpercapita_m23, 0.001); end
  def test_costpercapita_m24; assert_in_delta(0, (worksheet.costpercapita_m24||0), 0.001); end
  def test_costpercapita_m25; assert_in_delta(0, (worksheet.costpercapita_m25||0), 0.001); end
  def test_costpercapita_m26; assert_in_epsilon(422.69641126578387, worksheet.costpercapita_m26, 0.001); end
  def test_costpercapita_m27; assert_in_epsilon(106.23607917171469, worksheet.costpercapita_m27, 0.001); end
  def test_costpercapita_m28; assert_in_epsilon(32.65279606312253, worksheet.costpercapita_m28, 0.001); end
  def test_costpercapita_m29; assert_in_epsilon(35.832564832579756, worksheet.costpercapita_m29, 0.001); end
  def test_costpercapita_m30; assert_in_epsilon(3.1844160664926737, worksheet.costpercapita_m30, 0.001); end
  def test_costpercapita_m31; assert_in_epsilon(6.142441248381087, worksheet.costpercapita_m31, 0.001); end
  def test_costpercapita_m32; assert_in_epsilon(12.01231897279369, worksheet.costpercapita_m32, 0.001); end
  def test_costpercapita_m33; assert_in_epsilon(100.47262455737038, worksheet.costpercapita_m33, 0.001); end
  def test_costpercapita_m34; assert_in_epsilon(184.18420740945993, worksheet.costpercapita_m34, 0.001); end
  def test_costpercapita_m35; assert_in_delta(0, (worksheet.costpercapita_m35||0), 0.001); end
  def test_costpercapita_m36; assert_in_epsilon(23.653734359409675, worksheet.costpercapita_m36, 0.001); end
  def test_costpercapita_m37; assert_in_epsilon(2.125158355545741, worksheet.costpercapita_m37, 0.001); end
  def test_costpercapita_m38; assert_in_delta(0.13712829763224027, worksheet.costpercapita_m38, 0.001); end
  def test_costpercapita_m39; assert_in_epsilon(33.33304806369795, worksheet.costpercapita_m39, 0.001); end
  def test_costpercapita_m42; assert_in_delta(0, (worksheet.costpercapita_m42||0), 0.001); end
  def test_costpercapita_m43; assert_in_epsilon(2.6991394086203893, worksheet.costpercapita_m43, 0.001); end
  def test_costpercapita_m47; assert_in_delta(0.4676169661832931, worksheet.costpercapita_m47, 0.001); end
  def test_costpercapita_m51; assert_in_delta(0.4154979386883921, worksheet.costpercapita_m51, 0.001); end
  def test_costpercapita_m52; assert_in_epsilon(6.400085872733202, worksheet.costpercapita_m52, 0.001); end
  def test_costpercapita_m173; assert_in_epsilon(1438.6109850013192, worksheet.costpercapita_m173, 0.001); end
  def test_costpercapita_o3; assert_in_epsilon(21.303420922916203, worksheet.costpercapita_o3, 0.001); end
  def test_costpercapita_o4; assert_in_delta(0, (worksheet.costpercapita_o4||0), 0.001); end
  def test_costpercapita_o5; assert_in_epsilon(3.715090759467435, worksheet.costpercapita_o5, 0.001); end
  def test_costpercapita_o6; assert_in_delta(0.44138121762992655, worksheet.costpercapita_o6, 0.001); end
  def test_costpercapita_o7; assert_in_delta(0.6479016890427718, worksheet.costpercapita_o7, 0.001); end
  def test_costpercapita_o8; assert_in_delta(0.257142110053191, worksheet.costpercapita_o8, 0.001); end
  def test_costpercapita_o9; assert_in_delta(0.000560582193878643, worksheet.costpercapita_o9, 0.001); end
  def test_costpercapita_o10; assert_in_delta(0, (worksheet.costpercapita_o10||0), 0.001); end
  def test_costpercapita_o11; assert_in_delta(0.2245210701752209, worksheet.costpercapita_o11, 0.001); end
  def test_costpercapita_o12; assert_in_delta(0, (worksheet.costpercapita_o12||0), 0.001); end
  def test_costpercapita_o13; assert_in_delta(0, (worksheet.costpercapita_o13||0), 0.001); end
  def test_costpercapita_o14; assert_in_epsilon(3.1247425662361823, worksheet.costpercapita_o14, 0.001); end
  def test_costpercapita_o17; assert_in_delta(2.7233719118914287e-07, worksheet.costpercapita_o17, 0.001); end
  def test_costpercapita_o18; assert_in_epsilon(2.9882725037154225, worksheet.costpercapita_o18, 0.001); end
  def test_costpercapita_o19; assert_in_epsilon(53.24977042432771, worksheet.costpercapita_o19, 0.001); end
  def test_costpercapita_o21; assert_in_delta(0, (worksheet.costpercapita_o21||0), 0.001); end
  def test_costpercapita_o22; assert_in_delta(0, (worksheet.costpercapita_o22||0), 0.001); end
  def test_costpercapita_o23; assert_in_epsilon(6.996257344506716, worksheet.costpercapita_o23, 0.001); end
  def test_costpercapita_o24; assert_in_delta(0.5538687646229019, worksheet.costpercapita_o24, 0.001); end
  def test_costpercapita_o25; assert_in_delta(0, (worksheet.costpercapita_o25||0), 0.001); end
  def test_costpercapita_o28; assert_in_epsilon(6.527897926984923, worksheet.costpercapita_o28, 0.001); end
  def test_costpercapita_o31; assert_in_epsilon(91.083501699974, worksheet.costpercapita_o31, 0.001); end
  def test_costpercapita_o32; assert_in_epsilon(862.8255185232231, worksheet.costpercapita_o32, 0.001); end
  def test_costpercapita_o33; assert_in_delta(0.42712410901052306, worksheet.costpercapita_o33, 0.001); end
  def test_costpercapita_o34; assert_in_delta(0, (worksheet.costpercapita_o34||0), 0.001); end
  def test_costpercapita_o35; assert_in_delta(0, (worksheet.costpercapita_o35||0), 0.001); end
  def test_costpercapita_o37; assert_in_epsilon(144.33870740720542, worksheet.costpercapita_o37, 0.001); end
  def test_costpercapita_o38; assert_in_epsilon(3.539563798683592, worksheet.costpercapita_o38, 0.001); end
  def test_costpercapita_o39; assert_in_epsilon(94.57550841098407, worksheet.costpercapita_o39, 0.001); end
  def test_costpercapita_o40; assert_in_epsilon(-10.295675329529756, worksheet.costpercapita_o40, 0.001); end
  def test_costpercapita_o41; assert_in_delta(0, (worksheet.costpercapita_o41||0), 0.001); end
  def test_costpercapita_o42; assert_in_delta(0, (worksheet.costpercapita_o42||0), 0.001); end
  def test_costpercapita_o43; assert_in_epsilon(12.161930899585183, worksheet.costpercapita_o43, 0.001); end
  def test_costpercapita_o47; assert_in_delta(0.03307774641531319, worksheet.costpercapita_o47, 0.001); end
  def test_costpercapita_o51; assert_in_delta(0.07965237796060863, worksheet.costpercapita_o51, 0.001); end
  def test_costpercapita_o52; assert_in_delta(0, (worksheet.costpercapita_o52||0), 0.001); end
  def test_costpercapita_o173; assert_in_epsilon(1386.8457764576829, worksheet.costpercapita_o173, 0.001); end
  def test_costpercapita_p3; assert_in_epsilon(16.553828683260814, worksheet.costpercapita_p3, 0.001); end
  def test_costpercapita_p4; assert_in_delta(0.2710424859718418, worksheet.costpercapita_p4, 0.001); end
  def test_costpercapita_p5; assert_in_epsilon(2.775325462508412, worksheet.costpercapita_p5, 0.001); end
  def test_costpercapita_p6; assert_in_delta(0.7259991101600587, worksheet.costpercapita_p6, 0.001); end
  def test_costpercapita_p7; assert_in_epsilon(3.349395087255477, worksheet.costpercapita_p7, 0.001); end
  def test_costpercapita_p8; assert_in_delta(0.26420425811475406, worksheet.costpercapita_p8, 0.001); end
  def test_costpercapita_p9; assert_in_delta(0.013765977277146325, worksheet.costpercapita_p9, 0.001); end
  def test_costpercapita_p10; assert_in_delta(0.017173276777459008, worksheet.costpercapita_p10, 0.001); end
  def test_costpercapita_p11; assert_in_delta(0.5785134619938078, worksheet.costpercapita_p11, 0.001); end
  def test_costpercapita_p12; assert_in_delta(0, (worksheet.costpercapita_p12||0), 0.001); end
  def test_costpercapita_p13; assert_in_delta(0, (worksheet.costpercapita_p13||0), 0.001); end
  def test_costpercapita_p14; assert_in_epsilon(3.6683385515125715, worksheet.costpercapita_p14, 0.001); end
  def test_costpercapita_p17; assert_in_delta(3.56296631660883e-06, worksheet.costpercapita_p17, 0.001); end
  def test_costpercapita_p18; assert_in_epsilon(3.860071134847473, worksheet.costpercapita_p18, 0.001); end
  def test_costpercapita_p19; assert_in_epsilon(52.64491948965808, worksheet.costpercapita_p19, 0.001); end
  def test_costpercapita_p21; assert_in_delta(0, (worksheet.costpercapita_p21||0), 0.001); end
  def test_costpercapita_p22; assert_in_delta(0, (worksheet.costpercapita_p22||0), 0.001); end
  def test_costpercapita_p23; assert_in_epsilon(8.069498571579853, worksheet.costpercapita_p23, 0.001); end
  def test_costpercapita_p24; assert_in_delta(0.5401038014361748, worksheet.costpercapita_p24, 0.001); end
  def test_costpercapita_p25; assert_in_delta(0, (worksheet.costpercapita_p25||0), 0.001); end
  def test_costpercapita_p28; assert_in_epsilon(6.178510863979657, worksheet.costpercapita_p28, 0.001); end
  def test_costpercapita_p31; assert_in_epsilon(91.51386756075868, worksheet.costpercapita_p31, 0.001); end
  def test_costpercapita_p32; assert_in_epsilon(697.3564827857277, worksheet.costpercapita_p32, 0.001); end
  def test_costpercapita_p33; assert_in_epsilon(16.30814919560794, worksheet.costpercapita_p33, 0.001); end
  def test_costpercapita_p34; assert_in_epsilon(10.188278819508438, worksheet.costpercapita_p34, 0.001); end
  def test_costpercapita_p35; assert_in_delta(0, (worksheet.costpercapita_p35||0), 0.001); end
  def test_costpercapita_p36; assert_in_epsilon(13.65625, worksheet.costpercapita_p36, 0.001); end
  def test_costpercapita_p37; assert_in_epsilon(151.1699155190128, worksheet.costpercapita_p37, 0.001); end
  def test_costpercapita_p38; assert_in_epsilon(3.2202190496193683, worksheet.costpercapita_p38, 0.001); end
  def test_costpercapita_p39; assert_in_epsilon(106.63888852145733, worksheet.costpercapita_p39, 0.001); end
  def test_costpercapita_p40; assert_in_epsilon(16.995264105403493, worksheet.costpercapita_p40, 0.001); end
  def test_costpercapita_p41; assert_in_epsilon(2.2628595687100987, worksheet.costpercapita_p41, 0.001); end
  def test_costpercapita_p42; assert_in_delta(0, (worksheet.costpercapita_p42||0), 0.001); end
  def test_costpercapita_p43; assert_in_epsilon(11.144781371707582, worksheet.costpercapita_p43, 0.001); end
  def test_costpercapita_p47; assert_in_delta(0.027291182599239305, worksheet.costpercapita_p47, 0.001); end
  def test_costpercapita_p51; assert_in_delta(0.07420871177002626, worksheet.costpercapita_p51, 0.001); end
  def test_costpercapita_p52; assert_in_delta(0.04679482364530887, worksheet.costpercapita_p52, 0.001); end
  def test_costpercapita_p173; assert_in_epsilon(1296.3616052484942, worksheet.costpercapita_p173, 0.001); end
  def test_costpercapita_q3; assert_in_epsilon(12.351594563931274, worksheet.costpercapita_q3, 0.001); end
  def test_costpercapita_q4; assert_in_delta(0.5192270185897404, worksheet.costpercapita_q4, 0.001); end
  def test_costpercapita_q5; assert_in_epsilon(1.4334769578840183, worksheet.costpercapita_q5, 0.001); end
  def test_costpercapita_q6; assert_in_delta(0.9916093575231592, worksheet.costpercapita_q6, 0.001); end
  def test_costpercapita_q7; assert_in_epsilon(11.086774620387773, worksheet.costpercapita_q7, 0.001); end
  def test_costpercapita_q8; assert_in_delta(0.2705873287381391, worksheet.costpercapita_q8, 0.001); end
  def test_costpercapita_q9; assert_in_delta(0.1002574432974297, worksheet.costpercapita_q9, 0.001); end
  def test_costpercapita_q10; assert_in_delta(0.13288844366917496, worksheet.costpercapita_q10, 0.001); end
  def test_costpercapita_q11; assert_in_delta(0.9091385546148714, worksheet.costpercapita_q11, 0.001); end
  def test_costpercapita_q12; assert_in_delta(0, (worksheet.costpercapita_q12||0), 0.001); end
  def test_costpercapita_q13; assert_in_delta(0, (worksheet.costpercapita_q13||0), 0.001); end
  def test_costpercapita_q14; assert_in_epsilon(4.464145902851391, worksheet.costpercapita_q14, 0.001); end
  def test_costpercapita_q17; assert_in_delta(8.422801279706587e-06, worksheet.costpercapita_q17, 0.001); end
  def test_costpercapita_q18; assert_in_epsilon(4.695732405637019, worksheet.costpercapita_q18, 0.001); end
  def test_costpercapita_q19; assert_in_epsilon(51.92932754298498, worksheet.costpercapita_q19, 0.001); end
  def test_costpercapita_q21; assert_in_delta(0, (worksheet.costpercapita_q21||0), 0.001); end
  def test_costpercapita_q22; assert_in_delta(0, (worksheet.costpercapita_q22||0), 0.001); end
  def test_costpercapita_q23; assert_in_epsilon(10.176247870582298, worksheet.costpercapita_q23, 0.001); end
  def test_costpercapita_q24; assert_in_epsilon(1.3781663449133286, worksheet.costpercapita_q24, 0.001); end
  def test_costpercapita_q25; assert_in_delta(0, (worksheet.costpercapita_q25||0), 0.001); end
  def test_costpercapita_q26; assert_in_epsilon(77.48353929793223, worksheet.costpercapita_q26, 0.001); end
  def test_costpercapita_q28; assert_in_epsilon(5.053956901053126, worksheet.costpercapita_q28, 0.001); end
  def test_costpercapita_q31; assert_in_epsilon(92.03146516392596, worksheet.costpercapita_q31, 0.001); end
  def test_costpercapita_q32; assert_in_epsilon(551.3338373308742, worksheet.costpercapita_q32, 0.001); end
  def test_costpercapita_q33; assert_in_epsilon(28.32587342147609, worksheet.costpercapita_q33, 0.001); end
  def test_costpercapita_q34; assert_in_epsilon(16.79908333217555, worksheet.costpercapita_q34, 0.001); end
  def test_costpercapita_q35; assert_in_delta(0, (worksheet.costpercapita_q35||0), 0.001); end
  def test_costpercapita_q36; assert_in_epsilon(15.988372093023255, worksheet.costpercapita_q36, 0.001); end
  def test_costpercapita_q37; assert_in_epsilon(155.3819754955331, worksheet.costpercapita_q37, 0.001); end
  def test_costpercapita_q38; assert_in_epsilon(2.9123593497468963, worksheet.costpercapita_q38, 0.001); end
  def test_costpercapita_q39; assert_in_epsilon(99.59590887655318, worksheet.costpercapita_q39, 0.001); end
  def test_costpercapita_q40; assert_in_epsilon(51.260272035079076, worksheet.costpercapita_q40, 0.001); end
  def test_costpercapita_q41; assert_in_epsilon(7.4058418875517225, worksheet.costpercapita_q41, 0.001); end
  def test_costpercapita_q42; assert_in_delta(0, (worksheet.costpercapita_q42||0), 0.001); end
  def test_costpercapita_q43; assert_in_epsilon(10.224852574354594, worksheet.costpercapita_q43, 0.001); end
  def test_costpercapita_q47; assert_in_delta(0.01960311562591352, worksheet.costpercapita_q47, 0.001); end
  def test_costpercapita_q51; assert_in_delta(0.10301678507166287, worksheet.costpercapita_q51, 0.001); end
  def test_costpercapita_q52; assert_in_delta(0.11181513071235313, worksheet.costpercapita_q52, 0.001); end
  def test_costpercapita_q173; assert_in_epsilon(1214.4709555690947, worksheet.costpercapita_q173, 0.001); end
  def test_costpercapita_r3; assert_in_epsilon(7.679933624064655, worksheet.costpercapita_r3, 0.001); end
  def test_costpercapita_r4; assert_in_delta(0.45886575842905813, worksheet.costpercapita_r4, 0.001); end
  def test_costpercapita_r5; assert_in_delta(0.46303051009710694, worksheet.costpercapita_r5, 0.001); end
  def test_costpercapita_r6; assert_in_epsilon(1.1230382541961308, worksheet.costpercapita_r6, 0.001); end
  def test_costpercapita_r7; assert_in_epsilon(19.855252471727756, worksheet.costpercapita_r7, 0.001); end
  def test_costpercapita_r8; assert_in_delta(0.2694925882837325, worksheet.costpercapita_r8, 0.001); end
  def test_costpercapita_r9; assert_in_delta(0.20000771935978562, worksheet.costpercapita_r9, 0.001); end
  def test_costpercapita_r10; assert_in_epsilon(1.0301900455905708, worksheet.costpercapita_r10, 0.001); end
  def test_costpercapita_r11; assert_in_epsilon(1.2197292860861817, worksheet.costpercapita_r11, 0.001); end
  def test_costpercapita_r12; assert_in_delta(0, (worksheet.costpercapita_r12||0), 0.001); end
  def test_costpercapita_r13; assert_in_delta(0, (worksheet.costpercapita_r13||0), 0.001); end
  def test_costpercapita_r14; assert_in_epsilon(5.715030761945792, worksheet.costpercapita_r14, 0.001); end
  def test_costpercapita_r17; assert_in_delta(1.6194746574216773e-05, worksheet.costpercapita_r17, 0.001); end
  def test_costpercapita_r18; assert_in_epsilon(4.460788583891904, worksheet.costpercapita_r18, 0.001); end
  def test_costpercapita_r19; assert_in_epsilon(50.29906222770324, worksheet.costpercapita_r19, 0.001); end
  def test_costpercapita_r21; assert_in_delta(0, (worksheet.costpercapita_r21||0), 0.001); end
  def test_costpercapita_r22; assert_in_delta(0, (worksheet.costpercapita_r22||0), 0.001); end
  def test_costpercapita_r23; assert_in_epsilon(12.463940058391309, worksheet.costpercapita_r23, 0.001); end
  def test_costpercapita_r24; assert_in_epsilon(3.346112444429667, worksheet.costpercapita_r24, 0.001); end
  def test_costpercapita_r25; assert_in_delta(0, (worksheet.costpercapita_r25||0), 0.001); end
  def test_costpercapita_r26; assert_in_epsilon(78.71941834219847, worksheet.costpercapita_r26, 0.001); end
  def test_costpercapita_r28; assert_in_epsilon(4.05802300955858, worksheet.costpercapita_r28, 0.001); end
  def test_costpercapita_r31; assert_in_epsilon(92.76217267032811, worksheet.costpercapita_r31, 0.001); end
  def test_costpercapita_r32; assert_in_epsilon(316.2014471652662, worksheet.costpercapita_r32, 0.001); end
  def test_costpercapita_r33; assert_in_epsilon(199.81820503303726, worksheet.costpercapita_r33, 0.001); end
  def test_costpercapita_r34; assert_in_epsilon(42.45614135277118, worksheet.costpercapita_r34, 0.001); end
  def test_costpercapita_r35; assert_in_delta(0, (worksheet.costpercapita_r35||0), 0.001); end
  def test_costpercapita_r36; assert_in_epsilon(17.09302325581395, worksheet.costpercapita_r36, 0.001); end
  def test_costpercapita_r37; assert_in_epsilon(157.13403482261103, worksheet.costpercapita_r37, 0.001); end
  def test_costpercapita_r38; assert_in_epsilon(2.615984699066175, worksheet.costpercapita_r38, 0.001); end
  def test_costpercapita_r39; assert_in_epsilon(93.04744140891354, worksheet.costpercapita_r39, 0.001); end
  def test_costpercapita_r40; assert_in_epsilon(67.40076500279213, worksheet.costpercapita_r40, 0.001); end
  def test_costpercapita_r41; assert_in_epsilon(12.499027516222807, worksheet.costpercapita_r41, 0.001); end
  def test_costpercapita_r42; assert_in_delta(0, (worksheet.costpercapita_r42||0), 0.001); end
  def test_costpercapita_r43; assert_in_epsilon(9.48728657713034, worksheet.costpercapita_r43, 0.001); end
  def test_costpercapita_r47; assert_in_delta(0.013010160887831764, worksheet.costpercapita_r47, 0.001); end
  def test_costpercapita_r51; assert_in_delta(0.12118028248305295, worksheet.costpercapita_r51, 0.001); end
  def test_costpercapita_r52; assert_in_delta(0.10992045956173005, worksheet.costpercapita_r52, 0.001); end
  def test_costpercapita_r173; assert_in_epsilon(1202.1215722875856, worksheet.costpercapita_r173, 0.001); end
  def test_costpercapita_s3; assert_in_delta(0.3740666081705839, worksheet.costpercapita_s3, 0.001); end
  def test_costpercapita_s4; assert_in_delta(0.44632947565808306, worksheet.costpercapita_s4, 0.001); end
  def test_costpercapita_s5; assert_in_delta(0.4503804456729523, worksheet.costpercapita_s5, 0.001); end
  def test_costpercapita_s6; assert_in_delta(0.8215834619258144, worksheet.costpercapita_s6, 0.001); end
  def test_costpercapita_s7; assert_in_epsilon(29.43224085196731, worksheet.costpercapita_s7, 0.001); end
  def test_costpercapita_s8; assert_in_delta(0.2692146043651929, worksheet.costpercapita_s8, 0.001); end
  def test_costpercapita_s9; assert_in_delta(0.4075069023072917, worksheet.costpercapita_s9, 0.001); end
  def test_costpercapita_s10; assert_in_epsilon(3.613143374374958, worksheet.costpercapita_s10, 0.001); end
  def test_costpercapita_s11; assert_in_epsilon(1.5158924643405693, worksheet.costpercapita_s11, 0.001); end
  def test_costpercapita_s12; assert_in_delta(0, (worksheet.costpercapita_s12||0), 0.001); end
  def test_costpercapita_s13; assert_in_delta(0, (worksheet.costpercapita_s13||0), 0.001); end
  def test_costpercapita_s14; assert_in_epsilon(6.694550802837225, worksheet.costpercapita_s14, 0.001); end
  def test_costpercapita_s17; assert_in_delta(2.6026886937821877e-05, worksheet.costpercapita_s17, 0.001); end
  def test_costpercapita_s18; assert_in_epsilon(4.27369884149361, worksheet.costpercapita_s18, 0.001); end
  def test_costpercapita_s19; assert_in_epsilon(48.75734602632017, worksheet.costpercapita_s19, 0.001); end
  def test_costpercapita_s21; assert_in_delta(0, (worksheet.costpercapita_s21||0), 0.001); end
  def test_costpercapita_s22; assert_in_delta(0, (worksheet.costpercapita_s22||0), 0.001); end
  def test_costpercapita_s23; assert_in_epsilon(14.27996281290507, worksheet.costpercapita_s23, 0.001); end
  def test_costpercapita_s24; assert_in_epsilon(3.064591042467205, worksheet.costpercapita_s24, 0.001); end
  def test_costpercapita_s25; assert_in_delta(0, (worksheet.costpercapita_s25||0), 0.001); end
  def test_costpercapita_s26; assert_in_epsilon(79.9552973864647, worksheet.costpercapita_s26, 0.001); end
  def test_costpercapita_s28; assert_in_epsilon(3.1764503904622967, worksheet.costpercapita_s28, 0.001); end
  def test_costpercapita_s31; assert_in_epsilon(93.90118321680944, worksheet.costpercapita_s31, 0.001); end
  def test_costpercapita_s32; assert_in_epsilon(149.17784352351018, worksheet.costpercapita_s32, 0.001); end
  def test_costpercapita_s33; assert_in_epsilon(286.87087108261886, worksheet.costpercapita_s33, 0.001); end
  def test_costpercapita_s34; assert_in_epsilon(55.152759733799684, worksheet.costpercapita_s34, 0.001); end
  def test_costpercapita_s35; assert_in_delta(0, (worksheet.costpercapita_s35||0), 0.001); end
  def test_costpercapita_s36; assert_in_epsilon(18.023255813953487, worksheet.costpercapita_s36, 0.001); end
  def test_costpercapita_s37; assert_in_epsilon(156.5852409860913, worksheet.costpercapita_s37, 0.001); end
  def test_costpercapita_s38; assert_in_epsilon(2.331095097577205, worksheet.costpercapita_s38, 0.001); end
  def test_costpercapita_s39; assert_in_epsilon(87.1306006449194, worksheet.costpercapita_s39, 0.001); end
  def test_costpercapita_s40; assert_in_epsilon(73.70808659252967, worksheet.costpercapita_s40, 0.001); end
  def test_costpercapita_s41; assert_in_epsilon(19.001435831344192, worksheet.costpercapita_s41, 0.001); end
  def test_costpercapita_s42; assert_in_delta(0, (worksheet.costpercapita_s42||0), 0.001); end
  def test_costpercapita_s43; assert_in_epsilon(8.911253849508988, worksheet.costpercapita_s43, 0.001); end
  def test_costpercapita_s47; assert_in_delta(0.00799241216380728, worksheet.costpercapita_s47, 0.001); end
  def test_costpercapita_s51; assert_in_delta(0.13058945369656935, worksheet.costpercapita_s51, 0.001); end
  def test_costpercapita_s52; assert_in_delta(0.11124091765496884, worksheet.costpercapita_s52, 0.001); end
  def test_costpercapita_s173; assert_in_epsilon(1148.5757306747976, worksheet.costpercapita_s173, 0.001); end
  def test_costpercapita_t3; assert_in_delta(0, (worksheet.costpercapita_t3||0), 0.001); end
  def test_costpercapita_t4; assert_in_delta(0.4358158742957596, worksheet.costpercapita_t4, 0.001); end
  def test_costpercapita_t5; assert_in_delta(0, (worksheet.costpercapita_t5||0), 0.001); end
  def test_costpercapita_t6; assert_in_delta(0.535898568628479, worksheet.costpercapita_t6, 0.001); end
  def test_costpercapita_t7; assert_in_epsilon(36.691545988328706, worksheet.costpercapita_t7, 0.001); end
  def test_costpercapita_t8; assert_in_delta(0.26979077932594636, worksheet.costpercapita_t8, 0.001); end
  def test_costpercapita_t9; assert_in_epsilon(1.0530606573010415, worksheet.costpercapita_t9, 0.001); end
  def test_costpercapita_t10; assert_in_epsilon(3.52803326810853, worksheet.costpercapita_t10, 0.001); end
  def test_costpercapita_t11; assert_in_epsilon(1.8019096509614676, worksheet.costpercapita_t11, 0.001); end
  def test_costpercapita_t12; assert_in_delta(0, (worksheet.costpercapita_t12||0), 0.001); end
  def test_costpercapita_t13; assert_in_delta(0, (worksheet.costpercapita_t13||0), 0.001); end
  def test_costpercapita_t14; assert_in_epsilon(7.797560240592821, worksheet.costpercapita_t14, 0.001); end
  def test_costpercapita_t17; assert_in_delta(3.773809498070268e-05, worksheet.costpercapita_t17, 0.001); end
  def test_costpercapita_t18; assert_in_epsilon(3.958459476752012, worksheet.costpercapita_t18, 0.001); end
  def test_costpercapita_t19; assert_in_epsilon(47.04673824296748, worksheet.costpercapita_t19, 0.001); end
  def test_costpercapita_t21; assert_in_delta(0, (worksheet.costpercapita_t21||0), 0.001); end
  def test_costpercapita_t22; assert_in_delta(0, (worksheet.costpercapita_t22||0), 0.001); end
  def test_costpercapita_t23; assert_in_epsilon(16.2715307254825, worksheet.costpercapita_t23, 0.001); end
  def test_costpercapita_t24; assert_in_epsilon(2.198968560331937, worksheet.costpercapita_t24, 0.001); end
  def test_costpercapita_t25; assert_in_delta(0, (worksheet.costpercapita_t25||0), 0.001); end
  def test_costpercapita_t26; assert_in_epsilon(81.19117643073093, worksheet.costpercapita_t26, 0.001); end
  def test_costpercapita_t28; assert_in_epsilon(2.3872403540937115, worksheet.costpercapita_t28, 0.001); end
  def test_costpercapita_t31; assert_in_epsilon(95.47669775391286, worksheet.costpercapita_t31, 0.001); end
  def test_costpercapita_t32; assert_in_epsilon(102.86233969034649, worksheet.costpercapita_t32, 0.001); end
  def test_costpercapita_t33; assert_in_epsilon(181.63389955059446, worksheet.costpercapita_t33, 0.001); end
  def test_costpercapita_t34; assert_in_epsilon(72.48427283685307, worksheet.costpercapita_t34, 0.001); end
  def test_costpercapita_t35; assert_in_delta(0, (worksheet.costpercapita_t35||0), 0.001); end
  def test_costpercapita_t36; assert_in_epsilon(18.779069767441857, worksheet.costpercapita_t36, 0.001); end
  def test_costpercapita_t37; assert_in_epsilon(153.89474147181866, worksheet.costpercapita_t37, 0.001); end
  def test_costpercapita_t38; assert_in_epsilon(2.0576905452799865, worksheet.costpercapita_t38, 0.001); end
  def test_costpercapita_t39; assert_in_epsilon(81.77919645076798, worksheet.costpercapita_t39, 0.001); end
  def test_costpercapita_t40; assert_in_epsilon(167.70067583437094, worksheet.costpercapita_t40, 0.001); end
  def test_costpercapita_t41; assert_in_epsilon(23.254680335469203, worksheet.costpercapita_t41, 0.001); end
  def test_costpercapita_t42; assert_in_delta(0, (worksheet.costpercapita_t42||0), 0.001); end
  def test_costpercapita_t43; assert_in_epsilon(8.461954391926094, worksheet.costpercapita_t43, 0.001); end
  def test_costpercapita_t47; assert_in_delta(0.005674932700902415, worksheet.costpercapita_t47, 0.001); end
  def test_costpercapita_t51; assert_in_delta(0.1326408675447616, worksheet.costpercapita_t51, 0.001); end
  def test_costpercapita_t52; assert_in_delta(0.11754756851533153, worksheet.costpercapita_t52, 0.001); end
  def test_costpercapita_t173; assert_in_epsilon(1113.808848553539, worksheet.costpercapita_t173, 0.001); end
  def test_costpercapita_u3; assert_in_delta(0, (worksheet.costpercapita_u3||0), 0.001); end
  def test_costpercapita_u4; assert_in_delta(0.42652149662249816, worksheet.costpercapita_u4, 0.001); end
  def test_costpercapita_u5; assert_in_delta(0, (worksheet.costpercapita_u5||0), 0.001); end
  def test_costpercapita_u6; assert_in_delta(0.26381776304423576, worksheet.costpercapita_u6, 0.001); end
  def test_costpercapita_u7; assert_in_epsilon(38.99625111977126, worksheet.costpercapita_u7, 0.001); end
  def test_costpercapita_u8; assert_in_delta(0.270807299442856, worksheet.costpercapita_u8, 0.001); end
  def test_costpercapita_u9; assert_in_epsilon(2.305901541682334, worksheet.costpercapita_u9, 0.001); end
  def test_costpercapita_u10; assert_in_epsilon(3.4527930678964136, worksheet.costpercapita_u10, 0.001); end
  def test_costpercapita_u11; assert_in_epsilon(2.078345284636392, worksheet.costpercapita_u11, 0.001); end
  def test_costpercapita_u12; assert_in_delta(0, (worksheet.costpercapita_u12||0), 0.001); end
  def test_costpercapita_u13; assert_in_delta(0, (worksheet.costpercapita_u13||0), 0.001); end
  def test_costpercapita_u14; assert_in_epsilon(9.067552398930012, worksheet.costpercapita_u14, 0.001); end
  def test_costpercapita_u17; assert_in_delta(5.1131749719586335e-05, worksheet.costpercapita_u17, 0.001); end
  def test_costpercapita_u18; assert_in_epsilon(3.6704874970430215, worksheet.costpercapita_u18, 0.001); end
  def test_costpercapita_u19; assert_in_epsilon(45.45152579805794, worksheet.costpercapita_u19, 0.001); end
  def test_costpercapita_u21; assert_in_delta(0, (worksheet.costpercapita_u21||0), 0.001); end
  def test_costpercapita_u22; assert_in_delta(0, (worksheet.costpercapita_u22||0), 0.001); end
  def test_costpercapita_u23; assert_in_epsilon(18.127238341056245, worksheet.costpercapita_u23, 0.001); end
  def test_costpercapita_u24; assert_in_epsilon(2.0502905057904917, worksheet.costpercapita_u24, 0.001); end
  def test_costpercapita_u25; assert_in_delta(0, (worksheet.costpercapita_u25||0), 0.001); end
  def test_costpercapita_u26; assert_in_epsilon(82.42705547499716, worksheet.costpercapita_u26, 0.001); end
  def test_costpercapita_u28; assert_in_epsilon(1.6683141517942721, worksheet.costpercapita_u28, 0.001); end
  def test_costpercapita_u31; assert_in_epsilon(97.35959935314024, worksheet.costpercapita_u31, 0.001); end
  def test_costpercapita_u32; assert_in_epsilon(66.27962921758554, worksheet.costpercapita_u32, 0.001); end
  def test_costpercapita_u33; assert_in_epsilon(104.50042698864786, worksheet.costpercapita_u33, 0.001); end
  def test_costpercapita_u34; assert_in_epsilon(71.98019685238056, worksheet.costpercapita_u34, 0.001); end
  def test_costpercapita_u35; assert_in_delta(0, (worksheet.costpercapita_u35||0), 0.001); end
  def test_costpercapita_u36; assert_in_epsilon(19.360465116279062, worksheet.costpercapita_u36, 0.001); end
  def test_costpercapita_u37; assert_in_epsilon(149.2216837656378, worksheet.costpercapita_u37, 0.001); end
  def test_costpercapita_u38; assert_in_epsilon(1.7957710421745186, worksheet.costpercapita_u38, 0.001); end
  def test_costpercapita_u39; assert_in_epsilon(76.75144133049488, worksheet.costpercapita_u39, 0.001); end
  def test_costpercapita_u40; assert_in_epsilon(152.95641381148806, worksheet.costpercapita_u40, 0.001); end
  def test_costpercapita_u41; assert_in_epsilon(27.776029551673084, worksheet.costpercapita_u41, 0.001); end
  def test_costpercapita_u42; assert_in_delta(0, (worksheet.costpercapita_u42||0), 0.001); end
  def test_costpercapita_u43; assert_in_epsilon(8.100207472750888, worksheet.costpercapita_u43, 0.001); end
  def test_costpercapita_u47; assert_in_delta(0.003505797243149091, worksheet.costpercapita_u47, 0.001); end
  def test_costpercapita_u51; assert_in_delta(0.12832744324980824, worksheet.costpercapita_u51, 0.001); end
  def test_costpercapita_u52; assert_in_delta(0.13241083843684012, worksheet.costpercapita_u52, 0.001); end
  def test_costpercapita_u173; assert_in_epsilon(986.603061453697, worksheet.costpercapita_u173, 0.001); end
  def test_costpercapita_v3; assert_in_delta(0, (worksheet.costpercapita_v3||0), 0.001); end
  def test_costpercapita_v4; assert_in_delta(0.41801327764104834, worksheet.costpercapita_v4, 0.001); end
  def test_costpercapita_v5; assert_in_delta(0, (worksheet.costpercapita_v5||0), 0.001); end
  def test_costpercapita_v6; assert_in_delta(0.0031025874384912016, worksheet.costpercapita_v6, 0.001); end
  def test_costpercapita_v7; assert_in_epsilon(39.81078834676651, worksheet.costpercapita_v7, 0.001); end
  def test_costpercapita_v8; assert_in_delta(0.2720403870362378, worksheet.costpercapita_v8, 0.001); end
  def test_costpercapita_v9; assert_in_epsilon(4.566153174069142, worksheet.costpercapita_v9, 0.001); end
  def test_costpercapita_v10; assert_in_epsilon(3.3839170094751534, worksheet.costpercapita_v10, 0.001); end
  def test_costpercapita_v11; assert_in_epsilon(2.3454695822328087, worksheet.costpercapita_v11, 0.001); end
  def test_costpercapita_v12; assert_in_delta(0, (worksheet.costpercapita_v12||0), 0.001); end
  def test_costpercapita_v13; assert_in_delta(0, (worksheet.costpercapita_v13||0), 0.001); end
  def test_costpercapita_v14; assert_in_epsilon(10.530222613465249, worksheet.costpercapita_v14, 0.001); end
  def test_costpercapita_v17; assert_in_delta(6.602088677886481e-05, worksheet.costpercapita_v17, 0.001); end
  def test_costpercapita_v18; assert_in_epsilon(3.4039507577340764, worksheet.costpercapita_v18, 0.001); end
  def test_costpercapita_v19; assert_in_epsilon(43.923858095546365, worksheet.costpercapita_v19, 0.001); end
  def test_costpercapita_v21; assert_in_delta(0, (worksheet.costpercapita_v21||0), 0.001); end
  def test_costpercapita_v22; assert_in_delta(0, (worksheet.costpercapita_v22||0), 0.001); end
  def test_costpercapita_v23; assert_in_epsilon(19.94366903168135, worksheet.costpercapita_v23, 0.001); end
  def test_costpercapita_v24; assert_in_epsilon(2.653578977504907, worksheet.costpercapita_v24, 0.001); end
  def test_costpercapita_v25; assert_in_delta(0, (worksheet.costpercapita_v25||0), 0.001); end
  def test_costpercapita_v26; assert_in_epsilon(83.66293451926336, worksheet.costpercapita_v26, 0.001); end
  def test_costpercapita_v28; assert_in_epsilon(1.0049182846542892, worksheet.costpercapita_v28, 0.001); end
  def test_costpercapita_v31; assert_in_epsilon(99.4912998889855, worksheet.costpercapita_v31, 0.001); end
  def test_costpercapita_v32; assert_in_epsilon(31.577566821973733, worksheet.costpercapita_v32, 0.001); end
  def test_costpercapita_v33; assert_in_epsilon(60.645723395667495, worksheet.costpercapita_v33, 0.001); end
  def test_costpercapita_v34; assert_in_epsilon(57.71994031484467, worksheet.costpercapita_v34, 0.001); end
  def test_costpercapita_v35; assert_in_delta(0, (worksheet.costpercapita_v35||0), 0.001); end
  def test_costpercapita_v36; assert_in_epsilon(19.76744186046511, worksheet.costpercapita_v36, 0.001); end
  def test_costpercapita_v37; assert_in_epsilon(142.72521535339342, worksheet.costpercapita_v37, 0.001); end
  def test_costpercapita_v38; assert_in_epsilon(1.5453365882608028, worksheet.costpercapita_v38, 0.001); end
  def test_costpercapita_v39; assert_in_epsilon(71.36861636107353, worksheet.costpercapita_v39, 0.001); end
  def test_costpercapita_v40; assert_in_epsilon(230.55154071212598, worksheet.costpercapita_v40, 0.001); end
  def test_costpercapita_v41; assert_in_epsilon(32.60095997722088, worksheet.costpercapita_v41, 0.001); end
  def test_costpercapita_v42; assert_in_delta(0, (worksheet.costpercapita_v42||0), 0.001); end
  def test_costpercapita_v43; assert_in_epsilon(7.801149203940404, worksheet.costpercapita_v43, 0.001); end
  def test_costpercapita_v47; assert_in_delta(0.0014937600612878158, worksheet.costpercapita_v47, 0.001); end
  def test_costpercapita_v51; assert_in_delta(0.11843679860074406, worksheet.costpercapita_v51, 0.001); end
  def test_costpercapita_v52; assert_in_delta(0.15738515622555302, worksheet.costpercapita_v52, 0.001); end
  def test_costpercapita_v173; assert_in_epsilon(971.994788858235, worksheet.costpercapita_v173, 0.001); end
  def test_costpercapita_w3; assert_in_delta(0, (worksheet.costpercapita_w3||0), 0.001); end
  def test_costpercapita_w4; assert_in_delta(0.41021242453214596, worksheet.costpercapita_w4, 0.001); end
  def test_costpercapita_w5; assert_in_delta(0, (worksheet.costpercapita_w5||0), 0.001); end
  def test_costpercapita_w6; assert_in_delta(0.0030446877731940174, worksheet.costpercapita_w6, 0.001); end
  def test_costpercapita_w7; assert_in_epsilon(39.06784995544247, worksheet.costpercapita_w7, 0.001); end
  def test_costpercapita_w8; assert_in_delta(0.2734749496880973, worksheet.costpercapita_w8, 0.001); end
  def test_costpercapita_w9; assert_in_epsilon(5.52816799605403, worksheet.costpercapita_w9, 0.001); end
  def test_costpercapita_w10; assert_in_epsilon(3.32076724621261, worksheet.costpercapita_w10, 0.001); end
  def test_costpercapita_w11; assert_in_epsilon(2.6045233303628312, worksheet.costpercapita_w11, 0.001); end
  def test_costpercapita_w12; assert_in_delta(0, (worksheet.costpercapita_w12||0), 0.001); end
  def test_costpercapita_w13; assert_in_delta(0, (worksheet.costpercapita_w13||0), 0.001); end
  def test_costpercapita_w14; assert_in_epsilon(12.229243104407544, worksheet.costpercapita_w14, 0.001); end
  def test_costpercapita_w17; assert_in_delta(2.0070829396290667e-06, worksheet.costpercapita_w17, 0.001); end
  def test_costpercapita_w18; assert_in_epsilon(3.1566389726298953, worksheet.costpercapita_w18, 0.001); end
  def test_costpercapita_w19; assert_in_epsilon(42.454576348690885, worksheet.costpercapita_w19, 0.001); end
  def test_costpercapita_w21; assert_in_delta(0, (worksheet.costpercapita_w21||0), 0.001); end
  def test_costpercapita_w22; assert_in_delta(0, (worksheet.costpercapita_w22||0), 0.001); end
  def test_costpercapita_w23; assert_in_epsilon(21.338281074127945, worksheet.costpercapita_w23, 0.001); end
  def test_costpercapita_w24; assert_in_epsilon(2.604058589221541, worksheet.costpercapita_w24, 0.001); end
  def test_costpercapita_w25; assert_in_delta(0, (worksheet.costpercapita_w25||0), 0.001); end
  def test_costpercapita_w26; assert_in_epsilon(84.89881356352963, worksheet.costpercapita_w26, 0.001); end
  def test_costpercapita_w28; assert_in_delta(0.386187625231597, worksheet.costpercapita_w28, 0.001); end
  def test_costpercapita_w31; assert_in_epsilon(101.89504482762199, worksheet.costpercapita_w31, 0.001); end
  def test_costpercapita_w32; assert_in_epsilon(10.709339377877125, worksheet.costpercapita_w32, 0.001); end
  def test_costpercapita_w33; assert_in_epsilon(23.448036162920605, worksheet.costpercapita_w33, 0.001); end
  def test_costpercapita_w34; assert_in_epsilon(33.75451513941057, worksheet.costpercapita_w34, 0.001); end
  def test_costpercapita_w35; assert_in_delta(0, (worksheet.costpercapita_w35||0), 0.001); end
  def test_costpercapita_w36; assert_in_epsilon(20, worksheet.costpercapita_w36, 0.001); end
  def test_costpercapita_w37; assert_in_epsilon(134.56448372093024, worksheet.costpercapita_w37, 0.001); end
  def test_costpercapita_w38; assert_in_epsilon(1.3063871835388368, worksheet.costpercapita_w38, 0.001); end
  def test_costpercapita_w39; assert_in_epsilon(65.60239623596598, worksheet.costpercapita_w39, 0.001); end
  def test_costpercapita_w40; assert_in_epsilon(159.1471315602158, worksheet.costpercapita_w40, 0.001); end
  def test_costpercapita_w41; assert_in_epsilon(37.78259474072222, worksheet.costpercapita_w41, 0.001); end
  def test_costpercapita_w42; assert_in_delta(0, (worksheet.costpercapita_w42||0), 0.001); end
  def test_costpercapita_w43; assert_in_epsilon(7.551175130946533, worksheet.costpercapita_w43, 0.001); end
  def test_costpercapita_w47; assert_in_delta(0, (worksheet.costpercapita_w47||0), 0.001); end
  def test_costpercapita_w51; assert_in_delta(0.11763036562114317, worksheet.costpercapita_w51, 0.001); end
  def test_costpercapita_w52; assert_in_delta(0.20184886214004713, worksheet.costpercapita_w52, 0.001); end
  def test_costpercapita_w173; assert_in_epsilon(814.3564251828985, worksheet.costpercapita_w173, 0.001); end
  def test_costpercapita_y5; assert_in_delta(0.27699004186341447, worksheet.costpercapita_y5, 0.001); end
  def test_costpercapita_y15; assert_in_epsilon(1.3144566461502731, worksheet.costpercapita_y15, 0.001); end
  def test_costpercapita_y16; assert_in_epsilon(1.6398685987698778, worksheet.costpercapita_y16, 0.001); end
  def test_costpercapita_y20; assert_in_delta(0, (worksheet.costpercapita_y20||0), 0.001); end
  def test_costpercapita_y22; assert_in_delta(-1.827104583563191e-14, worksheet.costpercapita_y22, 0.001); end
  def test_costpercapita_y44; assert_in_epsilon(16.56242208548784, worksheet.costpercapita_y44, 0.001); end
  def test_costpercapita_y45; assert_in_epsilon(432.41627381141154, worksheet.costpercapita_y45, 0.001); end
  def test_costpercapita_y46; assert_in_epsilon(151.2771269277196, worksheet.costpercapita_y46, 0.001); end
  def test_costpercapita_y48; assert_in_epsilon(37.55568640361976, worksheet.costpercapita_y48, 0.001); end
  def test_costpercapita_y49; assert_in_epsilon(25.305851963681697, worksheet.costpercapita_y49, 0.001); end
  def test_costpercapita_y50; assert_in_epsilon(57.913740413014594, worksheet.costpercapita_y50, 0.001); end
  def test_costpercapita_y173; assert_in_epsilon(724.2624168917185, worksheet.costpercapita_y173, 0.001); end
  def test_costpercapita_z5; assert_in_delta(0.22499927188293975, worksheet.costpercapita_z5, 0.001); end
  def test_costpercapita_z15; assert_in_epsilon(1.112223303813976, worksheet.costpercapita_z15, 0.001); end
  def test_costpercapita_z16; assert_in_epsilon(4.4521867960402455, worksheet.costpercapita_z16, 0.001); end
  def test_costpercapita_z20; assert_in_delta(0, (worksheet.costpercapita_z20||0), 0.001); end
  def test_costpercapita_z22; assert_in_delta(-1.766855683391294e-14, worksheet.costpercapita_z22, 0.001); end
  def test_costpercapita_z44; assert_in_epsilon(15.45656653285251, worksheet.costpercapita_z44, 0.001); end
  def test_costpercapita_z45; assert_in_epsilon(329.8293326445598, worksheet.costpercapita_z45, 0.001); end
  def test_costpercapita_z46; assert_in_epsilon(112.9730770495155, worksheet.costpercapita_z46, 0.001); end
  def test_costpercapita_z48; assert_in_epsilon(25.513943776324588, worksheet.costpercapita_z48, 0.001); end
  def test_costpercapita_z49; assert_in_epsilon(51.0183830911233, worksheet.costpercapita_z49, 0.001); end
  def test_costpercapita_z50; assert_in_epsilon(60.602956894951255, worksheet.costpercapita_z50, 0.001); end
  def test_costpercapita_z173; assert_in_epsilon(601.1836693610641, worksheet.costpercapita_z173, 0.001); end
  def test_costpercapita_aa5; assert_in_delta(0.12436183535401259, worksheet.costpercapita_aa5, 0.001); end
  def test_costpercapita_aa15; assert_in_delta(0.9221238599681264, worksheet.costpercapita_aa15, 0.001); end
  def test_costpercapita_aa16; assert_in_epsilon(9.075898729391174, worksheet.costpercapita_aa16, 0.001); end
  def test_costpercapita_aa20; assert_in_delta(0.0003382341609226739, worksheet.costpercapita_aa20, 0.001); end
  def test_costpercapita_aa22; assert_in_delta(-3.4180241924198217e-14, worksheet.costpercapita_aa22, 0.001); end
  def test_costpercapita_aa44; assert_in_epsilon(14.409162417205268, worksheet.costpercapita_aa44, 0.001); end
  def test_costpercapita_aa45; assert_in_epsilon(242.09714400965842, worksheet.costpercapita_aa45, 0.001); end
  def test_costpercapita_aa46; assert_in_epsilon(84.90203013066098, worksheet.costpercapita_aa46, 0.001); end
  def test_costpercapita_aa48; assert_in_epsilon(11.516240533318388, worksheet.costpercapita_aa48, 0.001); end
  def test_costpercapita_aa49; assert_in_epsilon(64.28620160558573, worksheet.costpercapita_aa49, 0.001); end
  def test_costpercapita_aa50; assert_in_epsilon(40.48113914646239, worksheet.costpercapita_aa50, 0.001); end
  def test_costpercapita_aa173; assert_in_epsilon(467.81464050176544, worksheet.costpercapita_aa173, 0.001); end
  def test_costpercapita_ab5; assert_in_delta(0.04017038693498128, worksheet.costpercapita_ab5, 0.001); end
  def test_costpercapita_ab15; assert_in_delta(0.7446430842599925, worksheet.costpercapita_ab15, 0.001); end
  def test_costpercapita_ab16; assert_in_epsilon(14.014250463234104, worksheet.costpercapita_ab16, 0.001); end
  def test_costpercapita_ab20; assert_in_delta(0.02185075040138372, worksheet.costpercapita_ab20, 0.001); end
  def test_costpercapita_ab22; assert_in_delta(0, (worksheet.costpercapita_ab22||0), 0.001); end
  def test_costpercapita_ab44; assert_in_epsilon(13.438383117365467, worksheet.costpercapita_ab44, 0.001); end
  def test_costpercapita_ab45; assert_in_epsilon(177.48292069161144, worksheet.costpercapita_ab45, 0.001); end
  def test_costpercapita_ab46; assert_in_epsilon(64.01905763736185, worksheet.costpercapita_ab46, 0.001); end
  def test_costpercapita_ab48; assert_in_epsilon(-3.5448146297514818, worksheet.costpercapita_ab48, 0.001); end
  def test_costpercapita_ab49; assert_in_epsilon(47.10755604078084, worksheet.costpercapita_ab49, 0.001); end
  def test_costpercapita_ab50; assert_in_epsilon(19.662515807879934, worksheet.costpercapita_ab50, 0.001); end
  def test_costpercapita_ab173; assert_in_epsilon(332.9865333500785, worksheet.costpercapita_ab173, 0.001); end
  def test_costpercapita_ac5; assert_in_delta(0.039072925813976186, worksheet.costpercapita_ac5, 0.001); end
  def test_costpercapita_ac15; assert_in_delta(0.5794394569566704, worksheet.costpercapita_ac15, 0.001); end
  def test_costpercapita_ac16; assert_in_epsilon(19.953752904935214, worksheet.costpercapita_ac16, 0.001); end
  def test_costpercapita_ac20; assert_in_delta(0.10626892277573406, worksheet.costpercapita_ac20, 0.001); end
  def test_costpercapita_ac22; assert_in_epsilon(-17.37706516644294, worksheet.costpercapita_ac22, 0.001); end
  def test_costpercapita_ac44; assert_in_epsilon(6.280477805756656, worksheet.costpercapita_ac44, 0.001); end
  def test_costpercapita_ac45; assert_in_epsilon(130.535125298674, worksheet.costpercapita_ac45, 0.001); end
  def test_costpercapita_ac46; assert_in_epsilon(48.45255635500387, worksheet.costpercapita_ac46, 0.001); end
  def test_costpercapita_ac48; assert_in_epsilon(-5.527697690607601, worksheet.costpercapita_ac48, 0.001); end
  def test_costpercapita_ac49; assert_in_epsilon(28.05079379308239, worksheet.costpercapita_ac49, 0.001); end
  def test_costpercapita_ac50; assert_in_epsilon(3.2419647661685964, worksheet.costpercapita_ac50, 0.001); end
  def test_costpercapita_ac173; assert_in_epsilon(214.33468937211654, worksheet.costpercapita_ac173, 0.001); end
  def test_costpercapita_ad5; assert_in_delta(0, (worksheet.costpercapita_ad5||0), 0.001); end
  def test_costpercapita_ad15; assert_in_delta(0.42434276802360144, worksheet.costpercapita_ad15, 0.001); end
  def test_costpercapita_ad16; assert_in_epsilon(25.0135162741293, worksheet.costpercapita_ad16, 0.001); end
  def test_costpercapita_ad20; assert_in_delta(0.20753136871226646, worksheet.costpercapita_ad20, 0.001); end
  def test_costpercapita_ad22; assert_in_epsilon(-44.095331042076, worksheet.costpercapita_ad22, 0.001); end
  def test_costpercapita_ad44; assert_in_epsilon(6.132536780985016, worksheet.costpercapita_ad44, 0.001); end
  def test_costpercapita_ad45; assert_in_epsilon(98.62633463812801, worksheet.costpercapita_ad45, 0.001); end
  def test_costpercapita_ad46; assert_in_epsilon(36.60852223650431, worksheet.costpercapita_ad46, 0.001); end
  def test_costpercapita_ad48; assert_in_epsilon(-5.2513562783053125, worksheet.costpercapita_ad48, 0.001); end
  def test_costpercapita_ad49; assert_in_epsilon(28.21564086502875, worksheet.costpercapita_ad49, 0.001); end
  def test_costpercapita_ad50; assert_in_delta(0.09665792130743532, worksheet.costpercapita_ad50, 0.001); end
  def test_costpercapita_ad173; assert_in_epsilon(145.9783955324374, worksheet.costpercapita_ad173, 0.001); end
  def test_costpercapita_ae5; assert_in_delta(0, (worksheet.costpercapita_ae5||0), 0.001); end
  def test_costpercapita_ae15; assert_in_delta(0.2768620468308644, worksheet.costpercapita_ae15, 0.001); end
  def test_costpercapita_ae16; assert_in_epsilon(31.045720440546607, worksheet.costpercapita_ae16, 0.001); end
  def test_costpercapita_ae20; assert_in_delta(0.40621094916428396, worksheet.costpercapita_ae20, 0.001); end
  def test_costpercapita_ae22; assert_in_epsilon(-55.315196746680854, worksheet.costpercapita_ae22, 0.001); end
  def test_costpercapita_ae44; assert_in_epsilon(6.001751932843022, worksheet.costpercapita_ae44, 0.001); end
  def test_costpercapita_ae45; assert_in_epsilon(74.68765072184416, worksheet.costpercapita_ae45, 0.001); end
  def test_costpercapita_ae46; assert_in_epsilon(27.72286461090769, worksheet.costpercapita_ae46, 0.001); end
  def test_costpercapita_ae48; assert_in_epsilon(-5.65192745063948, worksheet.costpercapita_ae48, 0.001); end
  def test_costpercapita_ae49; assert_in_epsilon(22.216734816870865, worksheet.costpercapita_ae49, 0.001); end
  def test_costpercapita_ae50; assert_in_epsilon(-5.047543829379372, worksheet.costpercapita_ae50, 0.001); end
  def test_costpercapita_ae173; assert_in_epsilon(96.3431274923078, worksheet.costpercapita_ae173, 0.001); end
  def test_costpercapita_af5; assert_in_delta(0, (worksheet.costpercapita_af5||0), 0.001); end
  def test_costpercapita_af15; assert_in_delta(0.13566961169205746, worksheet.costpercapita_af15, 0.001); end
  def test_costpercapita_af16; assert_in_epsilon(37.604935215521216, worksheet.costpercapita_af16, 0.001); end
  def test_costpercapita_af20; assert_in_delta(0.9952697086691628, worksheet.costpercapita_af20, 0.001); end
  def test_costpercapita_af22; assert_in_epsilon(-64.071080724354, worksheet.costpercapita_af22, 0.001); end
  def test_costpercapita_af44; assert_in_epsilon(5.8820294332238205, worksheet.costpercapita_af44, 0.001); end
  def test_costpercapita_af45; assert_in_epsilon(56.6390522783596, worksheet.costpercapita_af45, 0.001); end
  def test_costpercapita_af46; assert_in_epsilon(21.023512760508325, worksheet.costpercapita_af46, 0.001); end
  def test_costpercapita_af48; assert_in_epsilon(-6.429476812372706, worksheet.costpercapita_af48, 0.001); end
  def test_costpercapita_af49; assert_in_epsilon(9.586044126358326, worksheet.costpercapita_af49, 0.001); end
  def test_costpercapita_af50; assert_in_epsilon(-11.361947583991878, worksheet.costpercapita_af50, 0.001); end
  def test_costpercapita_af173; assert_in_epsilon(50.00400801361391, worksheet.costpercapita_af173, 0.001); end
  def test_costpercapita_ag5; assert_in_delta(0, (worksheet.costpercapita_ag5||0), 0.001); end
  def test_costpercapita_ag15; assert_in_delta(0, (worksheet.costpercapita_ag15||0), 0.001); end
  def test_costpercapita_ag16; assert_in_epsilon(44.3156802545963, worksheet.costpercapita_ag16, 0.001); end
  def test_costpercapita_ag20; assert_in_epsilon(2.289411168453889, worksheet.costpercapita_ag20, 0.001); end
  def test_costpercapita_ag22; assert_in_epsilon(-67.21558960420873, worksheet.costpercapita_ag22, 0.001); end
  def test_costpercapita_ag44; assert_in_epsilon(5.772260557340837, worksheet.costpercapita_ag44, 0.001); end
  def test_costpercapita_ag45; assert_in_epsilon(43.00834567660168, worksheet.costpercapita_ag45, 0.001); end
  def test_costpercapita_ag46; assert_in_epsilon(15.964011892301023, worksheet.costpercapita_ag46, 0.001); end
  def test_costpercapita_ag48; assert_in_epsilon(-6.258930896435121, worksheet.costpercapita_ag48, 0.001); end
  def test_costpercapita_ag49; assert_in_epsilon(-6.053897113437314, worksheet.costpercapita_ag49, 0.001); end
  def test_costpercapita_ag50; assert_in_epsilon(-15.964011892301023, worksheet.costpercapita_ag50, 0.001); end
  def test_costpercapita_ag173; assert_in_epsilon(15.85728004291154, worksheet.costpercapita_ag173, 0.001); end
  def test_costpercapita_ai173; assert_in_epsilon(3516.077771107632, worksheet.costpercapita_ai173, 0.001); end
  def test_costpercapita_aj173; assert_in_epsilon(3291.753451875156, worksheet.costpercapita_aj173, 0.001); end
  def test_costpercapita_ak173; assert_in_epsilon(3223.747800301724, worksheet.costpercapita_ak173, 0.001); end
  def test_costpercapita_al173; assert_in_epsilon(3155.3839139250335, worksheet.costpercapita_al173, 0.001); end
  def test_costpercapita_am173; assert_in_epsilon(2961.848517802073, worksheet.costpercapita_am173, 0.001); end
  def test_costpercapita_an173; assert_in_epsilon(2775.556643487855, worksheet.costpercapita_an173, 0.001); end
  def test_costpercapita_ao173; assert_in_epsilon(2596.690212355364, worksheet.costpercapita_ao173, 0.001); end
  def test_costpercapita_ap173; assert_in_epsilon(2536.082700144112, worksheet.costpercapita_ap173, 0.001); end
  def test_costpercapita_aq173; assert_in_epsilon(2268.8246902271294, worksheet.costpercapita_aq173, 0.001); end
  def test_costpercapita_as3; assert_in_epsilon(6.73972900000861, worksheet.costpercapita_as3, 0.001); end
  def test_costpercapita_as4; assert_in_delta(0.8067007151569467, worksheet.costpercapita_as4, 0.001); end
  def test_costpercapita_as5; assert_in_epsilon(1.0603220663865833, worksheet.costpercapita_as5, 0.001); end
  def test_costpercapita_as6; assert_in_epsilon(3.8783002320159827, worksheet.costpercapita_as6, 0.001); end
  def test_costpercapita_as7; assert_in_epsilon(107.73769598932635, worksheet.costpercapita_as7, 0.001); end
  def test_costpercapita_as8; assert_in_delta(0.6230899852488023, worksheet.costpercapita_as8, 0.001); end
  def test_costpercapita_as9; assert_in_epsilon(9.519672077593107, worksheet.costpercapita_as9, 0.001); end
  def test_costpercapita_as10; assert_in_epsilon(5.65881386271612, worksheet.costpercapita_as10, 0.001); end
  def test_costpercapita_as11; assert_in_epsilon(132.04814194570292, worksheet.costpercapita_as11, 0.001); end
  def test_costpercapita_as12; assert_in_epsilon(84.91675484109616, worksheet.costpercapita_as12, 0.001); end
  def test_costpercapita_as13; assert_in_delta(0.9576136112544257, worksheet.costpercapita_as13, 0.001); end
  def test_costpercapita_as14; assert_in_epsilon(10.239254371805792, worksheet.costpercapita_as14, 0.001); end
  def test_costpercapita_as15; assert_in_delta(0.6121956419661735, worksheet.costpercapita_as15, 0.001); end
  def test_costpercapita_as16; assert_in_epsilon(20.79064551968489, worksheet.costpercapita_as16, 0.001); end
  def test_costpercapita_as17; assert_in_delta(2.3486394746480683e-05, worksheet.costpercapita_as17, 0.001); end
  def test_costpercapita_as18; assert_in_epsilon(10.707926235485655, worksheet.costpercapita_as18, 0.001); end
  def test_costpercapita_as19; assert_in_epsilon(84.9935210077271, worksheet.costpercapita_as19, 0.001); end
  def test_costpercapita_as20; assert_in_delta(0.4474312335930714, worksheet.costpercapita_as20, 0.001); end
  def test_costpercapita_as21; assert_in_delta(0, (worksheet.costpercapita_as21||0), 0.001); end
  def test_costpercapita_as22; assert_in_epsilon(-27.56380703152918, worksheet.costpercapita_as22, 0.001); end
  def test_costpercapita_as23; assert_in_epsilon(51.93791751326508, worksheet.costpercapita_as23, 0.001); end
  def test_costpercapita_as24; assert_in_epsilon(8.527139738585745, worksheet.costpercapita_as24, 0.001); end
  def test_costpercapita_as25; assert_in_delta(0, (worksheet.costpercapita_as25||0), 0.001); end
  def test_costpercapita_as26; assert_in_epsilon(343.17001992610966, worksheet.costpercapita_as26, 0.001); end
  def test_costpercapita_as27; assert_in_epsilon(149.68618951835617, worksheet.costpercapita_as27, 0.001); end
  def test_costpercapita_as28; assert_in_epsilon(37.79376188356939, worksheet.costpercapita_as28, 0.001); end
  def test_costpercapita_as29; assert_in_epsilon(36.29684855302011, worksheet.costpercapita_as29, 0.001); end
  def test_costpercapita_as30; assert_in_epsilon(4.014861950359359, worksheet.costpercapita_as30, 0.001); end
  def test_costpercapita_as31; assert_in_epsilon(97.30345680879722, worksheet.costpercapita_as31, 0.001); end
  def test_costpercapita_as32; assert_in_epsilon(551.0879796276884, worksheet.costpercapita_as32, 0.001); end
  def test_costpercapita_as33; assert_in_epsilon(259.38335446247146, worksheet.costpercapita_as33, 0.001); end
  def test_costpercapita_as34; assert_in_epsilon(161.13231981971816, worksheet.costpercapita_as34, 0.001); end
  def test_costpercapita_as35; assert_in_delta(0, (worksheet.costpercapita_as35||0), 0.001); end
  def test_costpercapita_as36; assert_in_epsilon(38.222773146097666, worksheet.costpercapita_as36, 0.001); end
  def test_costpercapita_as37; assert_in_epsilon(151.98492069940798, worksheet.costpercapita_as37, 0.001); end
  def test_costpercapita_as38; assert_in_epsilon(3.725708750073693, worksheet.costpercapita_as38, 0.001); end
  def test_costpercapita_as39; assert_in_epsilon(135.50867397547938, worksheet.costpercapita_as39, 0.001); end
  def test_costpercapita_as40; assert_in_epsilon(101.0471638138306, worksheet.costpercapita_as40, 0.001); end
  def test_costpercapita_as41; assert_in_epsilon(18.064825489879357, worksheet.costpercapita_as41, 0.001); end
  def test_costpercapita_as42; assert_in_delta(0, (worksheet.costpercapita_as42||0), 0.001); end
  def test_costpercapita_as43; assert_in_epsilon(12.730760740700433, worksheet.costpercapita_as43, 0.001); end
  def test_costpercapita_as44; assert_in_epsilon(9.992843407006715, worksheet.costpercapita_as44, 0.001); end
  def test_costpercapita_as45; assert_in_epsilon(176.14690886342768, worksheet.costpercapita_as45, 0.001); end
  def test_costpercapita_as46; assert_in_epsilon(62.549195511164804, worksheet.costpercapita_as46, 0.001); end
  def test_costpercapita_as47; assert_in_epsilon(5.1356602038673556, worksheet.costpercapita_as47, 0.001); end
  def test_costpercapita_as48; assert_in_epsilon(4.657962995016782, worksheet.costpercapita_as48, 0.001); end
  def test_costpercapita_as49; assert_in_epsilon(29.970367687674962, worksheet.costpercapita_as49, 0.001); end
  def test_costpercapita_as50; assert_in_epsilon(16.625052404901325, worksheet.costpercapita_as50, 0.001); end
  def test_costpercapita_as51; assert_in_delta(0.6425688351779066, worksheet.costpercapita_as51, 0.001); end
  def test_costpercapita_as52; assert_in_epsilon(3.5940390189494575, worksheet.costpercapita_as52, 0.001); end
  def test_costpercapita_as173; assert_in_epsilon(2925.107300136231, worksheet.costpercapita_as173, 0.001); end
  def test_costpercapita_ay3; assert_in_delta(0, (worksheet.costpercapita_ay3||0), 0.001); end
  def test_costpercapita_ay4; assert_in_delta(0, (worksheet.costpercapita_ay4||0), 0.001); end
  def test_costpercapita_ay5; assert_in_delta(0, (worksheet.costpercapita_ay5||0), 0.001); end
  def test_costpercapita_ay6; assert_in_epsilon(1.2922676740723102, worksheet.costpercapita_ay6, 0.001); end
  def test_costpercapita_ay7; assert_in_epsilon(1.755798470206947, worksheet.costpercapita_ay7, 0.001); end
  def test_costpercapita_ay8; assert_in_delta(0.17038450497216157, worksheet.costpercapita_ay8, 0.001); end
  def test_costpercapita_ay9; assert_in_delta(0.002446176846015897, worksheet.costpercapita_ay9, 0.001); end
  def test_costpercapita_ay10; assert_in_delta(0, (worksheet.costpercapita_ay10||0), 0.001); end
  def test_costpercapita_ay11; assert_in_epsilon(21.391699210778558, worksheet.costpercapita_ay11, 0.001); end
  def test_costpercapita_ay12; assert_in_epsilon(1.2928443649373884, worksheet.costpercapita_ay12, 0.001); end
  def test_costpercapita_ay13; assert_in_delta(0.056202376789291235, worksheet.costpercapita_ay13, 0.001); end
  def test_costpercapita_ay14; assert_in_delta(0.22331630232645866, worksheet.costpercapita_ay14, 0.001); end
  def test_costpercapita_ay18; assert_in_epsilon(1.7220164254987065, worksheet.costpercapita_ay18, 0.001); end
  def test_costpercapita_ay19; assert_in_epsilon(7.049619542980363, worksheet.costpercapita_ay19, 0.001); end
  def test_costpercapita_ay21; assert_in_delta(0, (worksheet.costpercapita_ay21||0), 0.001); end
  def test_costpercapita_ay22; assert_in_delta(0, (worksheet.costpercapita_ay22||0), 0.001); end
  def test_costpercapita_ay23; assert_in_epsilon(2.6315559232983587, worksheet.costpercapita_ay23, 0.001); end
  def test_costpercapita_ay24; assert_in_delta(0, (worksheet.costpercapita_ay24||0), 0.001); end
  def test_costpercapita_ay25; assert_in_delta(0, (worksheet.costpercapita_ay25||0), 0.001); end
  def test_costpercapita_ay27; assert_in_epsilon(18.7034441333024, worksheet.costpercapita_ay27, 0.001); end
  def test_costpercapita_ay28; assert_in_epsilon(5.23826943177733, worksheet.costpercapita_ay28, 0.001); end
  def test_costpercapita_ay29; assert_in_epsilon(7.1863905090988, worksheet.costpercapita_ay29, 0.001); end
  def test_costpercapita_ay30; assert_in_epsilon(1.242311681679632, worksheet.costpercapita_ay30, 0.001); end
  def test_costpercapita_ay31; assert_in_delta(0.5114424701110502, worksheet.costpercapita_ay31, 0.001); end
  def test_costpercapita_ay32; assert_in_epsilon(131.65178975302376, worksheet.costpercapita_ay32, 0.001); end
  def test_costpercapita_ay33; assert_in_delta(0.30900539436279606, worksheet.costpercapita_ay33, 0.001); end
  def test_costpercapita_ay34; assert_in_delta(0, (worksheet.costpercapita_ay34||0), 0.001); end
  def test_costpercapita_ay35; assert_in_delta(0, (worksheet.costpercapita_ay35||0), 0.001); end
  def test_costpercapita_ay37; assert_in_delta(0.2490259743866717, worksheet.costpercapita_ay37, 0.001); end
  def test_costpercapita_ay38; assert_in_delta(0.3099705001825792, worksheet.costpercapita_ay38, 0.001); end
  def test_costpercapita_ay39; assert_in_epsilon(15.729114818076875, worksheet.costpercapita_ay39, 0.001); end
  def test_costpercapita_ay42; assert_in_delta(0, (worksheet.costpercapita_ay42||0), 0.001); end
  def test_costpercapita_ay43; assert_in_delta(0.9104594897634153, worksheet.costpercapita_ay43, 0.001); end
  def test_costpercapita_ay47; assert_in_epsilon(2.3126132031150313, worksheet.costpercapita_ay47, 0.001); end
  def test_costpercapita_ay51; assert_in_delta(0.09090522393684487, worksheet.costpercapita_ay51, 0.001); end
  def test_costpercapita_ay52; assert_in_delta(0, (worksheet.costpercapita_ay52||0), 0.001); end
  def test_costpercapita_ay173; assert_in_epsilon(256.9920525232166, worksheet.costpercapita_ay173, 0.001); end
  def test_costpercapita_az3; assert_in_delta(0.5986791494334888, worksheet.costpercapita_az3, 0.001); end
  def test_costpercapita_az4; assert_in_delta(0.34043171949705375, worksheet.costpercapita_az4, 0.001); end
  def test_costpercapita_az5; assert_in_delta(0, (worksheet.costpercapita_az5||0), 0.001); end
  def test_costpercapita_az6; assert_in_epsilon(1.8538008331323832, worksheet.costpercapita_az6, 0.001); end
  def test_costpercapita_az7; assert_in_epsilon(9.778015264274874, worksheet.costpercapita_az7, 0.001); end
  def test_costpercapita_az8; assert_in_delta(0.05366972772684024, worksheet.costpercapita_az8, 0.001); end
  def test_costpercapita_az9; assert_in_delta(0.05261092825801466, worksheet.costpercapita_az9, 0.001); end
  def test_costpercapita_az10; assert_in_delta(0.03056136131461574, worksheet.costpercapita_az10, 0.001); end
  def test_costpercapita_az11; assert_in_epsilon(30.859603556720156, worksheet.costpercapita_az11, 0.001); end
  def test_costpercapita_az12; assert_in_epsilon(5.745974955277281, worksheet.costpercapita_az12, 0.001); end
  def test_costpercapita_az13; assert_in_epsilon(1.035275856501509, worksheet.costpercapita_az13, 0.001); end
  def test_costpercapita_az14; assert_in_delta(0.4065445465216864, worksheet.costpercapita_az14, 0.001); end
  def test_costpercapita_az18; assert_in_epsilon(2.711901295278471, worksheet.costpercapita_az18, 0.001); end
  def test_costpercapita_az19; assert_in_epsilon(12.232527974257676, worksheet.costpercapita_az19, 0.001); end
  def test_costpercapita_az21; assert_in_delta(0, (worksheet.costpercapita_az21||0), 0.001); end
  def test_costpercapita_az22; assert_in_delta(0, (worksheet.costpercapita_az22||0), 0.001); end
  def test_costpercapita_az23; assert_in_epsilon(5.631224378126515, worksheet.costpercapita_az23, 0.001); end
  def test_costpercapita_az24; assert_in_delta(0.4056312433408871, worksheet.costpercapita_az24, 0.001); end
  def test_costpercapita_az25; assert_in_delta(0, (worksheet.costpercapita_az25||0), 0.001); end
  def test_costpercapita_az26; assert_in_epsilon(27.449264308419544, worksheet.costpercapita_az26, 0.001); end
  def test_costpercapita_az27; assert_in_epsilon(30.577214646398357, worksheet.costpercapita_az27, 0.001); end
  def test_costpercapita_az28; assert_in_epsilon(12.478250798213908, worksheet.costpercapita_az28, 0.001); end
  def test_costpercapita_az29; assert_in_epsilon(12.278619957133156, worksheet.costpercapita_az29, 0.001); end
  def test_costpercapita_az30; assert_in_epsilon(5.747406651212224, worksheet.costpercapita_az30, 0.001); end
  def test_costpercapita_az31; assert_in_delta(0.8376844239604146, worksheet.costpercapita_az31, 0.001); end
  def test_costpercapita_az32; assert_in_epsilon(189.39236210415214, worksheet.costpercapita_az32, 0.001); end
  def test_costpercapita_az33; assert_in_epsilon(11.081308842408687, worksheet.costpercapita_az33, 0.001); end
  def test_costpercapita_az34; assert_in_epsilon(9.727482612121822, worksheet.costpercapita_az34, 0.001); end
  def test_costpercapita_az35; assert_in_delta(0, (worksheet.costpercapita_az35||0), 0.001); end
  def test_costpercapita_az36; assert_in_epsilon(17.404056806484274, worksheet.costpercapita_az36, 0.001); end
  def test_costpercapita_az37; assert_in_delta(0.4216141796386694, worksheet.costpercapita_az37, 0.001); end
  def test_costpercapita_az38; assert_in_delta(0.4334067802233855, worksheet.costpercapita_az38, 0.001); end
  def test_costpercapita_az39; assert_in_epsilon(36.54256821428272, worksheet.costpercapita_az39, 0.001); end
  def test_costpercapita_az42; assert_in_delta(0, (worksheet.costpercapita_az42||0), 0.001); end
  def test_costpercapita_az43; assert_in_epsilon(1.3821874523005144, worksheet.costpercapita_az43, 0.001); end
  def test_costpercapita_az47; assert_in_epsilon(3.401284911425107, worksheet.costpercapita_az47, 0.001); end
  def test_costpercapita_az51; assert_in_delta(0.08558426142371912, worksheet.costpercapita_az51, 0.001); end
  def test_costpercapita_az52; assert_in_delta(0.49457943690163836, worksheet.costpercapita_az52, 0.001); end
  def test_costpercapita_az173; assert_in_epsilon(431.47132917636173, worksheet.costpercapita_az173, 0.001); end
  def test_costpercapita_ba3; assert_in_delta(0, (worksheet.costpercapita_ba3||0), 0.001); end
  def test_costpercapita_ba4; assert_in_delta(0.30528138461500387, worksheet.costpercapita_ba4, 0.001); end
  def test_costpercapita_ba5; assert_in_delta(0, (worksheet.costpercapita_ba5||0), 0.001); end
  def test_costpercapita_ba6; assert_in_epsilon(1.779675410054803, worksheet.costpercapita_ba6, 0.001); end
  def test_costpercapita_ba7; assert_in_epsilon(26.27843453047602, worksheet.costpercapita_ba7, 0.001); end
  def test_costpercapita_ba8; assert_in_delta(0.05191268010605781, worksheet.costpercapita_ba8, 0.001); end
  def test_costpercapita_ba9; assert_in_delta(0.44265261619949337, worksheet.costpercapita_ba9, 0.001); end
  def test_costpercapita_ba10; assert_in_delta(0.194101160155198, worksheet.costpercapita_ba10, 0.001); end
  def test_costpercapita_ba11; assert_in_epsilon(26.35017603344947, worksheet.costpercapita_ba11, 0.001); end
  def test_costpercapita_ba12; assert_in_epsilon(9.337209302325583, worksheet.costpercapita_ba12, 0.001); end
  def test_costpercapita_ba13; assert_in_delta(0.594758015774305, worksheet.costpercapita_ba13, 0.001); end
  def test_costpercapita_ba14; assert_in_delta(0.43202612295268944, worksheet.costpercapita_ba14, 0.001); end
  def test_costpercapita_ba18; assert_in_epsilon(2.5617103716814604, worksheet.costpercapita_ba18, 0.001); end
  def test_costpercapita_ba19; assert_in_epsilon(13.015162338917985, worksheet.costpercapita_ba19, 0.001); end
  def test_costpercapita_ba21; assert_in_delta(0, (worksheet.costpercapita_ba21||0), 0.001); end
  def test_costpercapita_ba22; assert_in_delta(0, (worksheet.costpercapita_ba22||0), 0.001); end
  def test_costpercapita_ba23; assert_in_epsilon(8.125847456927795, worksheet.costpercapita_ba23, 0.001); end
  def test_costpercapita_ba24; assert_in_epsilon(3.2169060344312523, worksheet.costpercapita_ba24, 0.001); end
  def test_costpercapita_ba25; assert_in_delta(0, (worksheet.costpercapita_ba25||0), 0.001); end
  def test_costpercapita_ba26; assert_in_epsilon(71.88716194935836, worksheet.costpercapita_ba26, 0.001); end
  def test_costpercapita_ba27; assert_in_epsilon(29.978925168727873, worksheet.costpercapita_ba27, 0.001); end
  def test_costpercapita_ba28; assert_in_epsilon(13.26295189962408, worksheet.costpercapita_ba28, 0.001); end
  def test_costpercapita_ba29; assert_in_epsilon(12.273084338851342, worksheet.costpercapita_ba29, 0.001); end
  def test_costpercapita_ba30; assert_in_epsilon(5.176831175177255, worksheet.costpercapita_ba30, 0.001); end
  def test_costpercapita_ba31; assert_in_epsilon(1.0576562135931546, worksheet.costpercapita_ba31, 0.001); end
  def test_costpercapita_ba32; assert_in_epsilon(166.67448764002594, worksheet.costpercapita_ba32, 0.001); end
  def test_costpercapita_ba33; assert_in_epsilon(14.425476987033127, worksheet.costpercapita_ba33, 0.001); end
  def test_costpercapita_ba34; assert_in_epsilon(11.768183329484156, worksheet.costpercapita_ba34, 0.001); end
  def test_costpercapita_ba35; assert_in_delta(0, (worksheet.costpercapita_ba35||0), 0.001); end
  def test_costpercapita_ba36; assert_in_epsilon(20.480646451104583, worksheet.costpercapita_ba36, 0.001); end
  def test_costpercapita_ba37; assert_in_delta(0.5097277476233254, worksheet.costpercapita_ba37, 0.001); end
  def test_costpercapita_ba38; assert_in_delta(0.3440847529333364, worksheet.costpercapita_ba38, 0.001); end
  def test_costpercapita_ba39; assert_in_epsilon(30.3466223439213, worksheet.costpercapita_ba39, 0.001); end
  def test_costpercapita_ba42; assert_in_delta(0, (worksheet.costpercapita_ba42||0), 0.001); end
  def test_costpercapita_ba43; assert_in_epsilon(1.2669000576039564, worksheet.costpercapita_ba43, 0.001); end
  def test_costpercapita_ba47; assert_in_epsilon(2.8069575342059747, worksheet.costpercapita_ba47, 0.001); end
  def test_costpercapita_ba51; assert_in_delta(0.2880049238132801, worksheet.costpercapita_ba51, 0.001); end
  def test_costpercapita_ba52; assert_in_epsilon(1.1817859343582038, worksheet.costpercapita_ba52, 0.001); end
  def test_costpercapita_ba173; assert_in_epsilon(476.41534190550635, worksheet.costpercapita_ba173, 0.001); end
  def test_costpercapita_bb3; assert_in_delta(0, (worksheet.costpercapita_bb3||0), 0.001); end
  def test_costpercapita_bb4; assert_in_delta(-3.582949982513063e-17, worksheet.costpercapita_bb4, 0.001); end
  def test_costpercapita_bb5; assert_in_delta(0, (worksheet.costpercapita_bb5||0), 0.001); end
  def test_costpercapita_bb6; assert_in_epsilon(1.7115510699817191, worksheet.costpercapita_bb6, 0.001); end
  def test_costpercapita_bb7; assert_in_epsilon(28.51014770394497, worksheet.costpercapita_bb7, 0.001); end
  def test_costpercapita_bb8; assert_in_delta(0.025152641573148372, worksheet.costpercapita_bb8, 0.001); end
  def test_costpercapita_bb9; assert_in_delta(0.33009586979949185, worksheet.costpercapita_bb9, 0.001); end
  def test_costpercapita_bb10; assert_in_epsilon(1.4053079959412378, worksheet.costpercapita_bb10, 0.001); end
  def test_costpercapita_bb11; assert_in_epsilon(22.143487413401356, worksheet.costpercapita_bb11, 0.001); end
  def test_costpercapita_bb12; assert_in_epsilon(12.928443649373886, worksheet.costpercapita_bb12, 0.001); end
  def test_costpercapita_bb13; assert_in_delta(0, (worksheet.costpercapita_bb13||0), 0.001); end
  def test_costpercapita_bb14; assert_in_delta(0.47033383624180103, worksheet.costpercapita_bb14, 0.001); end
  def test_costpercapita_bb18; assert_in_epsilon(2.3878791381970816, worksheet.costpercapita_bb18, 0.001); end
  def test_costpercapita_bb19; assert_in_epsilon(12.61530478004491, worksheet.costpercapita_bb19, 0.001); end
  def test_costpercapita_bb21; assert_in_delta(0, (worksheet.costpercapita_bb21||0), 0.001); end
  def test_costpercapita_bb22; assert_in_delta(0, (worksheet.costpercapita_bb22||0), 0.001); end
  def test_costpercapita_bb23; assert_in_epsilon(9.527977523806765, worksheet.costpercapita_bb23, 0.001); end
  def test_costpercapita_bb24; assert_in_epsilon(6.398164941152168, worksheet.costpercapita_bb24, 0.001); end
  def test_costpercapita_bb25; assert_in_delta(0, (worksheet.costpercapita_bb25||0), 0.001); end
  def test_costpercapita_bb26; assert_in_epsilon(76.9482601040611, worksheet.costpercapita_bb26, 0.001); end
  def test_costpercapita_bb27; assert_in_epsilon(28.006718490666266, worksheet.costpercapita_bb27, 0.001); end
  def test_costpercapita_bb28; assert_in_epsilon(12.489128904457164, worksheet.costpercapita_bb28, 0.001); end
  def test_costpercapita_bb29; assert_in_epsilon(12.231618963097201, worksheet.costpercapita_bb29, 0.001); end
  def test_costpercapita_bb30; assert_in_epsilon(4.689170877184092, worksheet.costpercapita_bb30, 0.001); end
  def test_costpercapita_bb31; assert_in_epsilon(1.2075133510276488, worksheet.costpercapita_bb31, 0.001); end
  def test_costpercapita_bb32; assert_in_epsilon(45.410589919782396, worksheet.costpercapita_bb32, 0.001); end
  def test_costpercapita_bb33; assert_in_epsilon(133.7319997707864, worksheet.costpercapita_bb33, 0.001); end
  def test_costpercapita_bb34; assert_in_epsilon(37.82933179650256, worksheet.costpercapita_bb34, 0.001); end
  def test_costpercapita_bb35; assert_in_delta(0, (worksheet.costpercapita_bb35||0), 0.001); end
  def test_costpercapita_bb36; assert_in_epsilon(21.20085885099907, worksheet.costpercapita_bb36, 0.001); end
  def test_costpercapita_bb37; assert_in_delta(0.4388364046659066, worksheet.costpercapita_bb37, 0.001); end
  def test_costpercapita_bb38; assert_in_delta(0.26277486621165264, worksheet.costpercapita_bb38, 0.001); end
  def test_costpercapita_bb39; assert_in_epsilon(26.79662701041624, worksheet.costpercapita_bb39, 0.001); end
  def test_costpercapita_bb42; assert_in_delta(0, (worksheet.costpercapita_bb42||0), 0.001); end
  def test_costpercapita_bb43; assert_in_epsilon(1.164458312991068, worksheet.costpercapita_bb43, 0.001); end
  def test_costpercapita_bb47; assert_in_epsilon(2.0199223603352063, worksheet.costpercapita_bb47, 0.001); end
  def test_costpercapita_bb51; assert_in_delta(0.25327395295320243, worksheet.costpercapita_bb51, 0.001); end
  def test_costpercapita_bb52; assert_in_epsilon(1.161760954717472, worksheet.costpercapita_bb52, 0.001); end
  def test_costpercapita_bb173; assert_in_epsilon(504.2966914543132, worksheet.costpercapita_bb173, 0.001); end
  def test_costpercapita_bc3; assert_in_delta(0, (worksheet.costpercapita_bc3||0), 0.001); end
  def test_costpercapita_bc4; assert_in_delta(0, (worksheet.costpercapita_bc4||0), 0.001); end
  def test_costpercapita_bc5; assert_in_delta(0, (worksheet.costpercapita_bc5||0), 0.001); end
  def test_costpercapita_bc6; assert_in_delta(0, (worksheet.costpercapita_bc6||0), 0.001); end
  def test_costpercapita_bc7; assert_in_epsilon(30.43904415940599, worksheet.costpercapita_bc7, 0.001); end
  def test_costpercapita_bc8; assert_in_delta(0.024465467554591048, worksheet.costpercapita_bc8, 0.001); end
  def test_costpercapita_bc9; assert_in_delta(0.7824243855081205, worksheet.costpercapita_bc9, 0.001); end
  def test_costpercapita_bc10; assert_in_epsilon(3.782713435534565, worksheet.costpercapita_bc10, 0.001); end
  def test_costpercapita_bc11; assert_in_epsilon(18.240365392624113, worksheet.costpercapita_bc11, 0.001); end
  def test_costpercapita_bc12; assert_in_epsilon(18.419385729760315, worksheet.costpercapita_bc12, 0.001); end
  def test_costpercapita_bc13; assert_in_delta(0, (worksheet.costpercapita_bc13||0), 0.001); end
  def test_costpercapita_bc14; assert_in_delta(0.5087538537544216, worksheet.costpercapita_bc14, 0.001); end
  def test_costpercapita_bc18; assert_in_epsilon(2.230712211769989, worksheet.costpercapita_bc18, 0.001); end
  def test_costpercapita_bc19; assert_in_epsilon(12.578019520212532, worksheet.costpercapita_bc19, 0.001); end
  def test_costpercapita_bc21; assert_in_delta(0, (worksheet.costpercapita_bc21||0), 0.001); end
  def test_costpercapita_bc22; assert_in_delta(0, (worksheet.costpercapita_bc22||0), 0.001); end
  def test_costpercapita_bc23; assert_in_epsilon(9.752303224246935, worksheet.costpercapita_bc23, 0.001); end
  def test_costpercapita_bc24; assert_in_epsilon(3.8410884941670504, worksheet.costpercapita_bc24, 0.001); end
  def test_costpercapita_bc25; assert_in_delta(0, (worksheet.costpercapita_bc25||0), 0.001); end
  def test_costpercapita_bc26; assert_in_epsilon(89.09872650785964, worksheet.costpercapita_bc26, 0.001); end
  def test_costpercapita_bc27; assert_in_epsilon(25.258350559954582, worksheet.costpercapita_bc27, 0.001); end
  def test_costpercapita_bc28; assert_in_epsilon(11.862754088113844, worksheet.costpercapita_bc28, 0.001); end
  def test_costpercapita_bc29; assert_in_epsilon(12.146492592221634, worksheet.costpercapita_bc29, 0.001); end
  def test_costpercapita_bc30; assert_in_epsilon(4.280376522940618, worksheet.costpercapita_bc30, 0.001); end
  def test_costpercapita_bc31; assert_in_epsilon(1.4750621828896382, worksheet.costpercapita_bc31, 0.001); end
  def test_costpercapita_bc32; assert_in_epsilon(1.8851341052677038, worksheet.costpercapita_bc32, 0.001); end
  def test_costpercapita_bc33; assert_in_epsilon(158.5474224926072, worksheet.costpercapita_bc33, 0.001); end
  def test_costpercapita_bc34; assert_in_epsilon(42.54733010548111, worksheet.costpercapita_bc34, 0.001); end
  def test_costpercapita_bc35; assert_in_delta(0, (worksheet.costpercapita_bc35||0), 0.001); end
  def test_costpercapita_bc36; assert_in_epsilon(22.138628144549237, worksheet.costpercapita_bc36, 0.001); end
  def test_costpercapita_bc37; assert_in_delta(0.4605815018148607, worksheet.costpercapita_bc37, 0.001); end
  def test_costpercapita_bc38; assert_in_delta(0.19022850090338578, worksheet.costpercapita_bc38, 0.001); end
  def test_costpercapita_bc39; assert_in_epsilon(23.72948370557554, worksheet.costpercapita_bc39, 0.001); end
  def test_costpercapita_bc42; assert_in_delta(0, (worksheet.costpercapita_bc42||0), 0.001); end
  def test_costpercapita_bc43; assert_in_epsilon(1.0845227854287034, worksheet.costpercapita_bc43, 0.001); end
  def test_costpercapita_bc47; assert_in_epsilon(1.3456186982936749, worksheet.costpercapita_bc47, 0.001); end
  def test_costpercapita_bc51; assert_in_delta(0.215765143458509, worksheet.costpercapita_bc51, 0.001); end
  def test_costpercapita_bc52; assert_in_epsilon(1.1757170158655244, worksheet.costpercapita_bc52, 0.001); end
  def test_costpercapita_bc173; assert_in_epsilon(498.04147052776403, worksheet.costpercapita_bc173, 0.001); end
  def test_costpercapita_bd3; assert_in_delta(0, (worksheet.costpercapita_bd3||0), 0.001); end
  def test_costpercapita_bd4; assert_in_delta(0, (worksheet.costpercapita_bd4||0), 0.001); end
  def test_costpercapita_bd5; assert_in_delta(0, (worksheet.costpercapita_bd5||0), 0.001); end
  def test_costpercapita_bd6; assert_in_delta(0, (worksheet.costpercapita_bd6||0), 0.001); end
  def test_costpercapita_bd7; assert_in_epsilon(27.208327700358186, worksheet.costpercapita_bd7, 0.001); end
  def test_costpercapita_bd8; assert_in_delta(0.023889166442878838, worksheet.costpercapita_bd8, 0.001); end
  def test_costpercapita_bd9; assert_in_epsilon(1.616226652934843, worksheet.costpercapita_bd9, 0.001); end
  def test_costpercapita_bd10; assert_in_delta(0, (worksheet.costpercapita_bd10||0), 0.001); end
  def test_costpercapita_bd11; assert_in_epsilon(23.3556716352165, worksheet.costpercapita_bd11, 0.001); end
  def test_costpercapita_bd12; assert_in_epsilon(25.226144259006524, worksheet.costpercapita_bd12, 0.001); end
  def test_costpercapita_bd13; assert_in_delta(0, (worksheet.costpercapita_bd13||0), 0.001); end
  def test_costpercapita_bd14; assert_in_delta(0.5852484353193329, worksheet.costpercapita_bd14, 0.001); end
  def test_costpercapita_bd18; assert_in_epsilon(2.1180513136528107, worksheet.costpercapita_bd18, 0.001); end
  def test_costpercapita_bd19; assert_in_epsilon(12.403892721904874, worksheet.costpercapita_bd19, 0.001); end
  def test_costpercapita_bd21; assert_in_delta(0, (worksheet.costpercapita_bd21||0), 0.001); end
  def test_costpercapita_bd22; assert_in_delta(0, (worksheet.costpercapita_bd22||0), 0.001); end
  def test_costpercapita_bd23; assert_in_epsilon(10.930018186712518, worksheet.costpercapita_bd23, 0.001); end
  def test_costpercapita_bd24; assert_in_epsilon(3.442423780087418, worksheet.costpercapita_bd24, 0.001); end
  def test_costpercapita_bd25; assert_in_delta(0, (worksheet.costpercapita_bd25||0), 0.001); end
  def test_costpercapita_bd26; assert_in_epsilon(100.72777491522336, worksheet.costpercapita_bd26, 0.001); end
  def test_costpercapita_bd27; assert_in_epsilon(22.42485363828254, worksheet.costpercapita_bd27, 0.001); end
  def test_costpercapita_bd28; assert_in_epsilon(11.405233468545932, worksheet.costpercapita_bd28, 0.001); end
  def test_costpercapita_bd29; assert_in_epsilon(12.058535882135052, worksheet.costpercapita_bd29, 0.001); end
  def test_costpercapita_bd30; assert_in_epsilon(3.938601279606556, worksheet.costpercapita_bd30, 0.001); end
  def test_costpercapita_bd31; assert_in_epsilon(1.94285461990897, worksheet.costpercapita_bd31, 0.001); end
  def test_costpercapita_bd32; assert_in_epsilon(45.860207299915864, worksheet.costpercapita_bd32, 0.001); end
  def test_costpercapita_bd33; assert_in_epsilon(50.786757187180854, worksheet.costpercapita_bd33, 0.001); end
  def test_costpercapita_bd34; assert_in_epsilon(65.7625845566236, worksheet.costpercapita_bd34, 0.001); end
  def test_costpercapita_bd35; assert_in_delta(0, (worksheet.costpercapita_bd35||0), 0.001); end
  def test_costpercapita_bd36; assert_in_epsilon(22.845822455807227, worksheet.costpercapita_bd36, 0.001); end
  def test_costpercapita_bd37; assert_in_delta(0.42422808210133595, worksheet.costpercapita_bd37, 0.001); end
  def test_costpercapita_bd38; assert_in_delta(0.13050474958399988, worksheet.costpercapita_bd38, 0.001); end
  def test_costpercapita_bd39; assert_in_epsilon(21.033813883956757, worksheet.costpercapita_bd39, 0.001); end
  def test_costpercapita_bd42; assert_in_delta(0, (worksheet.costpercapita_bd42||0), 0.001); end
  def test_costpercapita_bd43; assert_in_epsilon(1.0226170644591697, worksheet.costpercapita_bd43, 0.001); end
  def test_costpercapita_bd47; assert_in_delta(0.8298407871862973, worksheet.costpercapita_bd47, 0.001); end
  def test_costpercapita_bd51; assert_in_delta(0.17586507114000338, worksheet.costpercapita_bd51, 0.001); end
  def test_costpercapita_bd52; assert_in_epsilon(1.2423726753652928, worksheet.costpercapita_bd52, 0.001); end
  def test_costpercapita_bd173; assert_in_epsilon(469.5223614686587, worksheet.costpercapita_bd173, 0.001); end
  def test_costpercapita_be3; assert_in_delta(0, (worksheet.costpercapita_be3||0), 0.001); end
  def test_costpercapita_be4; assert_in_delta(0, (worksheet.costpercapita_be4||0), 0.001); end
  def test_costpercapita_be5; assert_in_delta(0, (worksheet.costpercapita_be5||0), 0.001); end
  def test_costpercapita_be6; assert_in_delta(0, (worksheet.costpercapita_be6||0), 0.001); end
  def test_costpercapita_be7; assert_in_epsilon(24.16797701423162, worksheet.costpercapita_be7, 0.001); end
  def test_costpercapita_be8; assert_in_delta(0.0233796968518999, worksheet.costpercapita_be8, 0.001); end
  def test_costpercapita_be9; assert_in_epsilon(3.158232200614088, worksheet.costpercapita_be9, 0.001); end
  def test_costpercapita_be10; assert_in_delta(0.018375223092745828, worksheet.costpercapita_be10, 0.001); end
  def test_costpercapita_be11; assert_in_epsilon(28.93956783093971, worksheet.costpercapita_be11, 0.001); end
  def test_costpercapita_be12; assert_in_epsilon(32.11246657710996, worksheet.costpercapita_be12, 0.001); end
  def test_costpercapita_be13; assert_in_delta(0, (worksheet.costpercapita_be13||0), 0.001); end
  def test_costpercapita_be14; assert_in_delta(0.7088389077503586, worksheet.costpercapita_be14, 0.001); end
  def test_costpercapita_be18; assert_in_epsilon(2.0140480474164084, worksheet.costpercapita_be18, 0.001); end
  def test_costpercapita_be19; assert_in_epsilon(11.98106832206836, worksheet.costpercapita_be19, 0.001); end
  def test_costpercapita_be21; assert_in_delta(0, (worksheet.costpercapita_be21||0), 0.001); end
  def test_costpercapita_be22; assert_in_delta(0, (worksheet.costpercapita_be22||0), 0.001); end
  def test_costpercapita_be23; assert_in_epsilon(11.625638016747654, worksheet.costpercapita_be23, 0.001); end
  def test_costpercapita_be24; assert_in_delta(0, (worksheet.costpercapita_be24||0), 0.001); end
  def test_costpercapita_be25; assert_in_delta(0, (worksheet.costpercapita_be25||0), 0.001); end
  def test_costpercapita_be26; assert_in_epsilon(112.14393630681565, worksheet.costpercapita_be26, 0.001); end
  def test_costpercapita_be27; assert_in_epsilon(20.73899672219017, worksheet.costpercapita_be27, 0.001); end
  def test_costpercapita_be28; assert_in_epsilon(11.14686899930816, worksheet.costpercapita_be28, 0.001); end
  def test_costpercapita_be29; assert_in_epsilon(12.006447966201975, worksheet.costpercapita_be29, 0.001); end
  def test_costpercapita_be30; assert_in_epsilon(3.647973266437034, worksheet.costpercapita_be30, 0.001); end
  def test_costpercapita_be31; assert_in_epsilon(2.7083851228338016, worksheet.costpercapita_be31, 0.001); end
  def test_costpercapita_be32; assert_in_epsilon(37.35172560560441, worksheet.costpercapita_be32, 0.001); end
  def test_costpercapita_be33; assert_in_epsilon(34.46894830476896, worksheet.costpercapita_be33, 0.001); end
  def test_costpercapita_be34; assert_in_epsilon(68.15558959425965, worksheet.costpercapita_be34, 0.001); end
  def test_costpercapita_be35; assert_in_delta(0, (worksheet.costpercapita_be35||0), 0.001); end
  def test_costpercapita_be36; assert_in_epsilon(23.336983690020343, worksheet.costpercapita_be36, 0.001); end
  def test_costpercapita_be37; assert_in_delta(0.4034290147709294, worksheet.costpercapita_be37, 0.001); end
  def test_costpercapita_be38; assert_in_delta(0.0846115781075549, worksheet.costpercapita_be38, 0.001); end
  def test_costpercapita_be39; assert_in_epsilon(19.901596225478027, worksheet.costpercapita_be39, 0.001); end
  def test_costpercapita_be42; assert_in_delta(0, (worksheet.costpercapita_be42||0), 0.001); end
  def test_costpercapita_be43; assert_in_delta(0.9732744069506558, worksheet.costpercapita_be43, 0.001); end
  def test_costpercapita_be47; assert_in_delta(0.5905654330754186, worksheet.costpercapita_be47, 0.001); end
  def test_costpercapita_be51; assert_in_delta(0.1442356857441159, worksheet.costpercapita_be51, 0.001); end
  def test_costpercapita_be52; assert_in_epsilon(1.399464146080424, worksheet.costpercapita_be52, 0.001); end
  def test_costpercapita_be173; assert_in_epsilon(463.9526239054701, worksheet.costpercapita_be173, 0.001); end
  def test_costpercapita_bf3; assert_in_delta(0, (worksheet.costpercapita_bf3||0), 0.001); end
  def test_costpercapita_bf4; assert_in_delta(0, (worksheet.costpercapita_bf4||0), 0.001); end
  def test_costpercapita_bf5; assert_in_delta(0, (worksheet.costpercapita_bf5||0), 0.001); end
  def test_costpercapita_bf6; assert_in_delta(0, (worksheet.costpercapita_bf6||0), 0.001); end
  def test_costpercapita_bf7; assert_in_epsilon(21.27485443143578, worksheet.costpercapita_bf7, 0.001); end
  def test_costpercapita_bf8; assert_in_delta(0.022913320404027673, worksheet.costpercapita_bf8, 0.001); end
  def test_costpercapita_bf9; assert_in_epsilon(3.9811422026502483, worksheet.costpercapita_bf9, 0.001); end
  def test_costpercapita_bf10; assert_in_delta(0.1311308978986247, worksheet.costpercapita_bf10, 0.001); end
  def test_costpercapita_bf11; assert_in_epsilon(28.145117570159773, worksheet.costpercapita_bf11, 0.001); end
  def test_costpercapita_bf12; assert_in_epsilon(39.07081486303717, worksheet.costpercapita_bf12, 0.001); end
  def test_costpercapita_bf13; assert_in_delta(0, (worksheet.costpercapita_bf13||0), 0.001); end
  def test_costpercapita_bf14; assert_in_delta(0.8909723700899311, worksheet.costpercapita_bf14, 0.001); end
  def test_costpercapita_bf18; assert_in_epsilon(1.9162126754949125, worksheet.costpercapita_bf18, 0.001); end
  def test_costpercapita_bf19; assert_in_epsilon(11.696258770880657, worksheet.costpercapita_bf19, 0.001); end
  def test_costpercapita_bf21; assert_in_delta(0, (worksheet.costpercapita_bf21||0), 0.001); end
  def test_costpercapita_bf22; assert_in_delta(0, (worksheet.costpercapita_bf22||0), 0.001); end
  def test_costpercapita_bf23; assert_in_epsilon(12.44454884316333, worksheet.costpercapita_bf23, 0.001); end
  def test_costpercapita_bf24; assert_in_epsilon(2.147291712339078, worksheet.costpercapita_bf24, 0.001); end
  def test_costpercapita_bf25; assert_in_delta(0, (worksheet.costpercapita_bf25||0), 0.001); end
  def test_costpercapita_bf26; assert_in_epsilon(126.54840582288773, worksheet.costpercapita_bf26, 0.001); end
  def test_costpercapita_bf27; assert_in_epsilon(18.66580496719133, worksheet.costpercapita_bf27, 0.001); end
  def test_costpercapita_bf28; assert_in_epsilon(10.97421658250454, worksheet.costpercapita_bf28, 0.001); end
  def test_costpercapita_bf29; assert_in_epsilon(11.97424016672872, worksheet.costpercapita_bf29, 0.001); end
  def test_costpercapita_bf30; assert_in_epsilon(3.3984622447177264, worksheet.costpercapita_bf30, 0.001); end
  def test_costpercapita_bf31; assert_in_epsilon(3.9922778642715824, worksheet.costpercapita_bf31, 0.001); end
  def test_costpercapita_bf32; assert_in_epsilon(13.82434148355105, worksheet.costpercapita_bf32, 0.001); end
  def test_costpercapita_bf33; assert_in_epsilon(40.4428296463739, worksheet.costpercapita_bf33, 0.001); end
  def test_costpercapita_bf34; assert_in_epsilon(66.03332553428035, worksheet.costpercapita_bf34, 0.001); end
  def test_costpercapita_bf35; assert_in_delta(0, (worksheet.costpercapita_bf35||0), 0.001); end
  def test_costpercapita_bf36; assert_in_epsilon(23.608166168900702, worksheet.costpercapita_bf36, 0.001); end
  def test_costpercapita_bf37; assert_in_delta(0.3803946782225514, worksheet.costpercapita_bf37, 0.001); end
  def test_costpercapita_bf38; assert_in_delta(0.04941178824632276, worksheet.costpercapita_bf38, 0.001); end
  def test_costpercapita_bf39; assert_in_epsilon(20.311606990151233, worksheet.costpercapita_bf39, 0.001); end
  def test_costpercapita_bf42; assert_in_delta(0, (worksheet.costpercapita_bf42||0), 0.001); end
  def test_costpercapita_bf43; assert_in_delta(0.9329793659378669, worksheet.costpercapita_bf43, 0.001); end
  def test_costpercapita_bf47; assert_in_delta(0.36534685726175603, worksheet.costpercapita_bf47, 0.001); end
  def test_costpercapita_bf51; assert_in_delta(0.1397417522105586, worksheet.costpercapita_bf51, 0.001); end
  def test_costpercapita_bf52; assert_in_epsilon(1.6634203503513736, worksheet.costpercapita_bf52, 0.001); end
  def test_costpercapita_bf173; assert_in_epsilon(465.0262299213429, worksheet.costpercapita_bf173, 0.001); end
  def test_costpercapita_bg3; assert_in_delta(0, (worksheet.costpercapita_bg3||0), 0.001); end
  def test_costpercapita_bg4; assert_in_delta(0, (worksheet.costpercapita_bg4||0), 0.001); end
  def test_costpercapita_bg5; assert_in_delta(0, (worksheet.costpercapita_bg5||0), 0.001); end
  def test_costpercapita_bg6; assert_in_delta(0, (worksheet.costpercapita_bg6||0), 0.001); end
  def test_costpercapita_bg7; assert_in_epsilon(17.09218435550608, worksheet.costpercapita_bg7, 0.001); end
  def test_costpercapita_bg8; assert_in_delta(0.022485718085465935, worksheet.costpercapita_bg8, 0.001); end
  def test_costpercapita_bg9; assert_in_epsilon(1.5494826334249867, worksheet.costpercapita_bg9, 0.001); end
  def test_costpercapita_bg10; assert_in_delta(0.9278937325310551, worksheet.costpercapita_bg10, 0.001); end
  def test_costpercapita_bg11; assert_in_epsilon(21.34422551470914, worksheet.costpercapita_bg11, 0.001); end
  def test_costpercapita_bg12; assert_in_epsilon(46.06751844834668, worksheet.costpercapita_bg12, 0.001); end
  def test_costpercapita_bg13; assert_in_delta(0, (worksheet.costpercapita_bg13||0), 0.001); end
  def test_costpercapita_bg14; assert_in_delta(0.4354051574045692, worksheet.costpercapita_bg14, 0.001); end
  def test_costpercapita_bg18; assert_in_epsilon(1.8238695525531803, worksheet.costpercapita_bg18, 0.001); end
  def test_costpercapita_bg19; assert_in_epsilon(11.4565879578414, worksheet.costpercapita_bg19, 0.001); end
  def test_costpercapita_bg21; assert_in_delta(0, (worksheet.costpercapita_bg21||0), 0.001); end
  def test_costpercapita_bg22; assert_in_delta(0, (worksheet.costpercapita_bg22||0), 0.001); end
  def test_costpercapita_bg23; assert_in_epsilon(12.520173778705985, worksheet.costpercapita_bg23, 0.001); end
  def test_costpercapita_bg24; assert_in_delta(0, (worksheet.costpercapita_bg24||0), 0.001); end
  def test_costpercapita_bg25; assert_in_delta(0, (worksheet.costpercapita_bg25||0), 0.001); end
  def test_costpercapita_bg26; assert_in_epsilon(140.8988037552613, worksheet.costpercapita_bg26, 0.001); end
  def test_costpercapita_bg27; assert_in_epsilon(17.706013195285784, worksheet.costpercapita_bg27, 0.001); end
  def test_costpercapita_bg28; assert_in_epsilon(10.884265354374175, worksheet.costpercapita_bg28, 0.001); end
  def test_costpercapita_bg29; assert_in_epsilon(11.944188277526584, worksheet.costpercapita_bg29, 0.001); end
  def test_costpercapita_bg30; assert_in_epsilon(3.1844160664926737, worksheet.costpercapita_bg30, 0.001); end
  def test_costpercapita_bg31; assert_in_epsilon(6.142441248381087, worksheet.costpercapita_bg31, 0.001); end
  def test_costpercapita_bg32; assert_in_epsilon(4.004106324264564, worksheet.costpercapita_bg32, 0.001); end
  def test_costpercapita_bg33; assert_in_epsilon(33.49087485245679, worksheet.costpercapita_bg33, 0.001); end
  def test_costpercapita_bg34; assert_in_epsilon(61.3947358031533, worksheet.costpercapita_bg34, 0.001); end
  def test_costpercapita_bg35; assert_in_delta(0, (worksheet.costpercapita_bg35||0), 0.001); end
  def test_costpercapita_bg36; assert_in_epsilon(23.653734359409672, worksheet.costpercapita_bg36, 0.001); end
  def test_costpercapita_bg37; assert_in_delta(0.35419305925762345, worksheet.costpercapita_bg37, 0.001); end
  def test_costpercapita_bg38; assert_in_delta(0.022854716272040047, worksheet.costpercapita_bg38, 0.001); end
  def test_costpercapita_bg39; assert_in_epsilon(16.666524031848976, worksheet.costpercapita_bg39, 0.001); end
  def test_costpercapita_bg42; assert_in_delta(0, (worksheet.costpercapita_bg42||0), 0.001); end
  def test_costpercapita_bg43; assert_in_delta(0.8997131362067964, worksheet.costpercapita_bg43, 0.001); end
  def test_costpercapita_bg47; assert_in_delta(0.1558723220610977, worksheet.costpercapita_bg47, 0.001); end
  def test_costpercapita_bg51; assert_in_delta(0.1384993128961307, worksheet.costpercapita_bg51, 0.001); end
  def test_costpercapita_bg52; assert_in_epsilon(2.133361957577734, worksheet.costpercapita_bg52, 0.001); end
  def test_costpercapita_bg173; assert_in_epsilon(446.9144246218348, worksheet.costpercapita_bg173, 0.001); end
  def test_costpercapita_bi3; assert_in_delta(0, (worksheet.costpercapita_bi3||0), 0.001); end
  def test_costpercapita_bi4; assert_in_delta(0, (worksheet.costpercapita_bi4||0), 0.001); end
  def test_costpercapita_bi5; assert_in_delta(0, (worksheet.costpercapita_bi5||0), 0.001); end
  def test_costpercapita_bi6; assert_in_epsilon(1.2922676740723102, worksheet.costpercapita_bi6, 0.001); end
  def test_costpercapita_bi7; assert_in_epsilon(1.755798470206947, worksheet.costpercapita_bi7, 0.001); end
  def test_costpercapita_bi8; assert_in_delta(0.17038450497216157, worksheet.costpercapita_bi8, 0.001); end
  def test_costpercapita_bi9; assert_in_delta(0.002446176846015897, worksheet.costpercapita_bi9, 0.001); end
  def test_costpercapita_bi10; assert_in_delta(0, (worksheet.costpercapita_bi10||0), 0.001); end
  def test_costpercapita_bi11; assert_in_epsilon(21.391699210778558, worksheet.costpercapita_bi11, 0.001); end
  def test_costpercapita_bi12; assert_in_epsilon(1.2928443649373884, worksheet.costpercapita_bi12, 0.001); end
  def test_costpercapita_bi13; assert_in_delta(0.056202376789291235, worksheet.costpercapita_bi13, 0.001); end
  def test_costpercapita_bi14; assert_in_delta(0.22331630232645866, worksheet.costpercapita_bi14, 0.001); end
  def test_costpercapita_bi18; assert_in_epsilon(1.7220164254987065, worksheet.costpercapita_bi18, 0.001); end
  def test_costpercapita_bi19; assert_in_epsilon(7.049619542980363, worksheet.costpercapita_bi19, 0.001); end
  def test_costpercapita_bi21; assert_in_delta(0, (worksheet.costpercapita_bi21||0), 0.001); end
  def test_costpercapita_bi22; assert_in_delta(0, (worksheet.costpercapita_bi22||0), 0.001); end
  def test_costpercapita_bi23; assert_in_epsilon(2.6315559232983587, worksheet.costpercapita_bi23, 0.001); end
  def test_costpercapita_bi24; assert_in_delta(0, (worksheet.costpercapita_bi24||0), 0.001); end
  def test_costpercapita_bi25; assert_in_delta(0, (worksheet.costpercapita_bi25||0), 0.001); end
  def test_costpercapita_bi27; assert_in_epsilon(18.7034441333024, worksheet.costpercapita_bi27, 0.001); end
  def test_costpercapita_bi28; assert_in_epsilon(5.23826943177733, worksheet.costpercapita_bi28, 0.001); end
  def test_costpercapita_bi29; assert_in_epsilon(7.1863905090988, worksheet.costpercapita_bi29, 0.001); end
  def test_costpercapita_bi30; assert_in_epsilon(1.242311681679632, worksheet.costpercapita_bi30, 0.001); end
  def test_costpercapita_bi31; assert_in_delta(0.5114424701110502, worksheet.costpercapita_bi31, 0.001); end
  def test_costpercapita_bi32; assert_in_epsilon(131.65178975302376, worksheet.costpercapita_bi32, 0.001); end
  def test_costpercapita_bi33; assert_in_delta(0.30900539436279606, worksheet.costpercapita_bi33, 0.001); end
  def test_costpercapita_bi34; assert_in_delta(0, (worksheet.costpercapita_bi34||0), 0.001); end
  def test_costpercapita_bi35; assert_in_delta(0, (worksheet.costpercapita_bi35||0), 0.001); end
  def test_costpercapita_bi37; assert_in_delta(0.2490259743866717, worksheet.costpercapita_bi37, 0.001); end
  def test_costpercapita_bi38; assert_in_delta(0.3099705001825792, worksheet.costpercapita_bi38, 0.001); end
  def test_costpercapita_bi39; assert_in_epsilon(15.729114818076875, worksheet.costpercapita_bi39, 0.001); end
  def test_costpercapita_bi42; assert_in_delta(0, (worksheet.costpercapita_bi42||0), 0.001); end
  def test_costpercapita_bi43; assert_in_delta(0.9104594897634153, worksheet.costpercapita_bi43, 0.001); end
  def test_costpercapita_bi47; assert_in_epsilon(2.3126132031150313, worksheet.costpercapita_bi47, 0.001); end
  def test_costpercapita_bi51; assert_in_delta(0.09090522393684487, worksheet.costpercapita_bi51, 0.001); end
  def test_costpercapita_bi52; assert_in_delta(0, (worksheet.costpercapita_bi52||0), 0.001); end
  def test_costpercapita_bi173; assert_in_epsilon(256.9920525232166, worksheet.costpercapita_bi173, 0.001); end
  def test_costpercapita_bj3; assert_in_delta(0.5986791494334888, worksheet.costpercapita_bj3, 0.001); end
  def test_costpercapita_bj4; assert_in_delta(0.34043171949705375, worksheet.costpercapita_bj4, 0.001); end
  def test_costpercapita_bj5; assert_in_delta(0, (worksheet.costpercapita_bj5||0), 0.001); end
  def test_costpercapita_bj6; assert_in_epsilon(3.103455891161273, worksheet.costpercapita_bj6, 0.001); end
  def test_costpercapita_bj7; assert_in_epsilon(11.475916158335869, worksheet.costpercapita_bj7, 0.001); end
  def test_costpercapita_bj8; assert_in_delta(0.21843579184823986, worksheet.costpercapita_bj8, 0.001); end
  def test_costpercapita_bj9; assert_in_delta(0.05497644225313289, worksheet.costpercapita_bj9, 0.001); end
  def test_costpercapita_bj10; assert_in_delta(0.03056136131461574, worksheet.costpercapita_bj10, 0.001); end
  def test_costpercapita_bj11; assert_in_epsilon(51.54591000462579, worksheet.costpercapita_bj11, 0.001); end
  def test_costpercapita_bj12; assert_in_epsilon(6.996187687750036, worksheet.costpercapita_bj12, 0.001); end
  def test_costpercapita_bj13; assert_in_epsilon(1.0896249560241, worksheet.costpercapita_bj13, 0.001); end
  def test_costpercapita_bj14; assert_in_delta(0.6224969783140429, worksheet.costpercapita_bj14, 0.001); end
  def test_costpercapita_bj18; assert_in_epsilon(4.377134109894922, worksheet.costpercapita_bj18, 0.001); end
  def test_costpercapita_bj19; assert_in_epsilon(19.049685824614745, worksheet.costpercapita_bj19, 0.001); end
  def test_costpercapita_bj21; assert_in_delta(0, (worksheet.costpercapita_bj21||0), 0.001); end
  def test_costpercapita_bj22; assert_in_delta(0, (worksheet.costpercapita_bj22||0), 0.001); end
  def test_costpercapita_bj23; assert_in_epsilon(8.176004562616114, worksheet.costpercapita_bj23, 0.001); end
  def test_costpercapita_bj24; assert_in_delta(0.4056312433408871, worksheet.costpercapita_bj24, 0.001); end
  def test_costpercapita_bj25; assert_in_delta(0, (worksheet.costpercapita_bj25||0), 0.001); end
  def test_costpercapita_bj26; assert_in_epsilon(52.74494311945461, worksheet.costpercapita_bj26, 0.001); end
  def test_costpercapita_bj27; assert_in_epsilon(48.66391141417208, worksheet.costpercapita_bj27, 0.001); end
  def test_costpercapita_bj28; assert_in_epsilon(17.54378793272275, worksheet.costpercapita_bj28, 0.001); end
  def test_costpercapita_bj29; assert_in_epsilon(19.228038741529375, worksheet.costpercapita_bj29, 0.001); end
  def test_costpercapita_bj30; assert_in_epsilon(5.747406651212224, worksheet.costpercapita_bj30, 0.001); end
  def test_costpercapita_bj31; assert_in_delta(0.8376844239604146, worksheet.costpercapita_bj31, 0.001); end
  def test_costpercapita_bj32; assert_in_epsilon(316.702924973046, worksheet.costpercapita_bj32, 0.001); end
  def test_costpercapita_bj33; assert_in_epsilon(11.380124762493422, worksheet.costpercapita_bj33, 0.001); end
  def test_costpercapita_bj34; assert_in_epsilon(9.727482612121822, worksheet.costpercapita_bj34, 0.001); end
  def test_costpercapita_bj35; assert_in_delta(0, (worksheet.costpercapita_bj35||0), 0.001); end
  def test_costpercapita_bj36; assert_in_epsilon(17.404056806484274, worksheet.costpercapita_bj36, 0.001); end
  def test_costpercapita_bj37; assert_in_delta(0.6624285052746318, worksheet.costpercapita_bj37, 0.001); end
  def test_costpercapita_bj38; assert_in_delta(0.7331559816966633, worksheet.costpercapita_bj38, 0.001); end
  def test_costpercapita_bj39; assert_in_epsilon(51.75301438197587, worksheet.costpercapita_bj39, 0.001); end
  def test_costpercapita_bj42; assert_in_delta(0, (worksheet.costpercapita_bj42||0), 0.001); end
  def test_costpercapita_bj43; assert_in_epsilon(2.2626244773387105, worksheet.costpercapita_bj43, 0.001); end
  def test_costpercapita_bj47; assert_in_epsilon(5.63763953401654, worksheet.costpercapita_bj47, 0.001); end
  def test_costpercapita_bj51; assert_in_delta(0.17349187930596485, worksheet.costpercapita_bj51, 0.001); end
  def test_costpercapita_bj52; assert_in_delta(0.49457943690163836, worksheet.costpercapita_bj52, 0.001); end
  def test_costpercapita_bj173; assert_in_epsilon(669.7824275147314, worksheet.costpercapita_bj173, 0.001); end
  def test_costpercapita_bk3; assert_in_delta(0.5790795013697237, worksheet.costpercapita_bk3, 0.001); end
  def test_costpercapita_bk4; assert_in_delta(0.6345679992621586, worksheet.costpercapita_bk4, 0.001); end
  def test_costpercapita_bk5; assert_in_delta(0, (worksheet.costpercapita_bk5||0), 0.001); end
  def test_costpercapita_bk6; assert_in_epsilon(4.781529895344938, worksheet.costpercapita_bk6, 0.001); end
  def test_costpercapita_bk7; assert_in_epsilon(37.37865041910065, worksheet.costpercapita_bk7, 0.001); end
  def test_costpercapita_bk8; assert_in_delta(0.2631972881377132, worksheet.costpercapita_bk8, 0.001); end
  def test_costpercapita_bk9; assert_in_delta(0.4958292314150904, worksheet.costpercapita_bk9, 0.001); end
  def test_costpercapita_bk10; assert_in_delta(0.22366199902522413, worksheet.costpercapita_bk10, 0.001); end
  def test_costpercapita_bk11; assert_in_epsilon(76.20856828140514, worksheet.costpercapita_bk11, 0.001); end
  def test_costpercapita_bk12; assert_in_epsilon(16.104354744997096, worksheet.costpercapita_bk12, 0.001); end
  def test_costpercapita_bk13; assert_in_epsilon(1.6487106660570467, worksheet.costpercapita_bk13, 0.001); end
  def test_costpercapita_bk14; assert_in_epsilon(1.0341437015377497, worksheet.costpercapita_bk14, 0.001); end
  def test_costpercapita_bk18; assert_in_epsilon(6.795545206559001, worksheet.costpercapita_bk18, 0.001); end
  def test_costpercapita_bk19; assert_in_epsilon(31.44119668303429, worksheet.costpercapita_bk19, 0.001); end
  def test_costpercapita_bk21; assert_in_delta(0, (worksheet.costpercapita_bk21||0), 0.001); end
  def test_costpercapita_bk22; assert_in_delta(0, (worksheet.costpercapita_bk22||0), 0.001); end
  def test_costpercapita_bk23; assert_in_epsilon(16.03418475211586, worksheet.costpercapita_bk23, 0.001); end
  def test_costpercapita_bk24; assert_in_epsilon(3.609257661101554, worksheet.costpercapita_bk24, 0.001); end
  def test_costpercapita_bk25; assert_in_delta(0, (worksheet.costpercapita_bk25||0), 0.001); end
  def test_costpercapita_bk26; assert_in_epsilon(122.9053331856384, worksheet.costpercapita_bk26, 0.001); end
  def test_costpercapita_bk27; assert_in_epsilon(77.04967012967278, worksheet.costpercapita_bk27, 0.001); end
  def test_costpercapita_bk28; assert_in_epsilon(30.232388663591298, worksheet.costpercapita_bk28, 0.001); end
  def test_costpercapita_bk29; assert_in_epsilon(30.871632655255627, worksheet.costpercapita_bk29, 0.001); end
  def test_costpercapita_bk30; assert_in_epsilon(5.176831175177255, worksheet.costpercapita_bk30, 0.001); end
  def test_costpercapita_bk31; assert_in_epsilon(1.0576562135931546, worksheet.costpercapita_bk31, 0.001); end
  def test_costpercapita_bk32; assert_in_epsilon(473.00914460823094, worksheet.costpercapita_bk32, 0.001); end
  def test_costpercapita_bk33; assert_in_epsilon(25.43303751294395, worksheet.costpercapita_bk33, 0.001); end
  def test_costpercapita_bk34; assert_in_epsilon(21.17720615237765, worksheet.costpercapita_bk34, 0.001); end
  def test_costpercapita_bk35; assert_in_delta(0, (worksheet.costpercapita_bk35||0), 0.001); end
  def test_costpercapita_bk36; assert_in_epsilon(20.480646451104583, worksheet.costpercapita_bk36, 0.001); end
  def test_costpercapita_bk37; assert_in_epsilon(1.1504695688317517, worksheet.costpercapita_bk37, 0.001); end
  def test_costpercapita_bk38; assert_in_epsilon(1.053238563799938, worksheet.costpercapita_bk38, 0.001); end
  def test_costpercapita_bk39; assert_in_epsilon(65.69285446227717, worksheet.costpercapita_bk39, 0.001); end
  def test_costpercapita_bk42; assert_in_delta(0, (worksheet.costpercapita_bk42||0), 0.001); end
  def test_costpercapita_bk43; assert_in_epsilon(3.4554503943979977, worksheet.costpercapita_bk43, 0.001); end
  def test_costpercapita_bk47; assert_in_epsilon(8.260031176990708, worksheet.costpercapita_bk47, 0.001); end
  def test_costpercapita_bk51; assert_in_delta(0.45581699987315594, worksheet.costpercapita_bk51, 0.001); end
  def test_costpercapita_bk52; assert_in_epsilon(1.660173755246457, worksheet.costpercapita_bk52, 0.001); end
  def test_costpercapita_bk173; assert_in_epsilon(1086.3540596994662, worksheet.costpercapita_bk173, 0.001); end
  def test_costpercapita_bl3; assert_in_delta(0.56114918784979, worksheet.costpercapita_bl3, 0.001); end
  def test_costpercapita_bl4; assert_in_delta(0.6149195690387183, worksheet.costpercapita_bl4, 0.001); end
  def test_costpercapita_bl5; assert_in_delta(0, (worksheet.costpercapita_bl5||0), 0.001); end
  def test_costpercapita_bl6; assert_in_epsilon(6.345028185137272, worksheet.costpercapita_bl6, 0.001); end
  def test_costpercapita_bl7; assert_in_epsilon(64.73142522453826, worksheet.costpercapita_bl7, 0.001); end
  def test_costpercapita_bl8; assert_in_delta(0.280200427124873, worksheet.costpercapita_bl8, 0.001); end
  def test_costpercapita_bl9; assert_in_delta(0.8105725053264674, worksheet.costpercapita_bl9, 0.001); end
  def test_costpercapita_bl10; assert_in_epsilon(1.6220446423067119, worksheet.costpercapita_bl10, 0.001); end
  def test_costpercapita_bl11; assert_in_epsilon(95.99237361495604, worksheet.costpercapita_bl11, 0.001); end
  def test_costpercapita_bl12; assert_in_epsilon(28.534151612830584, worksheet.costpercapita_bl12, 0.001); end
  def test_costpercapita_bl13; assert_in_epsilon(1.597660854975602, worksheet.costpercapita_bl13, 0.001); end
  def test_costpercapita_bl14; assert_in_epsilon(1.472456855387276, worksheet.costpercapita_bl14, 0.001); end
  def test_costpercapita_bl18; assert_in_epsilon(7.412167849656583, worksheet.costpercapita_bl18, 0.001); end
  def test_costpercapita_bl19; assert_in_epsilon(36.693168483794494, worksheet.costpercapita_bl19, 0.001); end
  def test_costpercapita_bl21; assert_in_delta(0, (worksheet.costpercapita_bl21||0), 0.001); end
  def test_costpercapita_bl22; assert_in_delta(0, (worksheet.costpercapita_bl22||0), 0.001); end
  def test_costpercapita_bl23; assert_in_epsilon(25.065688201185132, worksheet.costpercapita_bl23, 0.001); end
  def test_costpercapita_bl24; assert_in_epsilon(9.895667443791542, worksheet.costpercapita_bl24, 0.001); end
  def test_costpercapita_bl25; assert_in_delta(0, (worksheet.costpercapita_bl25||0), 0.001); end
  def test_costpercapita_bl26; assert_in_epsilon(172.33807225038112, worksheet.costpercapita_bl26, 0.001); end
  def test_costpercapita_bl27; assert_in_epsilon(102.67066310464608, worksheet.costpercapita_bl27, 0.001); end
  def test_costpercapita_bl28; assert_in_epsilon(37.037428709834295, worksheet.costpercapita_bl28, 0.001); end
  def test_costpercapita_bl29; assert_in_epsilon(35.63358455169572, worksheet.costpercapita_bl29, 0.001); end
  def test_costpercapita_bl30; assert_in_epsilon(4.689170877184092, worksheet.costpercapita_bl30, 0.001); end
  def test_costpercapita_bl31; assert_in_epsilon(1.2075133510276488, worksheet.costpercapita_bl31, 0.001); end
  def test_costpercapita_bl32; assert_in_epsilon(384.44400166328074, worksheet.costpercapita_bl32, 0.001); end
  def test_costpercapita_bl33; assert_in_epsilon(158.09745830271513, worksheet.costpercapita_bl33, 0.001); end
  def test_costpercapita_bl34; assert_in_epsilon(58.35081806086786, worksheet.costpercapita_bl34, 0.001); end
  def test_costpercapita_bl35; assert_in_delta(0, (worksheet.costpercapita_bl35||0), 0.001); end
  def test_costpercapita_bl36; assert_in_epsilon(21.20085885099907, worksheet.costpercapita_bl36, 0.001); end
  def test_costpercapita_bl37; assert_in_epsilon(1.5536834380504472, worksheet.costpercapita_bl37, 0.001); end
  def test_costpercapita_bl38; assert_in_epsilon(1.283401504333772, worksheet.costpercapita_bl38, 0.001); end
  def test_costpercapita_bl39; assert_in_epsilon(56.20361247958978, worksheet.costpercapita_bl39, 0.001); end
  def test_costpercapita_bl42; assert_in_delta(0, (worksheet.costpercapita_bl42||0), 0.001); end
  def test_costpercapita_bl43; assert_in_epsilon(3.687671713214235, worksheet.costpercapita_bl43, 0.001); end
  def test_costpercapita_bl47; assert_in_epsilon(7.928032108544156, worksheet.costpercapita_bl47, 0.001); end
  def test_costpercapita_bl51; assert_in_delta(0.6125804041033804, worksheet.costpercapita_bl51, 0.001); end
  def test_costpercapita_bl52; assert_in_epsilon(2.7705299618097907, worksheet.costpercapita_bl52, 0.001); end
  def test_costpercapita_bl173; assert_in_epsilon(1331.3377559901767, worksheet.costpercapita_bl173, 0.001); end
  def test_costpercapita_bm3; assert_in_delta(0.5458185061278162, worksheet.costpercapita_bm3, 0.001); end
  def test_costpercapita_bm4; assert_in_delta(0.5981198722706115, worksheet.costpercapita_bm4, 0.001); end
  def test_costpercapita_bm5; assert_in_delta(0, (worksheet.costpercapita_bm5||0), 0.001); end
  def test_costpercapita_bm6; assert_in_epsilon(5.032364838044888, worksheet.costpercapita_bm6, 0.001); end
  def test_costpercapita_bm7; assert_in_epsilon(91.85401296156218, worksheet.costpercapita_bm7, 0.001); end
  def test_costpercapita_bm8; assert_in_delta(0.29701077611273735, worksheet.costpercapita_bm8, 0.001); end
  def test_costpercapita_bm9; assert_in_epsilon(1.5708519258933409, worksheet.costpercapita_bm9, 0.001); end
  def test_costpercapita_bm10; assert_in_epsilon(5.360443569884271, worksheet.costpercapita_bm10, 0.001); end
  def test_costpercapita_bm11; assert_in_epsilon(111.61021266433326, worksheet.costpercapita_bm11, 0.001); end
  def test_costpercapita_bm12; assert_in_epsilon(45.03415531204976, worksheet.costpercapita_bm12, 0.001); end
  def test_costpercapita_bm13; assert_in_epsilon(1.5540125158215519, worksheet.costpercapita_bm13, 0.001); end
  def test_costpercapita_bm14; assert_in_epsilon(1.9409829624246817, worksheet.costpercapita_bm14, 0.001); end
  def test_costpercapita_bm18; assert_in_epsilon(6.967925743697553, worksheet.costpercapita_bm18, 0.001); end
  def test_costpercapita_bm19; assert_in_epsilon(37.11627357862978, worksheet.costpercapita_bm19, 0.001); end
  def test_costpercapita_bm21; assert_in_delta(0, (worksheet.costpercapita_bm21||0), 0.001); end
  def test_costpercapita_bm22; assert_in_delta(0, (worksheet.costpercapita_bm22||0), 0.001); end
  def test_costpercapita_bm23; assert_in_epsilon(31.813105306562647, worksheet.costpercapita_bm23, 0.001); end
  def test_costpercapita_bm24; assert_in_epsilon(13.096588937143647, worksheet.costpercapita_bm24, 0.001); end
  def test_costpercapita_bm25; assert_in_delta(0, (worksheet.costpercapita_bm25||0), 0.001); end
  def test_costpercapita_bm26; assert_in_epsilon(231.70287700256245, worksheet.costpercapita_bm26, 0.001); end
  def test_costpercapita_bm27; assert_in_epsilon(125.12403543007336, worksheet.costpercapita_bm27, 0.001); end
  def test_costpercapita_bm28; assert_in_epsilon(36.511836513194375, worksheet.costpercapita_bm28, 0.001); end
  def test_costpercapita_bm29; assert_in_epsilon(35.61208844315431, worksheet.costpercapita_bm29, 0.001); end
  def test_costpercapita_bm30; assert_in_epsilon(4.280376522940618, worksheet.costpercapita_bm30, 0.001); end
  def test_costpercapita_bm31; assert_in_epsilon(1.4750621828896382, worksheet.costpercapita_bm31, 0.001); end
  def test_costpercapita_bm32; assert_in_epsilon(203.15618801461451, worksheet.costpercapita_bm32, 0.001); end
  def test_costpercapita_bm33; assert_in_epsilon(302.222754309162, worksheet.costpercapita_bm33, 0.001); end
  def test_costpercapita_bm34; assert_in_epsilon(90.43540470012508, worksheet.costpercapita_bm34, 0.001); end
  def test_costpercapita_bm35; assert_in_delta(0, (worksheet.costpercapita_bm35||0), 0.001); end
  def test_costpercapita_bm36; assert_in_epsilon(22.138628144549237, worksheet.costpercapita_bm36, 0.001); end
  def test_costpercapita_bm37; assert_in_epsilon(1.971818070474437, worksheet.costpercapita_bm37, 0.001); end
  def test_costpercapita_bm38; assert_in_epsilon(1.438567279654616, worksheet.costpercapita_bm38, 0.001); end
  def test_costpercapita_bm39; assert_in_epsilon(49.79402276360023, worksheet.costpercapita_bm39, 0.001); end
  def test_costpercapita_bm42; assert_in_delta(0, (worksheet.costpercapita_bm42||0), 0.001); end
  def test_costpercapita_bm43; assert_in_epsilon(3.411300149961336, worksheet.costpercapita_bm43, 0.001); end
  def test_costpercapita_bm47; assert_in_epsilon(5.956088817201241, worksheet.costpercapita_bm47, 0.001); end
  def test_costpercapita_bm51; assert_in_delta(0.7335821963609295, worksheet.costpercapita_bm51, 0.001); end
  def test_costpercapita_bm52; assert_in_epsilon(3.4196453506797555, worksheet.costpercapita_bm52, 0.001); end
  def test_costpercapita_bm173; assert_in_epsilon(1473.7761553617568, worksheet.costpercapita_bm173, 0.001); end
  def test_costpercapita_bn3; assert_in_delta(0, (worksheet.costpercapita_bn3||0), 0.001); end
  def test_costpercapita_bn4; assert_in_delta(0.5840307424978909, worksheet.costpercapita_bn4, 0.001); end
  def test_costpercapita_bn5; assert_in_delta(0, (worksheet.costpercapita_bn5||0), 0.001); end
  def test_costpercapita_bn6; assert_in_epsilon(3.2635172444040204, worksheet.costpercapita_bn6, 0.001); end
  def test_costpercapita_bn7; assert_in_epsilon(108.19398548417495, worksheet.costpercapita_bn7, 0.001); end
  def test_costpercapita_bn8; assert_in_delta(0.31390364705942586, worksheet.costpercapita_bn8, 0.001); end
  def test_costpercapita_bn9; assert_in_epsilon(3.150076068689838, worksheet.costpercapita_bn9, 0.001); end
  def test_costpercapita_bn10; assert_in_epsilon(5.234174591713161, worksheet.costpercapita_bn10, 0.001); end
  def test_costpercapita_bn11; assert_in_epsilon(113.92128402001214, worksheet.costpercapita_bn11, 0.001); end
  def test_costpercapita_bn12; assert_in_epsilon(64.0842567916584, worksheet.costpercapita_bn12, 0.001); end
  def test_costpercapita_bn13; assert_in_epsilon(1.4690235405363472, worksheet.costpercapita_bn13, 0.001); end
  def test_costpercapita_bn14; assert_in_epsilon(2.48051019349707, worksheet.costpercapita_bn14, 0.001); end
  def test_costpercapita_bn18; assert_in_epsilon(6.564148015246085, worksheet.costpercapita_bn18, 0.001); end
  def test_costpercapita_bn19; assert_in_epsilon(36.66723719944211, worksheet.costpercapita_bn19, 0.001); end
  def test_costpercapita_bn21; assert_in_delta(0, (worksheet.costpercapita_bn21||0), 0.001); end
  def test_costpercapita_bn22; assert_in_delta(0, (worksheet.costpercapita_bn22||0), 0.001); end
  def test_costpercapita_bn23; assert_in_epsilon(36.980666005310425, worksheet.costpercapita_bn23, 0.001); end
  def test_costpercapita_bn24; assert_in_epsilon(13.269803138811868, worksheet.costpercapita_bn24, 0.001); end
  def test_costpercapita_bn25; assert_in_delta(0, (worksheet.costpercapita_bn25||0), 0.001); end
  def test_costpercapita_bn26; assert_in_epsilon(260.8106906574719, worksheet.costpercapita_bn26, 0.001); end
  def test_costpercapita_bn27; assert_in_epsilon(144.60150535049274, worksheet.costpercapita_bn27, 0.001); end
  def test_costpercapita_bn28; assert_in_epsilon(34.85032331824465, worksheet.costpercapita_bn28, 0.001); end
  def test_costpercapita_bn29; assert_in_epsilon(35.53610595426678, worksheet.costpercapita_bn29, 0.001); end
  def test_costpercapita_bn30; assert_in_epsilon(3.938601279606556, worksheet.costpercapita_bn30, 0.001); end
  def test_costpercapita_bn31; assert_in_epsilon(1.94285461990897, worksheet.costpercapita_bn31, 0.001); end
  def test_costpercapita_bn32; assert_in_epsilon(90.83044713552559, worksheet.costpercapita_bn32, 0.001); end
  def test_costpercapita_bn33; assert_in_epsilon(332.613818167509, worksheet.costpercapita_bn33, 0.001); end
  def test_costpercapita_bn34; assert_in_epsilon(143.23676000942424, worksheet.costpercapita_bn34, 0.001); end
  def test_costpercapita_bn35; assert_in_delta(0, (worksheet.costpercapita_bn35||0), 0.001); end
  def test_costpercapita_bn36; assert_in_epsilon(22.845822455807227, worksheet.costpercapita_bn36, 0.001); end
  def test_costpercapita_bn37; assert_in_epsilon(2.3495986059031546, worksheet.costpercapita_bn37, 0.001); end
  def test_costpercapita_bn38; assert_in_epsilon(1.5351855759881987, worksheet.costpercapita_bn38, 0.001); end
  def test_costpercapita_bn39; assert_in_epsilon(44.20433308949266, worksheet.costpercapita_bn39, 0.001); end
  def test_costpercapita_bn42; assert_in_delta(0, (worksheet.costpercapita_bn42||0), 0.001); end
  def test_costpercapita_bn43; assert_in_epsilon(3.187558050419851, worksheet.costpercapita_bn43, 0.001); end
  def test_costpercapita_bn47; assert_in_epsilon(4.062219507626272, worksheet.costpercapita_bn47, 0.001); end
  def test_costpercapita_bn51; assert_in_delta(0.627099135341568, worksheet.costpercapita_bn51, 0.001); end
  def test_costpercapita_bn52; assert_in_epsilon(3.4937978844568316, worksheet.costpercapita_bn52, 0.001); end
  def test_costpercapita_bn173; assert_in_epsilon(1526.84333748054, worksheet.costpercapita_bn173, 0.001); end
  def test_costpercapita_bo3; assert_in_delta(0, (worksheet.costpercapita_bo3||0), 0.001); end
  def test_costpercapita_bo4; assert_in_delta(0.5715754772959472, worksheet.costpercapita_bo4, 0.001); end
  def test_costpercapita_bo5; assert_in_delta(0, (worksheet.costpercapita_bo5||0), 0.001); end
  def test_costpercapita_bo6; assert_in_epsilon(1.5909082569457031, worksheet.costpercapita_bo6, 0.001); end
  def test_costpercapita_bo7; assert_in_epsilon(106.38475823287403, worksheet.costpercapita_bo7, 0.001); end
  def test_costpercapita_bo8; assert_in_delta(0.1870375748151992, worksheet.costpercapita_bo8, 0.001); end
  def test_costpercapita_bo9; assert_in_epsilon(6.239067591964255, worksheet.costpercapita_bo9, 0.001); end
  def test_costpercapita_bo10; assert_in_epsilon(5.114297402715626, worksheet.costpercapita_bo10, 0.001); end
  def test_costpercapita_bo11; assert_in_epsilon(113.54509797518409, worksheet.costpercapita_bo11, 0.001); end
  def test_costpercapita_bo12; assert_in_epsilon(86.41971786868409, worksheet.costpercapita_bo12, 0.001); end
  def test_costpercapita_bo13; assert_in_delta(0.5357173654156266, worksheet.costpercapita_bo13, 0.001); end
  def test_costpercapita_bo14; assert_in_epsilon(2.9483016613151745, worksheet.costpercapita_bo14, 0.001); end
  def test_costpercapita_bo18; assert_in_epsilon(6.218642799661107, worksheet.costpercapita_bo18, 0.001); end
  def test_costpercapita_bo19; assert_in_epsilon(36.14024131948754, worksheet.costpercapita_bo19, 0.001); end
  def test_costpercapita_bo21; assert_in_delta(0, (worksheet.costpercapita_bo21||0), 0.001); end
  def test_costpercapita_bo22; assert_in_delta(0, (worksheet.costpercapita_bo22||0), 0.001); end
  def test_costpercapita_bo23; assert_in_epsilon(40.498432114760654, worksheet.costpercapita_bo23, 0.001); end
  def test_costpercapita_bo24; assert_in_epsilon(7.039631367021904, worksheet.costpercapita_bo24, 0.001); end
  def test_costpercapita_bo25; assert_in_delta(0, (worksheet.costpercapita_bo25||0), 0.001); end
  def test_costpercapita_bo26; assert_in_epsilon(295.8681013852963, worksheet.costpercapita_bo26, 0.001); end
  def test_costpercapita_bo27; assert_in_epsilon(146.49876012379443, worksheet.costpercapita_bo27, 0.001); end
  def test_costpercapita_bo28; assert_in_epsilon(33.6451583868605, worksheet.costpercapita_bo28, 0.001); end
  def test_costpercapita_bo29; assert_in_epsilon(35.41525345527526, worksheet.costpercapita_bo29, 0.001); end
  def test_costpercapita_bo30; assert_in_epsilon(3.647973266437034, worksheet.costpercapita_bo30, 0.001); end
  def test_costpercapita_bo31; assert_in_epsilon(2.7083851228338016, worksheet.costpercapita_bo31, 0.001); end
  def test_costpercapita_bo32; assert_in_epsilon(84.03537278428158, worksheet.costpercapita_bo32, 0.001); end
  def test_costpercapita_bo33; assert_in_epsilon(235.68373909981148, worksheet.costpercapita_bo33, 0.001); end
  def test_costpercapita_bo34; assert_in_epsilon(173.17478720081962, worksheet.costpercapita_bo34, 0.001); end
  def test_costpercapita_bo35; assert_in_delta(0, (worksheet.costpercapita_bo35||0), 0.001); end
  def test_costpercapita_bo36; assert_in_epsilon(23.336983690020343, worksheet.costpercapita_bo36, 0.001); end
  def test_costpercapita_bo37; assert_in_epsilon(2.4931112919942824, worksheet.costpercapita_bo37, 0.001); end
  def test_costpercapita_bo38; assert_in_epsilon(1.3259026932529567, worksheet.costpercapita_bo38, 0.001); end
  def test_costpercapita_bo39; assert_in_epsilon(40.486834870034684, worksheet.costpercapita_bo39, 0.001); end
  def test_costpercapita_bo42; assert_in_delta(0, (worksheet.costpercapita_bo42||0), 0.001); end
  def test_costpercapita_bo43; assert_in_epsilon(3.0104747082117327, worksheet.costpercapita_bo43, 0.001); end
  def test_costpercapita_bo47; assert_in_epsilon(2.6886092266746178, worksheet.costpercapita_bo47, 0.001); end
  def test_costpercapita_bo51; assert_in_delta(0.5225397363455613, worksheet.costpercapita_bo51, 0.001); end
  def test_costpercapita_bo52; assert_in_epsilon(3.7388805208474225, worksheet.costpercapita_bo52, 0.001); end
  def test_costpercapita_bo173; assert_in_epsilon(1501.7142945709331, worksheet.costpercapita_bo173, 0.001); end
  def test_costpercapita_bp3; assert_in_delta(0, (worksheet.costpercapita_bp3||0), 0.001); end
  def test_costpercapita_bp4; assert_in_delta(0.26949139072681294, worksheet.costpercapita_bp4, 0.001); end
  def test_costpercapita_bp5; assert_in_delta(0, (worksheet.costpercapita_bp5||0), 0.001); end
  def test_costpercapita_bp6; assert_in_delta(0, (worksheet.costpercapita_bp6||0), 0.001); end
  def test_costpercapita_bp7; assert_in_epsilon(128.0734663868845, worksheet.costpercapita_bp7, 0.001); end
  def test_costpercapita_bp8; assert_in_delta(0.18330656323222236, worksheet.costpercapita_bp8, 0.001); end
  def test_costpercapita_bp9; assert_in_epsilon(10.7836163008911, worksheet.costpercapita_bp9, 0.001); end
  def test_costpercapita_bp10; assert_in_epsilon(8.51479232211259, worksheet.costpercapita_bp10, 0.001); end
  def test_costpercapita_bp11; assert_in_epsilon(133.2473952614549, worksheet.costpercapita_bp11, 0.001); end
  def test_costpercapita_bp12; assert_in_epsilon(129.24002114017483, worksheet.costpercapita_bp12, 0.001); end
  def test_costpercapita_bp13; assert_in_delta(0, (worksheet.costpercapita_bp13||0), 0.001); end
  def test_costpercapita_bp14; assert_in_epsilon(3.909805140200678, worksheet.costpercapita_bp14, 0.001); end
  def test_costpercapita_bp18; assert_in_epsilon(5.921615901851437, worksheet.costpercapita_bp18, 0.001); end
  def test_costpercapita_bp19; assert_in_epsilon(35.335537053429, worksheet.costpercapita_bp19, 0.001); end
  def test_costpercapita_bp21; assert_in_delta(0, (worksheet.costpercapita_bp21||0), 0.001); end
  def test_costpercapita_bp22; assert_in_delta(0, (worksheet.costpercapita_bp22||0), 0.001); end
  def test_costpercapita_bp23; assert_in_epsilon(52.58900659237206, worksheet.costpercapita_bp23, 0.001); end
  def test_costpercapita_bp24; assert_in_epsilon(5.4490962867343855, worksheet.costpercapita_bp24, 0.001); end
  def test_costpercapita_bp25; assert_in_delta(0, (worksheet.costpercapita_bp25||0), 0.001); end
  def test_costpercapita_bp26; assert_in_epsilon(333.0684599261988, worksheet.costpercapita_bp26, 0.001); end
  def test_costpercapita_bp27; assert_in_epsilon(159.7893413094359, worksheet.costpercapita_bp27, 0.001); end
  def test_costpercapita_bp28; assert_in_epsilon(32.83807096120985, worksheet.costpercapita_bp28, 0.001); end
  def test_costpercapita_bp29; assert_in_epsilon(35.30714242749394, worksheet.costpercapita_bp29, 0.001); end
  def test_costpercapita_bp30; assert_in_epsilon(3.3984622447177264, worksheet.costpercapita_bp30, 0.001); end
  def test_costpercapita_bp31; assert_in_epsilon(3.9922778642715824, worksheet.costpercapita_bp31, 0.001); end
  def test_costpercapita_bp32; assert_in_epsilon(94.41784618633683, worksheet.costpercapita_bp32, 0.001); end
  def test_costpercapita_bp33; assert_in_epsilon(122.93636824561689, worksheet.costpercapita_bp33, 0.001); end
  def test_costpercapita_bp34; assert_in_epsilon(195.90560819447535, worksheet.costpercapita_bp34, 0.001); end
  def test_costpercapita_bp35; assert_in_delta(0, (worksheet.costpercapita_bp35||0), 0.001); end
  def test_costpercapita_bp36; assert_in_epsilon(23.608166168900702, worksheet.costpercapita_bp36, 0.001); end
  def test_costpercapita_bp37; assert_in_epsilon(2.8951335834958334, worksheet.costpercapita_bp37, 0.001); end
  def test_costpercapita_bp38; assert_in_epsilon(1.1569550425149726, worksheet.costpercapita_bp38, 0.001); end
  def test_costpercapita_bp39; assert_in_epsilon(39.8162076594671, worksheet.costpercapita_bp39, 0.001); end
  def test_costpercapita_bp42; assert_in_delta(0, (worksheet.costpercapita_bp42||0), 0.001); end
  def test_costpercapita_bp43; assert_in_epsilon(2.867683255574724, worksheet.costpercapita_bp43, 0.001); end
  def test_costpercapita_bp47; assert_in_epsilon(1.7400744436035358, worksheet.costpercapita_bp47, 0.001); end
  def test_costpercapita_bp51; assert_in_delta(0.44978141266954946, worksheet.costpercapita_bp51, 0.001); end
  def test_costpercapita_bp52; assert_in_epsilon(4.226591215158667, worksheet.costpercapita_bp52, 0.001); end
  def test_costpercapita_bp173; assert_in_epsilon(1571.9313204812063, worksheet.costpercapita_bp173, 0.001); end
  def test_costpercapita_bq3; assert_in_delta(0, (worksheet.costpercapita_bq3||0), 0.001); end
  def test_costpercapita_bq4; assert_in_delta(-3.203051376803319e-17, worksheet.costpercapita_bq4, 0.001); end
  def test_costpercapita_bq5; assert_in_delta(0, (worksheet.costpercapita_bq5||0), 0.001); end
  def test_costpercapita_bq6; assert_in_delta(0, (worksheet.costpercapita_bq6||0), 0.001); end
  def test_costpercapita_bq7; assert_in_epsilon(86.82375375272025, worksheet.costpercapita_bq7, 0.001); end
  def test_costpercapita_bq8; assert_in_delta(0.15740002659826027, worksheet.costpercapita_bq8, 0.001); end
  def test_costpercapita_bq9; assert_in_epsilon(11.748392402777029, worksheet.costpercapita_bq9, 0.001); end
  def test_costpercapita_bq10; assert_in_epsilon(8.02748144560369, worksheet.costpercapita_bq10, 0.001); end
  def test_costpercapita_bq11; assert_in_epsilon(132.30936995252375, worksheet.costpercapita_bq11, 0.001); end
  def test_costpercapita_bq12; assert_in_epsilon(139.03792423413947, worksheet.costpercapita_bq12, 0.001); end
  def test_costpercapita_bq13; assert_in_delta(0, (worksheet.costpercapita_bq13||0), 0.001); end
  def test_costpercapita_bq14; assert_in_epsilon(3.897986634892189, worksheet.costpercapita_bq14, 0.001); end
  def test_costpercapita_bq18; assert_in_epsilon(5.641358465715937, worksheet.costpercapita_bq18, 0.001); end
  def test_costpercapita_bq19; assert_in_epsilon(34.457517692255685, worksheet.costpercapita_bq19, 0.001); end
  def test_costpercapita_bq21; assert_in_delta(0, (worksheet.costpercapita_bq21||0), 0.001); end
  def test_costpercapita_bq22; assert_in_delta(0, (worksheet.costpercapita_bq22||0), 0.001); end
  def test_costpercapita_bq23; assert_in_epsilon(46.20148761655875, worksheet.costpercapita_bq23, 0.001); end
  def test_costpercapita_bq24; assert_in_epsilon(2.1072195229472745, worksheet.costpercapita_bq24, 0.001); end
  def test_costpercapita_bq25; assert_in_delta(0, (worksheet.costpercapita_bq25||0), 0.001); end
  def test_costpercapita_bq26; assert_in_epsilon(372.9414407507798, worksheet.costpercapita_bq26, 0.001); end
  def test_costpercapita_bq27; assert_in_epsilon(148.54296473925197, worksheet.costpercapita_bq27, 0.001); end
  def test_costpercapita_bq28; assert_in_epsilon(32.37432574905309, worksheet.costpercapita_bq28, 0.001); end
  def test_costpercapita_bq29; assert_in_epsilon(35.24232098516906, worksheet.costpercapita_bq29, 0.001); end
  def test_costpercapita_bq30; assert_in_epsilon(3.1844160664926737, worksheet.costpercapita_bq30, 0.001); end
  def test_costpercapita_bq31; assert_in_epsilon(6.142441248381087, worksheet.costpercapita_bq31, 0.001); end
  def test_costpercapita_bq32; assert_in_epsilon(53.493954426512545, worksheet.costpercapita_bq32, 0.001); end
  def test_costpercapita_bq33; assert_in_epsilon(106.32991654055039, worksheet.costpercapita_bq33, 0.001); end
  def test_costpercapita_bq34; assert_in_epsilon(191.74526211016527, worksheet.costpercapita_bq34, 0.001); end
  def test_costpercapita_bq35; assert_in_delta(0, (worksheet.costpercapita_bq35||0), 0.001); end
  def test_costpercapita_bq36; assert_in_epsilon(23.653734359409672, worksheet.costpercapita_bq36, 0.001); end
  def test_costpercapita_bq37; assert_in_epsilon(2.7537263707574393, worksheet.costpercapita_bq37, 0.001); end
  def test_costpercapita_bq38; assert_in_delta(0.8601417860359681, worksheet.costpercapita_bq38, 0.001); end
  def test_costpercapita_bq39; assert_in_epsilon(36.59908119030566, worksheet.costpercapita_bq39, 0.001); end
  def test_costpercapita_bq42; assert_in_delta(0, (worksheet.costpercapita_bq42||0), 0.001); end
  def test_costpercapita_bq43; assert_in_epsilon(2.751340414633912, worksheet.costpercapita_bq43, 0.001); end
  def test_costpercapita_bq47; assert_in_epsilon(1.082384920754476, worksheet.costpercapita_bq47, 0.001); end
  def test_costpercapita_bq51; assert_in_delta(0.41435372999371756, worksheet.costpercapita_bq51, 0.001); end
  def test_costpercapita_bq52; assert_in_epsilon(5.111692276750545, worksheet.costpercapita_bq52, 0.001); end
  def test_costpercapita_bq173; assert_in_epsilon(1493.6333894117295, worksheet.costpercapita_bq173, 0.001); end
  def test_costpercapita_bs173; assert_in_epsilon(2368.100245872618, worksheet.costpercapita_bs173, 0.001); end
  def test_costpercapita_bt173; assert_in_epsilon(2567.3277021242893, worksheet.costpercapita_bt173, 0.001); end
  def test_costpercapita_bu173; assert_in_epsilon(2768.6396557703265, worksheet.costpercapita_bu173, 0.001); end
  def test_costpercapita_bv173; assert_in_epsilon(2866.445861627841, worksheet.costpercapita_bv173, 0.001); end
  def test_costpercapita_bw173; assert_in_epsilon(2836.686575408671, worksheet.costpercapita_bw173, 0.001); end
  def test_costpercapita_bx173; assert_in_epsilon(2786.630581566516, worksheet.costpercapita_bx173, 0.001); end
  def test_costpercapita_by173; assert_in_epsilon(2584.660483516938, worksheet.costpercapita_by173, 0.001); end
  def test_costpercapita_bz173; assert_in_epsilon(2593.9301173530553, worksheet.costpercapita_bz173, 0.001); end
  def test_costpercapita_ca173; assert_in_epsilon(2323.8470946375396, worksheet.costpercapita_ca173, 0.001); end
  def test_costpercapita_cc3; assert_in_epsilon(6.727507860791595, worksheet.costpercapita_cc3, 0.001); end
  def test_costpercapita_cc4; assert_in_delta(0.7776849535921522, worksheet.costpercapita_cc4, 0.001); end
  def test_costpercapita_cc5; assert_in_epsilon(1.0603220663865833, worksheet.costpercapita_cc5, 0.001); end
  def test_costpercapita_cc6; assert_in_epsilon(3.368727443714432, worksheet.costpercapita_cc6, 0.001); end
  def test_costpercapita_cc7; assert_in_epsilon(95.06775191345417, worksheet.costpercapita_cc7, 0.001); end
  def test_costpercapita_cc8; assert_in_delta(0.49862565610544224, worksheet.costpercapita_cc8, 0.001); end
  def test_costpercapita_cc9; assert_in_epsilon(5.447912293288706, worksheet.costpercapita_cc9, 0.001); end
  def test_costpercapita_cc10; assert_in_epsilon(5.845151451864529, worksheet.costpercapita_cc10, 0.001); end
  def test_costpercapita_cc11; assert_in_epsilon(95.894439296742, worksheet.costpercapita_cc11, 0.001); end
  def test_costpercapita_cc12; assert_in_epsilon(57.415957084135734, worksheet.costpercapita_cc12, 0.001); end
  def test_costpercapita_cc13; assert_in_delta(0.8834391417355073, worksheet.costpercapita_cc13, 0.001); end
  def test_costpercapita_cc14; assert_in_epsilon(9.091265263630456, worksheet.costpercapita_cc14, 0.001); end
  def test_costpercapita_cc15; assert_in_delta(0.6121956419661735, worksheet.costpercapita_cc15, 0.001); end
  def test_costpercapita_cc16; assert_in_epsilon(20.79064551968489, worksheet.costpercapita_cc16, 0.001); end
  def test_costpercapita_cc17; assert_in_delta(2.3486394746480683e-05, worksheet.costpercapita_cc17, 0.001); end
  def test_costpercapita_cc18; assert_in_epsilon(9.565406076836195, worksheet.costpercapita_cc18, 0.001); end
  def test_costpercapita_cc19; assert_in_epsilon(78.85640017488055, worksheet.costpercapita_cc19, 0.001); end
  def test_costpercapita_cc20; assert_in_delta(0.4474312335930714, worksheet.costpercapita_cc20, 0.001); end
  def test_costpercapita_cc21; assert_in_delta(0, (worksheet.costpercapita_cc21||0), 0.001); end
  def test_costpercapita_cc22; assert_in_epsilon(-27.56380703152918, worksheet.costpercapita_cc22, 0.001); end
  def test_costpercapita_cc23; assert_in_epsilon(43.07297298945481, worksheet.costpercapita_cc23, 0.001); end
  def test_costpercapita_cc24; assert_in_epsilon(8.14029273684569, worksheet.costpercapita_cc24, 0.001); end
  def test_costpercapita_cc25; assert_in_delta(0, (worksheet.costpercapita_cc25||0), 0.001); end
  def test_costpercapita_cc26; assert_in_epsilon(287.68556678731596, worksheet.costpercapita_cc26, 0.001); end
  def test_costpercapita_cc27; assert_in_epsilon(107.9604773038713, worksheet.costpercapita_cc27, 0.001); end
  def test_costpercapita_cc28; assert_in_epsilon(32.30145435270006, worksheet.costpercapita_cc28, 0.001); end
  def test_costpercapita_cc29; assert_in_epsilon(30.003617524770984, worksheet.costpercapita_cc29, 0.001); end
  def test_costpercapita_cc30; assert_in_epsilon(3.9228388628275344, worksheet.costpercapita_cc30, 0.001); end
  def test_costpercapita_cc31; assert_in_epsilon(97.26557218138157, worksheet.costpercapita_cc31, 0.001); end
  def test_costpercapita_cc32; assert_in_epsilon(513.3406304423596, worksheet.costpercapita_cc32, 0.001); end
  def test_costpercapita_cc33; assert_in_epsilon(244.10939236386068, worksheet.costpercapita_cc33, 0.001); end
  def test_costpercapita_cc34; assert_in_epsilon(138.25427971356896, worksheet.costpercapita_cc34, 0.001); end
  def test_costpercapita_cc35; assert_in_delta(0, (worksheet.costpercapita_cc35||0), 0.001); end
  def test_costpercapita_cc36; assert_in_epsilon(37.570853880292006, worksheet.costpercapita_cc36, 0.001); end
  def test_costpercapita_cc37; assert_in_epsilon(151.23277710571136, worksheet.costpercapita_cc37, 0.001); end
  def test_costpercapita_cc38; assert_in_epsilon(3.446769586823005, worksheet.costpercapita_cc38, 0.001); end
  def test_costpercapita_cc39; assert_in_epsilon(130.75211932843888, worksheet.costpercapita_cc39, 0.001); end
  def test_costpercapita_cc40; assert_in_epsilon(101.0471638138306, worksheet.costpercapita_cc40, 0.001); end
  def test_costpercapita_cc41; assert_in_epsilon(18.064825489879357, worksheet.costpercapita_cc41, 0.001); end
  def test_costpercapita_cc42; assert_in_delta(0, (worksheet.costpercapita_cc42||0), 0.001); end
  def test_costpercapita_cc43; assert_in_epsilon(12.154350458374058, worksheet.costpercapita_cc43, 0.001); end
  def test_costpercapita_cc44; assert_in_epsilon(9.992843407006715, worksheet.costpercapita_cc44, 0.001); end
  def test_costpercapita_cc45; assert_in_epsilon(176.14690886342768, worksheet.costpercapita_cc45, 0.001); end
  def test_costpercapita_cc46; assert_in_epsilon(62.549195511164804, worksheet.costpercapita_cc46, 0.001); end
  def test_costpercapita_cc47; assert_in_epsilon(4.419926894024892, worksheet.costpercapita_cc47, 0.001); end
  def test_costpercapita_cc48; assert_in_epsilon(4.657962995016782, worksheet.costpercapita_cc48, 0.001); end
  def test_costpercapita_cc49; assert_in_epsilon(29.970367687674962, worksheet.costpercapita_cc49, 0.001); end
  def test_costpercapita_cc50; assert_in_epsilon(16.625052404901325, worksheet.costpercapita_cc50, 0.001); end
  def test_costpercapita_cc51; assert_in_delta(0.5650926448810055, worksheet.costpercapita_cc51, 0.001); end
  def test_costpercapita_cc52; assert_in_epsilon(2.878317128749249, worksheet.costpercapita_cc52, 0.001); end
  def test_costpercapita_cc173; assert_in_epsilon(2632.918701986421, worksheet.costpercapita_cc173, 0.001); end
  def test_costpercapita_cf173; assert_in_epsilon(-1147.9775252350141, worksheet.costpercapita_cf173, 0.001); end
  def test_costpercapita_cg173; assert_in_epsilon(-724.4257497508667, worksheet.costpercapita_cg173, 0.001); end
  def test_costpercapita_ch173; assert_in_epsilon(-455.10814453139733, worksheet.costpercapita_ch173, 0.001); end
  def test_costpercapita_ci173; assert_in_epsilon(-288.9380522971924, worksheet.costpercapita_ci173, 0.001); end
  def test_costpercapita_cj173; assert_in_epsilon(-125.1619423934013, worksheet.costpercapita_cj173, 0.001); end
  def test_costpercapita_ck173; assert_in_epsilon(11.073938078661078, worksheet.costpercapita_ck173, 0.001); end
  def test_costpercapita_cl173; assert_in_epsilon(-12.029728838426472, worksheet.costpercapita_cl173, 0.001); end
  def test_costpercapita_cm173; assert_in_epsilon(57.8474172089429, worksheet.costpercapita_cm173, 0.001); end
  def test_costpercapita_cn173; assert_in_epsilon(55.022404410410175, worksheet.costpercapita_cn173, 0.001); end
  def test_costpercapita_cp3; assert_in_delta(-0.012221139217015151, worksheet.costpercapita_cp3, 0.001); end
  def test_costpercapita_cp4; assert_in_delta(-0.029015761564794764, worksheet.costpercapita_cp4, 0.001); end
  def test_costpercapita_cp5; assert_in_delta(0, (worksheet.costpercapita_cp5||0), 0.001); end
  def test_costpercapita_cp6; assert_in_delta(-0.5095727883015501, worksheet.costpercapita_cp6, 0.001); end
  def test_costpercapita_cp7; assert_in_epsilon(-12.669944075872161, worksheet.costpercapita_cp7, 0.001); end
  def test_costpercapita_cp8; assert_in_delta(-0.12446432914336025, worksheet.costpercapita_cp8, 0.001); end
  def test_costpercapita_cp9; assert_in_epsilon(-4.071759784304401, worksheet.costpercapita_cp9, 0.001); end
  def test_costpercapita_cp10; assert_in_delta(0.18633758914840895, worksheet.costpercapita_cp10, 0.001); end
  def test_costpercapita_cp11; assert_in_epsilon(-36.15370264896097, worksheet.costpercapita_cp11, 0.001); end
  def test_costpercapita_cp12; assert_in_epsilon(-27.500797756960438, worksheet.costpercapita_cp12, 0.001); end
  def test_costpercapita_cp13; assert_in_delta(-0.07417446951891835, worksheet.costpercapita_cp13, 0.001); end
  def test_costpercapita_cp14; assert_in_epsilon(-1.1479891081753342, worksheet.costpercapita_cp14, 0.001); end
  def test_costpercapita_cp18; assert_in_epsilon(-1.1425201586494602, worksheet.costpercapita_cp18, 0.001); end
  def test_costpercapita_cp19; assert_in_epsilon(-6.1371208328465565, worksheet.costpercapita_cp19, 0.001); end
  def test_costpercapita_cp21; assert_in_delta(0, (worksheet.costpercapita_cp21||0), 0.001); end
  def test_costpercapita_cp22; assert_in_delta(0, (worksheet.costpercapita_cp22||0), 0.001); end
  def test_costpercapita_cp23; assert_in_epsilon(-8.864944523810262, worksheet.costpercapita_cp23, 0.001); end
  def test_costpercapita_cp24; assert_in_delta(-0.3868470017400554, worksheet.costpercapita_cp24, 0.001); end
  def test_costpercapita_cp25; assert_in_delta(0, (worksheet.costpercapita_cp25||0), 0.001); end
  def test_costpercapita_cp26; assert_in_epsilon(-55.484453138793675, worksheet.costpercapita_cp26, 0.001); end
  def test_costpercapita_cp27; assert_in_epsilon(-41.72571221448486, worksheet.costpercapita_cp27, 0.001); end
  def test_costpercapita_cp28; assert_in_epsilon(-5.492307530869325, worksheet.costpercapita_cp28, 0.001); end
  def test_costpercapita_cp29; assert_in_epsilon(-6.293231028249124, worksheet.costpercapita_cp29, 0.001); end
  def test_costpercapita_cp30; assert_in_delta(-0.09202308753182459, worksheet.costpercapita_cp30, 0.001); end
  def test_costpercapita_cp31; assert_in_delta(-0.03788462741563335, worksheet.costpercapita_cp31, 0.001); end
  def test_costpercapita_cp32; assert_in_epsilon(-37.747349185328716, worksheet.costpercapita_cp32, 0.001); end
  def test_costpercapita_cp33; assert_in_epsilon(-15.273962098610756, worksheet.costpercapita_cp33, 0.001); end
  def test_costpercapita_cp34; assert_in_epsilon(-22.878040106149193, worksheet.costpercapita_cp34, 0.001); end
  def test_costpercapita_cp35; assert_in_delta(0, (worksheet.costpercapita_cp35||0), 0.001); end
  def test_costpercapita_cp36; assert_in_delta(-0.6519192658056503, worksheet.costpercapita_cp36, 0.001); end
  def test_costpercapita_cp37; assert_in_delta(-0.752143593696587, worksheet.costpercapita_cp37, 0.001); end
  def test_costpercapita_cp38; assert_in_delta(-0.2789391632506883, worksheet.costpercapita_cp38, 0.001); end
  def test_costpercapita_cp39; assert_in_epsilon(-4.756554647040498, worksheet.costpercapita_cp39, 0.001); end
  def test_costpercapita_cp42; assert_in_delta(0, (worksheet.costpercapita_cp42||0), 0.001); end
  def test_costpercapita_cp43; assert_in_delta(-0.5764102823263727, worksheet.costpercapita_cp43, 0.001); end
  def test_costpercapita_cp47; assert_in_delta(-0.7157333098424639, worksheet.costpercapita_cp47, 0.001); end
  def test_costpercapita_cp51; assert_in_delta(-0.07747619029690114, worksheet.costpercapita_cp51, 0.001); end
  def test_costpercapita_cp52; assert_in_delta(-0.7157218902002092, worksheet.costpercapita_cp52, 0.001); end
  def test_costpercapita_cp173; assert_in_epsilon(-292.18859814980937, worksheet.costpercapita_cp173, 0.001); end
  def test_costpercapita_cd173; assert_in_epsilon(56239.11819831814, worksheet.costpercapita_cd173, 0.001); end
  def test_costpercapita_cq173; assert_in_epsilon(-6823.894815626018, worksheet.costpercapita_cq173, 0.001); end
  def test_costpercapita_at173; assert_in_epsilon(63063.01301394415, worksheet.costpercapita_at173, 0.001); end
  def test_costpercapita_cr173; assert_equal("ok", worksheet.costpercapita_cr173); end
  def test_costpercapita_e174; assert_equal("ok", worksheet.costpercapita_e174); end
  def test_costpercapita_f174; assert_equal("ok", worksheet.costpercapita_f174); end
  def test_costpercapita_g174; assert_equal("ok", worksheet.costpercapita_g174); end
  def test_costpercapita_h174; assert_equal("ok", worksheet.costpercapita_h174); end
  def test_costpercapita_i174; assert_equal("ok", worksheet.costpercapita_i174); end
  def test_costpercapita_j174; assert_equal("ok", worksheet.costpercapita_j174); end
  def test_costpercapita_k174; assert_equal("ok", worksheet.costpercapita_k174); end
  def test_costpercapita_l174; assert_equal("ok", worksheet.costpercapita_l174); end
  def test_costpercapita_m174; assert_equal("ok", worksheet.costpercapita_m174); end
  def test_costpercapita_o174; assert_equal("ok", worksheet.costpercapita_o174); end
  def test_costpercapita_p174; assert_equal("ok", worksheet.costpercapita_p174); end
  def test_costpercapita_q174; assert_equal("ok", worksheet.costpercapita_q174); end
  def test_costpercapita_r174; assert_equal("ok", worksheet.costpercapita_r174); end
  def test_costpercapita_s174; assert_equal("ok", worksheet.costpercapita_s174); end
  def test_costpercapita_t174; assert_equal("ok", worksheet.costpercapita_t174); end
  def test_costpercapita_u174; assert_equal("ok", worksheet.costpercapita_u174); end
  def test_costpercapita_v174; assert_equal("ok", worksheet.costpercapita_v174); end
  def test_costpercapita_w174; assert_equal("ok", worksheet.costpercapita_w174); end
  def test_costpercapita_y174; assert_equal("ok", worksheet.costpercapita_y174); end
  def test_costpercapita_z174; assert_equal("ok", worksheet.costpercapita_z174); end
  def test_costpercapita_aa174; assert_equal("ok", worksheet.costpercapita_aa174); end
  def test_costpercapita_ab174; assert_equal("ok", worksheet.costpercapita_ab174); end
  def test_costpercapita_ac174; assert_equal("ok", worksheet.costpercapita_ac174); end
  def test_costpercapita_ad174; assert_equal("ok", worksheet.costpercapita_ad174); end
  def test_costpercapita_ae174; assert_equal("ok", worksheet.costpercapita_ae174); end
  def test_costpercapita_af174; assert_equal("ok", worksheet.costpercapita_af174); end
  def test_costpercapita_ag174; assert_equal("ok", worksheet.costpercapita_ag174); end
  def test_costpercapita_ai174; assert_equal("ok", worksheet.costpercapita_ai174); end
  def test_costpercapita_aj174; assert_equal("ok", worksheet.costpercapita_aj174); end
  def test_costpercapita_ak174; assert_equal("ok", worksheet.costpercapita_ak174); end
  def test_costpercapita_al174; assert_equal("ok", worksheet.costpercapita_al174); end
  def test_costpercapita_am174; assert_equal("ok", worksheet.costpercapita_am174); end
  def test_costpercapita_an174; assert_equal("ok", worksheet.costpercapita_an174); end
  def test_costpercapita_ao174; assert_equal("ok", worksheet.costpercapita_ao174); end
  def test_costpercapita_ap174; assert_equal("ok", worksheet.costpercapita_ap174); end
  def test_costpercapita_aq174; assert_equal("ok", worksheet.costpercapita_aq174); end
  def test_costpercapita_as174; assert_equal("ok", worksheet.costpercapita_as174); end
  def test_costpercapita_at174; assert_equal("ok", worksheet.costpercapita_at174); end
  def test_costpercapita_ay174; assert_equal("ok", worksheet.costpercapita_ay174); end
  def test_costpercapita_az174; assert_equal("ok", worksheet.costpercapita_az174); end
  def test_costpercapita_ba174; assert_equal("ok", worksheet.costpercapita_ba174); end
  def test_costpercapita_bb174; assert_equal("ok", worksheet.costpercapita_bb174); end
  def test_costpercapita_bc174; assert_equal("ok", worksheet.costpercapita_bc174); end
  def test_costpercapita_bd174; assert_equal("ok", worksheet.costpercapita_bd174); end
  def test_costpercapita_be174; assert_equal("ok", worksheet.costpercapita_be174); end
  def test_costpercapita_bf174; assert_equal("ok", worksheet.costpercapita_bf174); end
  def test_costpercapita_bg174; assert_equal("ok", worksheet.costpercapita_bg174); end
  def test_costpercapita_bi174; assert_equal("ok", worksheet.costpercapita_bi174); end
  def test_costpercapita_bj174; assert_equal("ok", worksheet.costpercapita_bj174); end
  def test_costpercapita_bk174; assert_equal("ok", worksheet.costpercapita_bk174); end
  def test_costpercapita_bl174; assert_equal("ok", worksheet.costpercapita_bl174); end
  def test_costpercapita_bm174; assert_equal("ok", worksheet.costpercapita_bm174); end
  def test_costpercapita_bn174; assert_equal("ok", worksheet.costpercapita_bn174); end
  def test_costpercapita_bo174; assert_equal("ok", worksheet.costpercapita_bo174); end
  def test_costpercapita_bp174; assert_equal("ok", worksheet.costpercapita_bp174); end
  def test_costpercapita_bq174; assert_equal("ok", worksheet.costpercapita_bq174); end
  def test_costpercapita_bs174; assert_equal("ok", worksheet.costpercapita_bs174); end
  def test_costpercapita_bt174; assert_equal("ok", worksheet.costpercapita_bt174); end
  def test_costpercapita_bu174; assert_equal("ok", worksheet.costpercapita_bu174); end
  def test_costpercapita_bv174; assert_equal("ok", worksheet.costpercapita_bv174); end
  def test_costpercapita_bw174; assert_equal("ok", worksheet.costpercapita_bw174); end
  def test_costpercapita_bx174; assert_equal("ok", worksheet.costpercapita_bx174); end
  def test_costpercapita_by174; assert_equal("ok", worksheet.costpercapita_by174); end
  def test_costpercapita_bz174; assert_equal("ok", worksheet.costpercapita_bz174); end
  def test_costpercapita_ca174; assert_equal("ok", worksheet.costpercapita_ca174); end
  def test_costpercapita_cc174; assert_equal("ok", worksheet.costpercapita_cc174); end
  def test_costpercapita_cd174; assert_equal("ok", worksheet.costpercapita_cd174); end
  def test_costpercapita_cf174; assert_equal("ok", worksheet.costpercapita_cf174); end
  def test_costpercapita_cg174; assert_equal("ok", worksheet.costpercapita_cg174); end
  def test_costpercapita_ch174; assert_equal("ok", worksheet.costpercapita_ch174); end
  def test_costpercapita_ci174; assert_equal("ok", worksheet.costpercapita_ci174); end
  def test_costpercapita_cj174; assert_equal("ok", worksheet.costpercapita_cj174); end
  def test_costpercapita_ck174; assert_equal("ok", worksheet.costpercapita_ck174); end
  def test_costpercapita_cl174; assert_equal("ok", worksheet.costpercapita_cl174); end
  def test_costpercapita_cm174; assert_equal("ok", worksheet.costpercapita_cm174); end
  def test_costpercapita_cn174; assert_equal("ok", worksheet.costpercapita_cn174); end
  def test_costpercapita_cp174; assert_equal("ok", worksheet.costpercapita_cp174); end
  def test_costpercapita_cq174; assert_equal("ok", worksheet.costpercapita_cq174); end
  def test_costpercapita_c176; assert_equal("£m", worksheet.costpercapita_c176); end
  def test_costpercapita_e176; assert_equal("C1.Point", worksheet.costpercapita_e176); end
  def test_costpercapita_f176; assert_equal("Point estimate of capital costs", worksheet.costpercapita_f176); end
  def test_costpercapita_o176; assert_equal("C2.Point", worksheet.costpercapita_o176); end
  def test_costpercapita_p176; assert_equal("Point estimate of operating costs", worksheet.costpercapita_p176); end
  def test_costpercapita_y176; assert_equal("C3.Point", worksheet.costpercapita_y176); end
  def test_costpercapita_z176; assert_equal("Point estimate of fuel costs", worksheet.costpercapita_z176); end
  def test_costpercapita_ai176; assert_equal("Point estimate of total cost", worksheet.costpercapita_ai176); end
  def test_costpercapita_as176; assert_equal("Cashflow capital basis", worksheet.costpercapita_as176); end
  def test_costpercapita_av176; assert_equal("Loan", worksheet.costpercapita_av176); end
  def test_costpercapita_ay176; assert_equal("Repayments for capital spent in that period", worksheet.costpercapita_ay176); end
  def test_costpercapita_bi176; assert_equal("Repayments for outstanding capital", worksheet.costpercapita_bi176); end
  def test_costpercapita_br176; assert_equal("Total cost (amortised capital)", worksheet.costpercapita_br176); end
  def test_costpercapita_cc176; assert_equal("Amortised Capital", worksheet.costpercapita_cc176); end
  def test_costpercapita_cf176; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cf176); end
  def test_costpercapita_cp176; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cp176); end
  def test_costpercapita_c177; assert_equal("Category", worksheet.costpercapita_c177); end
  def test_costpercapita_e177; assert_equal("2010", worksheet.costpercapita_e177); end
  def test_costpercapita_f177; assert_equal("2015", worksheet.costpercapita_f177); end
  def test_costpercapita_g177; assert_equal("2020", worksheet.costpercapita_g177); end
  def test_costpercapita_h177; assert_equal("2025", worksheet.costpercapita_h177); end
  def test_costpercapita_i177; assert_equal("2030", worksheet.costpercapita_i177); end
  def test_costpercapita_j177; assert_equal("2035", worksheet.costpercapita_j177); end
  def test_costpercapita_k177; assert_equal("2040", worksheet.costpercapita_k177); end
  def test_costpercapita_l177; assert_equal("2045", worksheet.costpercapita_l177); end
  def test_costpercapita_m177; assert_equal("2050", worksheet.costpercapita_m177); end
  def test_costpercapita_o177; assert_equal("2010", worksheet.costpercapita_o177); end
  def test_costpercapita_p177; assert_equal("2015", worksheet.costpercapita_p177); end
  def test_costpercapita_q177; assert_equal("2020", worksheet.costpercapita_q177); end
  def test_costpercapita_r177; assert_equal("2025", worksheet.costpercapita_r177); end
  def test_costpercapita_s177; assert_equal("2030", worksheet.costpercapita_s177); end
  def test_costpercapita_t177; assert_equal("2035", worksheet.costpercapita_t177); end
  def test_costpercapita_u177; assert_equal("2040", worksheet.costpercapita_u177); end
  def test_costpercapita_v177; assert_equal("2045", worksheet.costpercapita_v177); end
  def test_costpercapita_w177; assert_equal("2050", worksheet.costpercapita_w177); end
  def test_costpercapita_y177; assert_equal("2010", worksheet.costpercapita_y177); end
  def test_costpercapita_z177; assert_equal("2015", worksheet.costpercapita_z177); end
  def test_costpercapita_aa177; assert_equal("2020", worksheet.costpercapita_aa177); end
  def test_costpercapita_ab177; assert_equal("2025", worksheet.costpercapita_ab177); end
  def test_costpercapita_ac177; assert_equal("2030", worksheet.costpercapita_ac177); end
  def test_costpercapita_ad177; assert_equal("2035", worksheet.costpercapita_ad177); end
  def test_costpercapita_ae177; assert_equal("2040", worksheet.costpercapita_ae177); end
  def test_costpercapita_af177; assert_equal("2045", worksheet.costpercapita_af177); end
  def test_costpercapita_ag177; assert_equal("2050", worksheet.costpercapita_ag177); end
  def test_costpercapita_ai177; assert_equal("2010", worksheet.costpercapita_ai177); end
  def test_costpercapita_aj177; assert_equal("2015", worksheet.costpercapita_aj177); end
  def test_costpercapita_ak177; assert_equal("2020", worksheet.costpercapita_ak177); end
  def test_costpercapita_al177; assert_equal("2025", worksheet.costpercapita_al177); end
  def test_costpercapita_am177; assert_equal("2030", worksheet.costpercapita_am177); end
  def test_costpercapita_an177; assert_equal("2035", worksheet.costpercapita_an177); end
  def test_costpercapita_ao177; assert_equal("2040", worksheet.costpercapita_ao177); end
  def test_costpercapita_ap177; assert_equal("2045", worksheet.costpercapita_ap177); end
  def test_costpercapita_aq177; assert_equal("2050", worksheet.costpercapita_aq177); end
  def test_costpercapita_as177; assert_equal("Mean", worksheet.costpercapita_as177); end
  def test_costpercapita_at177; assert_equal("NPV", worksheet.costpercapita_at177); end
  def test_costpercapita_av177; assert_equal("Rate", worksheet.costpercapita_av177); end
  def test_costpercapita_aw177; assert_equal("Years", worksheet.costpercapita_aw177); end
  def test_costpercapita_ay177; assert_in_epsilon(2010, worksheet.costpercapita_ay177, 0.001); end
  def test_costpercapita_az177; assert_in_epsilon(2015, worksheet.costpercapita_az177, 0.001); end
  def test_costpercapita_ba177; assert_in_epsilon(2020, worksheet.costpercapita_ba177, 0.001); end
  def test_costpercapita_bb177; assert_in_epsilon(2025, worksheet.costpercapita_bb177, 0.001); end
  def test_costpercapita_bc177; assert_in_epsilon(2030, worksheet.costpercapita_bc177, 0.001); end
  def test_costpercapita_bd177; assert_in_epsilon(2035, worksheet.costpercapita_bd177, 0.001); end
  def test_costpercapita_be177; assert_in_epsilon(2040, worksheet.costpercapita_be177, 0.001); end
  def test_costpercapita_bf177; assert_in_epsilon(2045, worksheet.costpercapita_bf177, 0.001); end
  def test_costpercapita_bg177; assert_in_epsilon(2050, worksheet.costpercapita_bg177, 0.001); end
  def test_costpercapita_bi177; assert_in_epsilon(2010, worksheet.costpercapita_bi177, 0.001); end
  def test_costpercapita_bj177; assert_in_epsilon(2015, worksheet.costpercapita_bj177, 0.001); end
  def test_costpercapita_bk177; assert_in_epsilon(2020, worksheet.costpercapita_bk177, 0.001); end
  def test_costpercapita_bl177; assert_in_epsilon(2025, worksheet.costpercapita_bl177, 0.001); end
  def test_costpercapita_bm177; assert_in_epsilon(2030, worksheet.costpercapita_bm177, 0.001); end
  def test_costpercapita_bn177; assert_in_epsilon(2035, worksheet.costpercapita_bn177, 0.001); end
  def test_costpercapita_bo177; assert_in_epsilon(2040, worksheet.costpercapita_bo177, 0.001); end
  def test_costpercapita_bp177; assert_in_epsilon(2045, worksheet.costpercapita_bp177, 0.001); end
  def test_costpercapita_bq177; assert_in_epsilon(2050, worksheet.costpercapita_bq177, 0.001); end
  def test_costpercapita_bs177; assert_equal("2010", worksheet.costpercapita_bs177); end
  def test_costpercapita_bt177; assert_equal("2015", worksheet.costpercapita_bt177); end
  def test_costpercapita_bu177; assert_equal("2020", worksheet.costpercapita_bu177); end
  def test_costpercapita_bv177; assert_equal("2025", worksheet.costpercapita_bv177); end
  def test_costpercapita_bw177; assert_equal("2030", worksheet.costpercapita_bw177); end
  def test_costpercapita_bx177; assert_equal("2035", worksheet.costpercapita_bx177); end
  def test_costpercapita_by177; assert_equal("2040", worksheet.costpercapita_by177); end
  def test_costpercapita_bz177; assert_equal("2045", worksheet.costpercapita_bz177); end
  def test_costpercapita_ca177; assert_equal("2050", worksheet.costpercapita_ca177); end
  def test_costpercapita_cc177; assert_equal("Mean", worksheet.costpercapita_cc177); end
  def test_costpercapita_cd177; assert_equal("NPV", worksheet.costpercapita_cd177); end
  def test_costpercapita_cf177; assert_equal("2010", worksheet.costpercapita_cf177); end
  def test_costpercapita_cg177; assert_equal("2015", worksheet.costpercapita_cg177); end
  def test_costpercapita_ch177; assert_equal("2020", worksheet.costpercapita_ch177); end
  def test_costpercapita_ci177; assert_equal("2025", worksheet.costpercapita_ci177); end
  def test_costpercapita_cj177; assert_equal("2030", worksheet.costpercapita_cj177); end
  def test_costpercapita_ck177; assert_equal("2035", worksheet.costpercapita_ck177); end
  def test_costpercapita_cl177; assert_equal("2040", worksheet.costpercapita_cl177); end
  def test_costpercapita_cm177; assert_equal("2045", worksheet.costpercapita_cm177); end
  def test_costpercapita_cn177; assert_equal("2050", worksheet.costpercapita_cn177); end
  def test_costpercapita_cp177; assert_equal("Mean", worksheet.costpercapita_cp177); end
  def test_costpercapita_cq177; assert_equal("NPV", worksheet.costpercapita_cq177); end
  def test_costpercapita_c178; assert_equal("Fossil Fuels", worksheet.costpercapita_c178); end
  def test_costpercapita_e178; assert_in_epsilon(19.65721222647776, worksheet.costpercapita_e178, 0.001); end
  def test_costpercapita_f178; assert_in_epsilon(10.203854734275321, worksheet.costpercapita_f178, 0.001); end
  def test_costpercapita_g178; assert_in_epsilon(9.15769895534699, worksheet.costpercapita_g178, 0.001); end
  def test_costpercapita_h178; assert_in_epsilon(7.120226320181602, worksheet.costpercapita_h178, 0.001); end
  def test_costpercapita_i178; assert_in_epsilon(5.096530819787294, worksheet.costpercapita_i178, 0.001); end
  def test_costpercapita_j178; assert_in_epsilon(3.360855188104504, worksheet.costpercapita_j178, 0.001); end
  def test_costpercapita_k178; assert_in_epsilon(2.546813430137743, worksheet.costpercapita_k178, 0.001); end
  def test_costpercapita_l178; assert_in_epsilon(1.6714618719725343, worksheet.costpercapita_l178, 0.001); end
  def test_costpercapita_m178; assert_in_delta(0.75403235797056, worksheet.costpercapita_m178, 0.001); end
  def test_costpercapita_o178; assert_in_delta(0.05623216890603242, worksheet.costpercapita_o178, 0.001); end
  def test_costpercapita_p178; assert_in_delta(0.04639501041870681, worksheet.costpercapita_p178, 0.001); end
  def test_costpercapita_q178; assert_in_delta(0.033325296564052975, worksheet.costpercapita_q178, 0.001); end
  def test_costpercapita_r178; assert_in_delta(0.022117273509313994, worksheet.costpercapita_r178, 0.001); end
  def test_costpercapita_s178; assert_in_delta(0.013587100678472373, worksheet.costpercapita_s178, 0.001); end
  def test_costpercapita_t178; assert_in_delta(0.009647385591534104, worksheet.costpercapita_t178, 0.001); end
  def test_costpercapita_u178; assert_in_delta(0.005959855313353454, worksheet.costpercapita_u178, 0.001); end
  def test_costpercapita_v178; assert_in_delta(0.0025393921041892867, worksheet.costpercapita_v178, 0.001); end
  def test_costpercapita_w178; assert_in_delta(0, (worksheet.costpercapita_w178||0), 0.001); end
  def test_costpercapita_y178; assert_in_epsilon(696.5429062152073, worksheet.costpercapita_y178, 0.001); end
  def test_costpercapita_z178; assert_in_epsilon(666.709681638176, worksheet.costpercapita_z178, 0.001); end
  def test_costpercapita_aa178; assert_in_epsilon(586.2262260446697, worksheet.costpercapita_aa178, 0.001); end
  def test_costpercapita_ab178; assert_in_epsilon(461.1568285071048, worksheet.costpercapita_ab178, 0.001); end
  def test_costpercapita_ac178; assert_in_epsilon(343.51763644887694, worksheet.costpercapita_ac178, 0.001); end
  def test_costpercapita_ad178; assert_in_epsilon(268.486782232077, worksheet.costpercapita_ad178, 0.001); end
  def test_costpercapita_ae178; assert_in_epsilon(196.38995301110657, worksheet.costpercapita_ae178, 0.001); end
  def test_costpercapita_af178; assert_in_epsilon(123.5068096415652, worksheet.costpercapita_af178, 0.001); end
  def test_costpercapita_ag178; assert_in_epsilon(59.16348431192148, worksheet.costpercapita_ag178, 0.001); end
  def test_costpercapita_ai178; assert_in_epsilon(716.2563506105911, worksheet.costpercapita_ai178, 0.001); end
  def test_costpercapita_aj178; assert_in_epsilon(676.95993138287, worksheet.costpercapita_aj178, 0.001); end
  def test_costpercapita_ak178; assert_in_epsilon(595.4172502965807, worksheet.costpercapita_ak178, 0.001); end
  def test_costpercapita_al178; assert_in_epsilon(468.2991721007958, worksheet.costpercapita_al178, 0.001); end
  def test_costpercapita_am178; assert_in_epsilon(348.6277543693427, worksheet.costpercapita_am178, 0.001); end
  def test_costpercapita_an178; assert_in_epsilon(271.8572848057731, worksheet.costpercapita_an178, 0.001); end
  def test_costpercapita_ao178; assert_in_epsilon(198.94272629655768, worksheet.costpercapita_ao178, 0.001); end
  def test_costpercapita_ap178; assert_in_epsilon(125.18081090564193, worksheet.costpercapita_ap178, 0.001); end
  def test_costpercapita_aq178; assert_in_epsilon(59.91751666989204, worksheet.costpercapita_aq178, 0.001); end
  def test_costpercapita_as178; assert_in_epsilon(384.60653304867174, worksheet.costpercapita_as178, 0.001); end
  def test_costpercapita_ay178; assert_in_epsilon(6.474768717222489, worksheet.costpercapita_ay178, 0.001); end
  def test_costpercapita_az178; assert_in_epsilon(5.601642005266739, worksheet.costpercapita_az178, 0.001); end
  def test_costpercapita_ba178; assert_in_epsilon(5.027330599635613, worksheet.costpercapita_ba178, 0.001); end
  def test_costpercapita_bb178; assert_in_epsilon(3.908812883052839, worksheet.costpercapita_bb178, 0.001); end
  def test_costpercapita_bc178; assert_in_epsilon(2.7978584431782956, worksheet.costpercapita_bc178, 0.001); end
  def test_costpercapita_bd178; assert_in_epsilon(1.8450191702618242, worksheet.costpercapita_bd178, 0.001); end
  def test_costpercapita_be178; assert_in_epsilon(1.3981321237272832, worksheet.costpercapita_be178, 0.001); end
  def test_costpercapita_bf178; assert_in_delta(0.9175876446763311, worksheet.costpercapita_bf178, 0.001); end
  def test_costpercapita_bg178; assert_in_delta(0.4139434987789633, worksheet.costpercapita_bg178, 0.001); end
  def test_costpercapita_bi178; assert_in_epsilon(6.474768717222489, worksheet.costpercapita_bi178, 0.001); end
  def test_costpercapita_bj178; assert_in_epsilon(11.862904775654322, worksheet.costpercapita_bj178, 0.001); end
  def test_costpercapita_bk178; assert_in_epsilon(16.501865814003562, worksheet.costpercapita_bk178, 0.001); end
  def test_costpercapita_bl178; assert_in_epsilon(14.030966475436143, worksheet.costpercapita_bl178, 0.001); end
  def test_costpercapita_bm178; assert_in_epsilon(11.338454247779389, worksheet.costpercapita_bm178, 0.001); end
  def test_costpercapita_bn178; assert_in_epsilon(8.289436318235174, worksheet.costpercapita_bn178, 0.001); end
  def test_costpercapita_bo178; assert_in_epsilon(5.877493959605044, worksheet.costpercapita_bo178, 0.001); end
  def test_costpercapita_bp178; assert_in_epsilon(4.057482110040556, worksheet.costpercapita_bp178, 0.001); end
  def test_costpercapita_bq178; assert_in_epsilon(2.6590785554693337, worksheet.costpercapita_bq178, 0.001); end
  def test_costpercapita_bs178; assert_in_epsilon(703.0739071013357, worksheet.costpercapita_bs178, 0.001); end
  def test_costpercapita_bt178; assert_in_epsilon(678.618981424249, worksheet.costpercapita_bt178, 0.001); end
  def test_costpercapita_bu178; assert_in_epsilon(602.7614171552373, worksheet.costpercapita_bu178, 0.001); end
  def test_costpercapita_bv178; assert_in_epsilon(475.2099122560503, worksheet.costpercapita_bv178, 0.001); end
  def test_costpercapita_bw178; assert_in_epsilon(354.8696777973348, worksheet.costpercapita_bw178, 0.001); end
  def test_costpercapita_bx178; assert_in_epsilon(276.78586593590376, worksheet.costpercapita_bx178, 0.001); end
  def test_costpercapita_by178; assert_in_epsilon(202.27340682602494, worksheet.costpercapita_by178, 0.001); end
  def test_costpercapita_bz178; assert_in_epsilon(127.56683114370996, worksheet.costpercapita_bz178, 0.001); end
  def test_costpercapita_ca178; assert_in_epsilon(61.822562867390815, worksheet.costpercapita_ca178, 0.001); end
  def test_costpercapita_cc178; assert_in_epsilon(386.9980625008041, worksheet.costpercapita_cc178, 0.001); end
  def test_costpercapita_cf178; assert_in_epsilon(-13.182443509255272, worksheet.costpercapita_cf178, 0.001); end
  def test_costpercapita_cg178; assert_in_epsilon(1.6590500413790008, worksheet.costpercapita_cg178, 0.001); end
  def test_costpercapita_ch178; assert_in_epsilon(7.344166858656573, worksheet.costpercapita_ch178, 0.001); end
  def test_costpercapita_ci178; assert_in_epsilon(6.910740155254541, worksheet.costpercapita_ci178, 0.001); end
  def test_costpercapita_cj178; assert_in_epsilon(6.241923427992095, worksheet.costpercapita_cj178, 0.001); end
  def test_costpercapita_ck178; assert_in_epsilon(4.928581130130669, worksheet.costpercapita_ck178, 0.001); end
  def test_costpercapita_cl178; assert_in_epsilon(3.3306805294673003, worksheet.costpercapita_cl178, 0.001); end
  def test_costpercapita_cm178; assert_in_epsilon(2.3860202380680215, worksheet.costpercapita_cm178, 0.001); end
  def test_costpercapita_cn178; assert_in_epsilon(1.9050461974987734, worksheet.costpercapita_cn178, 0.001); end
  def test_costpercapita_cp178; assert_in_epsilon(2.3915294521324117, worksheet.costpercapita_cp178, 0.001); end
  def test_costpercapita_cd178; assert_in_epsilon(9230.387833224064, worksheet.costpercapita_cd178, 0.001); end
  def test_costpercapita_cq178; assert_in_epsilon(78.6961599372552, worksheet.costpercapita_cq178, 0.001); end
  def test_costpercapita_at178; assert_in_epsilon(9151.691673286809, worksheet.costpercapita_at178, 0.001); end
  def test_costpercapita_cr178; assert_equal("ok", worksheet.costpercapita_cr178); end
  def test_costpercapita_c179; assert_equal("Bioenergy", worksheet.costpercapita_c179); end
  def test_costpercapita_e179; assert_in_epsilon(68.87407996044887, worksheet.costpercapita_e179, 0.001); end
  def test_costpercapita_f179; assert_in_epsilon(74.47108884618501, worksheet.costpercapita_f179, 0.001); end
  def test_costpercapita_g179; assert_in_epsilon(71.35105981180733, worksheet.costpercapita_g179, 0.001); end
  def test_costpercapita_h179; assert_in_epsilon(67.03445615001112, worksheet.costpercapita_h179, 0.001); end
  def test_costpercapita_i179; assert_in_epsilon(67.60309974855278, worksheet.costpercapita_i179, 0.001); end
  def test_costpercapita_j179; assert_in_epsilon(70.32955896277109, worksheet.costpercapita_j179, 0.001); end
  def test_costpercapita_k179; assert_in_epsilon(77.98246973162442, worksheet.costpercapita_k179, 0.001); end
  def test_costpercapita_l179; assert_in_epsilon(93.6940123186242, worksheet.costpercapita_l179, 0.001); end
  def test_costpercapita_m179; assert_in_epsilon(64.35456260881918, worksheet.costpercapita_m179, 0.001); end
  def test_costpercapita_o179; assert_in_epsilon(89.0191002847889, worksheet.costpercapita_o179, 0.001); end
  def test_costpercapita_p179; assert_in_epsilon(99.02125250327848, worksheet.costpercapita_p179, 0.001); end
  def test_costpercapita_q179; assert_in_epsilon(111.38828833530818, worksheet.costpercapita_q179, 0.001); end
  def test_costpercapita_r179; assert_in_epsilon(119.71473968070987, worksheet.costpercapita_r179, 0.001); end
  def test_costpercapita_s179; assert_in_epsilon(124.0809335746062, worksheet.costpercapita_s179, 0.001); end
  def test_costpercapita_t179; assert_in_epsilon(127.27062732071423, worksheet.costpercapita_t179, 0.001); end
  def test_costpercapita_u179; assert_in_epsilon(132.29257136577604, worksheet.costpercapita_u179, 0.001); end
  def test_costpercapita_v179; assert_in_epsilon(140.36171263174157, worksheet.costpercapita_v179, 0.001); end
  def test_costpercapita_w179; assert_in_epsilon(153.04014886592245, worksheet.costpercapita_w179, 0.001); end
  def test_costpercapita_y179; assert_in_epsilon(10.991113372825833, worksheet.costpercapita_y179, 0.001); end
  def test_costpercapita_z179; assert_in_epsilon(26.371471722387138, worksheet.costpercapita_z179, 0.001); end
  def test_costpercapita_aa179; assert_in_epsilon(49.568478249255165, worksheet.costpercapita_aa179, 0.001); end
  def test_costpercapita_ab179; assert_in_epsilon(68.2008879838053, worksheet.costpercapita_ab179, 0.001); end
  def test_costpercapita_ac179; assert_in_epsilon(87.33419773120755, worksheet.costpercapita_ac179, 0.001); end
  def test_costpercapita_ad179; assert_in_epsilon(105.46316849697199, worksheet.costpercapita_ad179, 0.001); end
  def test_costpercapita_ae179; assert_in_epsilon(129.7325204162367, worksheet.costpercapita_ae179, 0.001); end
  def test_costpercapita_af179; assert_in_epsilon(169.4010526956372, worksheet.costpercapita_af179, 0.001); end
  def test_costpercapita_ag179; assert_in_epsilon(234.67906461473626, worksheet.costpercapita_ag179, 0.001); end
  def test_costpercapita_ai179; assert_in_epsilon(168.88429361806362, worksheet.costpercapita_ai179, 0.001); end
  def test_costpercapita_aj179; assert_in_epsilon(199.86381307185061, worksheet.costpercapita_aj179, 0.001); end
  def test_costpercapita_ak179; assert_in_epsilon(232.30782639637067, worksheet.costpercapita_ak179, 0.001); end
  def test_costpercapita_al179; assert_in_epsilon(254.95008381452624, worksheet.costpercapita_al179, 0.001); end
  def test_costpercapita_am179; assert_in_epsilon(279.0182310543665, worksheet.costpercapita_am179, 0.001); end
  def test_costpercapita_an179; assert_in_epsilon(303.06335478045736, worksheet.costpercapita_an179, 0.001); end
  def test_costpercapita_ao179; assert_in_epsilon(340.00756151363714, worksheet.costpercapita_ao179, 0.001); end
  def test_costpercapita_ap179; assert_in_epsilon(403.456777646003, worksheet.costpercapita_ap179, 0.001); end
  def test_costpercapita_aq179; assert_in_epsilon(452.07377608947786, worksheet.costpercapita_aq179, 0.001); end
  def test_costpercapita_as179; assert_in_epsilon(292.6250797760837, worksheet.costpercapita_as179, 0.001); end
  def test_costpercapita_ay179; assert_in_epsilon(20.441491344655354, worksheet.costpercapita_ay179, 0.001); end
  def test_costpercapita_az179; assert_in_epsilon(36.65960659549087, worksheet.costpercapita_az179, 0.001); end
  def test_costpercapita_ba179; assert_in_epsilon(35.93185444804501, worksheet.costpercapita_ba179, 0.001); end
  def test_costpercapita_bb179; assert_in_epsilon(33.897393039253856, worksheet.costpercapita_bb179, 0.001); end
  def test_costpercapita_bc179; assert_in_epsilon(34.064214206444554, worksheet.costpercapita_bc179, 0.001); end
  def test_costpercapita_bd179; assert_in_epsilon(35.03282431297336, worksheet.costpercapita_bd179, 0.001); end
  def test_costpercapita_be179; assert_in_epsilon(37.841226365225694, worksheet.costpercapita_be179, 0.001); end
  def test_costpercapita_bf179; assert_in_epsilon(43.98297871421969, worksheet.costpercapita_bf179, 0.001); end
  def test_costpercapita_bg179; assert_in_epsilon(32.002672767364345, worksheet.costpercapita_bg179, 0.001); end
  def test_costpercapita_bi179; assert_in_epsilon(20.441491344655354, worksheet.costpercapita_bi179, 0.001); end
  def test_costpercapita_bj179; assert_in_epsilon(56.42703834746159, worksheet.costpercapita_bj179, 0.001); end
  def test_costpercapita_bk179; assert_in_epsilon(90.51157592479655, worksheet.costpercapita_bk179, 0.001); end
  def test_costpercapita_bl179; assert_in_epsilon(108.69125390452248, worksheet.costpercapita_bl179, 0.001); end
  def test_costpercapita_bm179; assert_in_epsilon(116.9859511200839, worksheet.costpercapita_bm179, 0.001); end
  def test_costpercapita_bn179; assert_in_epsilon(124.41501798027801, worksheet.costpercapita_bn179, 0.001); end
  def test_costpercapita_bo179; assert_in_epsilon(130.321618598362, worksheet.costpercapita_bo179, 0.001); end
  def test_costpercapita_bp179; assert_in_epsilon(145.60548474450553, worksheet.costpercapita_bp179, 0.001); end
  def test_costpercapita_bq179; assert_in_epsilon(143.46430718127536, worksheet.costpercapita_bq179, 0.001); end
  def test_costpercapita_bs179; assert_in_epsilon(120.4517050022701, worksheet.costpercapita_bs179, 0.001); end
  def test_costpercapita_bt179; assert_in_epsilon(181.8197625731272, worksheet.costpercapita_bt179, 0.001); end
  def test_costpercapita_bu179; assert_in_epsilon(251.4683425093599, worksheet.costpercapita_bu179, 0.001); end
  def test_costpercapita_bv179; assert_in_epsilon(296.6068815690376, worksheet.costpercapita_bv179, 0.001); end
  def test_costpercapita_bw179; assert_in_epsilon(328.40108242589764, worksheet.costpercapita_bw179, 0.001); end
  def test_costpercapita_bx179; assert_in_epsilon(357.14881379796424, worksheet.costpercapita_bx179, 0.001); end
  def test_costpercapita_by179; assert_in_epsilon(392.3467103803747, worksheet.costpercapita_by179, 0.001); end
  def test_costpercapita_bz179; assert_in_epsilon(455.36825007188435, worksheet.costpercapita_bz179, 0.001); end
  def test_costpercapita_ca179; assert_in_epsilon(531.1835206619342, worksheet.costpercapita_ca179, 0.001); end
  def test_costpercapita_cc179; assert_in_epsilon(323.8661187768722, worksheet.costpercapita_cc179, 0.001); end
  def test_costpercapita_cf179; assert_in_epsilon(-48.43258861579352, worksheet.costpercapita_cf179, 0.001); end
  def test_costpercapita_cg179; assert_in_epsilon(-18.044050498723422, worksheet.costpercapita_cg179, 0.001); end
  def test_costpercapita_ch179; assert_in_epsilon(19.160516112989217, worksheet.costpercapita_ch179, 0.001); end
  def test_costpercapita_ci179; assert_in_epsilon(41.656797754511366, worksheet.costpercapita_ci179, 0.001); end
  def test_costpercapita_cj179; assert_in_epsilon(49.38285137153112, worksheet.costpercapita_cj179, 0.001); end
  def test_costpercapita_ck179; assert_in_epsilon(54.08545901750692, worksheet.costpercapita_ck179, 0.001); end
  def test_costpercapita_cl179; assert_in_epsilon(52.339148866737574, worksheet.costpercapita_cl179, 0.001); end
  def test_costpercapita_cm179; assert_in_epsilon(51.91147242588133, worksheet.costpercapita_cm179, 0.001); end
  def test_costpercapita_cn179; assert_in_epsilon(79.10974457245618, worksheet.costpercapita_cn179, 0.001); end
  def test_costpercapita_cp179; assert_in_epsilon(31.241039000788525, worksheet.costpercapita_cp179, 0.001); end
  def test_costpercapita_cd179; assert_in_epsilon(6346.0575257609535, worksheet.costpercapita_cd179, 0.001); end
  def test_costpercapita_cq179; assert_in_epsilon(584.2323718444852, worksheet.costpercapita_cq179, 0.001); end
  def test_costpercapita_at179; assert_in_epsilon(5761.8251539164685, worksheet.costpercapita_at179, 0.001); end
  def test_costpercapita_cr179; assert_equal("ok", worksheet.costpercapita_cr179); end
  def test_costpercapita_c180; assert_equal("Electricity", worksheet.costpercapita_c180); end
  def test_costpercapita_e180; assert_in_epsilon(306.1442799784686, worksheet.costpercapita_e180, 0.001); end
  def test_costpercapita_f180; assert_in_epsilon(335.16431760692575, worksheet.costpercapita_f180, 0.001); end
  def test_costpercapita_g180; assert_in_epsilon(417.82314544862555, worksheet.costpercapita_g180, 0.001); end
  def test_costpercapita_h180; assert_in_epsilon(454.0174881750757, worksheet.costpercapita_h180, 0.001); end
  def test_costpercapita_i180; assert_in_epsilon(459.922639538379, worksheet.costpercapita_i180, 0.001); end
  def test_costpercapita_j180; assert_in_epsilon(536.1372877466202, worksheet.costpercapita_j180, 0.001); end
  def test_costpercapita_k180; assert_in_epsilon(651.7931538475386, worksheet.costpercapita_k180, 0.001); end
  def test_costpercapita_l180; assert_in_epsilon(815.3477531914042, worksheet.costpercapita_l180, 0.001); end
  def test_costpercapita_m180; assert_in_epsilon(818.8135908140893, worksheet.costpercapita_m180, 0.001); end
  def test_costpercapita_o180; assert_in_epsilon(91.9199187422359, worksheet.costpercapita_o180, 0.001); end
  def test_costpercapita_p180; assert_in_epsilon(88.3351881262361, worksheet.costpercapita_p180, 0.001); end
  def test_costpercapita_q180; assert_in_epsilon(102.44911692251043, worksheet.costpercapita_q180, 0.001); end
  def test_costpercapita_r180; assert_in_epsilon(121.91797385874808, worksheet.costpercapita_r180, 0.001); end
  def test_costpercapita_s180; assert_in_epsilon(138.73752524056331, worksheet.costpercapita_s180, 0.001); end
  def test_costpercapita_t180; assert_in_epsilon(163.25904182822103, worksheet.costpercapita_t180, 0.001); end
  def test_costpercapita_u180; assert_in_epsilon(182.72872463243428, worksheet.costpercapita_u180, 0.001); end
  def test_costpercapita_v180; assert_in_epsilon(208.85718255244274, worksheet.costpercapita_v180, 0.001); end
  def test_costpercapita_w180; assert_in_epsilon(218.72714542859427, worksheet.costpercapita_w180, 0.001); end
  def test_costpercapita_y180; assert_in_epsilon(1.0513578545510673, worksheet.costpercapita_y180, 0.001); end
  def test_costpercapita_z180; assert_in_delta(0.8540189754512676, worksheet.costpercapita_z180, 0.001); end
  def test_costpercapita_aa180; assert_in_delta(0.4720342707131487, worksheet.costpercapita_aa180, 0.001); end
  def test_costpercapita_ab180; assert_in_delta(0.1524728164966898, worksheet.costpercapita_ab180, 0.001); end
  def test_costpercapita_ac180; assert_in_epsilon(-63.45175127337419, worksheet.costpercapita_ac180, 0.001); end
  def test_costpercapita_ad180; assert_in_epsilon(-161.38891161399812, worksheet.costpercapita_ad180, 0.001); end
  def test_costpercapita_ae180; assert_in_epsilon(-202.45362009285188, worksheet.costpercapita_ae180, 0.001); end
  def test_costpercapita_af180; assert_in_epsilon(-234.50015545113567, worksheet.costpercapita_af180, 0.001); end
  def test_costpercapita_ag180; assert_in_epsilon(-246.00905795140395, worksheet.costpercapita_ag180, 0.001); end
  def test_costpercapita_ai180; assert_in_epsilon(399.1155565752556, worksheet.costpercapita_ai180, 0.001); end
  def test_costpercapita_aj180; assert_in_epsilon(424.3535247086132, worksheet.costpercapita_aj180, 0.001); end
  def test_costpercapita_ak180; assert_in_epsilon(520.7442966418491, worksheet.costpercapita_ak180, 0.001); end
  def test_costpercapita_al180; assert_in_epsilon(576.0879348503205, worksheet.costpercapita_al180, 0.001); end
  def test_costpercapita_am180; assert_in_epsilon(535.208413505568, worksheet.costpercapita_am180, 0.001); end
  def test_costpercapita_an180; assert_in_epsilon(538.0074179608431, worksheet.costpercapita_an180, 0.001); end
  def test_costpercapita_ao180; assert_in_epsilon(632.0682583871209, worksheet.costpercapita_ao180, 0.001); end
  def test_costpercapita_ap180; assert_in_epsilon(789.7047802927111, worksheet.costpercapita_ap180, 0.001); end
  def test_costpercapita_aq180; assert_in_epsilon(791.5316782912795, worksheet.costpercapita_aq180, 0.001); end
  def test_costpercapita_as180; assert_in_epsilon(578.5357623570624, worksheet.costpercapita_as180, 0.001); end
  def test_costpercapita_ay180; assert_in_epsilon(80.2043470411027, worksheet.costpercapita_ay180, 0.001); end
  def test_costpercapita_az180; assert_in_epsilon(147.9101663412411, worksheet.costpercapita_az180, 0.001); end
  def test_costpercapita_ba180; assert_in_epsilon(188.66975854552942, worksheet.costpercapita_ba180, 0.001); end
  def test_costpercapita_bb180; assert_in_epsilon(208.39293973441335, worksheet.costpercapita_bb180, 0.001); end
  def test_costpercapita_bc180; assert_in_epsilon(209.92100597047494, worksheet.costpercapita_bc180, 0.001); end
  def test_costpercapita_bd180; assert_in_epsilon(242.8048853067274, worksheet.costpercapita_bd180, 0.001); end
  def test_costpercapita_be180; assert_in_epsilon(287.49316413013355, worksheet.costpercapita_be180, 0.001); end
  def test_costpercapita_bf180; assert_in_epsilon(360.11685922396157, worksheet.costpercapita_bf180, 0.001); end
  def test_costpercapita_bg180; assert_in_epsilon(359.2851349872019, worksheet.costpercapita_bg180, 0.001); end
  def test_costpercapita_bi180; assert_in_epsilon(80.2043470411027, worksheet.costpercapita_bi180, 0.001); end
  def test_costpercapita_bj180; assert_in_epsilon(225.4697694844287, worksheet.costpercapita_bj180, 0.001); end
  def test_costpercapita_bk180; assert_in_epsilon(406.7580647952777, worksheet.costpercapita_bk180, 0.001); end
  def test_costpercapita_bl180; assert_in_epsilon(602.5563614603202, worksheet.costpercapita_bl180, 0.001); end
  def test_costpercapita_bm180; assert_in_epsilon(781.20655114418, worksheet.costpercapita_bm180, 0.001); end
  def test_costpercapita_bn180; assert_in_epsilon(903.4162044877307, worksheet.costpercapita_bn180, 0.001); end
  def test_costpercapita_bo180; assert_in_epsilon(986.2772632360013, worksheet.costpercapita_bo180, 0.001); end
  def test_costpercapita_bp180; assert_in_epsilon(1320.2316942734528, worksheet.costpercapita_bp180, 0.001); end
  def test_costpercapita_bq180; assert_in_epsilon(1370.3934951145866, worksheet.costpercapita_bq180, 0.001); end
  def test_costpercapita_bs180; assert_in_epsilon(173.17562363788971, worksheet.costpercapita_bs180, 0.001); end
  def test_costpercapita_bt180; assert_in_epsilon(314.658976586116, worksheet.costpercapita_bt180, 0.001); end
  def test_costpercapita_bu180; assert_in_epsilon(509.6792159885013, worksheet.costpercapita_bu180, 0.001); end
  def test_costpercapita_bv180; assert_in_epsilon(724.6268081355649, worksheet.costpercapita_bv180, 0.001); end
  def test_costpercapita_bw180; assert_in_epsilon(856.4923251113692, worksheet.costpercapita_bw180, 0.001); end
  def test_costpercapita_bx180; assert_in_epsilon(905.2863347019535, worksheet.costpercapita_bx180, 0.001); end
  def test_costpercapita_by180; assert_in_epsilon(966.5523677755838, worksheet.costpercapita_by180, 0.001); end
  def test_costpercapita_bz180; assert_in_epsilon(1294.5887213747599, worksheet.costpercapita_bz180, 0.001); end
  def test_costpercapita_ca180; assert_in_epsilon(1343.1115825917768, worksheet.costpercapita_ca180, 0.001); end
  def test_costpercapita_cc180; assert_in_epsilon(787.5746617670573, worksheet.costpercapita_cc180, 0.001); end
  def test_costpercapita_cf180; assert_in_epsilon(-225.93993293736594, worksheet.costpercapita_cf180, 0.001); end
  def test_costpercapita_cg180; assert_in_epsilon(-109.69454812249711, worksheet.costpercapita_cg180, 0.001); end
  def test_costpercapita_ch180; assert_in_epsilon(-11.065080653347845, worksheet.costpercapita_ch180, 0.001); end
  def test_costpercapita_ci180; assert_in_epsilon(148.53887328524448, worksheet.costpercapita_ci180, 0.001); end
  def test_costpercapita_cj180; assert_in_epsilon(321.2839116058012, worksheet.costpercapita_cj180, 0.001); end
  def test_costpercapita_ck180; assert_in_epsilon(367.27891674111044, worksheet.costpercapita_ck180, 0.001); end
  def test_costpercapita_cl180; assert_in_epsilon(334.48410938846285, worksheet.costpercapita_cl180, 0.001); end
  def test_costpercapita_cm180; assert_in_epsilon(504.8839410820488, worksheet.costpercapita_cm180, 0.001); end
  def test_costpercapita_cn180; assert_in_epsilon(551.5799043004972, worksheet.costpercapita_cn180, 0.001); end
  def test_costpercapita_cp180; assert_in_epsilon(209.03889940999488, worksheet.costpercapita_cp180, 0.001); end
  def test_costpercapita_cd180; assert_in_epsilon(15026.089927934703, worksheet.costpercapita_cd180, 0.001); end
  def test_costpercapita_cq180; assert_in_epsilon(3403.5495964699326, worksheet.costpercapita_cq180, 0.001); end
  def test_costpercapita_at180; assert_in_epsilon(11622.540331464768, worksheet.costpercapita_at180, 0.001); end
  def test_costpercapita_cr180; assert_equal("ok", worksheet.costpercapita_cr180); end
  def test_costpercapita_c181; assert_equal("Buildings", worksheet.costpercapita_c181); end
  def test_costpercapita_e181; assert_in_epsilon(506.15464676169677, worksheet.costpercapita_e181, 0.001); end
  def test_costpercapita_f181; assert_in_epsilon(493.50376293974364, worksheet.costpercapita_f181, 0.001); end
  def test_costpercapita_g181; assert_in_epsilon(693.1860491992039, worksheet.costpercapita_g181, 0.001); end
  def test_costpercapita_h181; assert_in_epsilon(697.390136967207, worksheet.costpercapita_h181, 0.001); end
  def test_costpercapita_i181; assert_in_epsilon(765.6377085249268, worksheet.costpercapita_i181, 0.001); end
  def test_costpercapita_j181; assert_in_epsilon(842.9640795160675, worksheet.costpercapita_j181, 0.001); end
  def test_costpercapita_k181; assert_in_epsilon(929.6146629497832, worksheet.costpercapita_k181, 0.001); end
  def test_costpercapita_l181; assert_in_epsilon(1020.168326559101, worksheet.costpercapita_l181, 0.001); end
  def test_costpercapita_m181; assert_in_epsilon(1124.3131412713815, worksheet.costpercapita_m181, 0.001); end
  def test_costpercapita_o181; assert_in_epsilon(92.87393839716641, worksheet.costpercapita_o181, 0.001); end
  def test_costpercapita_p181; assert_in_epsilon(91.53052572408474, worksheet.costpercapita_p181, 0.001); end
  def test_costpercapita_q181; assert_in_epsilon(103.33115309287213, worksheet.costpercapita_q181, 0.001); end
  def test_costpercapita_r181; assert_in_epsilon(115.36638031869369, worksheet.costpercapita_r181, 0.001); end
  def test_costpercapita_s181; assert_in_epsilon(127.61243179290075, worksheet.costpercapita_s181, 0.001); end
  def test_costpercapita_t181; assert_in_epsilon(140.02897857223758, worksheet.costpercapita_t181, 0.001); end
  def test_costpercapita_u181; assert_in_epsilon(152.57411851436066, worksheet.costpercapita_u181, 0.001); end
  def test_costpercapita_v181; assert_in_epsilon(165.22016810172317, worksheet.costpercapita_v181, 0.001); end
  def test_costpercapita_w181; assert_in_epsilon(177.96607610704444, worksheet.costpercapita_w181, 0.001); end
  def test_costpercapita_y181; assert_in_delta(0, (worksheet.costpercapita_y181||0), 0.001); end
  def test_costpercapita_z181; assert_in_delta(0, (worksheet.costpercapita_z181||0), 0.001); end
  def test_costpercapita_aa181; assert_in_delta(0, (worksheet.costpercapita_aa181||0), 0.001); end
  def test_costpercapita_ab181; assert_in_delta(0, (worksheet.costpercapita_ab181||0), 0.001); end
  def test_costpercapita_ac181; assert_in_delta(0, (worksheet.costpercapita_ac181||0), 0.001); end
  def test_costpercapita_ad181; assert_in_delta(0, (worksheet.costpercapita_ad181||0), 0.001); end
  def test_costpercapita_ae181; assert_in_delta(0, (worksheet.costpercapita_ae181||0), 0.001); end
  def test_costpercapita_af181; assert_in_delta(0, (worksheet.costpercapita_af181||0), 0.001); end
  def test_costpercapita_ag181; assert_in_delta(0, (worksheet.costpercapita_ag181||0), 0.001); end
  def test_costpercapita_ai181; assert_in_epsilon(599.0285851588632, worksheet.costpercapita_ai181, 0.001); end
  def test_costpercapita_aj181; assert_in_epsilon(585.0342886638285, worksheet.costpercapita_aj181, 0.001); end
  def test_costpercapita_ak181; assert_in_epsilon(796.517202292076, worksheet.costpercapita_ak181, 0.001); end
  def test_costpercapita_al181; assert_in_epsilon(812.7565172859007, worksheet.costpercapita_al181, 0.001); end
  def test_costpercapita_am181; assert_in_epsilon(893.2501403178276, worksheet.costpercapita_am181, 0.001); end
  def test_costpercapita_an181; assert_in_epsilon(982.993058088305, worksheet.costpercapita_an181, 0.001); end
  def test_costpercapita_ao181; assert_in_epsilon(1082.188781464144, worksheet.costpercapita_ao181, 0.001); end
  def test_costpercapita_ap181; assert_in_epsilon(1185.388494660824, worksheet.costpercapita_ap181, 0.001); end
  def test_costpercapita_aq181; assert_in_epsilon(1302.279217378426, worksheet.costpercapita_aq181, 0.001); end
  def test_costpercapita_as181; assert_in_epsilon(915.4929205900218, worksheet.costpercapita_as181, 0.001); end
  def test_costpercapita_ay181; assert_in_epsilon(142.3655138773421, worksheet.costpercapita_ay181, 0.001); end
  def test_costpercapita_az181; assert_in_epsilon(229.1432187291891, worksheet.costpercapita_az181, 0.001); end
  def test_costpercapita_ba181; assert_in_epsilon(337.5091977657648, worksheet.costpercapita_ba181, 0.001); end
  def test_costpercapita_bb181; assert_in_epsilon(342.51622786994636, worksheet.costpercapita_bb181, 0.001); end
  def test_costpercapita_bc181; assert_in_epsilon(379.55051811182915, worksheet.costpercapita_bc181, 0.001); end
  def test_costpercapita_bd181; assert_in_epsilon(420.83834079980215, worksheet.costpercapita_bd181, 0.001); end
  def test_costpercapita_be181; assert_in_epsilon(466.01866114992237, worksheet.costpercapita_be181, 0.001); end
  def test_costpercapita_bf181; assert_in_epsilon(514.3584017935202, worksheet.costpercapita_bf181, 0.001); end
  def test_costpercapita_bg181; assert_in_epsilon(568.3114608996469, worksheet.costpercapita_bg181, 0.001); end
  def test_costpercapita_bi181; assert_in_epsilon(142.3655138773421, worksheet.costpercapita_bi181, 0.001); end
  def test_costpercapita_bj181; assert_in_epsilon(366.81421992746533, worksheet.costpercapita_bj181, 0.001); end
  def test_costpercapita_bk181; assert_in_epsilon(692.3145985750664, worksheet.costpercapita_bk181, 0.001); end
  def test_costpercapita_bl181; assert_in_epsilon(947.6564920113206, worksheet.costpercapita_bl181, 0.001); end
  def test_costpercapita_bm181; assert_in_epsilon(1203.9741224172712, worksheet.costpercapita_bm181, 0.001); end
  def test_costpercapita_bn181; assert_in_epsilon(1393.638254989137, worksheet.costpercapita_bn181, 0.001); end
  def test_costpercapita_bo181; assert_in_epsilon(1553.497841753851, worksheet.costpercapita_bo181, 0.001); end
  def test_costpercapita_bp181; assert_in_epsilon(1828.6511255063567, worksheet.costpercapita_bp181, 0.001); end
  def test_costpercapita_bq181; assert_in_epsilon(1908.8469275672928, worksheet.costpercapita_bq181, 0.001); end
  def test_costpercapita_bs181; assert_in_epsilon(235.23945227450852, worksheet.costpercapita_bs181, 0.001); end
  def test_costpercapita_bt181; assert_in_epsilon(458.34474565155, worksheet.costpercapita_bt181, 0.001); end
  def test_costpercapita_bu181; assert_in_epsilon(795.6457516679387, worksheet.costpercapita_bu181, 0.001); end
  def test_costpercapita_bv181; assert_in_epsilon(1063.022872330014, worksheet.costpercapita_bv181, 0.001); end
  def test_costpercapita_bw181; assert_in_epsilon(1331.5865542101717, worksheet.costpercapita_bw181, 0.001); end
  def test_costpercapita_bx181; assert_in_epsilon(1533.6672335613748, worksheet.costpercapita_bx181, 0.001); end
  def test_costpercapita_by181; assert_in_epsilon(1706.0719602682113, worksheet.costpercapita_by181, 0.001); end
  def test_costpercapita_bz181; assert_in_epsilon(1993.8712936080794, worksheet.costpercapita_bz181, 0.001); end
  def test_costpercapita_ca181; assert_in_epsilon(2086.8130036743373, worksheet.costpercapita_ca181, 0.001); end
  def test_costpercapita_cc181; assert_in_epsilon(1244.9180963606877, worksheet.costpercapita_cc181, 0.001); end
  def test_costpercapita_cf181; assert_in_epsilon(-363.7891328843546, worksheet.costpercapita_cf181, 0.001); end
  def test_costpercapita_cg181; assert_in_epsilon(-126.68954301227836, worksheet.costpercapita_cg181, 0.001); end
  def test_costpercapita_ch181; assert_in_delta(-0.8714506241373929, worksheet.costpercapita_ch181, 0.001); end
  def test_costpercapita_ci181; assert_in_epsilon(250.26635504411362, worksheet.costpercapita_ci181, 0.001); end
  def test_costpercapita_cj181; assert_in_epsilon(438.33641389234435, worksheet.costpercapita_cj181, 0.001); end
  def test_costpercapita_ck181; assert_in_epsilon(550.6741754730698, worksheet.costpercapita_ck181, 0.001); end
  def test_costpercapita_cl181; assert_in_epsilon(623.8831788040675, worksheet.costpercapita_cl181, 0.001); end
  def test_costpercapita_cm181; assert_in_epsilon(808.4827989472554, worksheet.costpercapita_cm181, 0.001); end
  def test_costpercapita_cn181; assert_in_epsilon(784.5337862959113, worksheet.costpercapita_cn181, 0.001); end
  def test_costpercapita_cp181; assert_in_epsilon(329.42517577066576, worksheet.costpercapita_cp181, 0.001); end
  def test_costpercapita_cd181; assert_in_epsilon(23617.64854376611, worksheet.costpercapita_cd181, 0.001); end
  def test_costpercapita_cq181; assert_in_epsilon(5506.878078631704, worksheet.costpercapita_cq181, 0.001); end
  def test_costpercapita_at181; assert_in_epsilon(18110.770465134414, worksheet.costpercapita_at181, 0.001); end
  def test_costpercapita_cr181; assert_equal("ok", worksheet.costpercapita_cr181); end
  def test_costpercapita_c182; assert_equal("Transport", worksheet.costpercapita_c182); end
  def test_costpercapita_e182; assert_in_epsilon(778.6014255660427, worksheet.costpercapita_e182, 0.001); end
  def test_costpercapita_f182; assert_in_epsilon(781.4020762395277, worksheet.costpercapita_f182, 0.001); end
  def test_costpercapita_g182; assert_in_epsilon(721.9535586237328, worksheet.costpercapita_g182, 0.001); end
  def test_costpercapita_h182; assert_in_epsilon(900.4447292601907, worksheet.costpercapita_h182, 0.001); end
  def test_costpercapita_i182; assert_in_epsilon(871.6598711013113, worksheet.costpercapita_i182, 0.001); end
  def test_costpercapita_j182; assert_in_epsilon(700.9532495562839, worksheet.costpercapita_j182, 0.001); end
  def test_costpercapita_k182; assert_in_epsilon(634.1756207265366, worksheet.costpercapita_k182, 0.001); end
  def test_costpercapita_l182; assert_in_epsilon(594.9456164707657, worksheet.costpercapita_l182, 0.001); end
  def test_costpercapita_m182; assert_in_epsilon(531.8565555607144, worksheet.costpercapita_m182, 0.001); end
  def test_costpercapita_o182; assert_in_epsilon(1107.410746919577, worksheet.costpercapita_o182, 0.001); end
  def test_costpercapita_p182; assert_in_epsilon(1108.5460919593565, worksheet.costpercapita_p182, 0.001); end
  def test_costpercapita_q182; assert_in_epsilon(1098.4146511462527, worksheet.costpercapita_q182, 0.001); end
  def test_costpercapita_r182; assert_in_epsilon(1139.616173024128, worksheet.costpercapita_r182, 0.001); end
  def test_costpercapita_s182; assert_in_epsilon(1128.056540204119, worksheet.costpercapita_s182, 0.001); end
  def test_costpercapita_t182; assert_in_epsilon(1123.3956044309919, worksheet.costpercapita_t182, 0.001); end
  def test_costpercapita_u182; assert_in_epsilon(1018.61457736211, worksheet.costpercapita_u182, 0.001); end
  def test_costpercapita_v182; assert_in_epsilon(1015.8682671765284, worksheet.costpercapita_v182, 0.001); end
  def test_costpercapita_w182; assert_in_epsilon(865.441648082344, worksheet.costpercapita_w182, 0.001); end
  def test_costpercapita_y182; assert_in_delta(0, (worksheet.costpercapita_y182||0), 0.001); end
  def test_costpercapita_z182; assert_in_delta(0, (worksheet.costpercapita_z182||0), 0.001); end
  def test_costpercapita_aa182; assert_in_delta(0, (worksheet.costpercapita_aa182||0), 0.001); end
  def test_costpercapita_ab182; assert_in_delta(0, (worksheet.costpercapita_ab182||0), 0.001); end
  def test_costpercapita_ac182; assert_in_delta(0, (worksheet.costpercapita_ac182||0), 0.001); end
  def test_costpercapita_ad182; assert_in_delta(0, (worksheet.costpercapita_ad182||0), 0.001); end
  def test_costpercapita_ae182; assert_in_delta(0, (worksheet.costpercapita_ae182||0), 0.001); end
  def test_costpercapita_af182; assert_in_delta(0, (worksheet.costpercapita_af182||0), 0.001); end
  def test_costpercapita_ag182; assert_in_delta(0, (worksheet.costpercapita_ag182||0), 0.001); end
  def test_costpercapita_ai182; assert_in_epsilon(1886.0121724856197, worksheet.costpercapita_ai182, 0.001); end
  def test_costpercapita_aj182; assert_in_epsilon(1889.9481681988843, worksheet.costpercapita_aj182, 0.001); end
  def test_costpercapita_ak182; assert_in_epsilon(1820.368209769986, worksheet.costpercapita_ak182, 0.001); end
  def test_costpercapita_al182; assert_in_epsilon(2040.0609022843184, worksheet.costpercapita_al182, 0.001); end
  def test_costpercapita_am182; assert_in_epsilon(1999.7164113054305, worksheet.costpercapita_am182, 0.001); end
  def test_costpercapita_an182; assert_in_epsilon(1824.3488539872758, worksheet.costpercapita_an182, 0.001); end
  def test_costpercapita_ao182; assert_in_epsilon(1652.7901980886465, worksheet.costpercapita_ao182, 0.001); end
  def test_costpercapita_ap182; assert_in_epsilon(1610.8138836472938, worksheet.costpercapita_ap182, 0.001); end
  def test_costpercapita_aq182; assert_in_epsilon(1397.298203643058, worksheet.costpercapita_aq182, 0.001); end
  def test_costpercapita_as182; assert_in_epsilon(1791.2618892678347, worksheet.costpercapita_as182, 0.001); end
  def test_costpercapita_ay182; assert_in_epsilon(266.912653467694, worksheet.costpercapita_ay182, 0.001); end
  def test_costpercapita_az182; assert_in_epsilon(452.7284437652455, worksheet.costpercapita_az182, 0.001); end
  def test_costpercapita_ba182; assert_in_epsilon(421.22429023566394, worksheet.costpercapita_ba182, 0.001); end
  def test_costpercapita_bb182; assert_in_epsilon(519.7981692704061, worksheet.costpercapita_bb182, 0.001); end
  def test_costpercapita_bc182; assert_in_epsilon(504.93679167341946, worksheet.costpercapita_bc182, 0.001); end
  def test_costpercapita_bd182; assert_in_epsilon(412.29388235712645, worksheet.costpercapita_bd182, 0.001); end
  def test_costpercapita_be182; assert_in_epsilon(377.49519798903526, worksheet.costpercapita_be182, 0.001); end
  def test_costpercapita_bf182; assert_in_epsilon(359.51129105874594, worksheet.costpercapita_bf182, 0.001); end
  def test_costpercapita_bg182; assert_in_epsilon(326.88469634241926, worksheet.costpercapita_bg182, 0.001); end
  def test_costpercapita_bi182; assert_in_epsilon(266.912653467694, worksheet.costpercapita_bi182, 0.001); end
  def test_costpercapita_bj182; assert_in_epsilon(700.4612319827984, worksheet.costpercapita_bj182, 0.001); end
  def test_costpercapita_bk182; assert_in_epsilon(1056.3105106457533, worksheet.costpercapita_bk182, 0.001); end
  def test_costpercapita_bl182; assert_in_epsilon(1255.9212263757622, worksheet.costpercapita_bl182, 0.001); end
  def test_costpercapita_bm182; assert_in_epsilon(1312.3397302830138, worksheet.costpercapita_bm182, 0.001); end
  def test_costpercapita_bn182; assert_in_epsilon(1303.43181895526, worksheet.costpercapita_bn182, 0.001); end
  def test_costpercapita_bo182; assert_in_epsilon(1165.0002059399042, worksheet.costpercapita_bo182, 0.001); end
  def test_costpercapita_bp182; assert_in_epsilon(1024.3870414876114, worksheet.costpercapita_bp182, 0.001); end
  def test_costpercapita_bq182; assert_in_epsilon(934.9113948388934, worksheet.costpercapita_bq182, 0.001); end
  def test_costpercapita_bs182; assert_in_epsilon(1374.3234003872708, worksheet.costpercapita_bs182, 0.001); end
  def test_costpercapita_bt182; assert_in_epsilon(1809.0073239421547, worksheet.costpercapita_bt182, 0.001); end
  def test_costpercapita_bu182; assert_in_epsilon(2154.725161792006, worksheet.costpercapita_bu182, 0.001); end
  def test_costpercapita_bv182; assert_in_epsilon(2395.5373993998896, worksheet.costpercapita_bv182, 0.001); end
  def test_costpercapita_bw182; assert_in_epsilon(2440.396270487133, worksheet.costpercapita_bw182, 0.001); end
  def test_costpercapita_bx182; assert_in_epsilon(2426.827423386252, worksheet.costpercapita_bx182, 0.001); end
  def test_costpercapita_by182; assert_in_epsilon(2183.614783302014, worksheet.costpercapita_by182, 0.001); end
  def test_costpercapita_bz182; assert_in_epsilon(2040.2553086641399, worksheet.costpercapita_bz182, 0.001); end
  def test_costpercapita_ca182; assert_in_epsilon(1800.3530429212374, worksheet.costpercapita_ca182, 0.001); end
  def test_costpercapita_cc182; assert_in_epsilon(2069.4489015869, worksheet.costpercapita_cc182, 0.001); end
  def test_costpercapita_cf182; assert_in_epsilon(-511.6887720983488, worksheet.costpercapita_cf182, 0.001); end
  def test_costpercapita_cg182; assert_in_epsilon(-80.9408442567293, worksheet.costpercapita_cg182, 0.001); end
  def test_costpercapita_ch182; assert_in_epsilon(334.35695202202066, worksheet.costpercapita_ch182, 0.001); end
  def test_costpercapita_ci182; assert_in_epsilon(355.4764971155713, worksheet.costpercapita_ci182, 0.001); end
  def test_costpercapita_cj182; assert_in_epsilon(440.6798591817023, worksheet.costpercapita_cj182, 0.001); end
  def test_costpercapita_ck182; assert_in_epsilon(602.4785693989766, worksheet.costpercapita_ck182, 0.001); end
  def test_costpercapita_cl182; assert_in_epsilon(530.8245852133674, worksheet.costpercapita_cl182, 0.001); end
  def test_costpercapita_cm182; assert_in_epsilon(429.4414250168457, worksheet.costpercapita_cm182, 0.001); end
  def test_costpercapita_cn182; assert_in_epsilon(403.0548392781789, worksheet.costpercapita_cn182, 0.001); end
  def test_costpercapita_cp182; assert_in_epsilon(278.187012319065, worksheet.costpercapita_cp182, 0.001); end
  def test_costpercapita_cd182; assert_in_epsilon(44455.25002229092, worksheet.costpercapita_cd182, 0.001); end
  def test_costpercapita_cq182; assert_in_epsilon(5915.425940148818, worksheet.costpercapita_cq182, 0.001); end
  def test_costpercapita_at182; assert_in_epsilon(38539.82408214211, worksheet.costpercapita_at182, 0.001); end
  def test_costpercapita_cr182; assert_equal("ok", worksheet.costpercapita_cr182); end
  def test_costpercapita_c183; assert_equal("Industry", worksheet.costpercapita_c183); end
  def test_costpercapita_e183; assert_in_epsilon(7.4352650874024055, worksheet.costpercapita_e183, 0.001); end
  def test_costpercapita_f183; assert_in_epsilon(6.85526971007265, worksheet.costpercapita_f183, 0.001); end
  def test_costpercapita_g183; assert_in_epsilon(6.736726292107984, worksheet.costpercapita_g183, 0.001); end
  def test_costpercapita_h183; assert_in_epsilon(6.557503762584558, worksheet.costpercapita_h183, 0.001); end
  def test_costpercapita_i183; assert_in_epsilon(6.660587419242162, worksheet.costpercapita_i183, 0.001); end
  def test_costpercapita_j183; assert_in_epsilon(7.160787547964597, worksheet.costpercapita_j183, 0.001); end
  def test_costpercapita_k183; assert_in_epsilon(8.19329558520067, worksheet.costpercapita_k183, 0.001); end
  def test_costpercapita_l183; assert_in_epsilon(10.100112236760364, worksheet.costpercapita_l183, 0.001); end
  def test_costpercapita_m183; assert_in_epsilon(13.434867552945798, worksheet.costpercapita_m183, 0.001); end
  def test_costpercapita_o183; assert_in_epsilon(135.89641434918812, worksheet.costpercapita_o183, 0.001); end
  def test_costpercapita_p183; assert_in_epsilon(135.3957137680343, worksheet.costpercapita_p183, 0.001); end
  def test_costpercapita_q183; assert_in_epsilon(135.11676571903487, worksheet.costpercapita_q183, 0.001); end
  def test_costpercapita_r183; assert_in_epsilon(135.31926493294063, worksheet.costpercapita_r183, 0.001); end
  def test_costpercapita_s183; assert_in_epsilon(136.2450492632795, worksheet.costpercapita_s183, 0.001); end
  def test_costpercapita_t183; assert_in_epsilon(137.89539367894042, worksheet.costpercapita_t183, 0.001); end
  def test_costpercapita_u183; assert_in_epsilon(140.0545770049756, worksheet.costpercapita_u183, 0.001); end
  def test_costpercapita_v183; assert_in_epsilon(142.6176318368444, worksheet.costpercapita_v183, 0.001); end
  def test_costpercapita_w183; assert_in_epsilon(145.6023651732739, worksheet.costpercapita_w183, 0.001); end
  def test_costpercapita_y183; assert_in_delta(0, (worksheet.costpercapita_y183||0), 0.001); end
  def test_costpercapita_z183; assert_in_delta(0, (worksheet.costpercapita_z183||0), 0.001); end
  def test_costpercapita_aa183; assert_in_delta(0, (worksheet.costpercapita_aa183||0), 0.001); end
  def test_costpercapita_ab183; assert_in_delta(0, (worksheet.costpercapita_ab183||0), 0.001); end
  def test_costpercapita_ac183; assert_in_delta(0, (worksheet.costpercapita_ac183||0), 0.001); end
  def test_costpercapita_ad183; assert_in_delta(0, (worksheet.costpercapita_ad183||0), 0.001); end
  def test_costpercapita_ae183; assert_in_delta(0, (worksheet.costpercapita_ae183||0), 0.001); end
  def test_costpercapita_af183; assert_in_delta(0, (worksheet.costpercapita_af183||0), 0.001); end
  def test_costpercapita_ag183; assert_in_delta(0, (worksheet.costpercapita_ag183||0), 0.001); end
  def test_costpercapita_ai183; assert_in_epsilon(143.33167943659055, worksheet.costpercapita_ai183, 0.001); end
  def test_costpercapita_aj183; assert_in_epsilon(142.25098347810697, worksheet.costpercapita_aj183, 0.001); end
  def test_costpercapita_ak183; assert_in_epsilon(141.85349201114286, worksheet.costpercapita_ak183, 0.001); end
  def test_costpercapita_al183; assert_in_epsilon(141.8767686955252, worksheet.costpercapita_al183, 0.001); end
  def test_costpercapita_am183; assert_in_epsilon(142.90563668252167, worksheet.costpercapita_am183, 0.001); end
  def test_costpercapita_an183; assert_in_epsilon(145.05618122690504, worksheet.costpercapita_an183, 0.001); end
  def test_costpercapita_ao183; assert_in_epsilon(148.2478725901763, worksheet.costpercapita_ao183, 0.001); end
  def test_costpercapita_ap183; assert_in_epsilon(152.71774407360476, worksheet.costpercapita_ap183, 0.001); end
  def test_costpercapita_aq183; assert_in_epsilon(159.03723272621974, worksheet.costpercapita_aq183, 0.001); end
  def test_costpercapita_as183; assert_in_epsilon(146.36417676897702, worksheet.costpercapita_as183, 0.001); end
  def test_costpercapita_ay183; assert_in_epsilon(2.449056419471532, worksheet.costpercapita_ay183, 0.001); end
  def test_costpercapita_az183; assert_in_epsilon(3.763358825208023, worksheet.costpercapita_az183, 0.001); end
  def test_costpercapita_ba183; assert_in_epsilon(3.698281674776998, worksheet.costpercapita_ba183, 0.001); end
  def test_costpercapita_bb183; assert_in_epsilon(3.599893322942049, worksheet.costpercapita_bb183, 0.001); end
  def test_costpercapita_bc183; assert_in_epsilon(3.656483479919695, worksheet.costpercapita_bc183, 0.001); end
  def test_costpercapita_bd183; assert_in_epsilon(3.9310799069620694, worksheet.costpercapita_bd183, 0.001); end
  def test_costpercapita_be183; assert_in_epsilon(4.497899069207607, worksheet.costpercapita_be183, 0.001); end
  def test_costpercapita_bf183; assert_in_epsilon(5.54469016236574, worksheet.costpercapita_bf183, 0.001); end
  def test_costpercapita_bg183; assert_in_epsilon(7.375381204417071, worksheet.costpercapita_bg183, 0.001); end
  def test_costpercapita_bi183; assert_in_epsilon(2.449056419471532, worksheet.costpercapita_bi183, 0.001); end
  def test_costpercapita_bj183; assert_in_epsilon(6.131657439647766, worksheet.costpercapita_bj183, 0.001); end
  def test_costpercapita_bk183; assert_in_epsilon(9.629199990674783, worksheet.costpercapita_bk183, 0.001); end
  def test_costpercapita_bl183; assert_in_epsilon(10.71110496581393, worksheet.costpercapita_bl183, 0.001); end
  def test_costpercapita_bm183; assert_in_epsilon(10.643888043958654, worksheet.costpercapita_bm183, 0.001); end
  def test_costpercapita_bn183; assert_in_epsilon(10.920494762541782, worksheet.costpercapita_bn183, 0.001); end
  def test_costpercapita_bo183; assert_in_epsilon(11.8393529991667, worksheet.costpercapita_bo183, 0.001); end
  def test_costpercapita_bp183; assert_in_epsilon(13.723365115353008, worksheet.costpercapita_bp183, 0.001); end
  def test_costpercapita_bq183; assert_in_epsilon(17.142508940776242, worksheet.costpercapita_bq183, 0.001); end
  def test_costpercapita_bs183; assert_in_epsilon(138.34547076865965, worksheet.costpercapita_bs183, 0.001); end
  def test_costpercapita_bt183; assert_in_epsilon(141.52737120768208, worksheet.costpercapita_bt183, 0.001); end
  def test_costpercapita_bu183; assert_in_epsilon(144.74596570970965, worksheet.costpercapita_bu183, 0.001); end
  def test_costpercapita_bv183; assert_in_epsilon(146.03036989875454, worksheet.costpercapita_bv183, 0.001); end
  def test_costpercapita_bw183; assert_in_epsilon(146.88893730723817, worksheet.costpercapita_bw183, 0.001); end
  def test_costpercapita_bx183; assert_in_epsilon(148.8158884414822, worksheet.costpercapita_bx183, 0.001); end
  def test_costpercapita_by183; assert_in_epsilon(151.89393000414233, worksheet.costpercapita_by183, 0.001); end
  def test_costpercapita_bz183; assert_in_epsilon(156.34099695219737, worksheet.costpercapita_bz183, 0.001); end
  def test_costpercapita_ca183; assert_in_epsilon(162.74487411405016, worksheet.costpercapita_ca183, 0.001); end
  def test_costpercapita_cc183; assert_in_epsilon(148.59264493376844, worksheet.costpercapita_cc183, 0.001); end
  def test_costpercapita_cf183; assert_in_epsilon(-4.986208667930874, worksheet.costpercapita_cf183, 0.001); end
  def test_costpercapita_cg183; assert_in_delta(-0.723612270424884, worksheet.costpercapita_cg183, 0.001); end
  def test_costpercapita_ch183; assert_in_epsilon(2.892473698566799, worksheet.costpercapita_ch183, 0.001); end
  def test_costpercapita_ci183; assert_in_epsilon(4.153601203229374, worksheet.costpercapita_ci183, 0.001); end
  def test_costpercapita_cj183; assert_in_epsilon(3.9833006247164926, worksheet.costpercapita_cj183, 0.001); end
  def test_costpercapita_ck183; assert_in_epsilon(3.759707214577186, worksheet.costpercapita_ck183, 0.001); end
  def test_costpercapita_cl183; assert_in_epsilon(3.64605741396603, worksheet.costpercapita_cl183, 0.001); end
  def test_costpercapita_cm183; assert_in_epsilon(3.623252878592643, worksheet.costpercapita_cm183, 0.001); end
  def test_costpercapita_cn183; assert_in_epsilon(3.707641387830442, worksheet.costpercapita_cn183, 0.001); end
  def test_costpercapita_cp183; assert_in_epsilon(2.2284681647914675, worksheet.costpercapita_cp183, 0.001); end
  def test_costpercapita_cd183; assert_in_epsilon(3093.5502493584277, worksheet.costpercapita_cd183, 0.001); end
  def test_costpercapita_cq183; assert_in_epsilon(49.557525735086244, worksheet.costpercapita_cq183, 0.001); end
  def test_costpercapita_at183; assert_in_epsilon(3043.99272362334, worksheet.costpercapita_at183, 0.001); end
  def test_costpercapita_cr183; assert_equal("ok", worksheet.costpercapita_cr183); end
  def test_costpercapita_c184; assert_equal("Other", worksheet.costpercapita_c184); end
  def test_costpercapita_e184; assert_in_delta(0, (worksheet.costpercapita_e184||0), 0.001); end
  def test_costpercapita_f184; assert_in_epsilon(1.7135096450549578, worksheet.costpercapita_f184, 0.001); end
  def test_costpercapita_g184; assert_in_epsilon(3.825264710693456, worksheet.costpercapita_g184, 0.001); end
  def test_costpercapita_h184; assert_in_epsilon(3.495880805046258, worksheet.costpercapita_h184, 0.001); end
  def test_costpercapita_i184; assert_in_epsilon(3.2701320727467333, worksheet.costpercapita_i184, 0.001); end
  def test_costpercapita_j184; assert_in_epsilon(3.1726040958723547, worksheet.costpercapita_j184, 0.001); end
  def test_costpercapita_k184; assert_in_epsilon(3.2550653298907744, worksheet.costpercapita_k184, 0.001); end
  def test_costpercapita_l184; assert_in_epsilon(3.4902026542025233, worksheet.costpercapita_l184, 0.001); end
  def test_costpercapita_m184; assert_in_epsilon(3.9904108744099998, worksheet.costpercapita_m184, 0.001); end
  def test_costpercapita_o184; assert_in_delta(0, (worksheet.costpercapita_o184||0), 0.001); end
  def test_costpercapita_p184; assert_in_delta(0.06031841317572214, worksheet.costpercapita_p184, 0.001); end
  def test_costpercapita_q184; assert_in_delta(0.15371707647544275, worksheet.costpercapita_q184, 0.001); end
  def test_costpercapita_r184; assert_in_delta(0.16053757745982492, worksheet.costpercapita_r184, 0.001); end
  def test_costpercapita_s184; assert_in_delta(0.1720045018362477, worksheet.costpercapita_s184, 0.001); end
  def test_costpercapita_t184; assert_in_delta(0.1918352379996182, worksheet.costpercapita_t184, 0.001); end
  def test_costpercapita_u184; assert_in_delta(0.22744542809575605, worksheet.costpercapita_u184, 0.001); end
  def test_costpercapita_v184; assert_in_delta(0.2838395141619697, worksheet.costpercapita_v184, 0.001); end
  def test_costpercapita_w184; assert_in_delta(0.38133613970429514, worksheet.costpercapita_w184, 0.001); end
  def test_costpercapita_y184; assert_in_delta(0, (worksheet.costpercapita_y184||0), 0.001); end
  def test_costpercapita_z184; assert_in_delta(0, (worksheet.costpercapita_z184||0), 0.001); end
  def test_costpercapita_aa184; assert_in_delta(0, (worksheet.costpercapita_aa184||0), 0.001); end
  def test_costpercapita_ab184; assert_in_delta(0, (worksheet.costpercapita_ab184||0), 0.001); end
  def test_costpercapita_ac184; assert_in_delta(0, (worksheet.costpercapita_ac184||0), 0.001); end
  def test_costpercapita_ad184; assert_in_delta(0, (worksheet.costpercapita_ad184||0), 0.001); end
  def test_costpercapita_ae184; assert_in_delta(0, (worksheet.costpercapita_ae184||0), 0.001); end
  def test_costpercapita_af184; assert_in_delta(0, (worksheet.costpercapita_af184||0), 0.001); end
  def test_costpercapita_ag184; assert_in_delta(0, (worksheet.costpercapita_ag184||0), 0.001); end
  def test_costpercapita_ai184; assert_in_delta(0, (worksheet.costpercapita_ai184||0), 0.001); end
  def test_costpercapita_aj184; assert_in_epsilon(1.77382805823068, worksheet.costpercapita_aj184, 0.001); end
  def test_costpercapita_ak184; assert_in_epsilon(3.9789817871688986, worksheet.costpercapita_ak184, 0.001); end
  def test_costpercapita_al184; assert_in_epsilon(3.656418382506083, worksheet.costpercapita_al184, 0.001); end
  def test_costpercapita_am184; assert_in_epsilon(3.4421365745829813, worksheet.costpercapita_am184, 0.001); end
  def test_costpercapita_an184; assert_in_epsilon(3.364439333871973, worksheet.costpercapita_an184, 0.001); end
  def test_costpercapita_ao184; assert_in_epsilon(3.482510757986531, worksheet.costpercapita_ao184, 0.001); end
  def test_costpercapita_ap184; assert_in_epsilon(3.7740421683644927, worksheet.costpercapita_ap184, 0.001); end
  def test_costpercapita_aq184; assert_in_epsilon(4.371747014114296, worksheet.costpercapita_aq184, 0.001); end
  def test_costpercapita_as184; assert_in_epsilon(3.0937893418695483, worksheet.costpercapita_as184, 0.001); end
  def test_costpercapita_ay184; assert_in_delta(0, (worksheet.costpercapita_ay184||0), 0.001); end
  def test_costpercapita_az184; assert_in_delta(0.9406707420018201, worksheet.costpercapita_az184, 0.001); end
  def test_costpercapita_ba184; assert_in_epsilon(2.0999675164629616, worksheet.costpercapita_ba184, 0.001); end
  def test_costpercapita_bb184; assert_in_epsilon(1.919144604947533, worksheet.costpercapita_bb184, 0.001); end
  def test_costpercapita_bc184; assert_in_epsilon(1.7952146182497613, worksheet.costpercapita_bc184, 0.001); end
  def test_costpercapita_bd184; assert_in_epsilon(1.7416743801559067, worksheet.costpercapita_bd184, 0.001); end
  def test_costpercapita_be184; assert_in_epsilon(1.7869433813630782, worksheet.costpercapita_be184, 0.001); end
  def test_costpercapita_bf184; assert_in_epsilon(1.9160274527431147, worksheet.costpercapita_bf184, 0.001); end
  def test_costpercapita_bg184; assert_in_epsilon(2.1906283217933065, worksheet.costpercapita_bg184, 0.001); end
  def test_costpercapita_bi184; assert_in_delta(0, (worksheet.costpercapita_bi184||0), 0.001); end
  def test_costpercapita_bj184; assert_in_delta(0.9406707420018201, worksheet.costpercapita_bj184, 0.001); end
  def test_costpercapita_bk184; assert_in_epsilon(3.0098424381918316, worksheet.costpercapita_bk184, 0.001); end
  def test_costpercapita_bl184; assert_in_epsilon(4.835791862797581, worksheet.costpercapita_bl184, 0.001); end
  def test_costpercapita_bm184; assert_in_epsilon(5.6412781089657855, worksheet.costpercapita_bm184, 0.001); end
  def test_costpercapita_bn184; assert_in_epsilon(5.317343019248166, worksheet.costpercapita_bn184, 0.001); end
  def test_costpercapita_bo184; assert_in_epsilon(5.207017629547227, worksheet.costpercapita_bo184, 0.001); end
  def test_costpercapita_bp184; assert_in_epsilon(5.337853928113002, worksheet.costpercapita_bp184, 0.001); end
  def test_costpercapita_bq184; assert_in_epsilon(5.789514694162377, worksheet.costpercapita_bq184, 0.001); end
  def test_costpercapita_bs184; assert_in_delta(0, (worksheet.costpercapita_bs184||0), 0.001); end
  def test_costpercapita_bt184; assert_in_epsilon(1.0009891551775423, worksheet.costpercapita_bt184, 0.001); end
  def test_costpercapita_bu184; assert_in_epsilon(3.1635595146672744, worksheet.costpercapita_bu184, 0.001); end
  def test_costpercapita_bv184; assert_in_epsilon(4.996329440257406, worksheet.costpercapita_bv184, 0.001); end
  def test_costpercapita_bw184; assert_in_epsilon(5.813282610802033, worksheet.costpercapita_bw184, 0.001); end
  def test_costpercapita_bx184; assert_in_epsilon(5.509178257247783, worksheet.costpercapita_bx184, 0.001); end
  def test_costpercapita_by184; assert_in_epsilon(5.434463057642984, worksheet.costpercapita_by184, 0.001); end
  def test_costpercapita_bz184; assert_in_epsilon(5.621693442274972, worksheet.costpercapita_bz184, 0.001); end
  def test_costpercapita_ca184; assert_in_epsilon(6.170850833866672, worksheet.costpercapita_ca184, 0.001); end
  def test_costpercapita_cc184; assert_in_epsilon(4.190038479104073, worksheet.costpercapita_cc184, 0.001); end
  def test_costpercapita_cf184; assert_in_delta(0, (worksheet.costpercapita_cf184||0), 0.001); end
  def test_costpercapita_cg184; assert_in_delta(-0.7728389030531377, worksheet.costpercapita_cg184, 0.001); end
  def test_costpercapita_ch184; assert_in_delta(-0.815422272501624, worksheet.costpercapita_ch184, 0.001); end
  def test_costpercapita_ci184; assert_in_epsilon(1.339911057751323, worksheet.costpercapita_ci184, 0.001); end
  def test_costpercapita_cj184; assert_in_epsilon(2.3711460362190517, worksheet.costpercapita_cj184, 0.001); end
  def test_costpercapita_ck184; assert_in_epsilon(2.144738923375811, worksheet.costpercapita_ck184, 0.001); end
  def test_costpercapita_cl184; assert_in_epsilon(1.9519522996564531, worksheet.costpercapita_cl184, 0.001); end
  def test_costpercapita_cm184; assert_in_epsilon(1.847651273910479, worksheet.costpercapita_cm184, 0.001); end
  def test_costpercapita_cn184; assert_in_epsilon(1.799103819752377, worksheet.costpercapita_cn184, 0.001); end
  def test_costpercapita_cp184; assert_in_epsilon(1.0962491372345258, worksheet.costpercapita_cp184, 0.001); end
  def test_costpercapita_cd184; assert_in_epsilon(83.10168160171897, worksheet.costpercapita_cd184, 0.001); end
  def test_costpercapita_cq184; assert_in_epsilon(17.052126099834258, worksheet.costpercapita_cq184, 0.001); end
  def test_costpercapita_at184; assert_in_epsilon(66.0495555018847, worksheet.costpercapita_at184, 0.001); end
  def test_costpercapita_cr184; assert_equal("ok", worksheet.costpercapita_cr184); end
  def test_costpercapita_c185; assert_equal("Total", worksheet.costpercapita_c185); end
  def test_costpercapita_e57; assert_in_delta(0, (worksheet.costpercapita_e57||0), 0.001); end
  def test_costpercapita_e58; assert_in_delta(0, (worksheet.costpercapita_e58||0), 0.001); end
  def test_costpercapita_e59; assert_in_delta(0, (worksheet.costpercapita_e59||0), 0.001); end
  def test_costpercapita_e60; assert_in_epsilon(15.422487276184361, worksheet.costpercapita_e60, 0.001); end
  def test_costpercapita_e61; assert_in_epsilon(11.705323134712977, worksheet.costpercapita_e61, 0.001); end
  def test_costpercapita_e62; assert_in_epsilon(1.7041115727715976, worksheet.costpercapita_e62, 0.001); end
  def test_costpercapita_e63; assert_in_delta(0.03695638113144954, worksheet.costpercapita_e63, 0.001); end
  def test_costpercapita_e64; assert_in_delta(0, (worksheet.costpercapita_e64||0), 0.001); end
  def test_costpercapita_e65; assert_in_epsilon(248.76632738739946, worksheet.costpercapita_e65, 0.001); end
  def test_costpercapita_e66; assert_in_epsilon(17.000805008944546, worksheet.costpercapita_e66, 0.001); end
  def test_costpercapita_e67; assert_in_delta(0.46835313991076033, worksheet.costpercapita_e67, 0.001); end
  def test_costpercapita_e68; assert_in_epsilon(25.615161834127075, worksheet.costpercapita_e68, 0.001); end
  def test_costpercapita_e72; assert_in_epsilon(2.9882725037154225, worksheet.costpercapita_e72, 0.001); end
  def test_costpercapita_e73; assert_in_epsilon(40.270645622606374, worksheet.costpercapita_e73, 0.001); end
  def test_costpercapita_e75; assert_in_delta(0, (worksheet.costpercapita_e75||0), 0.001); end
  def test_costpercapita_e76; assert_in_delta(0, (worksheet.costpercapita_e76||0), 0.001); end
  def test_costpercapita_e77; assert_in_epsilon(28.040721086358005, worksheet.costpercapita_e77, 0.001); end
  def test_costpercapita_e78; assert_in_delta(0, (worksheet.costpercapita_e78||0), 0.001); end
  def test_costpercapita_e79; assert_in_delta(0, (worksheet.costpercapita_e79||0), 0.001); end
  def test_costpercapita_e81; assert_in_epsilon(268.96697534440426, worksheet.costpercapita_e81, 0.001); end
  def test_costpercapita_e82; assert_in_epsilon(30.96976410467596, worksheet.costpercapita_e82, 0.001); end
  def test_costpercapita_e83; assert_in_epsilon(42.22004424095545, worksheet.costpercapita_e83, 0.001); end
  def test_costpercapita_e84; assert_in_epsilon(2.795201283779172, worksheet.costpercapita_e84, 0.001); end
  def test_costpercapita_e85; assert_in_epsilon(1.150745557749863, worksheet.costpercapita_e85, 0.001); end
  def test_costpercapita_e86; assert_in_epsilon(703.4307199866855, worksheet.costpercapita_e86, 0.001); end
  def test_costpercapita_e87; assert_in_epsilon(1.5450269718139802, worksheet.costpercapita_e87, 0.001); end
  def test_costpercapita_e88; assert_in_delta(0, (worksheet.costpercapita_e88||0), 0.001); end
  def test_costpercapita_e89; assert_in_delta(0, (worksheet.costpercapita_e89||0), 0.001); end
  def test_costpercapita_e91; assert_in_epsilon(3.4274073981673974, worksheet.costpercapita_e91, 0.001); end
  def test_costpercapita_e92; assert_in_epsilon(3.099705001825792, worksheet.costpercapita_e92, 0.001); end
  def test_costpercapita_e93; assert_in_epsilon(52.430382726922915, worksheet.costpercapita_e93, 0.001); end
  def test_costpercapita_e96; assert_in_delta(0, (worksheet.costpercapita_e96||0), 0.001); end
  def test_costpercapita_e97; assert_in_epsilon(6.284519529652543, worksheet.costpercapita_e97, 0.001); end
  def test_costpercapita_e101; assert_in_epsilon(19.65721222647776, worksheet.costpercapita_e101, 0.001); end
  def test_costpercapita_e105; assert_in_delta(0.613610261573703, worksheet.costpercapita_e105, 0.001); end
  def test_costpercapita_e106; assert_in_delta(0, (worksheet.costpercapita_e106||0), 0.001); end
  def test_costpercapita_e185; assert_in_epsilon(1686.8669095805371, worksheet.costpercapita_e185, 0.001); end
  def test_costpercapita_f57; assert_in_epsilon(3.110644027295858, worksheet.costpercapita_f57, 0.001); end
  def test_costpercapita_f58; assert_in_epsilon(4.681101831095091, worksheet.costpercapita_f58, 0.001); end
  def test_costpercapita_f59; assert_in_delta(0, (worksheet.costpercapita_f59||0), 0.001); end
  def test_costpercapita_f60; assert_in_epsilon(13.160785419116324, worksheet.costpercapita_f60, 0.001); end
  def test_costpercapita_f61; assert_in_epsilon(41.049722797542955, worksheet.costpercapita_f61, 0.001); end
  def test_costpercapita_f62; assert_in_delta(0.3220687379116509, worksheet.costpercapita_f62, 0.001); end
  def test_costpercapita_f63; assert_in_delta(0.5761203645724713, worksheet.costpercapita_f63, 0.001); end
  def test_costpercapita_f64; assert_in_delta(0.2103163222779703, worksheet.costpercapita_f64, 0.001); end
  def test_costpercapita_f65; assert_in_epsilon(228.80612548099043, worksheet.costpercapita_f65, 0.001); end
  def test_costpercapita_f66; assert_in_epsilon(45.335480023852114, worksheet.costpercapita_f66, 0.001); end
  def test_costpercapita_f67; assert_in_epsilon(5.176379282507545, worksheet.costpercapita_f67, 0.001); end
  def test_costpercapita_f68; assert_in_epsilon(28.91665077283845, worksheet.costpercapita_f68, 0.001); end
  def test_costpercapita_f72; assert_in_epsilon(4.111026883836211, worksheet.costpercapita_f72, 0.001); end
  def test_costpercapita_f73; assert_in_epsilon(41.44341118951036, worksheet.costpercapita_f73, 0.001); end
  def test_costpercapita_f75; assert_in_delta(0, (worksheet.costpercapita_f75||0), 0.001); end
  def test_costpercapita_f76; assert_in_delta(0, (worksheet.costpercapita_f76||0), 0.001); end
  def test_costpercapita_f77; assert_in_epsilon(36.002334002576944, worksheet.costpercapita_f77, 0.001); end
  def test_costpercapita_f78; assert_in_epsilon(2.068719341038524, worksheet.costpercapita_f78, 0.001); end
  def test_costpercapita_f79; assert_in_delta(0, (worksheet.costpercapita_f79||0), 0.001); end
  def test_costpercapita_f80; assert_in_epsilon(91.34183025402743, worksheet.costpercapita_f80, 0.001); end
  def test_costpercapita_f81; assert_in_epsilon(262.1581516193927, worksheet.costpercapita_f81, 0.001); end
  def test_costpercapita_f82; assert_in_epsilon(43.63723774971507, worksheet.costpercapita_f82, 0.001); end
  def test_costpercapita_f83; assert_in_epsilon(42.9254480548538, worksheet.costpercapita_f83, 0.001); end
  def test_costpercapita_f84; assert_in_epsilon(7.758998979136503, worksheet.costpercapita_f84, 0.001); end
  def test_costpercapita_f85; assert_in_epsilon(1.13087397234656, worksheet.costpercapita_f85, 0.001); end
  def test_costpercapita_f86; assert_in_epsilon(607.6227531992305, worksheet.costpercapita_f86, 0.001); end
  def test_costpercapita_f87; assert_in_epsilon(37.350732376632514, worksheet.costpercapita_f87, 0.001); end
  def test_costpercapita_f88; assert_in_epsilon(37.4015408047082, worksheet.costpercapita_f88, 0.001); end
  def test_costpercapita_f89; assert_in_delta(0, (worksheet.costpercapita_f89||0), 0.001); end
  def test_costpercapita_f90; assert_in_epsilon(18.22414325286311, worksheet.costpercapita_f90, 0.001); end
  def test_costpercapita_f91; assert_in_epsilon(2.582457103715479, worksheet.costpercapita_f91, 0.001); end
  def test_costpercapita_f92; assert_in_epsilon(2.6713122431756036, worksheet.costpercapita_f92, 0.001); end
  def test_costpercapita_f93; assert_in_epsilon(75.54913725920223, worksheet.costpercapita_f93, 0.001); end
  def test_costpercapita_f96; assert_in_delta(0, (worksheet.costpercapita_f96||0), 0.001); end
  def test_costpercapita_f97; assert_in_epsilon(5.72439573772609, worksheet.costpercapita_f97, 0.001); end
  def test_costpercapita_f101; assert_in_epsilon(10.203854734275321, worksheet.costpercapita_f101, 0.001); end
  def test_costpercapita_f105; assert_in_delta(0.3466162587660624, worksheet.costpercapita_f105, 0.001); end
  def test_costpercapita_f106; assert_in_epsilon(1.7135096450549578, worksheet.costpercapita_f106, 0.001); end
  def test_costpercapita_f185; assert_in_epsilon(1703.313879721785, worksheet.costpercapita_f185, 0.001); end
  def test_costpercapita_g57; assert_in_delta(0, (worksheet.costpercapita_g57||0), 0.001); end
  def test_costpercapita_g58; assert_in_epsilon(2.6927279142049256, worksheet.costpercapita_g58, 0.001); end
  def test_costpercapita_g59; assert_in_delta(0, (worksheet.costpercapita_g59||0), 0.001); end
  def test_costpercapita_g60; assert_in_epsilon(12.523783842750143, worksheet.costpercapita_g60, 0.001); end
  def test_costpercapita_g61; assert_in_epsilon(116.28207279735642, worksheet.costpercapita_g61, 0.001); end
  def test_costpercapita_g62; assert_in_delta(0.3115248031155542, worksheet.costpercapita_g62, 0.001); end
  def test_costpercapita_g63; assert_in_epsilon(4.426448466405748, worksheet.costpercapita_g63, 0.001); end
  def test_costpercapita_g64; assert_in_epsilon(1.3823363703554017, worksheet.costpercapita_g64, 0.001); end
  def test_costpercapita_g65; assert_in_epsilon(209.94322728905874, worksheet.costpercapita_g65, 0.001); end
  def test_costpercapita_g66; assert_in_epsilon(73.6701550387597, worksheet.costpercapita_g66, 0.001); end
  def test_costpercapita_g67; assert_in_epsilon(2.9737900788715246, worksheet.costpercapita_g67, 0.001); end
  def test_costpercapita_g68; assert_in_epsilon(22.171563966089522, worksheet.costpercapita_g68, 0.001); end
  def test_costpercapita_g72; assert_in_epsilon(5.221293887092475, worksheet.costpercapita_g72, 0.001); end
  def test_costpercapita_g73; assert_in_epsilon(43.95820195862534, worksheet.costpercapita_g73, 0.001); end
  def test_costpercapita_g75; assert_in_delta(0, (worksheet.costpercapita_g75||0), 0.001); end
  def test_costpercapita_g76; assert_in_delta(0, (worksheet.costpercapita_g76||0), 0.001); end
  def test_costpercapita_g77; assert_in_epsilon(51.95130837525516, worksheet.costpercapita_g77, 0.001); end
  def test_costpercapita_g78; assert_in_epsilon(15.335925511251917, worksheet.costpercapita_g78, 0.001); end
  def test_costpercapita_g79; assert_in_delta(0, (worksheet.costpercapita_g79||0), 0.001); end
  def test_costpercapita_g80; assert_in_epsilon(266.4966022214877, worksheet.costpercapita_g80, 0.001); end
  def test_costpercapita_g81; assert_in_epsilon(255.80527372731996, worksheet.costpercapita_g81, 0.001); end
  def test_costpercapita_g82; assert_in_epsilon(46.1527803765645, worksheet.costpercapita_g82, 0.001); end
  def test_costpercapita_g83; assert_in_epsilon(42.90609580713892, worksheet.costpercapita_g83, 0.001); end
  def test_costpercapita_g84; assert_in_epsilon(6.988722086489293, worksheet.costpercapita_g84, 0.001); end
  def test_costpercapita_g85; assert_in_epsilon(1.4897988382359395, worksheet.costpercapita_g85, 0.001); end
  def test_costpercapita_g86; assert_in_epsilon(534.1013318782016, worksheet.costpercapita_g86, 0.001); end
  def test_costpercapita_g87; assert_in_epsilon(49.011650700907026, worksheet.costpercapita_g87, 0.001); end
  def test_costpercapita_g88; assert_in_epsilon(45.96865861362921, worksheet.costpercapita_g88, 0.001); end
  def test_costpercapita_g89; assert_in_delta(0, (worksheet.costpercapita_g89||0), 0.001); end
  def test_costpercapita_g90; assert_in_epsilon(22.50620489132372, worksheet.costpercapita_g90, 0.001); end
  def test_costpercapita_g91; assert_in_epsilon(3.194055476716057, worksheet.costpercapita_g91, 0.001); end
  def test_costpercapita_g92; assert_in_epsilon(2.186541847962547, worksheet.costpercapita_g92, 0.001); end
  def test_costpercapita_g93; assert_in_epsilon(64.98511521499269, worksheet.costpercapita_g93, 0.001); end
  def test_costpercapita_g96; assert_in_delta(0, (worksheet.costpercapita_g96||0), 0.001); end
  def test_costpercapita_g97; assert_in_epsilon(5.246927453872044, worksheet.costpercapita_g97, 0.001); end
  def test_costpercapita_g101; assert_in_epsilon(9.15769895534699, worksheet.costpercapita_g101, 0.001); end
  def test_costpercapita_g105; assert_in_epsilon(1.1664199414437846, worksheet.costpercapita_g105, 0.001); end
  def test_costpercapita_g106; assert_in_epsilon(3.825264710693456, worksheet.costpercapita_g106, 0.001); end
  def test_costpercapita_g185; assert_in_epsilon(1924.033503041518, worksheet.costpercapita_g185, 0.001); end
  def test_costpercapita_h57; assert_in_delta(0, (worksheet.costpercapita_h57||0), 0.001); end
  def test_costpercapita_h58; assert_in_delta(-3.3137721246290163e-16, worksheet.costpercapita_h58, 0.001); end
  def test_costpercapita_h59; assert_in_delta(0, (worksheet.costpercapita_h59||0), 0.001); end
  def test_costpercapita_h60; assert_in_epsilon(11.936245041148924, worksheet.costpercapita_h60, 0.001); end
  def test_costpercapita_h61; assert_in_epsilon(133.63309157102992, worksheet.costpercapita_h61, 0.001); end
  def test_costpercapita_h62; assert_in_delta(0.15093945636986653, worksheet.costpercapita_h62, 0.001); end
  def test_costpercapita_h63; assert_in_epsilon(4.1464360248695336, worksheet.costpercapita_h63, 0.001); end
  def test_costpercapita_h64; assert_in_epsilon(10.393157492867038, worksheet.costpercapita_h64, 0.001); end
  def test_costpercapita_h65; assert_in_epsilon(192.42256973995975, worksheet.costpercapita_h65, 0.001); end
  def test_costpercapita_h66; assert_in_epsilon(102.00483005366729, worksheet.costpercapita_h66, 0.001); end
  def test_costpercapita_h67; assert_in_delta(0, (worksheet.costpercapita_h67||0), 0.001); end
  def test_costpercapita_h68; assert_in_epsilon(19.876059668317644, worksheet.costpercapita_h68, 0.001); end
  def test_costpercapita_h72; assert_in_epsilon(5.133693649713847, worksheet.costpercapita_h72, 0.001); end
  def test_costpercapita_h73; assert_in_epsilon(42.024702831979624, worksheet.costpercapita_h73, 0.001); end
  def test_costpercapita_h75; assert_in_delta(0, (worksheet.costpercapita_h75||0), 0.001); end
  def test_costpercapita_h76; assert_in_delta(0, (worksheet.costpercapita_h76||0), 0.001); end
  def test_costpercapita_h77; assert_in_epsilon(60.91560309931417, worksheet.costpercapita_h77, 0.001); end
  def test_costpercapita_h78; assert_in_epsilon(40.41944574951653, worksheet.costpercapita_h78, 0.001); end
  def test_costpercapita_h79; assert_in_delta(0, (worksheet.costpercapita_h79||0), 0.001); end
  def test_costpercapita_h80; assert_in_epsilon(279.4618480013329, worksheet.costpercapita_h80, 0.001); end
  def test_costpercapita_h81; assert_in_epsilon(222.38242642563793, worksheet.costpercapita_h81, 0.001); end
  def test_costpercapita_h82; assert_in_epsilon(43.42375738848012, worksheet.costpercapita_h82, 0.001); end
  def test_costpercapita_h83; assert_in_epsilon(42.7611349044297, worksheet.costpercapita_h83, 0.001); end
  def test_costpercapita_h84; assert_in_epsilon(6.330380684198525, worksheet.costpercapita_h84, 0.001); end
  def test_costpercapita_h85; assert_in_epsilon(1.734843715605269, worksheet.costpercapita_h85, 0.001); end
  def test_costpercapita_h86; assert_in_epsilon(145.2470222742556, worksheet.costpercapita_h86, 0.001); end
  def test_costpercapita_h87; assert_in_epsilon(513.610289441319, worksheet.costpercapita_h87, 0.001); end
  def test_costpercapita_h88; assert_in_epsilon(152.93031902712238, worksheet.costpercapita_h88, 0.001); end
  def test_costpercapita_h89; assert_in_delta(0, (worksheet.costpercapita_h89||0), 0.001); end
  def test_costpercapita_h90; assert_in_epsilon(24.509663411559618, worksheet.costpercapita_h90, 0.001); end
  def test_costpercapita_h91; assert_in_epsilon(2.8201027319763945, worksheet.costpercapita_h91, 0.001); end
  def test_costpercapita_h92; assert_in_epsilon(1.7293364350924478, worksheet.costpercapita_h92, 0.001); end
  def test_costpercapita_h93; assert_in_epsilon(59.5979959388652, worksheet.costpercapita_h93, 0.001); end
  def test_costpercapita_h96; assert_in_delta(0, (worksheet.costpercapita_h96||0), 0.001); end
  def test_costpercapita_h97; assert_in_epsilon(4.822660046979289, worksheet.costpercapita_h97, 0.001); end
  def test_costpercapita_h101; assert_in_epsilon(7.120226320181602, worksheet.costpercapita_h101, 0.001); end
  def test_costpercapita_h105; assert_in_epsilon(1.0257595094604701, worksheet.costpercapita_h105, 0.001); end
  def test_costpercapita_h106; assert_in_epsilon(3.495880805046258, worksheet.costpercapita_h106, 0.001); end
  def test_costpercapita_h185; assert_in_epsilon(2136.060421440297, worksheet.costpercapita_h185, 0.001); end
  def test_costpercapita_i57; assert_in_delta(0, (worksheet.costpercapita_i57||0), 0.001); end
  def test_costpercapita_i58; assert_in_delta(0, (worksheet.costpercapita_i58||0), 0.001); end
  def test_costpercapita_i59; assert_in_delta(0, (worksheet.costpercapita_i59||0), 0.001); end
  def test_costpercapita_i60; assert_in_delta(0, (worksheet.costpercapita_i60||0), 0.001); end
  def test_costpercapita_i61; assert_in_epsilon(152.00574907425158, worksheet.costpercapita_i61, 0.001); end
  def test_costpercapita_i62; assert_in_delta(0.14681576731355414, worksheet.costpercapita_i62, 0.001); end
  def test_costpercapita_i63; assert_in_epsilon(9.435268753908888, worksheet.costpercapita_i63, 0.001); end
  def test_costpercapita_i64; assert_in_epsilon(29.169500433761403, worksheet.costpercapita_i64, 0.001); end
  def test_costpercapita_i65; assert_in_epsilon(176.44654037315857, worksheet.costpercapita_i65, 0.001); end
  def test_costpercapita_i66; assert_in_epsilon(145.32811233996736, worksheet.costpercapita_i66, 0.001); end
  def test_costpercapita_i67; assert_in_delta(0, (worksheet.costpercapita_i67||0), 0.001); end
  def test_costpercapita_i68; assert_in_epsilon(20.871319765239548, worksheet.costpercapita_i68, 0.001); end
  def test_costpercapita_i72; assert_in_epsilon(5.093975052078148, worksheet.costpercapita_i72, 0.001); end
  def test_costpercapita_i73; assert_in_epsilon(41.63780493123508, worksheet.costpercapita_i73, 0.001); end
  def test_costpercapita_i75; assert_in_delta(0, (worksheet.costpercapita_i75||0), 0.001); end
  def test_costpercapita_i76; assert_in_delta(0, (worksheet.costpercapita_i76||0), 0.001); end
  def test_costpercapita_i77; assert_in_epsilon(62.34979365012581, worksheet.costpercapita_i77, 0.001); end
  def test_costpercapita_i78; assert_in_epsilon(30.36897148585909, worksheet.costpercapita_i78, 0.001); end
  def test_costpercapita_i79; assert_in_delta(0, (worksheet.costpercapita_i79||0), 0.001); end
  def test_costpercapita_i80; assert_in_epsilon(327.48988133261435, worksheet.costpercapita_i80, 0.001); end
  def test_costpercapita_i81; assert_in_epsilon(202.49440618981998, worksheet.costpercapita_i81, 0.001); end
  def test_costpercapita_i82; assert_in_epsilon(41.2094142032471, worksheet.costpercapita_i82, 0.001); end
  def test_costpercapita_i83; assert_in_epsilon(42.46353732230122, worksheet.costpercapita_i83, 0.001); end
  def test_costpercapita_i84; assert_in_epsilon(5.778508305969835, worksheet.costpercapita_i84, 0.001); end
  def test_costpercapita_i85; assert_in_epsilon(2.1689841999813457, worksheet.costpercapita_i85, 0.001); end
  def test_costpercapita_i86; assert_in_epsilon(6.018140326097239, worksheet.costpercapita_i86, 0.001); end
  def test_costpercapita_i87; assert_in_epsilon(603.115114220717, worksheet.costpercapita_i87, 0.001); end
  def test_costpercapita_i88; assert_in_epsilon(176.23060184439555, worksheet.costpercapita_i88, 0.001); end
  def test_costpercapita_i89; assert_in_delta(0, (worksheet.costpercapita_i89||0), 0.001); end
  def test_costpercapita_i90; assert_in_epsilon(26.998327005547853, worksheet.costpercapita_i90, 0.001); end
  def test_costpercapita_i91; assert_in_epsilon(3.044297030848312, worksheet.costpercapita_i91, 0.001); end
  def test_costpercapita_i92; assert_in_epsilon(1.3037231525087876, worksheet.costpercapita_i92, 0.001); end
  def test_costpercapita_i93; assert_in_epsilon(54.94966752119664, worksheet.costpercapita_i93, 0.001); end
  def test_costpercapita_i96; assert_in_delta(0, (worksheet.costpercapita_i96||0), 0.001); end
  def test_costpercapita_i97; assert_in_epsilon(4.491603219260816, worksheet.costpercapita_i97, 0.001); end
  def test_costpercapita_i101; assert_in_epsilon(5.096530819787294, worksheet.costpercapita_i101, 0.001); end
  def test_costpercapita_i105; assert_in_delta(0.8738488310069616, worksheet.costpercapita_i105, 0.001); end
  def test_costpercapita_i106; assert_in_epsilon(3.2701320727467333, worksheet.costpercapita_i106, 0.001); end
  def test_costpercapita_i185; assert_in_epsilon(2179.8505692249464, worksheet.costpercapita_i185, 0.001); end
  def test_costpercapita_j57; assert_in_delta(0, (worksheet.costpercapita_j57||0), 0.001); end
  def test_costpercapita_j58; assert_in_delta(0, (worksheet.costpercapita_j58||0), 0.001); end
  def test_costpercapita_j59; assert_in_delta(0, (worksheet.costpercapita_j59||0), 0.001); end
  def test_costpercapita_j60; assert_in_delta(0, (worksheet.costpercapita_j60||0), 0.001); end
  def test_costpercapita_j61; assert_in_epsilon(145.75458918861506, worksheet.costpercapita_j61, 0.001); end
  def test_costpercapita_j62; assert_in_delta(0.1433574197577232, worksheet.costpercapita_j62, 0.001); end
  def test_costpercapita_j63; assert_in_epsilon(26.217908966065806, worksheet.costpercapita_j63, 0.001); end
  def test_costpercapita_j64; assert_in_delta(0, (worksheet.costpercapita_j64||0), 0.001); end
  def test_costpercapita_j65; assert_in_epsilon(259.043238955203, worksheet.costpercapita_j65, 0.001); end
  def test_costpercapita_j66; assert_in_epsilon(199.0331263248282, worksheet.costpercapita_j66, 0.001); end
  def test_costpercapita_j67; assert_in_delta(0, (worksheet.costpercapita_j67||0), 0.001); end
  def test_costpercapita_j68; assert_in_epsilon(24.487717497754712, worksheet.costpercapita_j68, 0.001); end
  def test_costpercapita_j72; assert_in_epsilon(4.778260353933559, worksheet.costpercapita_j72, 0.001); end
  def test_costpercapita_j73; assert_in_epsilon(41.06358111108282, worksheet.costpercapita_j73, 0.001); end
  def test_costpercapita_j75; assert_in_delta(0, (worksheet.costpercapita_j75||0), 0.001); end
  def test_costpercapita_j76; assert_in_delta(0, (worksheet.costpercapita_j76||0), 0.001); end
  def test_costpercapita_j77; assert_in_epsilon(69.87932623334437, worksheet.costpercapita_j77, 0.001); end
  def test_costpercapita_j78; assert_in_epsilon(35.09886698363427, worksheet.costpercapita_j78, 0.001); end
  def test_costpercapita_j79; assert_in_delta(0, (worksheet.costpercapita_j79||0), 0.001); end
  def test_costpercapita_j80; assert_in_epsilon(374.0250962929718, worksheet.costpercapita_j80, 0.001); end
  def test_costpercapita_j81; assert_in_epsilon(182.13393612963475, worksheet.costpercapita_j81, 0.001); end
  def test_costpercapita_j82; assert_in_epsilon(39.586510488763885, worksheet.costpercapita_j82, 0.001); end
  def test_costpercapita_j83; assert_in_epsilon(42.156045014283, worksheet.costpercapita_j83, 0.001); end
  def test_costpercapita_j84; assert_in_epsilon(5.317111727468851, worksheet.costpercapita_j84, 0.001); end
  def test_costpercapita_j85; assert_in_epsilon(2.925569846217373, worksheet.costpercapita_j85, 0.001); end
  def test_costpercapita_j86; assert_in_epsilon(146.1164793484672, worksheet.costpercapita_j86, 0.001); end
  def test_costpercapita_j87; assert_in_epsilon(190.08240380821263, worksheet.costpercapita_j87, 0.001); end
  def test_costpercapita_j88; assert_in_epsilon(280.59345215797157, worksheet.costpercapita_j88, 0.001); end
  def test_costpercapita_j89; assert_in_delta(0, (worksheet.costpercapita_j89||0), 0.001); end
  def test_costpercapita_j90; assert_in_epsilon(29.478480588138368, worksheet.costpercapita_j90, 0.001); end
  def test_costpercapita_j91; assert_in_epsilon(2.8939756815434143, worksheet.costpercapita_j91, 0.001); end
  def test_costpercapita_j92; assert_in_delta(0.9379993806339765, worksheet.costpercapita_j92, 0.001); end
  def test_costpercapita_j93; assert_in_epsilon(50.85045859131675, worksheet.costpercapita_j93, 0.001); end
  def test_costpercapita_j96; assert_in_delta(0, (worksheet.costpercapita_j96||0), 0.001); end
  def test_costpercapita_j97; assert_in_epsilon(4.235217701747224, worksheet.costpercapita_j97, 0.001); end
  def test_costpercapita_j101; assert_in_epsilon(3.360855188104504, worksheet.costpercapita_j101, 0.001); end
  def test_costpercapita_j105; assert_in_delta(0.7122535381170139, worksheet.costpercapita_j105, 0.001); end
  def test_costpercapita_j106; assert_in_epsilon(3.1726040958723547, worksheet.costpercapita_j106, 0.001); end
  def test_costpercapita_j185; assert_in_epsilon(2164.0784226136843, worksheet.costpercapita_j185, 0.001); end
  def test_costpercapita_k57; assert_in_delta(0, (worksheet.costpercapita_k57||0), 0.001); end
  def test_costpercapita_k58; assert_in_delta(0, (worksheet.costpercapita_k58||0), 0.001); end
  def test_costpercapita_k59; assert_in_delta(0, (worksheet.costpercapita_k59||0), 0.001); end
  def test_costpercapita_k60; assert_in_delta(0, (worksheet.costpercapita_k60||0), 0.001); end
  def test_costpercapita_k61; assert_in_epsilon(140.03256518864893, worksheet.costpercapita_k61, 0.001); end
  def test_costpercapita_k62; assert_in_delta(0.140300124050801, worksheet.costpercapita_k62, 0.001); end
  def test_costpercapita_k63; assert_in_epsilon(51.88637608624004, worksheet.costpercapita_k63, 0.001); end
  def test_costpercapita_k64; assert_in_delta(0.15642042876567666, worksheet.costpercapita_k64, 0.001); end
  def test_costpercapita_k65; assert_in_epsilon(385.2508314630653, worksheet.costpercapita_k65, 0.001); end
  def test_costpercapita_k66; assert_in_epsilon(253.36589497072285, worksheet.costpercapita_k66, 0.001); end
  def test_costpercapita_k67; assert_in_delta(0, (worksheet.costpercapita_k67||0), 0.001); end
  def test_costpercapita_k68; assert_in_epsilon(34.02503418249854, worksheet.costpercapita_k68, 0.001); end
  def test_costpercapita_k72; assert_in_epsilon(4.489646499942089, worksheet.costpercapita_k72, 0.001); end
  def test_costpercapita_k73; assert_in_epsilon(39.46778904918379, worksheet.costpercapita_k73, 0.001); end
  def test_costpercapita_k75; assert_in_delta(0, (worksheet.costpercapita_k75||0), 0.001); end
  def test_costpercapita_k76; assert_in_delta(0, (worksheet.costpercapita_k76||0), 0.001); end
  def test_costpercapita_k77; assert_in_epsilon(74.32666055676776, worksheet.costpercapita_k77, 0.001); end
  def test_costpercapita_k78; assert_in_delta(0, (worksheet.costpercapita_k78||0), 0.001); end
  def test_costpercapita_k79; assert_in_delta(0, (worksheet.costpercapita_k79||0), 0.001); end
  def test_costpercapita_k80; assert_in_epsilon(420.26203947781073, worksheet.costpercapita_k80, 0.001); end
  def test_costpercapita_k81; assert_in_epsilon(169.8390166380843, worksheet.costpercapita_k81, 0.001); end
  def test_costpercapita_k82; assert_in_epsilon(38.66484518969989, worksheet.costpercapita_k82, 0.001); end
  def test_costpercapita_k83; assert_in_epsilon(41.97394823651182, worksheet.costpercapita_k83, 0.001); end
  def test_costpercapita_k84; assert_in_epsilon(4.924763909689996, worksheet.costpercapita_k84, 0.001); end
  def test_costpercapita_k85; assert_in_epsilon(4.162432870079676, worksheet.costpercapita_k85, 0.001); end
  def test_costpercapita_k86; assert_in_epsilon(118.76509455965599, worksheet.costpercapita_k86, 0.001); end
  def test_costpercapita_k87; assert_in_epsilon(127.7173621251997, worksheet.costpercapita_k87, 0.001); end
  def test_costpercapita_k88; assert_in_epsilon(300.507739652067, worksheet.costpercapita_k88, 0.001); end
  def test_costpercapita_k89; assert_in_delta(0, (worksheet.costpercapita_k89||0), 0.001); end
  def test_costpercapita_k90; assert_in_epsilon(31.968470808247055, worksheet.costpercapita_k90, 0.001); end
  def test_costpercapita_k91; assert_in_epsilon(2.8521698794006953, worksheet.costpercapita_k91, 0.001); end
  def test_costpercapita_k92; assert_in_delta(0.6436123878685246, worksheet.costpercapita_k92, 0.001); end
  def test_costpercapita_k93; assert_in_epsilon(51.72117131409762, worksheet.costpercapita_k93, 0.001); end
  def test_costpercapita_k96; assert_in_delta(0, (worksheet.costpercapita_k96||0), 0.001); end
  def test_costpercapita_k97; assert_in_epsilon(4.030862715120994, worksheet.costpercapita_k97, 0.001); end
  def test_costpercapita_k101; assert_in_epsilon(2.546813430137743, worksheet.costpercapita_k101, 0.001); end
  def test_costpercapita_k105; assert_in_delta(0.5841545272636695, worksheet.costpercapita_k105, 0.001); end
  def test_costpercapita_k106; assert_in_epsilon(3.2550653298907744, worksheet.costpercapita_k106, 0.001); end
  def test_costpercapita_k185; assert_in_epsilon(2307.5610816007124, worksheet.costpercapita_k185, 0.001); end
  def test_costpercapita_l57; assert_in_delta(0, (worksheet.costpercapita_l57||0), 0.001); end
  def test_costpercapita_l58; assert_in_delta(0, (worksheet.costpercapita_l58||0), 0.001); end
  def test_costpercapita_l59; assert_in_delta(0, (worksheet.costpercapita_l59||0), 0.001); end
  def test_costpercapita_l60; assert_in_delta(0, (worksheet.costpercapita_l60||0), 0.001); end
  def test_costpercapita_l61; assert_in_epsilon(134.6777367017745, worksheet.costpercapita_l61, 0.001); end
  def test_costpercapita_l62; assert_in_delta(0.1375014276474501, worksheet.costpercapita_l62, 0.001); end
  def test_costpercapita_l63; assert_in_epsilon(85.41663320911363, worksheet.costpercapita_l63, 0.001); end
  def test_costpercapita_l64; assert_in_epsilon(1.1843511806247577, worksheet.costpercapita_l64, 0.001); end
  def test_costpercapita_l65; assert_in_epsilon(486.592193016908, worksheet.costpercapita_l65, 0.001); end
  def test_costpercapita_l66; assert_in_epsilon(308.26694521389004, worksheet.costpercapita_l66, 0.001); end
  def test_costpercapita_l67; assert_in_delta(0, (worksheet.costpercapita_l67||0), 0.001); end
  def test_costpercapita_l68; assert_in_epsilon(51.03026188142314, worksheet.costpercapita_l68, 0.001); end
  def test_costpercapita_l72; assert_in_epsilon(4.221601942442996, worksheet.costpercapita_l72, 0.001); end
  def test_costpercapita_l73; assert_in_epsilon(38.44214849475807, worksheet.costpercapita_l73, 0.001); end
  def test_costpercapita_l75; assert_in_delta(0, (worksheet.costpercapita_l75||0), 0.001); end
  def test_costpercapita_l76; assert_in_delta(0, (worksheet.costpercapita_l76||0), 0.001); end
  def test_costpercapita_l77; assert_in_epsilon(79.56223618139816, worksheet.costpercapita_l77, 0.001); end
  def test_costpercapita_l78; assert_in_epsilon(27.777101473937698, worksheet.costpercapita_l78, 0.001); end
  def test_costpercapita_l79; assert_in_delta(0, (worksheet.costpercapita_l79||0), 0.001); end
  def test_costpercapita_l80; assert_in_epsilon(476.5631829902898, worksheet.costpercapita_l80, 0.001); end
  def test_costpercapita_l81; assert_in_epsilon(150.28246569205973, worksheet.costpercapita_l81, 0.001); end
  def test_costpercapita_l82; assert_in_epsilon(38.04050317344997, worksheet.costpercapita_l82, 0.001); end
  def test_costpercapita_l83; assert_in_epsilon(41.86135136258974, worksheet.costpercapita_l83, 0.001); end
  def test_costpercapita_l84; assert_in_epsilon(4.587924030368931, worksheet.costpercapita_l84, 0.001); end
  def test_costpercapita_l85; assert_in_epsilon(6.236133369876588, worksheet.costpercapita_l85, 0.001); end
  def test_costpercapita_l86; assert_in_epsilon(43.86397508275589, worksheet.costpercapita_l86, 0.001); end
  def test_costpercapita_l87; assert_in_epsilon(148.13114479140162, worksheet.costpercapita_l87, 0.001); end
  def test_costpercapita_l88; assert_in_epsilon(302.2903754920638, worksheet.costpercapita_l88, 0.001); end
  def test_costpercapita_l89; assert_in_delta(0, (worksheet.costpercapita_l89||0), 0.001); end
  def test_costpercapita_l90; assert_in_epsilon(34.46447615897914, worksheet.costpercapita_l90, 0.001); end
  def test_costpercapita_l91; assert_in_epsilon(2.8011983954135613, worksheet.costpercapita_l91, 0.001); end
  def test_costpercapita_l92; assert_in_delta(0.4026269515324216, worksheet.costpercapita_l92, 0.001); end
  def test_costpercapita_l93; assert_in_epsilon(62.99181959861936, worksheet.costpercapita_l93, 0.001); end
  def test_costpercapita_l96; assert_in_delta(0, (worksheet.costpercapita_l96||0), 0.001); end
  def test_costpercapita_l97; assert_in_epsilon(3.8639788668837762, worksheet.costpercapita_l97, 0.001); end
  def test_costpercapita_l101; assert_in_epsilon(1.6714618719725343, worksheet.costpercapita_l101, 0.001); end
  def test_costpercapita_l105; assert_in_delta(0.5659540964527624, worksheet.costpercapita_l105, 0.001); end
  def test_costpercapita_l106; assert_in_epsilon(3.4902026542025233, worksheet.costpercapita_l106, 0.001); end
  def test_costpercapita_l185; assert_in_epsilon(2539.4174853028308, worksheet.costpercapita_l185, 0.001); end
  def test_costpercapita_m57; assert_in_delta(0, (worksheet.costpercapita_m57||0), 0.001); end
  def test_costpercapita_m58; assert_in_delta(0, (worksheet.costpercapita_m58||0), 0.001); end
  def test_costpercapita_m59; assert_in_delta(0, (worksheet.costpercapita_m59||0), 0.001); end
  def test_costpercapita_m60; assert_in_delta(0, (worksheet.costpercapita_m60||0), 0.001); end
  def test_costpercapita_m61; assert_in_epsilon(128.1425478538513, worksheet.costpercapita_m61, 0.001); end
  def test_costpercapita_m62; assert_in_delta(0.13493541241129678, worksheet.costpercapita_m62, 0.001); end
  def test_costpercapita_m63; assert_in_epsilon(36.72253301057441, worksheet.costpercapita_m63, 0.001); end
  def test_costpercapita_m64; assert_in_epsilon(8.967869727681327, worksheet.costpercapita_m64, 0.001); end
  def test_costpercapita_m65; assert_in_epsilon(564.7999726767584, worksheet.costpercapita_m65, 0.001); end
  def test_costpercapita_m66; assert_in_epsilon(363.4706170178002, worksheet.costpercapita_m66, 0.001); end
  def test_costpercapita_m67; assert_in_delta(0, (worksheet.costpercapita_m67||0), 0.001); end
  def test_costpercapita_m68; assert_in_epsilon(22.776138664343122, worksheet.costpercapita_m68, 0.001); end
  def test_costpercapita_m72; assert_in_epsilon(3.971846071513934, worksheet.costpercapita_m72, 0.001); end
  def test_costpercapita_m73; assert_in_epsilon(37.60657787296212, worksheet.costpercapita_m73, 0.001); end
  def test_costpercapita_m75; assert_in_delta(0, (worksheet.costpercapita_m75||0), 0.001); end
  def test_costpercapita_m76; assert_in_delta(0, (worksheet.costpercapita_m76||0), 0.001); end
  def test_costpercapita_m77; assert_in_epsilon(80.04573213281255, worksheet.costpercapita_m77, 0.001); end
  def test_costpercapita_m78; assert_in_delta(0, (worksheet.costpercapita_m78||0), 0.001); end
  def test_costpercapita_m79; assert_in_delta(0, (worksheet.costpercapita_m79||0), 0.001); end
  def test_costpercapita_m80; assert_in_epsilon(532.9573777355591, worksheet.costpercapita_m80, 0.001); end
  def test_costpercapita_m81; assert_in_epsilon(143.21934094784143, worksheet.costpercapita_m81, 0.001); end
  def test_costpercapita_m82; assert_in_epsilon(37.70265798490535, worksheet.costpercapita_m82, 0.001); end
  def test_costpercapita_m83; assert_in_epsilon(42.10326367828121, worksheet.costpercapita_m83, 0.001); end
  def test_costpercapita_m84; assert_in_epsilon(4.298961689765109, worksheet.costpercapita_m84, 0.001); end
  def test_costpercapita_m85; assert_in_epsilon(9.7086623746929, worksheet.costpercapita_m85, 0.001); end
  def test_costpercapita_m86; assert_in_epsilon(12.677202607540629, worksheet.costpercapita_m86, 0.001); end
  def test_costpercapita_m87; assert_in_epsilon(121.00831954911435, worksheet.costpercapita_m87, 0.001); end
  def test_costpercapita_m88; assert_in_epsilon(293.4448241704546, worksheet.costpercapita_m88, 0.001); end
  def test_costpercapita_m89; assert_in_delta(0, (worksheet.costpercapita_m89||0), 0.001); end
  def test_costpercapita_m90; assert_in_epsilon(36.95895993657762, worksheet.costpercapita_m90, 0.001); end
  def test_costpercapita_m91; assert_in_epsilon(2.745066574603254, worksheet.costpercapita_m91, 0.001); end
  def test_costpercapita_m92; assert_in_delta(0.2028487983034012, worksheet.costpercapita_m92, 0.001); end
  def test_costpercapita_m93; assert_in_epsilon(64.81933392412047, worksheet.costpercapita_m93, 0.001); end
  def test_costpercapita_m96; assert_in_delta(0, (worksheet.costpercapita_m96||0), 0.001); end
  def test_costpercapita_m97; assert_in_epsilon(3.7262051782528984, worksheet.costpercapita_m97, 0.001); end
  def test_costpercapita_m101; assert_in_delta(0.75403235797056, worksheet.costpercapita_m101, 0.001); end
  def test_costpercapita_m105; assert_in_delta(0.5609222172293293, worksheet.costpercapita_m105, 0.001); end
  def test_costpercapita_m106; assert_in_epsilon(3.9904108744099998, worksheet.costpercapita_m106, 0.001); end
  def test_costpercapita_m185; assert_in_epsilon(2557.5171610403304, worksheet.costpercapita_m185, 0.001); end
  def test_costpercapita_o57; assert_in_epsilon(50.97725853549229, worksheet.costpercapita_o57, 0.001); end
  def test_costpercapita_o58; assert_in_delta(0, (worksheet.costpercapita_o58||0), 0.001); end
  def test_costpercapita_o59; assert_in_epsilon(13.53940128645524, worksheet.costpercapita_o59, 0.001); end
  def test_costpercapita_o60; assert_in_delta(0.869767375652915, worksheet.costpercapita_o60, 0.001); end
  def test_costpercapita_o61; assert_in_epsilon(1.583222619409944, worksheet.costpercapita_o61, 0.001); end
  def test_costpercapita_o62; assert_in_epsilon(2.6644089737145475, worksheet.costpercapita_o62, 0.001); end
  def test_costpercapita_o63; assert_in_delta(0.0016129478578417319, worksheet.costpercapita_o63, 0.001); end
  def test_costpercapita_o64; assert_in_delta(0, (worksheet.costpercapita_o64||0), 0.001); end
  def test_costpercapita_o65; assert_in_delta(0, (worksheet.costpercapita_o65||0), 0.001); end
  def test_costpercapita_o66; assert_in_delta(0, (worksheet.costpercapita_o66||0), 0.001); end
  def test_costpercapita_o67; assert_in_delta(0.02169636553573799, worksheet.costpercapita_o67, 0.001); end
  def test_costpercapita_o68; assert_in_epsilon(9.184022261085893, worksheet.costpercapita_o68, 0.001); end
  def test_costpercapita_o71; assert_in_delta(6.47241712935573e-08, worksheet.costpercapita_o71, 0.001); end
  def test_costpercapita_o72; assert_in_epsilon(2.9882725037154225, worksheet.costpercapita_o72, 0.001); end
  def test_costpercapita_o73; assert_in_epsilon(76.84680545526342, worksheet.costpercapita_o73, 0.001); end
  def test_costpercapita_o75; assert_in_delta(0, (worksheet.costpercapita_o75||0), 0.001); end
  def test_costpercapita_o76; assert_in_delta(0, (worksheet.costpercapita_o76||0), 0.001); end
  def test_costpercapita_o77; assert_in_epsilon(20.98877203352015, worksheet.costpercapita_o77, 0.001); end
  def test_costpercapita_o78; assert_in_epsilon(1.2737786045972503, worksheet.costpercapita_o78, 0.001); end
  def test_costpercapita_o79; assert_in_delta(0, (worksheet.costpercapita_o79||0), 0.001); end
  def test_costpercapita_o82; assert_in_epsilon(13.139129452569348, worksheet.costpercapita_o82, 0.001); end
  def test_costpercapita_o85; assert_in_epsilon(122.96272729496489, worksheet.costpercapita_o85, 0.001); end
  def test_costpercapita_o86; assert_in_epsilon(862.8255185232231, worksheet.costpercapita_o86, 0.001); end
  def test_costpercapita_o87; assert_in_delta(0.42712410901052306, worksheet.costpercapita_o87, 0.001); end
  def test_costpercapita_o88; assert_in_delta(0, (worksheet.costpercapita_o88||0), 0.001); end
  def test_costpercapita_o89; assert_in_delta(0, (worksheet.costpercapita_o89||0), 0.001); end
  def test_costpercapita_o91; assert_in_epsilon(144.33870740720542, worksheet.costpercapita_o91, 0.001); end
  def test_costpercapita_o92; assert_in_epsilon(3.539563798683592, worksheet.costpercapita_o92, 0.001); end
  def test_costpercapita_o93; assert_in_epsilon(94.57550841098407, worksheet.costpercapita_o93, 0.001); end
  def test_costpercapita_o94; assert_in_epsilon(-10.295675329529756, worksheet.costpercapita_o94, 0.001); end
  def test_costpercapita_o95; assert_in_delta(0, (worksheet.costpercapita_o95||0), 0.001); end
  def test_costpercapita_o97; assert_in_epsilon(12.933687054223228, worksheet.costpercapita_o97, 0.001); end
  def test_costpercapita_o101; assert_in_delta(0.05623216890603242, worksheet.costpercapita_o101, 0.001); end
  def test_costpercapita_o105; assert_in_delta(0.10753071024682165, worksheet.costpercapita_o105, 0.001); end
  def test_costpercapita_o106; assert_in_delta(0, (worksheet.costpercapita_o106||0), 0.001); end
  def test_costpercapita_o185; assert_in_epsilon(1517.1763508618621, worksheet.costpercapita_o185, 0.001); end
  def test_costpercapita_p57; assert_in_epsilon(39.093498861408264, worksheet.costpercapita_p57, 0.001); end
  def test_costpercapita_p58; assert_in_delta(0.9209458388949089, worksheet.costpercapita_p58, 0.001); end
  def test_costpercapita_p59; assert_in_epsilon(9.964227768093629, worksheet.costpercapita_p59, 0.001); end
  def test_costpercapita_p60; assert_in_epsilon(1.430623496307678, worksheet.costpercapita_p60, 0.001); end
  def test_costpercapita_p61; assert_in_epsilon(8.184633800411873, worksheet.costpercapita_p61, 0.001); end
  def test_costpercapita_p62; assert_in_epsilon(2.737584272249032, worksheet.costpercapita_p62, 0.001); end
  def test_costpercapita_p63; assert_in_delta(0.09033799384273357, worksheet.costpercapita_p63, 0.001); end
  def test_costpercapita_p64; assert_in_delta(0.029406710999519515, worksheet.costpercapita_p64, 0.001); end
  def test_costpercapita_p65; assert_in_delta(0, (worksheet.costpercapita_p65||0), 0.001); end
  def test_costpercapita_p66; assert_in_delta(0, (worksheet.costpercapita_p66||0), 0.001); end
  def test_costpercapita_p67; assert_in_delta(0.43600987632816257, worksheet.costpercapita_p67, 0.001); end
  def test_costpercapita_p68; assert_in_epsilon(18.411836111010327, worksheet.costpercapita_p68, 0.001); end
  def test_costpercapita_p71; assert_in_delta(1.6438361999678852e-07, worksheet.costpercapita_p71, 0.001); end
  def test_costpercapita_p72; assert_in_epsilon(3.947905646993531, worksheet.costpercapita_p72, 0.001); end
  def test_costpercapita_p73; assert_in_epsilon(76.66151058089099, worksheet.costpercapita_p73, 0.001); end
  def test_costpercapita_p75; assert_in_delta(0, (worksheet.costpercapita_p75||0), 0.001); end
  def test_costpercapita_p76; assert_in_delta(0, (worksheet.costpercapita_p76||0), 0.001); end
  def test_costpercapita_p77; assert_in_epsilon(24.20849571473956, worksheet.costpercapita_p77, 0.001); end
  def test_costpercapita_p78; assert_in_epsilon(1.2394237929607532, worksheet.costpercapita_p78, 0.001); end
  def test_costpercapita_p79; assert_in_delta(0, (worksheet.costpercapita_p79||0), 0.001); end
  def test_costpercapita_p82; assert_in_epsilon(12.446960947084596, worksheet.costpercapita_p82, 0.001); end
  def test_costpercapita_p85; assert_in_epsilon(123.54372120702422, worksheet.costpercapita_p85, 0.001); end
  def test_costpercapita_p86; assert_in_epsilon(782.2421233219562, worksheet.costpercapita_p86, 0.001); end
  def test_costpercapita_p87; assert_in_epsilon(17.840684706678957, worksheet.costpercapita_p87, 0.001); end
  def test_costpercapita_p88; assert_in_epsilon(10.772592571254007, worksheet.costpercapita_p88, 0.001); end
  def test_costpercapita_p89; assert_in_delta(0, (worksheet.costpercapita_p89||0), 0.001); end
  def test_costpercapita_p90; assert_in_epsilon(14.250000000000002, worksheet.costpercapita_p90, 0.001); end
  def test_costpercapita_p91; assert_in_epsilon(154.32346011427697, worksheet.costpercapita_p91, 0.001); end
  def test_costpercapita_p92; assert_in_epsilon(3.2202190496193683, worksheet.costpercapita_p92, 0.001); end
  def test_costpercapita_p93; assert_in_epsilon(106.63888852145733, worksheet.costpercapita_p93, 0.001); end
  def test_costpercapita_p94; assert_in_epsilon(16.995264105403493, worksheet.costpercapita_p94, 0.001); end
  def test_costpercapita_p95; assert_in_epsilon(2.2628595687100987, worksheet.costpercapita_p95, 0.001); end
  def test_costpercapita_p97; assert_in_epsilon(11.851992561010105, worksheet.costpercapita_p97, 0.001); end
  def test_costpercapita_p101; assert_in_delta(0.04639501041870681, worksheet.costpercapita_p101, 0.001); end
  def test_costpercapita_p105; assert_in_delta(0.10018176088953547, worksheet.costpercapita_p105, 0.001); end
  def test_costpercapita_p106; assert_in_delta(0.06031841317572214, worksheet.costpercapita_p106, 0.001); end
  def test_costpercapita_p185; assert_in_epsilon(1522.9354855045847, worksheet.costpercapita_p185, 0.001); end
  def test_costpercapita_q57; assert_in_epsilon(28.713072239532565, worksheet.costpercapita_q57, 0.001); end
  def test_costpercapita_q58; assert_in_epsilon(1.6881657416213902, worksheet.costpercapita_q58, 0.001); end
  def test_costpercapita_q59; assert_in_epsilon(5.505946521757337, worksheet.costpercapita_q59, 0.001); end
  def test_costpercapita_q60; assert_in_epsilon(1.9540239460051594, worksheet.costpercapita_q60, 0.001); end
  def test_costpercapita_q61; assert_in_epsilon(27.09181447146876, worksheet.costpercapita_q61, 0.001); end
  def test_costpercapita_q62; assert_in_epsilon(2.803723228039987, worksheet.costpercapita_q62, 0.001); end
  def test_costpercapita_q63; assert_in_delta(0.5223292642220552, worksheet.costpercapita_q63, 0.001); end
  def test_costpercapita_q64; assert_in_delta(0.2275519173652755, worksheet.costpercapita_q64, 0.001); end
  def test_costpercapita_q65; assert_in_delta(0, (worksheet.costpercapita_q65||0), 0.001); end
  def test_costpercapita_q66; assert_in_delta(0, (worksheet.costpercapita_q66||0), 0.001); end
  def test_costpercapita_q67; assert_in_delta(0.6697036386268942, worksheet.costpercapita_q67, 0.001); end
  def test_costpercapita_q68; assert_in_epsilon(30.26836839830514, worksheet.costpercapita_q68, 0.001); end
  def test_costpercapita_q71; assert_in_delta(2.544736916499579e-07, worksheet.costpercapita_q71, 0.001); end
  def test_costpercapita_q72; assert_in_epsilon(4.879678924146428, worksheet.costpercapita_q72, 0.001); end
  def test_costpercapita_q73; assert_in_epsilon(76.24024075838292, worksheet.costpercapita_q73, 0.001); end
  def test_costpercapita_q75; assert_in_delta(0, (worksheet.costpercapita_q75||0), 0.001); end
  def test_costpercapita_q76; assert_in_delta(0, (worksheet.costpercapita_q76||0), 0.001); end
  def test_costpercapita_q77; assert_in_epsilon(30.528743611746894, worksheet.costpercapita_q77, 0.001); end
  def test_costpercapita_q78; assert_in_epsilon(2.7440423421241116, worksheet.costpercapita_q78, 0.001); end
  def test_costpercapita_q79; assert_in_delta(0, (worksheet.costpercapita_q79||0), 0.001); end
  def test_costpercapita_q80; assert_in_epsilon(92.91854657975101, worksheet.costpercapita_q80, 0.001); end
  def test_costpercapita_q82; assert_in_epsilon(10.27353385327438, worksheet.costpercapita_q82, 0.001); end
  def test_costpercapita_q85; assert_in_epsilon(124.24307761275055, worksheet.costpercapita_q85, 0.001); end
  def test_costpercapita_q86; assert_in_epsilon(704.1016855662439, worksheet.costpercapita_q86, 0.001); end
  def test_costpercapita_q87; assert_in_epsilon(34.45963126941205, worksheet.costpercapita_q87, 0.001); end
  def test_costpercapita_q88; assert_in_epsilon(18.961408837482434, worksheet.costpercapita_q88, 0.001); end
  def test_costpercapita_q89; assert_in_delta(0, (worksheet.costpercapita_q89||0), 0.001); end
  def test_costpercapita_q90; assert_in_epsilon(17.44186046511628, worksheet.costpercapita_q90, 0.001); end
  def test_costpercapita_q91; assert_in_epsilon(162.2756828590673, worksheet.costpercapita_q91, 0.001); end
  def test_costpercapita_q92; assert_in_epsilon(2.9123593497468963, worksheet.costpercapita_q92, 0.001); end
  def test_costpercapita_q93; assert_in_epsilon(99.59590887655318, worksheet.costpercapita_q93, 0.001); end
  def test_costpercapita_q94; assert_in_epsilon(51.260272035079076, worksheet.costpercapita_q94, 0.001); end
  def test_costpercapita_q95; assert_in_epsilon(7.4058418875517225, worksheet.costpercapita_q95, 0.001); end
  def test_costpercapita_q97; assert_in_epsilon(10.873688106284312, worksheet.costpercapita_q97, 0.001); end
  def test_costpercapita_q101; assert_in_delta(0.033325296564052975, worksheet.costpercapita_q101, 0.001); end
  def test_costpercapita_q105; assert_in_delta(0.13907265984674488, worksheet.costpercapita_q105, 0.001); end
  def test_costpercapita_q106; assert_in_delta(0.15371707647544275, worksheet.costpercapita_q106, 0.001); end
  def test_costpercapita_q185; assert_in_epsilon(1550.887017589018, worksheet.costpercapita_q185, 0.001); end
  def test_costpercapita_r57; assert_in_epsilon(17.50677179089921, worksheet.costpercapita_r57, 0.001); end
  def test_costpercapita_r58; assert_in_epsilon(1.6385468513915973, worksheet.costpercapita_r58, 0.001); end
  def test_costpercapita_r59; assert_in_epsilon(1.7784877618820878, worksheet.costpercapita_r59, 0.001); end
  def test_costpercapita_r60; assert_in_epsilon(2.21301223544355, worksheet.costpercapita_r60, 0.001); end
  def test_costpercapita_r61; assert_in_epsilon(48.518602990181975, worksheet.costpercapita_r61, 0.001); end
  def test_costpercapita_r62; assert_in_epsilon(2.7923799428425298, worksheet.costpercapita_r62, 0.001); end
  def test_costpercapita_r63; assert_in_epsilon(1.1785295557566937, worksheet.costpercapita_r63, 0.001); end
  def test_costpercapita_r64; assert_in_epsilon(1.7640489545377362, worksheet.costpercapita_r64, 0.001); end
  def test_costpercapita_r65; assert_in_delta(0, (worksheet.costpercapita_r65||0), 0.001); end
  def test_costpercapita_r66; assert_in_delta(0, (worksheet.costpercapita_r66||0), 0.001); end
  def test_costpercapita_r67; assert_in_delta(0.6489672869210963, worksheet.costpercapita_r67, 0.001); end
  def test_costpercapita_r68; assert_in_epsilon(40.754166016664286, worksheet.costpercapita_r68, 0.001); end
  def test_costpercapita_r71; assert_in_delta(3.362795079436402e-07, worksheet.costpercapita_r71, 0.001); end
  def test_costpercapita_r72; assert_in_epsilon(4.696305356929584, worksheet.costpercapita_r72, 0.001); end
  def test_costpercapita_r73; assert_in_epsilon(74.26426797083649, worksheet.costpercapita_r73, 0.001); end
  def test_costpercapita_r75; assert_in_delta(0, (worksheet.costpercapita_r75||0), 0.001); end
  def test_costpercapita_r76; assert_in_delta(0, (worksheet.costpercapita_r76||0), 0.001); end
  def test_costpercapita_r77; assert_in_epsilon(37.39182017517393, worksheet.costpercapita_r77, 0.001); end
  def test_costpercapita_r78; assert_in_epsilon(6.486806313717662, worksheet.costpercapita_r78, 0.001); end
  def test_costpercapita_r79; assert_in_delta(0, (worksheet.costpercapita_r79||0), 0.001); end
  def test_costpercapita_r80; assert_in_epsilon(106.8537101433914, worksheet.costpercapita_r80, 0.001); end
  def test_costpercapita_r82; assert_in_epsilon(8.349076793950179, worksheet.costpercapita_r82, 0.001); end
  def test_costpercapita_r85; assert_in_epsilon(125.22994633744345, worksheet.costpercapita_r85, 0.001); end
  def test_costpercapita_r86; assert_in_epsilon(468.8058626965686, worksheet.costpercapita_r86, 0.001); end
  def test_costpercapita_r87; assert_in_epsilon(254.85825107152425, worksheet.costpercapita_r87, 0.001); end
  def test_costpercapita_r88; assert_in_epsilon(52.55513540073479, worksheet.costpercapita_r88, 0.001); end
  def test_costpercapita_r89; assert_in_delta(0, (worksheet.costpercapita_r89||0), 0.001); end
  def test_costpercapita_r90; assert_in_epsilon(19.53488372093023, worksheet.costpercapita_r90, 0.001); end
  def test_costpercapita_r91; assert_in_epsilon(168.29882150737546, worksheet.costpercapita_r91, 0.001); end
  def test_costpercapita_r92; assert_in_epsilon(2.615984699066175, worksheet.costpercapita_r92, 0.001); end
  def test_costpercapita_r93; assert_in_epsilon(93.04744140891354, worksheet.costpercapita_r93, 0.001); end
  def test_costpercapita_r94; assert_in_epsilon(67.40076500279213, worksheet.costpercapita_r94, 0.001); end
  def test_costpercapita_r95; assert_in_epsilon(12.499027516222807, worksheet.costpercapita_r95, 0.001); end
  def test_costpercapita_r97; assert_in_epsilon(10.089318595497176, worksheet.costpercapita_r97, 0.001); end
  def test_costpercapita_r101; assert_in_delta(0.022117273509313994, worksheet.costpercapita_r101, 0.001); end
  def test_costpercapita_r105; assert_in_delta(0.16359338135212148, worksheet.costpercapita_r105, 0.001); end
  def test_costpercapita_r106; assert_in_delta(0.16053757745982492, worksheet.costpercapita_r106, 0.001); end
  def test_costpercapita_r185; assert_in_epsilon(1632.1171866661894, worksheet.costpercapita_r185, 0.001); end
  def test_costpercapita_s57; assert_in_delta(0.9016616941678334, worksheet.costpercapita_s57, 0.001); end
  def test_costpercapita_s58; assert_in_epsilon(1.5965108140565025, worksheet.costpercapita_s58, 0.001); end
  def test_costpercapita_s59; assert_in_epsilon(1.729899203947405, worksheet.costpercapita_s59, 0.001); end
  def test_costpercapita_s60; assert_in_epsilon(1.618978024022293, worksheet.costpercapita_s60, 0.001); end
  def test_costpercapita_s61; assert_in_epsilon(71.92108038119322, worksheet.costpercapita_s61, 0.001); end
  def test_costpercapita_s62; assert_in_epsilon(2.7894995789575474, worksheet.costpercapita_s62, 0.001); end
  def test_costpercapita_s63; assert_in_epsilon(2.3377730402366828, worksheet.costpercapita_s63, 0.001); end
  def test_costpercapita_s64; assert_in_epsilon(6.186976684003236, worksheet.costpercapita_s64, 0.001); end
  def test_costpercapita_s65; assert_in_delta(0, (worksheet.costpercapita_s65||0), 0.001); end
  def test_costpercapita_s66; assert_in_delta(0, (worksheet.costpercapita_s66||0), 0.001); end
  def test_costpercapita_s67; assert_in_delta(0.6312374012878602, worksheet.costpercapita_s67, 0.001); end
  def test_costpercapita_s68; assert_in_epsilon(47.15679828098345, worksheet.costpercapita_s68, 0.001); end
  def test_costpercapita_s71; assert_in_delta(4.1163770927938566e-07, worksheet.costpercapita_s71, 0.001); end
  def test_costpercapita_s72; assert_in_epsilon(4.5607955151981985, worksheet.costpercapita_s72, 0.001); end
  def test_costpercapita_s73; assert_in_epsilon(72.36333936678685, worksheet.costpercapita_s73, 0.001); end
  def test_costpercapita_s75; assert_in_delta(0, (worksheet.costpercapita_s75||0), 0.001); end
  def test_costpercapita_s76; assert_in_delta(0, (worksheet.costpercapita_s76||0), 0.001); end
  def test_costpercapita_s77; assert_in_epsilon(42.839888438715214, worksheet.costpercapita_s77, 0.001); end
  def test_costpercapita_s78; assert_in_epsilon(6.184019979975523, worksheet.costpercapita_s78, 0.001); end
  def test_costpercapita_s79; assert_in_delta(0, (worksheet.costpercapita_s79||0), 0.001); end
  def test_costpercapita_s80; assert_in_epsilon(120.78887370703178, worksheet.costpercapita_s80, 0.001); end
  def test_costpercapita_s82; assert_in_epsilon(6.6472623233786035, worksheet.costpercapita_s82, 0.001); end
  def test_costpercapita_s85; assert_in_epsilon(126.76831653869031, worksheet.costpercapita_s85, 0.001); end
  def test_costpercapita_s86; assert_in_epsilon(263.31317967054434, worksheet.costpercapita_s86, 0.001); end
  def test_costpercapita_s87; assert_in_epsilon(412.1959182385631, worksheet.costpercapita_s87, 0.001); end
  def test_costpercapita_s88; assert_in_epsilon(76.25199522689647, worksheet.costpercapita_s88, 0.001); end
  def test_costpercapita_s89; assert_in_delta(0, (worksheet.costpercapita_s89||0), 0.001); end
  def test_costpercapita_s90; assert_in_epsilon(21.627906976744185, worksheet.costpercapita_s90, 0.001); end
  def test_costpercapita_s91; assert_in_epsilon(172.4963219250005, worksheet.costpercapita_s91, 0.001); end
  def test_costpercapita_s92; assert_in_epsilon(2.331095097577205, worksheet.costpercapita_s92, 0.001); end
  def test_costpercapita_s93; assert_in_epsilon(87.1306006449194, worksheet.costpercapita_s93, 0.001); end
  def test_costpercapita_s94; assert_in_epsilon(73.70808659252967, worksheet.costpercapita_s94, 0.001); end
  def test_costpercapita_s95; assert_in_epsilon(19.001435831344192, worksheet.costpercapita_s95, 0.001); end
  def test_costpercapita_s97; assert_in_epsilon(9.476732724589185, worksheet.costpercapita_s97, 0.001); end
  def test_costpercapita_s101; assert_in_delta(0.013587100678472373, worksheet.costpercapita_s101, 0.001); end
  def test_costpercapita_s105; assert_in_delta(0.17629576249036863, worksheet.costpercapita_s105, 0.001); end
  def test_costpercapita_s106; assert_in_delta(0.1720045018362477, worksheet.costpercapita_s106, 0.001); end
  def test_costpercapita_s185; assert_in_epsilon(1654.9180716779836, worksheet.costpercapita_s185, 0.001); end
  def test_costpercapita_t57; assert_in_delta(0, (worksheet.costpercapita_t57||0), 0.001); end
  def test_costpercapita_t58; assert_in_epsilon(1.559619870932544, worksheet.costpercapita_t58, 0.001); end
  def test_costpercapita_t59; assert_in_delta(0, (worksheet.costpercapita_t59||0), 0.001); end
  def test_costpercapita_t60; assert_in_epsilon(1.056019316261324, worksheet.costpercapita_t60, 0.001); end
  def test_costpercapita_t61; assert_in_epsilon(89.66003103907217, worksheet.costpercapita_t61, 0.001); end
  def test_costpercapita_t62; assert_in_epsilon(2.7954696852755814, worksheet.costpercapita_t62, 0.001); end
  def test_costpercapita_t63; assert_in_epsilon(7.742994817408824, worksheet.costpercapita_t63, 0.001); end
  def test_costpercapita_t64; assert_in_epsilon(6.041238143214075, worksheet.costpercapita_t64, 0.001); end
  def test_costpercapita_t65; assert_in_delta(0, (worksheet.costpercapita_t65||0), 0.001); end
  def test_costpercapita_t66; assert_in_delta(0, (worksheet.costpercapita_t66||0), 0.001); end
  def test_costpercapita_t67; assert_in_delta(0.6163681650754312, worksheet.costpercapita_t67, 0.001); end
  def test_costpercapita_t68; assert_in_epsilon(53.05845793104392, worksheet.costpercapita_t68, 0.001); end
  def test_costpercapita_t71; assert_in_delta(4.819296125191254e-07, worksheet.costpercapita_t71, 0.001); end
  def test_costpercapita_t72; assert_in_epsilon(4.245389783765553, worksheet.costpercapita_t72, 0.001); end
  def test_costpercapita_t73; assert_in_epsilon(69.96677912397514, worksheet.costpercapita_t73, 0.001); end
  def test_costpercapita_t75; assert_in_delta(0, (worksheet.costpercapita_t75||0), 0.001); end
  def test_costpercapita_t76; assert_in_delta(0, (worksheet.costpercapita_t76||0), 0.001); end
  def test_costpercapita_t77; assert_in_epsilon(48.81459217644749, worksheet.costpercapita_t77, 0.001); end
  def test_costpercapita_t78; assert_in_epsilon(4.972708614533573, worksheet.costpercapita_t78, 0.001); end
  def test_costpercapita_t79; assert_in_delta(0, (worksheet.costpercapita_t79||0), 0.001); end
  def test_costpercapita_t80; assert_in_epsilon(134.7240372706722, worksheet.costpercapita_t80, 0.001); end
  def test_costpercapita_t82; assert_in_epsilon(5.125876130379925, worksheet.costpercapita_t82, 0.001); end
  def test_costpercapita_t85; assert_in_epsilon(128.8964714785179, worksheet.costpercapita_t85, 0.001); end
  def test_costpercapita_t86; assert_in_epsilon(224.71938315205293, worksheet.costpercapita_t86, 0.001); end
  def test_costpercapita_t87; assert_in_epsilon(309.08707944739314, worksheet.costpercapita_t87, 0.001); end
  def test_costpercapita_t88; assert_in_epsilon(116.10433845535803, worksheet.costpercapita_t88, 0.001); end
  def test_costpercapita_t89; assert_in_delta(0, (worksheet.costpercapita_t89||0), 0.001); end
  def test_costpercapita_t90; assert_in_epsilon(23.720930232558143, worksheet.costpercapita_t90, 0.001); end
  def test_costpercapita_t91; assert_in_epsilon(174.97162997774151, worksheet.costpercapita_t91, 0.001); end
  def test_costpercapita_t92; assert_in_epsilon(2.0576905452799865, worksheet.costpercapita_t92, 0.001); end
  def test_costpercapita_t93; assert_in_epsilon(81.77919645076798, worksheet.costpercapita_t93, 0.001); end
  def test_costpercapita_t94; assert_in_epsilon(167.70067583437094, worksheet.costpercapita_t94, 0.001); end
  def test_costpercapita_t95; assert_in_epsilon(23.254680335469203, worksheet.costpercapita_t95, 0.001); end
  def test_costpercapita_t97; assert_in_epsilon(8.998922200422534, worksheet.costpercapita_t97, 0.001); end
  def test_costpercapita_t101; assert_in_delta(0.009647385591534104, worksheet.costpercapita_t101, 0.001); end
  def test_costpercapita_t105; assert_in_delta(0.1790651711854282, worksheet.costpercapita_t105, 0.001); end
  def test_costpercapita_t106; assert_in_delta(0.1918352379996182, worksheet.costpercapita_t106, 0.001); end
  def test_costpercapita_t185; assert_in_epsilon(1692.0511284546963, worksheet.costpercapita_t185, 0.001); end
  def test_costpercapita_u57; assert_in_delta(0, (worksheet.costpercapita_u57||0), 0.001); end
  def test_costpercapita_u58; assert_in_epsilon(1.527059525860367, worksheet.costpercapita_u58, 0.001); end
  def test_costpercapita_u59; assert_in_delta(0, (worksheet.costpercapita_u59||0), 0.001); end
  def test_costpercapita_u60; assert_in_delta(0.5198682550329926, worksheet.costpercapita_u60, 0.001); end
  def test_costpercapita_u61; assert_in_epsilon(95.291844255304, worksheet.costpercapita_u61, 0.001); end
  def test_costpercapita_u62; assert_in_epsilon(2.806002481016019, worksheet.costpercapita_u62, 0.001); end
  def test_costpercapita_u63; assert_in_epsilon(17.001612168891665, worksheet.costpercapita_u63, 0.001); end
  def test_costpercapita_u64; assert_in_epsilon(5.912400365086152, worksheet.costpercapita_u64, 0.001); end
  def test_costpercapita_u65; assert_in_delta(0, (worksheet.costpercapita_u65||0), 0.001); end
  def test_costpercapita_u66; assert_in_delta(0, (worksheet.costpercapita_u66||0), 0.001); end
  def test_costpercapita_u67; assert_in_delta(0.6032232595089615, worksheet.costpercapita_u67, 0.001); end
  def test_costpercapita_u68; assert_in_epsilon(60.60786366553888, worksheet.costpercapita_u68, 0.001); end
  def test_costpercapita_u71; assert_in_delta(5.474815348368128e-07, worksheet.costpercapita_u71, 0.001); end
  def test_costpercapita_u72; assert_in_epsilon(3.9571931480576947, worksheet.costpercapita_u72, 0.001); end
  def test_costpercapita_u73; assert_in_epsilon(67.72751400469794, worksheet.costpercapita_u73, 0.001); end
  def test_costpercapita_u75; assert_in_delta(0, (worksheet.costpercapita_u75||0), 0.001); end
  def test_costpercapita_u76; assert_in_delta(0, (worksheet.costpercapita_u76||0), 0.001); end
  def test_costpercapita_u77; assert_in_epsilon(54.38171502316873, worksheet.costpercapita_u77, 0.001); end
  def test_costpercapita_u78; assert_in_epsilon(4.6849992985653595, worksheet.costpercapita_u78, 0.001); end
  def test_costpercapita_u79; assert_in_delta(0, (worksheet.costpercapita_u79||0), 0.001); end
  def test_costpercapita_u80; assert_in_epsilon(148.6592008343126, worksheet.costpercapita_u80, 0.001); end
  def test_costpercapita_u82; assert_in_epsilon(3.7416756316608324, worksheet.costpercapita_u82, 0.001); end
  def test_costpercapita_u85; assert_in_epsilon(131.44035699403855, worksheet.costpercapita_u85, 0.001); end
  def test_costpercapita_u86; assert_in_epsilon(190.0462266609418, worksheet.costpercapita_u86, 0.001); end
  def test_costpercapita_u87; assert_in_epsilon(226.46538266766888, worksheet.costpercapita_u87, 0.001); end
  def test_costpercapita_u88; assert_in_epsilon(141.0904594293811, worksheet.costpercapita_u88, 0.001); end
  def test_costpercapita_u89; assert_in_delta(0, (worksheet.costpercapita_u89||0), 0.001); end
  def test_costpercapita_u90; assert_in_epsilon(25.81395348837209, worksheet.costpercapita_u90, 0.001); end
  def test_costpercapita_u91; assert_in_epsilon(175.82819153139764, worksheet.costpercapita_u91, 0.001); end
  def test_costpercapita_u92; assert_in_epsilon(1.7957710421745186, worksheet.costpercapita_u92, 0.001); end
  def test_costpercapita_u93; assert_in_epsilon(76.84214917901268, worksheet.costpercapita_u93, 0.001); end
  def test_costpercapita_u94; assert_in_epsilon(152.95641381148806, worksheet.costpercapita_u94, 0.001); end
  def test_costpercapita_u95; assert_in_epsilon(27.776029551673084, worksheet.costpercapita_u95, 0.001); end
  def test_costpercapita_u97; assert_in_epsilon(8.614220010937057, worksheet.costpercapita_u97, 0.001); end
  def test_costpercapita_u101; assert_in_delta(0.005959855313353454, worksheet.costpercapita_u101, 0.001); end
  def test_costpercapita_u105; assert_in_delta(0.1732420483872411, worksheet.costpercapita_u105, 0.001); end
  def test_costpercapita_u106; assert_in_delta(0.22744542809575605, worksheet.costpercapita_u106, 0.001); end
  def test_costpercapita_u185; assert_in_epsilon(1626.4979741630657, worksheet.costpercapita_u185, 0.001); end
  def test_costpercapita_v57; assert_in_delta(0, (worksheet.costpercapita_v57||0), 0.001); end
  def test_costpercapita_v58; assert_in_epsilon(1.49742431958075, worksheet.costpercapita_v58, 0.001); end
  def test_costpercapita_v59; assert_in_delta(0, (worksheet.costpercapita_v59||0), 0.001); end
  def test_costpercapita_v60; assert_in_delta(0.006113829103559086, worksheet.costpercapita_v60, 0.001); end
  def test_costpercapita_v61; assert_in_epsilon(97.28226006057164, worksheet.costpercapita_v61, 0.001); end
  def test_costpercapita_v62; assert_in_epsilon(2.8187792667727463, worksheet.costpercapita_v62, 0.001); end
  def test_costpercapita_v63; assert_in_epsilon(34.957426210451274, worksheet.costpercapita_v63, 0.001); end
  def test_costpercapita_v64; assert_in_epsilon(5.794460243871864, worksheet.costpercapita_v64, 0.001); end
  def test_costpercapita_v65; assert_in_delta(0, (worksheet.costpercapita_v65||0), 0.001); end
  def test_costpercapita_v66; assert_in_delta(0, (worksheet.costpercapita_v66||0), 0.001); end
  def test_costpercapita_v67; assert_in_delta(0.5911902069494825, worksheet.costpercapita_v67, 0.001); end
  def test_costpercapita_v68; assert_in_epsilon(71.09581426811401, worksheet.costpercapita_v68, 0.001); end
  def test_costpercapita_v71; assert_in_delta(6.085295161070552e-07, worksheet.costpercapita_v71, 0.001); end
  def test_costpercapita_v72; assert_in_epsilon(3.690128672382199, worksheet.costpercapita_v72, 0.001); end
  def test_costpercapita_v73; assert_in_epsilon(65.57576908271584, worksheet.costpercapita_v73, 0.001); end
  def test_costpercapita_v75; assert_in_delta(0, (worksheet.costpercapita_v75||0), 0.001); end
  def test_costpercapita_v76; assert_in_delta(0, (worksheet.costpercapita_v76||0), 0.001); end
  def test_costpercapita_v77; assert_in_epsilon(59.83100709504404, worksheet.costpercapita_v77, 0.001); end
  def test_costpercapita_v78; assert_in_epsilon(6.0785213200973764, worksheet.costpercapita_v78, 0.001); end
  def test_costpercapita_v79; assert_in_delta(0, (worksheet.costpercapita_v79||0), 0.001); end
  def test_costpercapita_v80; assert_in_epsilon(162.59436439795297, worksheet.costpercapita_v80, 0.001); end
  def test_costpercapita_v82; assert_in_epsilon(2.465914025659215, worksheet.costpercapita_v82, 0.001); end
  def test_costpercapita_v85; assert_in_epsilon(134.32144734935406, worksheet.costpercapita_v85, 0.001); end
  def test_costpercapita_v86; assert_in_epsilon(131.79479560876814, worksheet.costpercapita_v86, 0.001); end
  def test_costpercapita_v87; assert_in_epsilon(191.26098774652417, worksheet.costpercapita_v87, 0.001); end
  def test_costpercapita_v88; assert_in_epsilon(153.0457344332531, worksheet.costpercapita_v88, 0.001); end
  def test_costpercapita_v89; assert_in_delta(0, (worksheet.costpercapita_v89||0), 0.001); end
  def test_costpercapita_v90; assert_in_epsilon(27.906976744186043, worksheet.costpercapita_v90, 0.001); end
  def test_costpercapita_v91; assert_in_epsilon(175.16945245176777, worksheet.costpercapita_v91, 0.001); end
  def test_costpercapita_v92; assert_in_epsilon(1.5453365882608028, worksheet.costpercapita_v92, 0.001); end
  def test_costpercapita_v93; assert_in_epsilon(71.99248291442149, worksheet.costpercapita_v93, 0.001); end
  def test_costpercapita_v94; assert_in_epsilon(230.55154071212598, worksheet.costpercapita_v94, 0.001); end
  def test_costpercapita_v95; assert_in_epsilon(32.60095997722088, worksheet.costpercapita_v95, 0.001); end
  def test_costpercapita_v97; assert_in_epsilon(8.296184487490324, worksheet.costpercapita_v97, 0.001); end
  def test_costpercapita_v101; assert_in_delta(0.0025393921041892867, worksheet.costpercapita_v101, 0.001); end
  def test_costpercapita_v105; assert_in_delta(0.15988967811100446, worksheet.costpercapita_v105, 0.001); end
  def test_costpercapita_v106; assert_in_delta(0.2838395141619697, worksheet.costpercapita_v106, 0.001); end
  def test_costpercapita_v185; assert_in_epsilon(1673.2113412055464, worksheet.costpercapita_v185, 0.001); end
  def test_costpercapita_w57; assert_in_delta(0, (worksheet.costpercapita_w57||0), 0.001); end
  def test_costpercapita_w58; assert_in_epsilon(1.4717523896007523, worksheet.costpercapita_w58, 0.001); end
  def test_costpercapita_w59; assert_in_delta(0, (worksheet.costpercapita_w59||0), 0.001); end
  def test_costpercapita_w60; assert_in_delta(0.005999734443602492, worksheet.costpercapita_w60, 0.001); end
  def test_costpercapita_w61; assert_in_epsilon(95.46680428099178, worksheet.costpercapita_w61, 0.001); end
  def test_costpercapita_w62; assert_in_epsilon(2.833643660637212, worksheet.costpercapita_w62, 0.001); end
  def test_costpercapita_w63; assert_in_epsilon(42.70253344303689, worksheet.costpercapita_w63, 0.001); end
  def test_costpercapita_w64; assert_in_epsilon(5.686325561014651, worksheet.costpercapita_w64, 0.001); end
  def test_costpercapita_w65; assert_in_delta(0, (worksheet.costpercapita_w65||0), 0.001); end
  def test_costpercapita_w66; assert_in_delta(0, (worksheet.costpercapita_w66||0), 0.001); end
  def test_costpercapita_w67; assert_in_delta(0.5801575718383206, worksheet.costpercapita_w67, 0.001); end
  def test_costpercapita_w68; assert_in_epsilon(86.09917426208925, worksheet.costpercapita_w68, 0.001); end
  def test_costpercapita_w71; assert_in_delta(6.655487783916977e-07, worksheet.costpercapita_w71, 0.001); end
  def test_costpercapita_w72; assert_in_epsilon(3.441961457239309, worksheet.costpercapita_w72, 0.001); end
  def test_costpercapita_w73; assert_in_epsilon(63.49901248104511, worksheet.costpercapita_w73, 0.001); end
  def test_costpercapita_w75; assert_in_delta(0, (worksheet.costpercapita_w75||0), 0.001); end
  def test_costpercapita_w76; assert_in_delta(0, (worksheet.costpercapita_w76||0), 0.001); end
  def test_costpercapita_w77; assert_in_epsilon(64.01484322238383, worksheet.costpercapita_w77, 0.001); end
  def test_costpercapita_w78; assert_in_epsilon(5.965085564647213, worksheet.costpercapita_w78, 0.001); end
  def test_costpercapita_w79; assert_in_delta(0, (worksheet.costpercapita_w79||0), 0.001); end
  def test_costpercapita_w80; assert_in_epsilon(176.52952796159343, worksheet.costpercapita_w80, 0.001); end
  def test_costpercapita_w82; assert_in_epsilon(1.2777471518624683, worksheet.costpercapita_w82, 0.001); end
  def test_costpercapita_w85; assert_in_epsilon(137.57201729170302, worksheet.costpercapita_w85, 0.001); end
  def test_costpercapita_w86; assert_in_epsilon(82.21517585194698, worksheet.costpercapita_w86, 0.001); end
  def test_costpercapita_w87; assert_in_epsilon(159.82299893812822, worksheet.costpercapita_w87, 0.001); end
  def test_costpercapita_w88; assert_in_epsilon(155.13648086557552, worksheet.costpercapita_w88, 0.001); end
  def test_costpercapita_w89; assert_in_delta(0, (worksheet.costpercapita_w89||0), 0.001); end
  def test_costpercapita_w90; assert_in_epsilon(30, worksheet.costpercapita_w90, 0.001); end
  def test_costpercapita_w91; assert_in_epsilon(173.09885860465118, worksheet.costpercapita_w91, 0.001); end
  def test_costpercapita_w92; assert_in_epsilon(1.3063871835388368, worksheet.costpercapita_w92, 0.001); end
  def test_costpercapita_w93; assert_in_epsilon(66.93202033756535, worksheet.costpercapita_w93, 0.001); end
  def test_costpercapita_w94; assert_in_epsilon(159.1471315602158, worksheet.costpercapita_w94, 0.001); end
  def test_costpercapita_w95; assert_in_epsilon(37.78259474072222, worksheet.costpercapita_w95, 0.001); end
  def test_costpercapita_w97; assert_in_epsilon(8.030347881570902, worksheet.costpercapita_w97, 0.001); end
  def test_costpercapita_w101; assert_in_delta(0, (worksheet.costpercapita_w101||0), 0.001); end
  def test_costpercapita_w105; assert_in_delta(0.15880099358854327, worksheet.costpercapita_w105, 0.001); end
  def test_costpercapita_w106; assert_in_delta(0.38133613970429514, worksheet.costpercapita_w106, 0.001); end
  def test_costpercapita_w185; assert_in_epsilon(1561.1587197968834, worksheet.costpercapita_w185, 0.001); end
  def test_costpercapita_y59; assert_in_epsilon(1.0513578545511342, worksheet.costpercapita_y59, 0.001); end
  def test_costpercapita_y69; assert_in_epsilon(3.3035069891591418, worksheet.costpercapita_y69, 0.001); end
  def test_costpercapita_y70; assert_in_epsilon(7.687606383666691, worksheet.costpercapita_y70, 0.001); end
  def test_costpercapita_y74; assert_in_delta(0, (worksheet.costpercapita_y74||0), 0.001); end
  def test_costpercapita_y76; assert_in_delta(-6.687202775841277e-14, worksheet.costpercapita_y76, 0.001); end
  def test_costpercapita_y98; assert_in_epsilon(16.56242208548784, worksheet.costpercapita_y98, 0.001); end
  def test_costpercapita_y99; assert_in_epsilon(407.9280784216838, worksheet.costpercapita_y99, 0.001); end
  def test_costpercapita_y100; assert_in_epsilon(151.2771269277196, worksheet.costpercapita_y100, 0.001); end
  def test_costpercapita_y102; assert_in_epsilon(37.55568640361976, worksheet.costpercapita_y102, 0.001); end
  def test_costpercapita_y103; assert_in_epsilon(25.305851963681697, worksheet.costpercapita_y103, 0.001); end
  def test_costpercapita_y104; assert_in_epsilon(57.913740413014594, worksheet.costpercapita_y104, 0.001); end
  def test_costpercapita_y185; assert_in_epsilon(708.5853774425841, worksheet.costpercapita_y185, 0.001); end
  def test_costpercapita_z59; assert_in_delta(0.8540189754513322, worksheet.costpercapita_z59, 0.001); end
  def test_costpercapita_z69; assert_in_epsilon(2.820209521628868, worksheet.costpercapita_z69, 0.001); end
  def test_costpercapita_z70; assert_in_epsilon(23.55126220075827, worksheet.costpercapita_z70, 0.001); end
  def test_costpercapita_z74; assert_in_delta(0, (worksheet.costpercapita_z74||0), 0.001); end
  def test_costpercapita_z76; assert_in_delta(-6.466691801212135e-14, worksheet.costpercapita_z76, 0.001); end
  def test_costpercapita_z98; assert_in_epsilon(16.748201619163304, worksheet.costpercapita_z98, 0.001); end
  def test_costpercapita_z99; assert_in_epsilon(364.463178285933, worksheet.costpercapita_z99, 0.001); end
  def test_costpercapita_z100; assert_in_epsilon(128.92972635029454, worksheet.costpercapita_z100, 0.001); end
  def test_costpercapita_z102; assert_in_epsilon(27.64602821445756, worksheet.costpercapita_z102, 0.001); end
  def test_costpercapita_z103; assert_in_epsilon(59.75985059894816, worksheet.costpercapita_z103, 0.001); end
  def test_costpercapita_z104; assert_in_epsilon(69.16269656937939, worksheet.costpercapita_z104, 0.001); end
  def test_costpercapita_z185; assert_in_epsilon(693.9351723360144, worksheet.costpercapita_z185, 0.001); end
  def test_costpercapita_aa59; assert_in_delta(0.4720342707132738, worksheet.costpercapita_aa59, 0.001); end
  def test_costpercapita_aa69; assert_in_epsilon(2.3588756730261733, worksheet.costpercapita_aa69, 0.001); end
  def test_costpercapita_aa70; assert_in_epsilon(47.19778129230474, worksheet.costpercapita_aa70, 0.001); end
  def test_costpercapita_aa74; assert_in_delta(0.011821283924247455, worksheet.costpercapita_aa74, 0.001); end
  def test_costpercapita_aa76; assert_in_delta(-1.2509968544256545e-13, worksheet.costpercapita_aa76, 0.001); end
  def test_costpercapita_aa98; assert_in_epsilon(16.907861102269763, worksheet.costpercapita_aa98, 0.001); end
  def test_costpercapita_aa99; assert_in_epsilon(308.3950823511925, worksheet.costpercapita_aa99, 0.001); end
  def test_costpercapita_aa100; assert_in_epsilon(108.75091499882417, worksheet.costpercapita_aa100, 0.001); end
  def test_costpercapita_aa102; assert_in_epsilon(13.513276463951634, worksheet.costpercapita_aa102, 0.001); end
  def test_costpercapita_aa103; assert_in_epsilon(86.806845480154, worksheet.costpercapita_aa103, 0.001); end
  def test_costpercapita_aa104; assert_in_epsilon(51.85224564827767, worksheet.costpercapita_aa104, 0.001); end
  def test_costpercapita_aa185; assert_in_epsilon(636.266738564638, worksheet.costpercapita_aa185, 0.001); end
  def test_costpercapita_ab59; assert_in_delta(0.1524728164966898, worksheet.costpercapita_ab59, 0.001); end
  def test_costpercapita_ab69; assert_in_epsilon(1.9215732372325443, worksheet.costpercapita_ab69, 0.001); end
  def test_costpercapita_ab70; assert_in_epsilon(65.5156310200444, worksheet.costpercapita_ab70, 0.001); end
  def test_costpercapita_ab74; assert_in_delta(0.763683726528361, worksheet.costpercapita_ab74, 0.001); end
  def test_costpercapita_ab76; assert_in_delta(0, (worksheet.costpercapita_ab76||0), 0.001); end
  def test_costpercapita_ab98; assert_in_epsilon(17.070378554491267, worksheet.costpercapita_ab98, 0.001); end
  def test_costpercapita_ab99; assert_in_epsilon(257.4196880138305, worksheet.costpercapita_ab99, 0.001); end
  def test_costpercapita_ab100; assert_in_epsilon(90.84268513904978, worksheet.costpercapita_ab100, 0.001); end
  def test_costpercapita_ab102; assert_in_epsilon(-4.5028726377924215, worksheet.costpercapita_ab102, 0.001); end
  def test_costpercapita_ab103; assert_in_epsilon(72.42594935260117, worksheet.costpercapita_ab103, 0.001); end
  def test_costpercapita_ab104; assert_in_epsilon(27.901000084924593, worksheet.costpercapita_ab104, 0.001); end
  def test_costpercapita_ab185; assert_in_epsilon(529.5101893074068, worksheet.costpercapita_ab185, 0.001); end
  def test_costpercapita_ac59; assert_in_delta(0.14830723580696178, worksheet.costpercapita_ac59, 0.001); end
  def test_costpercapita_ac69; assert_in_epsilon(1.5082627145448928, worksheet.costpercapita_ac69, 0.001); end
  def test_costpercapita_ac70; assert_in_epsilon(82.11183616565074, worksheet.costpercapita_ac70, 0.001); end
  def test_costpercapita_ac74; assert_in_epsilon(3.7140988510119057, worksheet.costpercapita_ac74, 0.001); end
  def test_costpercapita_ac76; assert_in_epsilon(-63.60005850918115, worksheet.costpercapita_ac76, 0.001); end
  def test_costpercapita_ac98; assert_in_epsilon(8.635656982915402, worksheet.costpercapita_ac98, 0.001); end
  def test_costpercapita_ac99; assert_in_epsilon(213.44748836071366, worksheet.costpercapita_ac99, 0.001); end
  def test_costpercapita_ac100; assert_in_epsilon(75.37064321889488, worksheet.costpercapita_ac100, 0.001); end
  def test_costpercapita_ac102; assert_in_epsilon(-7.6005843245854505, worksheet.costpercapita_ac102, 0.001); end
  def test_costpercapita_ac103; assert_in_epsilon(48.621375908009476, worksheet.costpercapita_ac103, 0.001); end
  def test_costpercapita_ac104; assert_in_epsilon(5.043056302928927, worksheet.costpercapita_ac104, 0.001); end
  def test_costpercapita_ac185; assert_in_epsilon(367.4000829067103, worksheet.costpercapita_ac185, 0.001); end
  def test_costpercapita_ad59; assert_in_delta(0, (worksheet.costpercapita_ad59||0), 0.001); end
  def test_costpercapita_ad69; assert_in_epsilon(1.1140728931626787, worksheet.costpercapita_ad69, 0.001); end
  def test_costpercapita_ad70; assert_in_epsilon(97.0958742673156, worksheet.costpercapita_ad70, 0.001); end
  def test_costpercapita_ad74; assert_in_epsilon(7.253221336493713, worksheet.costpercapita_ad74, 0.001); end
  def test_costpercapita_ad76; assert_in_epsilon(-161.38891161399812, worksheet.costpercapita_ad76, 0.001); end
  def test_costpercapita_ad98; assert_in_epsilon(8.432238073854396, worksheet.costpercapita_ad98, 0.001); end
  def test_costpercapita_ad99; assert_in_epsilon(161.27110129602434, worksheet.costpercapita_ad99, 0.001); end
  def test_costpercapita_ad100; assert_in_epsilon(56.94659014567336, worksheet.costpercapita_ad100, 0.001); end
  def test_costpercapita_ad102; assert_in_epsilon(-7.220614882669805, worksheet.costpercapita_ad102, 0.001); end
  def test_costpercapita_ad103; assert_in_epsilon(48.907110832716505, worksheet.costpercapita_ad103, 0.001); end
  def test_costpercapita_ad104; assert_in_delta(0.1503567664782327, worksheet.costpercapita_ad104, 0.001); end
  def test_costpercapita_ad185; assert_in_epsilon(212.5610391150509, worksheet.costpercapita_ad185, 0.001); end
  def test_costpercapita_ae59; assert_in_delta(0, (worksheet.costpercapita_ae59||0), 0.001); end
  def test_costpercapita_ae69; assert_in_delta(0.7330884434756474, worksheet.costpercapita_ae69, 0.001); end
  def test_costpercapita_ae70; assert_in_epsilon(114.80235929946933, worksheet.costpercapita_ae70, 0.001); end
  def test_costpercapita_ae74; assert_in_epsilon(14.197072673291725, worksheet.costpercapita_ae74, 0.001); end
  def test_costpercapita_ae76; assert_in_epsilon(-202.45362009285188, worksheet.costpercapita_ae76, 0.001); end
  def test_costpercapita_ae98; assert_in_epsilon(8.252408907659154, worksheet.costpercapita_ae98, 0.001); end
  def test_costpercapita_ae99; assert_in_epsilon(122.12721611645647, worksheet.costpercapita_ae99, 0.001); end
  def test_costpercapita_ae100; assert_in_epsilon(43.124456061411955, worksheet.costpercapita_ae100, 0.001); end
  def test_costpercapita_ae102; assert_in_epsilon(-7.771400244629285, worksheet.costpercapita_ae102, 0.001); end
  def test_costpercapita_ae103; assert_in_epsilon(38.5090070159095, worksheet.costpercapita_ae103, 0.001); end
  def test_costpercapita_ae104; assert_in_epsilon(-7.851734845701245, worksheet.costpercapita_ae104, 0.001); end
  def test_costpercapita_ae185; assert_in_epsilon(123.66885333449139, worksheet.costpercapita_ae185, 0.001); end
  def test_costpercapita_af59; assert_in_delta(0, (worksheet.costpercapita_af59||0), 0.001); end
  def test_costpercapita_af69; assert_in_delta(0.3622767675438072, worksheet.costpercapita_af69, 0.001); end
  def test_costpercapita_af70; assert_in_epsilon(134.25409961010615, worksheet.costpercapita_af70, 0.001); end
  def test_costpercapita_af74; assert_in_epsilon(34.784676317987234, worksheet.costpercapita_af74, 0.001); end
  def test_costpercapita_af76; assert_in_epsilon(-234.50015545113567, worksheet.costpercapita_af76, 0.001); end
  def test_costpercapita_af98; assert_in_epsilon(8.087790470682751, worksheet.costpercapita_af98, 0.001); end
  def test_costpercapita_af99; assert_in_epsilon(92.61463858318159, worksheet.costpercapita_af99, 0.001); end
  def test_costpercapita_af100; assert_in_epsilon(32.70324207190183, worksheet.costpercapita_af100, 0.001); end
  def test_costpercapita_af102; assert_in_epsilon(-8.84053061701247, worksheet.costpercapita_af102, 0.001); end
  def test_costpercapita_af103; assert_in_epsilon(16.6158098190211, worksheet.costpercapita_af103, 0.001); end
  def test_costpercapita_af104; assert_in_epsilon(-17.674140686209586, worksheet.costpercapita_af104, 0.001); end
  def test_costpercapita_af185; assert_in_epsilon(58.407706886066734, worksheet.costpercapita_af185, 0.001); end
  def test_costpercapita_ag59; assert_in_delta(0, (worksheet.costpercapita_ag59||0), 0.001); end
  def test_costpercapita_ag69; assert_in_delta(0, (worksheet.costpercapita_ag69||0), 0.001); end
  def test_costpercapita_ag70; assert_in_epsilon(154.66414427727284, worksheet.costpercapita_ag70, 0.001); end
  def test_costpercapita_ag74; assert_in_epsilon(80.01492033746342, worksheet.costpercapita_ag74, 0.001); end
  def test_costpercapita_ag76; assert_in_epsilon(-246.00905795140395, worksheet.costpercapita_ag76, 0.001); end
  def test_costpercapita_ag98; assert_in_epsilon(7.936858266343649, worksheet.costpercapita_ag98, 0.001); end
  def test_costpercapita_ag99; assert_in_epsilon(70.32607769146746, worksheet.costpercapita_ag99, 0.001); end
  def test_costpercapita_ag100; assert_in_epsilon(24.83290738802381, worksheet.costpercapita_ag100, 0.001); end
  def test_costpercapita_ag102; assert_in_epsilon(-8.606029982598292, worksheet.costpercapita_ag102, 0.001); end
  def test_costpercapita_ag103; assert_in_epsilon(-10.493421663291345, worksheet.costpercapita_ag103, 0.001); end
  def test_costpercapita_ag104; assert_in_epsilon(-24.83290738802381, worksheet.costpercapita_ag104, 0.001); end
  def test_costpercapita_ag185; assert_in_epsilon(47.833490975253795, worksheet.costpercapita_ag185, 0.001); end
  def test_costpercapita_ai185; assert_in_epsilon(3912.628637884984, worksheet.costpercapita_ai185, 0.001); end
  def test_costpercapita_aj185; assert_in_epsilon(3920.184537562385, worksheet.costpercapita_aj185, 0.001); end
  def test_costpercapita_ak185; assert_in_epsilon(4111.187259195173, worksheet.costpercapita_ak185, 0.001); end
  def test_costpercapita_al185; assert_in_epsilon(4297.687797413892, worksheet.costpercapita_al185, 0.001); end
  def test_costpercapita_am185; assert_in_epsilon(4202.16872380964, worksheet.costpercapita_am185, 0.001); end
  def test_costpercapita_an185; assert_in_epsilon(4068.6905901834316, worksheet.costpercapita_an185, 0.001); end
  def test_costpercapita_ao185; assert_in_epsilon(4057.7279090982693, worksheet.costpercapita_ao185, 0.001); end
  def test_costpercapita_ap185; assert_in_epsilon(4271.036533394444, worksheet.costpercapita_ap185, 0.001); end
  def test_costpercapita_aq185; assert_in_epsilon(4166.509371812468, worksheet.costpercapita_aq185, 0.001); end
  def test_costpercapita_as57; assert_in_epsilon(15.589211905421783, worksheet.costpercapita_as57, 0.001); end
  def test_costpercapita_as58; assert_in_epsilon(2.141539455248759, worksheet.costpercapita_as58, 0.001); end
  def test_costpercapita_as59; assert_in_epsilon(3.9106837439061213, worksheet.costpercapita_as59, 0.001); end
  def test_costpercapita_as60; assert_in_epsilon(6.968634199052536, worksheet.costpercapita_as60, 0.001); end
  def test_costpercapita_as61; assert_in_epsilon(170.92041024515433, worksheet.costpercapita_as61, 0.001); end
  def test_costpercapita_as62; assert_in_epsilon(3.1370050900949664, worksheet.costpercapita_as62, 0.001); end
  def test_costpercapita_as63; assert_in_epsilon(36.15553674495407, worksheet.costpercapita_as63, 0.001); end
  def test_costpercapita_as64; assert_in_epsilon(9.234040059602897, worksheet.costpercapita_as64, 0.001); end
  def test_costpercapita_as65; assert_in_epsilon(305.78566959805573, worksheet.costpercapita_as65, 0.001); end
  def test_costpercapita_as66; assert_in_epsilon(167.49732955471467, worksheet.costpercapita_as66, 0.001); end
  def test_costpercapita_as67; assert_in_epsilon(1.4907862525957531, worksheet.costpercapita_as67, 0.001); end
  def test_costpercapita_as68; assert_in_epsilon(74.04515660305188, worksheet.costpercapita_as68, 0.001); end
  def test_costpercapita_as69; assert_in_epsilon(1.5690962488637503, worksheet.costpercapita_as69, 0.001); end
  def test_costpercapita_as70; assert_in_epsilon(80.76451050184319, worksheet.costpercapita_as70, 0.001); end
  def test_costpercapita_as71; assert_in_delta(3.927764602242245e-07, worksheet.costpercapita_as71, 0.001); end
  def test_costpercapita_as72; assert_in_epsilon(8.490805316966288, worksheet.costpercapita_as72, 0.001); end
  def test_costpercapita_as73; assert_in_epsilon(112.11778909850426, worksheet.costpercapita_as73, 0.001); end
  def test_costpercapita_as74; assert_in_epsilon(15.637721614077845, worksheet.costpercapita_as74, 0.001); end
  def test_costpercapita_as75; assert_in_delta(0, (worksheet.costpercapita_as75||0), 0.001); end
  def test_costpercapita_as76; assert_in_epsilon(-100.88353373539678, worksheet.costpercapita_as76, 0.001); end
  def test_costpercapita_as77; assert_in_epsilon(102.89706586765475, worksheet.costpercapita_as77, 0.001); end
  def test_costpercapita_as78; assert_in_epsilon(21.188712930717426, worksheet.costpercapita_as78, 0.001); end
  def test_costpercapita_as79; assert_in_delta(0, (worksheet.costpercapita_as79||0), 0.001); end
  def test_costpercapita_as80; assert_in_epsilon(445.98500299651374, worksheet.costpercapita_as80, 0.001); end
  def test_costpercapita_as81; assert_in_epsilon(206.36466585713276, worksheet.costpercapita_as81, 0.001); end
  def test_costpercapita_as82; assert_in_epsilon(46.98384966325793, worksheet.costpercapita_as82, 0.001); end
  def test_costpercapita_as83; assert_in_epsilon(42.37454095792721, worksheet.costpercapita_as83, 0.001); end
  def test_costpercapita_as84; assert_in_epsilon(5.420063632985134, worksheet.costpercapita_as84, 0.001); end
  def test_costpercapita_as85; assert_in_epsilon(131.74290298325252, worksheet.costpercapita_as85, 0.001); end
  def test_costpercapita_as86; assert_in_epsilon(669.767407812793, worksheet.costpercapita_as86, 0.001); end
  def test_costpercapita_as87; assert_in_epsilon(377.55445579780235, worksheet.costpercapita_as87, 0.001); end
  def test_costpercapita_as88; assert_in_epsilon(257.0317396647053, worksheet.costpercapita_as88, 0.001); end
  def test_costpercapita_as89; assert_in_delta(0, (worksheet.costpercapita_as89||0), 0.001); end
  def test_costpercapita_as90; assert_in_epsilon(48.008157906863396, worksheet.costpercapita_as90, 0.001); end
  def test_costpercapita_as91; assert_in_epsilon(169.68465073898537, worksheet.costpercapita_as91, 0.001); end
  def test_costpercapita_as92; assert_in_epsilon(3.8335681725389867, worksheet.costpercapita_as92, 0.001); end
  def test_costpercapita_as93; assert_in_epsilon(146.26991987043655, worksheet.costpercapita_as93, 0.001); end
  def test_costpercapita_as94; assert_in_epsilon(101.0471638138306, worksheet.costpercapita_as94, 0.001); end
  def test_costpercapita_as95; assert_in_epsilon(18.064825489879357, worksheet.costpercapita_as95, 0.001); end
  def test_costpercapita_as96; assert_in_delta(0, (worksheet.costpercapita_as96||0), 0.001); end
  def test_costpercapita_as97; assert_in_epsilon(14.621273785724501, worksheet.costpercapita_as97, 0.001); end
  def test_costpercapita_as98; assert_in_epsilon(12.07042400698528, worksheet.costpercapita_as98, 0.001); end
  def test_costpercapita_as99; assert_in_epsilon(221.99917212449816, worksheet.costpercapita_as99, 0.001); end
  def test_costpercapita_as100; assert_in_epsilon(79.19758803353267, worksheet.costpercapita_as100, 0.001); end
  def test_costpercapita_as101; assert_in_epsilon(6.639832154148885, worksheet.costpercapita_as101, 0.001); end
  def test_costpercapita_as102; assert_in_epsilon(3.796995376971246, worksheet.costpercapita_as102, 0.001); end
  def test_costpercapita_as103; assert_in_epsilon(42.93981992308336, worksheet.costpercapita_as103, 0.001); end
  def test_costpercapita_as104; assert_in_epsilon(17.962701429452085, worksheet.costpercapita_as104, 0.001); end
  def test_costpercapita_as105; assert_in_delta(0.867467927490174, worksheet.costpercapita_as105, 0.001); end
  def test_costpercapita_as106; assert_in_epsilon(3.0937893418695483, worksheet.costpercapita_as106, 0.001); end
  def test_costpercapita_as185; assert_in_epsilon(4111.980151150521, worksheet.costpercapita_as185, 0.001); end
  def test_costpercapita_ay57; assert_in_delta(0, (worksheet.costpercapita_ay57||0), 0.001); end
  def test_costpercapita_ay58; assert_in_delta(0, (worksheet.costpercapita_ay58||0), 0.001); end
  def test_costpercapita_ay59; assert_in_delta(0, (worksheet.costpercapita_ay59||0), 0.001); end
  def test_costpercapita_ay60; assert_in_epsilon(4.367321088711529, worksheet.costpercapita_ay60, 0.001); end
  def test_costpercapita_ay61; assert_in_epsilon(3.3146990923673254, worksheet.costpercapita_ay61, 0.001); end
  def test_costpercapita_ay62; assert_in_delta(0.4119846684939789, worksheet.costpercapita_ay62, 0.001); end
  def test_costpercapita_ay63; assert_in_delta(0.008934545526508228, worksheet.costpercapita_ay63, 0.001); end
  def test_costpercapita_ay64; assert_in_delta(0, (worksheet.costpercapita_ay64||0), 0.001); end
  def test_costpercapita_ay65; assert_in_epsilon(64.04030166059455, worksheet.costpercapita_ay65, 0.001); end
  def test_costpercapita_ay66; assert_in_epsilon(4.814267174354616, worksheet.costpercapita_ay66, 0.001); end
  def test_costpercapita_ay67; assert_in_delta(0.12056887553299535, worksheet.costpercapita_ay67, 0.001); end
  def test_costpercapita_ay68; assert_in_epsilon(6.192701302702139, worksheet.costpercapita_ay68, 0.001); end
  def test_costpercapita_ay72; assert_in_delta(0.9842887741493159, worksheet.costpercapita_ay72, 0.001); end
  def test_costpercapita_ay73; assert_in_epsilon(13.264501267803897, worksheet.costpercapita_ay73, 0.001); end
  def test_costpercapita_ay75; assert_in_delta(0, (worksheet.costpercapita_ay75||0), 0.001); end
  def test_costpercapita_ay76; assert_in_delta(0, (worksheet.costpercapita_ay76||0), 0.001); end
  def test_costpercapita_ay77; assert_in_epsilon(7.940537109875805, worksheet.costpercapita_ay77, 0.001); end
  def test_costpercapita_ay78; assert_in_delta(0, (worksheet.costpercapita_ay78||0), 0.001); end
  def test_costpercapita_ay79; assert_in_delta(0, (worksheet.costpercapita_ay79||0), 0.001); end
  def test_costpercapita_ay81; assert_in_epsilon(65.02524361880178, worksheet.costpercapita_ay81, 0.001); end
  def test_costpercapita_ay82; assert_in_epsilon(10.200940880854802, worksheet.costpercapita_ay82, 0.001); end
  def test_costpercapita_ay83; assert_in_epsilon(13.906601736886792, worksheet.costpercapita_ay83, 0.001); end
  def test_costpercapita_ay84; assert_in_delta(0.9206942277489177, worksheet.costpercapita_ay84, 0.001); end
  def test_costpercapita_ay85; assert_in_delta(0.37903702991849003, worksheet.costpercapita_ay85, 0.001); end
  def test_costpercapita_ay86; assert_in_epsilon(231.6987357122909, worksheet.costpercapita_ay86, 0.001); end
  def test_costpercapita_ay87; assert_in_delta(0.5089069695697457, worksheet.costpercapita_ay87, 0.001); end
  def test_costpercapita_ay88; assert_in_delta(0, (worksheet.costpercapita_ay88||0), 0.001); end
  def test_costpercapita_ay89; assert_in_delta(0, (worksheet.costpercapita_ay89||0), 0.001); end
  def test_costpercapita_ay91; assert_in_delta(0.828607306757057, worksheet.costpercapita_ay91, 0.001); end
  def test_costpercapita_ay92; assert_in_delta(0.7493822341276288, worksheet.costpercapita_ay92, 0.001); end
  def test_costpercapita_ay93; assert_in_epsilon(22.394720879097733, worksheet.costpercapita_ay93, 0.001); end
  def test_costpercapita_ay96; assert_in_delta(0, (worksheet.costpercapita_ay96||0), 0.001); end
  def test_costpercapita_ay97; assert_in_epsilon(2.0700193895530417, worksheet.costpercapita_ay97, 0.001); end
  def test_costpercapita_ay101; assert_in_epsilon(6.474768717222489, worksheet.costpercapita_ay101, 0.001); end
  def test_costpercapita_ay105; assert_in_delta(0.20211332514651353, worksheet.costpercapita_ay105, 0.001); end
  def test_costpercapita_ay106; assert_in_delta(0, (worksheet.costpercapita_ay106||0), 0.001); end
  def test_costpercapita_ay185; assert_in_epsilon(518.8478308674881, worksheet.costpercapita_ay185, 0.001); end
  def test_costpercapita_az57; assert_in_epsilon(1.4681139534111989, worksheet.costpercapita_az57, 0.001); end
  def test_costpercapita_az58; assert_in_epsilon(1.8861658051861525, worksheet.costpercapita_az58, 0.001); end
  def test_costpercapita_az59; assert_in_delta(0, (worksheet.costpercapita_az59||0), 0.001); end
  def test_costpercapita_az60; assert_in_epsilon(6.211425203947848, worksheet.costpercapita_az60, 0.001); end
  def test_costpercapita_az61; assert_in_epsilon(19.37401717904851, worksheet.costpercapita_az61, 0.001); end
  def test_costpercapita_az62; assert_in_delta(0.1297718063583131, worksheet.costpercapita_az62, 0.001); end
  def test_costpercapita_az63; assert_in_delta(0.23213734085202836, worksheet.costpercapita_az63, 0.001); end
  def test_costpercapita_az64; assert_in_delta(0.09023676197310414, worksheet.costpercapita_az64, 0.001); end
  def test_costpercapita_az65; assert_in_epsilon(98.16985985390154, worksheet.costpercapita_az65, 0.001); end
  def test_costpercapita_az66; assert_in_epsilon(21.396742997131625, worksheet.costpercapita_az66, 0.001); end
  def test_costpercapita_az67; assert_in_epsilon(2.2209389178115524, worksheet.costpercapita_az67, 0.001); end
  def test_costpercapita_az68; assert_in_epsilon(11.651444436849225, worksheet.costpercapita_az68, 0.001); end
  def test_costpercapita_az72; assert_in_epsilon(2.2568432692327263, worksheet.costpercapita_az72, 0.001); end
  def test_costpercapita_az73; assert_in_epsilon(22.75131888940892, worksheet.costpercapita_az73, 0.001); end
  def test_costpercapita_az75; assert_in_delta(0, (worksheet.costpercapita_az75||0), 0.001); end
  def test_costpercapita_az76; assert_in_delta(0, (worksheet.costpercapita_az76||0), 0.001); end
  def test_costpercapita_az77; assert_in_epsilon(16.991828200445674, worksheet.costpercapita_az77, 0.001); end
  def test_costpercapita_az78; assert_in_epsilon(1.1356713183051916, worksheet.costpercapita_az78, 0.001); end
  def test_costpercapita_az79; assert_in_delta(0, (worksheet.costpercapita_az79||0), 0.001); end
  def test_costpercapita_az80; assert_in_epsilon(50.144209861219935, worksheet.costpercapita_az80, 0.001); end
  def test_costpercapita_az81; assert_in_epsilon(105.63191295063724, worksheet.costpercapita_az81, 0.001); end
  def test_costpercapita_az82; assert_in_epsilon(23.95567070859281, worksheet.costpercapita_az82, 0.001); end
  def test_costpercapita_az83; assert_in_epsilon(23.564917296526126, worksheet.costpercapita_az83, 0.001); end
  def test_costpercapita_az84; assert_in_epsilon(4.2594819048489265, worksheet.costpercapita_az84, 0.001); end
  def test_costpercapita_az85; assert_in_delta(0.6208194168896348, worksheet.costpercapita_az85, 0.001); end
  def test_costpercapita_az86; assert_in_epsilon(333.56856073650914, worksheet.costpercapita_az86, 0.001); end
  def test_costpercapita_az87; assert_in_epsilon(20.504548218000508, worksheet.costpercapita_az87, 0.001); end
  def test_costpercapita_az88; assert_in_epsilon(20.532440679461594, worksheet.costpercapita_az88, 0.001); end
  def test_costpercapita_az89; assert_in_delta(0, (worksheet.costpercapita_az89||0), 0.001); end
  def test_costpercapita_az90; assert_in_epsilon(22.223494767699332, worksheet.costpercapita_az90, 0.001); end
  def test_costpercapita_az91; assert_in_epsilon(1.0405546510507555, worksheet.costpercapita_az91, 0.001); end
  def test_costpercapita_az92; assert_in_epsilon(1.0763572316636039, worksheet.costpercapita_az92, 0.001); end
  def test_costpercapita_az93; assert_in_epsilon(53.782487480860595, worksheet.costpercapita_az93, 0.001); end
  def test_costpercapita_az96; assert_in_delta(0, (worksheet.costpercapita_az96||0), 0.001); end
  def test_costpercapita_az97; assert_in_epsilon(3.142539408318388, worksheet.costpercapita_az97, 0.001); end
  def test_costpercapita_az101; assert_in_epsilon(5.601642005266739, worksheet.costpercapita_az101, 0.001); end
  def test_costpercapita_az105; assert_in_delta(0.19028301023243394, worksheet.costpercapita_az105, 0.001); end
  def test_costpercapita_az106; assert_in_delta(0.9406707420018201, worksheet.costpercapita_az106, 0.001); end
  def test_costpercapita_az185; assert_in_epsilon(876.7471070036431, worksheet.costpercapita_az185, 0.001); end
  def test_costpercapita_ba57; assert_in_delta(0, (worksheet.costpercapita_ba57||0), 0.001); end
  def test_costpercapita_ba58; assert_in_epsilon(1.0849862911987547, worksheet.costpercapita_ba58, 0.001); end
  def test_costpercapita_ba59; assert_in_delta(0, (worksheet.costpercapita_ba59||0), 0.001); end
  def test_costpercapita_ba60; assert_in_epsilon(5.910782991466499, worksheet.costpercapita_ba60, 0.001); end
  def test_costpercapita_ba61; assert_in_epsilon(54.88102531416359, worksheet.costpercapita_ba61, 0.001); end
  def test_costpercapita_ba62; assert_in_delta(0.12552331743794762, worksheet.costpercapita_ba62, 0.001); end
  def test_costpercapita_ba63; assert_in_epsilon(1.7835578111745654, worksheet.costpercapita_ba63, 0.001); end
  def test_costpercapita_ba64; assert_in_delta(0.593094994565673, worksheet.costpercapita_ba64, 0.001); end
  def test_costpercapita_ba65; assert_in_epsilon(90.07668460324945, worksheet.costpercapita_ba65, 0.001); end
  def test_costpercapita_ba66; assert_in_epsilon(34.76970737033889, worksheet.costpercapita_ba66, 0.001); end
  def test_costpercapita_ba67; assert_in_epsilon(1.275912323868248, worksheet.costpercapita_ba67, 0.001); end
  def test_costpercapita_ba68; assert_in_epsilon(8.933633001218517, worksheet.costpercapita_ba68, 0.001); end
  def test_costpercapita_ba72; assert_in_epsilon(2.8663500139348903, worksheet.costpercapita_ba72, 0.001); end
  def test_costpercapita_ba73; assert_in_epsilon(24.1318714328916, worksheet.costpercapita_ba73, 0.001); end
  def test_costpercapita_ba75; assert_in_delta(0, (worksheet.costpercapita_ba75||0), 0.001); end
  def test_costpercapita_ba76; assert_in_delta(0, (worksheet.costpercapita_ba76||0), 0.001); end
  def test_costpercapita_ba77; assert_in_epsilon(24.519179968652185, worksheet.costpercapita_ba77, 0.001); end
  def test_costpercapita_ba78; assert_in_epsilon(8.41901092975248, worksheet.costpercapita_ba78, 0.001); end
  def test_costpercapita_ba79; assert_in_delta(0, (worksheet.costpercapita_ba79||0), 0.001); end
  def test_costpercapita_ba80; assert_in_epsilon(146.29947212500835, worksheet.costpercapita_ba80, 0.001); end
  def test_costpercapita_ba81; assert_in_epsilon(103.0721350443003, worksheet.costpercapita_ba81, 0.001); end
  def test_costpercapita_ba82; assert_in_epsilon(25.336636001764397, worksheet.costpercapita_ba82, 0.001); end
  def test_costpercapita_ba83; assert_in_epsilon(23.554293432651242, worksheet.costpercapita_ba83, 0.001); end
  def test_costpercapita_ba84; assert_in_epsilon(3.8366205931286372, worksheet.costpercapita_ba84, 0.001); end
  def test_costpercapita_ba85; assert_in_delta(0.8178595216205528, worksheet.costpercapita_ba85, 0.001); end
  def test_costpercapita_ba86; assert_in_epsilon(293.2072764293744, worksheet.costpercapita_ba86, 0.001); end
  def test_costpercapita_ba87; assert_in_epsilon(26.90607897341456, worksheet.costpercapita_ba87, 0.001); end
  def test_costpercapita_ba88; assert_in_epsilon(25.23555810246055, worksheet.costpercapita_ba88, 0.001); end
  def test_costpercapita_ba89; assert_in_delta(0, (worksheet.costpercapita_ba89||0), 0.001); end
  def test_costpercapita_ba90; assert_in_epsilon(27.445269700923962, worksheet.costpercapita_ba90, 0.001); end
  def test_costpercapita_ba91; assert_in_epsilon(1.286987217417574, worksheet.costpercapita_ba91, 0.001); end
  def test_costpercapita_ba92; assert_in_delta(0.8810277182692028, worksheet.costpercapita_ba92, 0.001); end
  def test_costpercapita_ba93; assert_in_epsilon(46.262092093803666, worksheet.costpercapita_ba93, 0.001); end
  def test_costpercapita_ba96; assert_in_delta(0, (worksheet.costpercapita_ba96||0), 0.001); end
  def test_costpercapita_ba97; assert_in_epsilon(2.880422153156445, worksheet.costpercapita_ba97, 0.001); end
  def test_costpercapita_ba101; assert_in_epsilon(5.027330599635613, worksheet.costpercapita_ba101, 0.001); end
  def test_costpercapita_ba105; assert_in_delta(0.6403331985729518, worksheet.costpercapita_ba105, 0.001); end
  def test_costpercapita_ba106; assert_in_epsilon(2.0999675164629616, worksheet.costpercapita_ba106, 0.001); end
  def test_costpercapita_ba185; assert_in_epsilon(994.1606807858788, worksheet.costpercapita_ba185, 0.001); end
  def test_costpercapita_bb57; assert_in_delta(0, (worksheet.costpercapita_bb57||0), 0.001); end
  def test_costpercapita_bb58; assert_in_delta(-1.335224887896131e-16, worksheet.costpercapita_bb58, 0.001); end
  def test_costpercapita_bb59; assert_in_delta(0, (worksheet.costpercapita_bb59||0), 0.001); end
  def test_costpercapita_bb60; assert_in_epsilon(5.633485459112372, worksheet.costpercapita_bb60, 0.001); end
  def test_costpercapita_bb61; assert_in_epsilon(63.07009244752958, worksheet.costpercapita_bb61, 0.001); end
  def test_costpercapita_bb62; assert_in_delta(0.06081833968384914, worksheet.costpercapita_bb62, 0.001); end
  def test_costpercapita_bb63; assert_in_epsilon(1.6707318331657208, worksheet.costpercapita_bb63, 0.001); end
  def test_costpercapita_bb64; assert_in_epsilon(4.459211100093785, worksheet.costpercapita_bb64, 0.001); end
  def test_costpercapita_bb65; assert_in_epsilon(82.55940117157775, worksheet.costpercapita_bb65, 0.001); end
  def test_costpercapita_bb66; assert_in_epsilon(48.14267174354616, worksheet.costpercapita_bb66, 0.001); end
  def test_costpercapita_bb67; assert_in_delta(0, (worksheet.costpercapita_bb67||0), 0.001); end
  def test_costpercapita_bb68; assert_in_epsilon(8.008700823209843, worksheet.costpercapita_bb68, 0.001); end
  def test_costpercapita_bb72; assert_in_epsilon(2.818259838001362, worksheet.costpercapita_bb72, 0.001); end
  def test_costpercapita_bb73; assert_in_epsilon(23.07043237804265, worksheet.costpercapita_bb73, 0.001); end
  def test_costpercapita_bb75; assert_in_delta(0, (worksheet.costpercapita_bb75||0), 0.001); end
  def test_costpercapita_bb76; assert_in_delta(0, (worksheet.costpercapita_bb76||0), 0.001); end
  def test_costpercapita_bb77; assert_in_epsilon(28.750009999795996, worksheet.costpercapita_bb77, 0.001); end
  def test_costpercapita_bb78; assert_in_epsilon(22.189189383454302, worksheet.costpercapita_bb78, 0.001); end
  def test_costpercapita_bb79; assert_in_delta(0, (worksheet.costpercapita_bb79||0), 0.001); end
  def test_costpercapita_bb80; assert_in_epsilon(153.41704359778043, worksheet.costpercapita_bb80, 0.001); end
  def test_costpercapita_bb81; assert_in_epsilon(89.60499974858229, worksheet.costpercapita_bb81, 0.001); end
  def test_costpercapita_bb82; assert_in_epsilon(23.838475727878674, worksheet.costpercapita_bb82, 0.001); end
  def test_costpercapita_bb83; assert_in_epsilon(23.474713793104854, worksheet.costpercapita_bb83, 0.001); end
  def test_costpercapita_bb84; assert_in_epsilon(3.4752088571803905, worksheet.costpercapita_bb84, 0.001); end
  def test_costpercapita_bb85; assert_in_delta(0.9523825733489011, worksheet.costpercapita_bb85, 0.001); end
  def test_costpercapita_bb86; assert_in_epsilon(79.73671149770317, worksheet.costpercapita_bb86, 0.001); end
  def test_costpercapita_bb87; assert_in_epsilon(281.9582448589248, worksheet.costpercapita_bb87, 0.001); end
  def test_costpercapita_bb88; assert_in_epsilon(83.95463491494051, worksheet.costpercapita_bb88, 0.001); end
  def test_costpercapita_bb89; assert_in_delta(0, (worksheet.costpercapita_bb89||0), 0.001); end
  def test_costpercapita_bb90; assert_in_epsilon(29.888394149848068, worksheet.costpercapita_bb90, 0.001); end
  def test_costpercapita_bb91; assert_in_epsilon(1.1363096835091842, worksheet.costpercapita_bb91, 0.001); end
  def test_costpercapita_bb92; assert_in_delta(0.6968050188241328, worksheet.costpercapita_bb92, 0.001); end
  def test_costpercapita_bb93; assert_in_epsilon(42.42706914665626, worksheet.costpercapita_bb93, 0.001); end
  def test_costpercapita_bb96; assert_in_delta(0, (worksheet.costpercapita_bb96||0), 0.001); end
  def test_costpercapita_bb97; assert_in_epsilon(2.647510749593148, worksheet.costpercapita_bb97, 0.001); end
  def test_costpercapita_bb101; assert_in_epsilon(3.908812883052839, worksheet.costpercapita_bb101, 0.001); end
  def test_costpercapita_bb105; assert_in_delta(0.5631144018735045, worksheet.costpercapita_bb105, 0.001); end
  def test_costpercapita_bb106; assert_in_epsilon(1.919144604947533, worksheet.costpercapita_bb106, 0.001); end
  def test_costpercapita_bb185; assert_in_epsilon(1114.0325807249624, worksheet.costpercapita_bb185, 0.001); end
  def test_costpercapita_bc57; assert_in_delta(0, (worksheet.costpercapita_bc57||0), 0.001); end
  def test_costpercapita_bc58; assert_in_delta(0, (worksheet.costpercapita_bc58||0), 0.001); end
  def test_costpercapita_bc59; assert_in_delta(0, (worksheet.costpercapita_bc59||0), 0.001); end
  def test_costpercapita_bc60; assert_in_delta(0, (worksheet.costpercapita_bc60||0), 0.001); end
  def test_costpercapita_bc61; assert_in_epsilon(71.74133692456894, worksheet.costpercapita_bc61, 0.001); end
  def test_costpercapita_bc62; assert_in_delta(0.059156773332617416, worksheet.costpercapita_bc62, 0.001); end
  def test_costpercapita_bc63; assert_in_epsilon(3.8017718751914056, worksheet.costpercapita_bc63, 0.001); end
  def test_costpercapita_bc64; assert_in_epsilon(12.51524959644748, worksheet.costpercapita_bc64, 0.001); end
  def test_costpercapita_bc65; assert_in_epsilon(75.70484445608898, worksheet.costpercapita_bc65, 0.001); end
  def test_costpercapita_bc66; assert_in_epsilon(68.58972858257032, worksheet.costpercapita_bc66, 0.001); end
  def test_costpercapita_bc67; assert_in_delta(0, (worksheet.costpercapita_bc67||0), 0.001); end
  def test_costpercapita_bc68; assert_in_epsilon(8.409722982055126, worksheet.costpercapita_bc68, 0.001); end
  def test_costpercapita_bc72; assert_in_epsilon(2.7964553953960527, worksheet.costpercapita_bc72, 0.001); end
  def test_costpercapita_bc73; assert_in_epsilon(22.858035828993376, worksheet.costpercapita_bc73, 0.001); end
  def test_costpercapita_bc75; assert_in_delta(0, (worksheet.costpercapita_bc75||0), 0.001); end
  def test_costpercapita_bc76; assert_in_delta(0, (worksheet.costpercapita_bc76||0), 0.001); end
  def test_costpercapita_bc77; assert_in_epsilon(29.426897210618204, worksheet.costpercapita_bc77, 0.001); end
  def test_costpercapita_bc78; assert_in_epsilon(16.671749134227337, worksheet.costpercapita_bc78, 0.001); end
  def test_costpercapita_bc79; assert_in_delta(0, (worksheet.costpercapita_bc79||0), 0.001); end
  def test_costpercapita_bc80; assert_in_epsilon(179.78314307145783, worksheet.costpercapita_bc80, 0.001); end
  def test_costpercapita_bc81; assert_in_epsilon(81.59147962977843, worksheet.costpercapita_bc81, 0.001); end
  def test_costpercapita_bc82; assert_in_epsilon(22.622860832969216, worksheet.costpercapita_bc82, 0.001); end
  def test_costpercapita_bc83; assert_in_epsilon(23.311340718896233, worksheet.costpercapita_bc83, 0.001); end
  def test_costpercapita_bc84; assert_in_epsilon(3.1722457539280358, worksheet.costpercapita_bc84, 0.001); end
  def test_costpercapita_bc85; assert_in_epsilon(1.190714031096824, worksheet.costpercapita_bc85, 0.001); end
  def test_costpercapita_bc86; assert_in_epsilon(3.303797292509197, worksheet.costpercapita_bc86, 0.001); end
  def test_costpercapita_bc87; assert_in_epsilon(331.0939880868416, worksheet.costpercapita_bc87, 0.001); end
  def test_costpercapita_bc88; assert_in_epsilon(96.74586395168961, worksheet.costpercapita_bc88, 0.001); end
  def test_costpercapita_bc89; assert_in_delta(0, (worksheet.costpercapita_bc89||0), 0.001); end
  def test_costpercapita_bc90; assert_in_epsilon(32.92320361069185, worksheet.costpercapita_bc90, 0.001); end
  def test_costpercapita_bc91; assert_in_epsilon(1.2266447446780993, worksheet.costpercapita_bc91, 0.001); end
  def test_costpercapita_bc92; assert_in_delta(0.5253118001742557, worksheet.costpercapita_bc92, 0.001); end
  def test_costpercapita_bc93; assert_in_epsilon(39.117982186834794, worksheet.costpercapita_bc93, 0.001); end
  def test_costpercapita_bc96; assert_in_delta(0, (worksheet.costpercapita_bc96||0), 0.001); end
  def test_costpercapita_bc97; assert_in_epsilon(2.4657694488228707, worksheet.costpercapita_bc97, 0.001); end
  def test_costpercapita_bc101; assert_in_epsilon(2.7978584431782956, worksheet.costpercapita_bc101, 0.001); end
  def test_costpercapita_bc105; assert_in_delta(0.4797195222291132, worksheet.costpercapita_bc105, 0.001); end
  def test_costpercapita_bc106; assert_in_epsilon(1.7952146182497613, worksheet.costpercapita_bc106, 0.001); end
  def test_costpercapita_bc185; assert_in_epsilon(1136.7220865035158, worksheet.costpercapita_bc185, 0.001); end
  def test_costpercapita_bd57; assert_in_delta(0, (worksheet.costpercapita_bd57||0), 0.001); end
  def test_costpercapita_bd58; assert_in_delta(0, (worksheet.costpercapita_bd58||0), 0.001); end
  def test_costpercapita_bd59; assert_in_delta(0, (worksheet.costpercapita_bd59||0), 0.001); end
  def test_costpercapita_bd60; assert_in_delta(0, (worksheet.costpercapita_bd60||0), 0.001); end
  def test_costpercapita_bd61; assert_in_epsilon(68.79101057009841, worksheet.costpercapita_bd61, 0.001); end
  def test_costpercapita_bd62; assert_in_delta(0.057763294374538136, worksheet.costpercapita_bd62, 0.001); end
  def test_costpercapita_bd63; assert_in_epsilon(10.564034955784797, worksheet.costpercapita_bd63, 0.001); end
  def test_costpercapita_bd64; assert_in_delta(0, (worksheet.costpercapita_bd64||0), 0.001); end
  def test_costpercapita_bd65; assert_in_epsilon(111.14317158631222, worksheet.costpercapita_bd65, 0.001); end
  def test_costpercapita_bd66; assert_in_epsilon(93.93659556813769, worksheet.costpercapita_bd66, 0.001); end
  def test_costpercapita_bd67; assert_in_delta(0, (worksheet.costpercapita_bd67||0), 0.001); end
  def test_costpercapita_bd68; assert_in_epsilon(9.866885416700796, worksheet.costpercapita_bd68, 0.001); end
  def test_costpercapita_bd72; assert_in_epsilon(2.623136511419169, worksheet.costpercapita_bd72, 0.001); end
  def test_costpercapita_bd73; assert_in_epsilon(22.5428023848534, worksheet.costpercapita_bd73, 0.001); end
  def test_costpercapita_bd75; assert_in_delta(0, (worksheet.costpercapita_bd75||0), 0.001); end
  def test_costpercapita_bd76; assert_in_delta(0, (worksheet.costpercapita_bd76||0), 0.001); end
  def test_costpercapita_bd77; assert_in_epsilon(32.980570260664074, worksheet.costpercapita_bd77, 0.001); end
  def test_costpercapita_bd78; assert_in_epsilon(19.268334639493368, worksheet.costpercapita_bd78, 0.001); end
  def test_costpercapita_bd79; assert_in_delta(0, (worksheet.costpercapita_bd79||0), 0.001); end
  def test_costpercapita_bd80; assert_in_epsilon(205.3297253812234, worksheet.costpercapita_bd80, 0.001); end
  def test_costpercapita_bd81; assert_in_epsilon(73.38759435004849, worksheet.costpercapita_bd81, 0.001); end
  def test_costpercapita_bd82; assert_in_epsilon(21.731930311681445, worksheet.costpercapita_bd82, 0.001); end
  def test_costpercapita_bd83; assert_in_epsilon(23.142535706109697, worksheet.costpercapita_bd83, 0.001); end
  def test_costpercapita_bd84; assert_in_epsilon(2.9189514330538153, worksheet.costpercapita_bd84, 0.001); end
  def test_costpercapita_bd85; assert_in_epsilon(1.6060592165100893, worksheet.costpercapita_bd85, 0.001); end
  def test_costpercapita_bd86; assert_in_epsilon(80.21402006348666, worksheet.costpercapita_bd86, 0.001); end
  def test_costpercapita_bd87; assert_in_epsilon(104.35013094193941, worksheet.costpercapita_bd87, 0.001); end
  def test_costpercapita_bd88; assert_in_epsilon(154.03826386622163, worksheet.costpercapita_bd88, 0.001); end
  def test_costpercapita_bd89; assert_in_delta(0, (worksheet.costpercapita_bd89||0), 0.001); end
  def test_costpercapita_bd90; assert_in_epsilon(35.947635508588164, worksheet.costpercapita_bd90, 0.001); end
  def test_costpercapita_bd91; assert_in_epsilon(1.1660754601210033, worksheet.costpercapita_bd91, 0.001); end
  def test_costpercapita_bd92; assert_in_delta(0.37794998290471005, worksheet.costpercapita_bd92, 0.001); end
  def test_costpercapita_bd93; assert_in_epsilon(36.199806533864745, worksheet.costpercapita_bd93, 0.001); end
  def test_costpercapita_bd96; assert_in_delta(0, (worksheet.costpercapita_bd96||0), 0.001); end
  def test_costpercapita_bd97; assert_in_epsilon(2.32502069045198, worksheet.costpercapita_bd97, 0.001); end
  def test_costpercapita_bd101; assert_in_epsilon(1.8450191702618242, worksheet.costpercapita_bd101, 0.001); end
  def test_costpercapita_bd105; assert_in_delta(0.391008049547608, worksheet.costpercapita_bd105, 0.001); end
  def test_costpercapita_bd106; assert_in_epsilon(1.7416743801559067, worksheet.costpercapita_bd106, 0.001); end
  def test_costpercapita_bd185; assert_in_epsilon(1118.4877062340092, worksheet.costpercapita_bd185, 0.001); end
  def test_costpercapita_be57; assert_in_delta(0, (worksheet.costpercapita_be57||0), 0.001); end
  def test_costpercapita_be58; assert_in_delta(0, (worksheet.costpercapita_be58||0), 0.001); end
  def test_costpercapita_be59; assert_in_delta(0, (worksheet.costpercapita_be59||0), 0.001); end
  def test_costpercapita_be60; assert_in_delta(0, (worksheet.costpercapita_be60||0), 0.001); end
  def test_costpercapita_be61; assert_in_epsilon(66.09041763744877, worksheet.costpercapita_be61, 0.001); end
  def test_costpercapita_be62; assert_in_delta(0.056531412047084034, worksheet.costpercapita_be62, 0.001); end
  def test_costpercapita_be63; assert_in_epsilon(20.906682200075053, worksheet.costpercapita_be63, 0.001); end
  def test_costpercapita_be64; assert_in_delta(0.06711258948130498, worksheet.costpercapita_be64, 0.001); end
  def test_costpercapita_be65; assert_in_epsilon(165.29286553768557, worksheet.costpercapita_be65, 0.001); end
  def test_costpercapita_be66; assert_in_epsilon(119.57974054922482, worksheet.costpercapita_be66, 0.001); end
  def test_costpercapita_be67; assert_in_delta(0, (worksheet.costpercapita_be67||0), 0.001); end
  def test_costpercapita_be68; assert_in_epsilon(13.709775670550892, worksheet.costpercapita_be68, 0.001); end
  def test_costpercapita_be72; assert_in_epsilon(2.464695262506646, worksheet.costpercapita_be72, 0.001); end
  def test_costpercapita_be73; assert_in_epsilon(21.666755432168156, worksheet.costpercapita_be73, 0.001); end
  def test_costpercapita_be75; assert_in_delta(0, (worksheet.costpercapita_be75||0), 0.001); end
  def test_costpercapita_be76; assert_in_delta(0, (worksheet.costpercapita_be76||0), 0.001); end
  def test_costpercapita_be77; assert_in_epsilon(35.079554753395755, worksheet.costpercapita_be77, 0.001); end
  def test_costpercapita_be78; assert_in_delta(0, (worksheet.costpercapita_be78||0), 0.001); end
  def test_costpercapita_be79; assert_in_delta(0, (worksheet.costpercapita_be79||0), 0.001); end
  def test_costpercapita_be80; assert_in_epsilon(230.71256450272912, worksheet.costpercapita_be80, 0.001); end
  def test_costpercapita_be81; assert_in_epsilon(68.43357763363497, worksheet.costpercapita_be81, 0.001); end
  def test_costpercapita_be82; assert_in_epsilon(21.225960833628086, worksheet.costpercapita_be82, 0.001); end
  def test_costpercapita_be83; assert_in_epsilon(23.042569469236454, worksheet.costpercapita_be83, 0.001); end
  def test_costpercapita_be84; assert_in_epsilon(2.703563026027374, worksheet.costpercapita_be84, 0.001); end
  def test_costpercapita_be85; assert_in_epsilon(2.2850637740676576, worksheet.costpercapita_be85, 0.001); end
  def test_costpercapita_be86; assert_in_epsilon(65.19884492378492, worksheet.costpercapita_be86, 0.001); end
  def test_costpercapita_be87; assert_in_epsilon(70.11339921169424, worksheet.costpercapita_be87, 0.001); end
  def test_costpercapita_be88; assert_in_epsilon(164.9706724742324, worksheet.costpercapita_be88, 0.001); end
  def test_costpercapita_be89; assert_in_delta(0, (worksheet.costpercapita_be89||0), 0.001); end
  def test_costpercapita_be90; assert_in_epsilon(38.98406272826085, worksheet.costpercapita_be90, 0.001); end
  def test_costpercapita_be91; assert_in_epsilon(1.149230563918109, worksheet.costpercapita_be91, 0.001); end
  def test_costpercapita_be92; assert_in_delta(0.25933203796761367, worksheet.costpercapita_be92, 0.001); end
  def test_costpercapita_be93; assert_in_epsilon(36.81965604917715, worksheet.costpercapita_be93, 0.001); end
  def test_costpercapita_be96; assert_in_delta(0, (worksheet.costpercapita_be96||0), 0.001); end
  def test_costpercapita_be97; assert_in_epsilon(2.212835295139949, worksheet.costpercapita_be97, 0.001); end
  def test_costpercapita_be101; assert_in_epsilon(1.3981321237272832, worksheet.costpercapita_be101, 0.001); end
  def test_costpercapita_be105; assert_in_delta(0.32068513544154237, worksheet.costpercapita_be105, 0.001); end
  def test_costpercapita_be106; assert_in_epsilon(1.7869433813630782, worksheet.costpercapita_be106, 0.001); end
  def test_costpercapita_be185; assert_in_epsilon(1176.5312242086147, worksheet.costpercapita_be185, 0.001); end
  def test_costpercapita_bf57; assert_in_delta(0, (worksheet.costpercapita_bf57||0), 0.001); end
  def test_costpercapita_bf58; assert_in_delta(0, (worksheet.costpercapita_bf58||0), 0.001); end
  def test_costpercapita_bf59; assert_in_delta(0, (worksheet.costpercapita_bf59||0), 0.001); end
  def test_costpercapita_bf60; assert_in_delta(0, (worksheet.costpercapita_bf60||0), 0.001); end
  def test_costpercapita_bf61; assert_in_epsilon(63.56312799880172, worksheet.costpercapita_bf61, 0.001); end
  def test_costpercapita_bf62; assert_in_delta(0.055403727658756376, worksheet.costpercapita_bf62, 0.001); end
  def test_costpercapita_bf63; assert_in_epsilon(34.417096351751056, worksheet.costpercapita_bf63, 0.001); end
  def test_costpercapita_bf64; assert_in_delta(0.5081489369015821, worksheet.costpercapita_bf64, 0.001); end
  def test_costpercapita_bf65; assert_in_epsilon(208.77363879159418, worksheet.costpercapita_bf65, 0.001); end
  def test_costpercapita_bf66; assert_in_epsilon(145.49109434337498, worksheet.costpercapita_bf66, 0.001); end
  def test_costpercapita_bf67; assert_in_delta(0, (worksheet.costpercapita_bf67||0), 0.001); end
  def test_costpercapita_bf68; assert_in_epsilon(20.56172637627021, worksheet.costpercapita_bf68, 0.001); end
  def test_costpercapita_bf72; assert_in_epsilon(2.3175460045378453, worksheet.costpercapita_bf72, 0.001); end
  def test_costpercapita_bf73; assert_in_epsilon(21.103706333411633, worksheet.costpercapita_bf73, 0.001); end
  def test_costpercapita_bf75; assert_in_delta(0, (worksheet.costpercapita_bf75||0), 0.001); end
  def test_costpercapita_bf76; assert_in_delta(0, (worksheet.costpercapita_bf76||0), 0.001); end
  def test_costpercapita_bf77; assert_in_epsilon(37.550561259190445, worksheet.costpercapita_bf77, 0.001); end
  def test_costpercapita_bf78; assert_in_epsilon(15.248882158063827, worksheet.costpercapita_bf78, 0.001); end
  def test_costpercapita_bf79; assert_in_delta(0, (worksheet.costpercapita_bf79||0), 0.001); end
  def test_costpercapita_bf80; assert_in_epsilon(261.6203791136799, worksheet.costpercapita_bf80, 0.001); end
  def test_costpercapita_bf81; assert_in_epsilon(60.55361710452525, worksheet.costpercapita_bf81, 0.001); end
  def test_costpercapita_bf82; assert_in_epsilon(20.88321384683194, worksheet.costpercapita_bf82, 0.001); end
  def test_costpercapita_bf83; assert_in_epsilon(22.98075681166255, worksheet.costpercapita_bf83, 0.001); end
  def test_costpercapita_bf84; assert_in_epsilon(2.518646985355431, worksheet.costpercapita_bf84, 0.001); end
  def test_costpercapita_bf85; assert_in_epsilon(3.423469614655116, worksheet.costpercapita_bf85, 0.001); end
  def test_costpercapita_bf86; assert_in_epsilon(24.08014341052743, worksheet.costpercapita_bf86, 0.001); end
  def test_costpercapita_bf87; assert_in_epsilon(81.32001724451202, worksheet.costpercapita_bf87, 0.001); end
  def test_costpercapita_bf88; assert_in_epsilon(165.94929163938747, worksheet.costpercapita_bf88, 0.001); end
  def test_costpercapita_bf89; assert_in_delta(0, (worksheet.costpercapita_bf89||0), 0.001); end
  def test_costpercapita_bf90; assert_in_epsilon(42.027825119858015, worksheet.costpercapita_bf90, 0.001); end
  def test_costpercapita_bf91; assert_in_epsilon(1.1286925210373726, worksheet.costpercapita_bf91, 0.001); end
  def test_costpercapita_bf92; assert_in_delta(0.1622312899032017, worksheet.costpercapita_bf92, 0.001); end
  def test_costpercapita_bf93; assert_in_epsilon(44.84308983352048, worksheet.costpercapita_bf93, 0.001); end
  def test_costpercapita_bf96; assert_in_delta(0, (worksheet.costpercapita_bf96||0), 0.001); end
  def test_costpercapita_bf97; assert_in_epsilon(2.121220547710623, worksheet.costpercapita_bf97, 0.001); end
  def test_costpercapita_bf101; assert_in_delta(0.9175876446763311, worksheet.costpercapita_bf101, 0.001); end
  def test_costpercapita_bf105; assert_in_delta(0.3106935880901415, worksheet.costpercapita_bf105, 0.001); end
  def test_costpercapita_bf106; assert_in_epsilon(1.9160274527431147, worksheet.costpercapita_bf106, 0.001); end
  def test_costpercapita_bf185; assert_in_epsilon(1286.3478360502324, worksheet.costpercapita_bf185, 0.001); end
  def test_costpercapita_bg57; assert_in_delta(0, (worksheet.costpercapita_bg57||0), 0.001); end
  def test_costpercapita_bg58; assert_in_delta(0, (worksheet.costpercapita_bg58||0), 0.001); end
  def test_costpercapita_bg59; assert_in_delta(0, (worksheet.costpercapita_bg59||0), 0.001); end
  def test_costpercapita_bg60; assert_in_delta(0, (worksheet.costpercapita_bg60||0), 0.001); end
  def test_costpercapita_bg61; assert_in_epsilon(60.47875002060088, worksheet.costpercapita_bg61, 0.001); end
  def test_costpercapita_bg62; assert_in_delta(0.05436979796257483, worksheet.costpercapita_bg62, 0.001); end
  def test_costpercapita_bg63; assert_in_epsilon(14.796684315701253, worksheet.costpercapita_bg63, 0.001); end
  def test_costpercapita_bg64; assert_in_epsilon(3.847687698499422, worksheet.costpercapita_bg64, 0.001); end
  def test_costpercapita_bg65; assert_in_epsilon(242.32888890805225, worksheet.costpercapita_bg65, 0.001); end
  def test_costpercapita_bg66; assert_in_epsilon(171.5452748100827, worksheet.costpercapita_bg66, 0.001); end
  def test_costpercapita_bg67; assert_in_delta(0, (worksheet.costpercapita_bg67||0), 0.001); end
  def test_costpercapita_bg68; assert_in_epsilon(9.17723550414888, worksheet.costpercapita_bg68, 0.001); end
  def test_costpercapita_bg72; assert_in_epsilon(2.180436743960198, worksheet.costpercapita_bg72, 0.001); end
  def test_costpercapita_bg73; assert_in_epsilon(20.645000519255262, worksheet.costpercapita_bg73, 0.001); end
  def test_costpercapita_bg75; assert_in_delta(0, (worksheet.costpercapita_bg75||0), 0.001); end
  def test_costpercapita_bg76; assert_in_delta(0, (worksheet.costpercapita_bg76||0), 0.001); end
  def test_costpercapita_bg77; assert_in_epsilon(37.778754246385546, worksheet.costpercapita_bg77, 0.001); end
  def test_costpercapita_bg78; assert_in_delta(0, (worksheet.costpercapita_bg78||0), 0.001); end
  def test_costpercapita_bg79; assert_in_delta(0, (worksheet.costpercapita_bg79||0), 0.001); end
  def test_costpercapita_bg80; assert_in_epsilon(292.5792763505415, worksheet.costpercapita_bg80, 0.001); end
  def test_costpercapita_bg81; assert_in_epsilon(57.707658001090806, worksheet.costpercapita_bg81, 0.001); end
  def test_costpercapita_bg82; assert_in_epsilon(20.697745918415457, worksheet.costpercapita_bg82, 0.001); end
  def test_costpercapita_bg83; assert_in_epsilon(23.11356017122203, worksheet.costpercapita_bg83, 0.001); end
  def test_costpercapita_bg84; assert_in_epsilon(2.360014426658825, worksheet.costpercapita_bg84, 0.001); end
  def test_costpercapita_bg85; assert_in_epsilon(5.32979470889095, worksheet.costpercapita_bg85, 0.001); end
  def test_costpercapita_bg86; assert_in_epsilon(6.9594435127677245, worksheet.costpercapita_bg86, 0.001); end
  def test_costpercapita_bg87; assert_in_epsilon(66.43031515297241, worksheet.costpercapita_bg87, 0.001); end
  def test_costpercapita_bg88; assert_in_epsilon(161.09332170123955, worksheet.costpercapita_bg88, 0.001); end
  def test_costpercapita_bg89; assert_in_delta(0, (worksheet.costpercapita_bg89||0), 0.001); end
  def test_costpercapita_bg90; assert_in_epsilon(45.0697320238142, worksheet.costpercapita_bg90, 0.001); end
  def test_costpercapita_bg91; assert_in_epsilon(1.1060752132292082, worksheet.costpercapita_bg91, 0.001); end
  def test_costpercapita_bg92; assert_in_delta(0.08173427555910949, worksheet.costpercapita_bg92, 0.001); end
  def test_costpercapita_bg93; assert_in_epsilon(46.14407446283713, worksheet.costpercapita_bg93, 0.001); end
  def test_costpercapita_bg96; assert_in_delta(0, (worksheet.costpercapita_bg96||0), 0.001); end
  def test_costpercapita_bg97; assert_in_epsilon(2.0455864955261207, worksheet.costpercapita_bg97, 0.001); end
  def test_costpercapita_bg101; assert_in_delta(0.4139434987789633, worksheet.costpercapita_bg101, 0.001); end
  def test_costpercapita_bg105; assert_in_delta(0.3079312216357534, worksheet.costpercapita_bg105, 0.001); end
  def test_costpercapita_bg106; assert_in_epsilon(2.1906283217933065, worksheet.costpercapita_bg106, 0.001); end
  def test_costpercapita_bg185; assert_in_epsilon(1296.4639180216218, worksheet.costpercapita_bg185, 0.001); end
  def test_costpercapita_bi57; assert_in_delta(0, (worksheet.costpercapita_bi57||0), 0.001); end
  def test_costpercapita_bi58; assert_in_delta(0, (worksheet.costpercapita_bi58||0), 0.001); end
  def test_costpercapita_bi59; assert_in_delta(0, (worksheet.costpercapita_bi59||0), 0.001); end
  def test_costpercapita_bi60; assert_in_epsilon(4.367321088711529, worksheet.costpercapita_bi60, 0.001); end
  def test_costpercapita_bi61; assert_in_epsilon(3.3146990923673254, worksheet.costpercapita_bi61, 0.001); end
  def test_costpercapita_bi62; assert_in_delta(0.4119846684939789, worksheet.costpercapita_bi62, 0.001); end
  def test_costpercapita_bi63; assert_in_delta(0.008934545526508228, worksheet.costpercapita_bi63, 0.001); end
  def test_costpercapita_bi64; assert_in_delta(0, (worksheet.costpercapita_bi64||0), 0.001); end
  def test_costpercapita_bi65; assert_in_epsilon(64.04030166059455, worksheet.costpercapita_bi65, 0.001); end
  def test_costpercapita_bi66; assert_in_epsilon(4.814267174354616, worksheet.costpercapita_bi66, 0.001); end
  def test_costpercapita_bi67; assert_in_delta(0.12056887553299535, worksheet.costpercapita_bi67, 0.001); end
  def test_costpercapita_bi68; assert_in_epsilon(6.192701302702139, worksheet.costpercapita_bi68, 0.001); end
  def test_costpercapita_bi72; assert_in_delta(0.9842887741493159, worksheet.costpercapita_bi72, 0.001); end
  def test_costpercapita_bi73; assert_in_epsilon(13.264501267803897, worksheet.costpercapita_bi73, 0.001); end
  def test_costpercapita_bi75; assert_in_delta(0, (worksheet.costpercapita_bi75||0), 0.001); end
  def test_costpercapita_bi76; assert_in_delta(0, (worksheet.costpercapita_bi76||0), 0.001); end
  def test_costpercapita_bi77; assert_in_epsilon(7.940537109875805, worksheet.costpercapita_bi77, 0.001); end
  def test_costpercapita_bi78; assert_in_delta(0, (worksheet.costpercapita_bi78||0), 0.001); end
  def test_costpercapita_bi79; assert_in_delta(0, (worksheet.costpercapita_bi79||0), 0.001); end
  def test_costpercapita_bi81; assert_in_epsilon(65.02524361880178, worksheet.costpercapita_bi81, 0.001); end
  def test_costpercapita_bi82; assert_in_epsilon(10.200940880854802, worksheet.costpercapita_bi82, 0.001); end
  def test_costpercapita_bi83; assert_in_epsilon(13.906601736886792, worksheet.costpercapita_bi83, 0.001); end
  def test_costpercapita_bi84; assert_in_delta(0.9206942277489177, worksheet.costpercapita_bi84, 0.001); end
  def test_costpercapita_bi85; assert_in_delta(0.37903702991849003, worksheet.costpercapita_bi85, 0.001); end
  def test_costpercapita_bi86; assert_in_epsilon(231.6987357122909, worksheet.costpercapita_bi86, 0.001); end
  def test_costpercapita_bi87; assert_in_delta(0.5089069695697457, worksheet.costpercapita_bi87, 0.001); end
  def test_costpercapita_bi88; assert_in_delta(0, (worksheet.costpercapita_bi88||0), 0.001); end
  def test_costpercapita_bi89; assert_in_delta(0, (worksheet.costpercapita_bi89||0), 0.001); end
  def test_costpercapita_bi91; assert_in_delta(0.828607306757057, worksheet.costpercapita_bi91, 0.001); end
  def test_costpercapita_bi92; assert_in_delta(0.7493822341276288, worksheet.costpercapita_bi92, 0.001); end
  def test_costpercapita_bi93; assert_in_epsilon(22.394720879097733, worksheet.costpercapita_bi93, 0.001); end
  def test_costpercapita_bi96; assert_in_delta(0, (worksheet.costpercapita_bi96||0), 0.001); end
  def test_costpercapita_bi97; assert_in_epsilon(2.0700193895530417, worksheet.costpercapita_bi97, 0.001); end
  def test_costpercapita_bi101; assert_in_epsilon(6.474768717222489, worksheet.costpercapita_bi101, 0.001); end
  def test_costpercapita_bi105; assert_in_delta(0.20211332514651353, worksheet.costpercapita_bi105, 0.001); end
  def test_costpercapita_bi106; assert_in_delta(0, (worksheet.costpercapita_bi106||0), 0.001); end
  def test_costpercapita_bi185; assert_in_epsilon(518.8478308674881, worksheet.costpercapita_bi185, 0.001); end
  def test_costpercapita_bj57; assert_in_epsilon(1.4681139534111989, worksheet.costpercapita_bj57, 0.001); end
  def test_costpercapita_bj58; assert_in_epsilon(1.8861658051861525, worksheet.costpercapita_bj58, 0.001); end
  def test_costpercapita_bj59; assert_in_delta(0, (worksheet.costpercapita_bj59||0), 0.001); end
  def test_costpercapita_bj60; assert_in_epsilon(10.434733577317568, worksheet.costpercapita_bj60, 0.001); end
  def test_costpercapita_bj61; assert_in_epsilon(22.579413839298653, worksheet.costpercapita_bj61, 0.001); end
  def test_costpercapita_bj62; assert_in_delta(0.5281712518783345, worksheet.costpercapita_bj62, 0.001); end
  def test_costpercapita_bj63; assert_in_delta(0.24077726912107336, worksheet.costpercapita_bj63, 0.001); end
  def test_costpercapita_bj64; assert_in_delta(0.09023676197310414, worksheet.costpercapita_bj64, 0.001); end
  def test_costpercapita_bj65; assert_in_epsilon(160.09842813238023, worksheet.costpercapita_bj65, 0.001); end
  def test_costpercapita_bj66; assert_in_epsilon(26.052259378018867, worksheet.costpercapita_bj66, 0.001); end
  def test_costpercapita_bj67; assert_in_epsilon(2.3375320263243267, worksheet.costpercapita_bj67, 0.001); end
  def test_costpercapita_bj68; assert_in_epsilon(17.63994098524373, worksheet.costpercapita_bj68, 0.001); end
  def test_costpercapita_bj72; assert_in_epsilon(3.2086750528914427, worksheet.costpercapita_bj72, 0.001); end
  def test_costpercapita_bj73; assert_in_epsilon(35.57842230932642, worksheet.costpercapita_bj73, 0.001); end
  def test_costpercapita_bj75; assert_in_delta(0, (worksheet.costpercapita_bj75||0), 0.001); end
  def test_costpercapita_bj76; assert_in_delta(0, (worksheet.costpercapita_bj76||0), 0.001); end
  def test_costpercapita_bj77; assert_in_epsilon(24.67052554923284, worksheet.costpercapita_bj77, 0.001); end
  def test_costpercapita_bj78; assert_in_epsilon(1.1356713183051916, worksheet.costpercapita_bj78, 0.001); end
  def test_costpercapita_bj79; assert_in_delta(0, (worksheet.costpercapita_bj79||0), 0.001); end
  def test_costpercapita_bj80; assert_in_epsilon(95.88028534467097, worksheet.costpercapita_bj80, 0.001); end
  def test_costpercapita_bj81; assert_in_epsilon(168.512944658043, worksheet.costpercapita_bj81, 0.001); end
  def test_costpercapita_bj82; assert_in_epsilon(33.82023485747562, worksheet.costpercapita_bj82, 0.001); end
  def test_costpercapita_bj83; assert_in_epsilon(37.012947878092376, worksheet.costpercapita_bj83, 0.001); end
  def test_costpercapita_bj84; assert_in_epsilon(5.1498161766787875, worksheet.costpercapita_bj84, 0.001); end
  def test_costpercapita_bj85; assert_in_delta(0.9873576744978526, worksheet.costpercapita_bj85, 0.001); end
  def test_costpercapita_bj86; assert_in_epsilon(557.6270145933079, worksheet.costpercapita_bj86, 0.001); end
  def test_costpercapita_bj87; assert_in_epsilon(20.996673945006354, worksheet.costpercapita_bj87, 0.001); end
  def test_costpercapita_bj88; assert_in_epsilon(20.532440679461594, worksheet.costpercapita_bj88, 0.001); end
  def test_costpercapita_bj89; assert_in_delta(0, (worksheet.costpercapita_bj89||0), 0.001); end
  def test_costpercapita_bj90; assert_in_epsilon(22.223494767699332, worksheet.costpercapita_bj90, 0.001); end
  def test_costpercapita_bj91; assert_in_epsilon(1.8418385744855774, worksheet.costpercapita_bj91, 0.001); end
  def test_costpercapita_bj92; assert_in_epsilon(1.801028534725372, worksheet.costpercapita_bj92, 0.001); end
  def test_costpercapita_bj93; assert_in_epsilon(75.43874088811226, worksheet.costpercapita_bj93, 0.001); end
  def test_costpercapita_bj96; assert_in_delta(0, (worksheet.costpercapita_bj96||0), 0.001); end
  def test_costpercapita_bj97; assert_in_epsilon(5.144299765149913, worksheet.costpercapita_bj97, 0.001); end
  def test_costpercapita_bj101; assert_in_epsilon(11.862904775654322, worksheet.costpercapita_bj101, 0.001); end
  def test_costpercapita_bj105; assert_in_delta(0.3857316344856823, worksheet.costpercapita_bj105, 0.001); end
  def test_costpercapita_bj106; assert_in_delta(0.9406707420018201, worksheet.costpercapita_bj106, 0.001); end
  def test_costpercapita_bj185; assert_in_epsilon(1368.1074926994581, worksheet.costpercapita_bj185, 0.001); end
  def test_costpercapita_bk57; assert_in_epsilon(1.4200506179307655, worksheet.costpercapita_bk57, 0.001); end
  def test_costpercapita_bk58; assert_in_epsilon(2.909402516486328, worksheet.costpercapita_bk58, 0.001); end
  def test_costpercapita_bk59; assert_in_delta(0, (worksheet.costpercapita_bk59||0), 0.001); end
  def test_costpercapita_bk60; assert_in_epsilon(16.003902691053227, worksheet.costpercapita_bk60, 0.001); end
  def test_costpercapita_bk61; assert_in_epsilon(76.72123090618133, worksheet.costpercapita_bk61, 0.001); end
  def test_costpercapita_bk62; assert_in_delta(0.6364032194103946, worksheet.costpercapita_bk62, 0.001); end
  def test_costpercapita_bk63; assert_in_epsilon(2.016452477834883, worksheet.costpercapita_bk63, 0.001); end
  def test_costpercapita_bk64; assert_in_delta(0.680377571849432, worksheet.costpercapita_bk64, 0.001); end
  def test_costpercapita_bk65; assert_in_epsilon(244.93378630906898, worksheet.costpercapita_bk65, 0.001); end
  def test_costpercapita_bk66; assert_in_epsilon(59.96906396135028, worksheet.costpercapita_bk66, 0.001); end
  def test_costpercapita_bk67; assert_in_epsilon(3.536917875039582, worksheet.costpercapita_bk67, 0.001); end
  def test_costpercapita_bk68; assert_in_epsilon(25.99607494460732, worksheet.costpercapita_bk68, 0.001); end
  def test_costpercapita_bk72; assert_in_epsilon(5.969978980208543, worksheet.costpercapita_bk72, 0.001); end
  def test_costpercapita_bk73; assert_in_epsilon(58.54552199998069, worksheet.costpercapita_bk73, 0.001); end
  def test_costpercapita_bk75; assert_in_delta(0, (worksheet.costpercapita_bk75||0), 0.001); end
  def test_costpercapita_bk76; assert_in_delta(0, (worksheet.costpercapita_bk76||0), 0.001); end
  def test_costpercapita_bk77; assert_in_epsilon(48.38203814084235, worksheet.costpercapita_bk77, 0.001); end
  def test_costpercapita_bk78; assert_in_epsilon(9.517502469580409, worksheet.costpercapita_bk78, 0.001); end
  def test_costpercapita_bk79; assert_in_delta(0, (worksheet.costpercapita_bk79||0), 0.001); end
  def test_costpercapita_bk80; assert_in_epsilon(239.04081426314346, worksheet.costpercapita_bk80, 0.001); end
  def test_costpercapita_bk81; assert_in_epsilon(266.06827756782485, worksheet.costpercapita_bk81, 0.001); end
  def test_costpercapita_bk82; assert_in_epsilon(58.049658922315786, worksheet.costpercapita_bk82, 0.001); end
  def test_costpercapita_bk83; assert_in_epsilon(59.35550585461566, worksheet.costpercapita_bk83, 0.001); end
  def test_costpercapita_bk84; assert_in_epsilon(8.817841313039805, worksheet.costpercapita_bk84, 0.001); end
  def test_costpercapita_bk85; assert_in_epsilon(1.7728929320254811, worksheet.costpercapita_bk85, 0.001); end
  def test_costpercapita_bk86; assert_in_epsilon(832.5786139254944, worksheet.costpercapita_bk86, 0.001); end
  def test_costpercapita_bk87; assert_in_epsilon(47.215360647918146, worksheet.costpercapita_bk87, 0.001); end
  def test_costpercapita_bk88; assert_in_epsilon(45.09580464990939, worksheet.costpercapita_bk88, 0.001); end
  def test_costpercapita_bk89; assert_in_delta(0, (worksheet.costpercapita_bk89||0), 0.001); end
  def test_costpercapita_bk90; assert_in_epsilon(27.445269700923962, worksheet.costpercapita_bk90, 0.001); end
  def test_costpercapita_bk91; assert_in_epsilon(3.068527403552156, worksheet.costpercapita_bk91, 0.001); end
  def test_costpercapita_bk92; assert_in_epsilon(2.623093909865006, worksheet.costpercapita_bk92, 0.001); end
  def test_costpercapita_bk93; assert_in_epsilon(98.28384040809031, worksheet.costpercapita_bk93, 0.001); end
  def test_costpercapita_bk96; assert_in_delta(0, (worksheet.costpercapita_bk96||0), 0.001); end
  def test_costpercapita_bk97; assert_in_epsilon(7.856307058649302, worksheet.costpercapita_bk97, 0.001); end
  def test_costpercapita_bk101; assert_in_epsilon(16.501865814003562, worksheet.costpercapita_bk101, 0.001); end
  def test_costpercapita_bk105; assert_in_epsilon(1.0134366927765912, worksheet.costpercapita_bk105, 0.001); end
  def test_costpercapita_bk106; assert_in_epsilon(3.0098424381918316, worksheet.costpercapita_bk106, 0.001); end
  def test_costpercapita_bk185; assert_in_epsilon(2275.035658183764, worksheet.costpercapita_bk185, 0.001); end
  def test_costpercapita_bl57; assert_in_epsilon(1.376080916476219, worksheet.costpercapita_bl57, 0.001); end
  def test_costpercapita_bl58; assert_in_epsilon(2.8193173051243434, worksheet.costpercapita_bl58, 0.001); end
  def test_costpercapita_bl59; assert_in_delta(0, (worksheet.costpercapita_bl59||0), 0.001); end
  def test_costpercapita_bl60; assert_in_epsilon(21.141851713261254, worksheet.costpercapita_bl60, 0.001); end
  def test_costpercapita_bl61; assert_in_epsilon(137.415767457622, worksheet.costpercapita_bl61, 0.001); end
  def test_costpercapita_bl62; assert_in_delta(0.6775163040780796, worksheet.costpercapita_bl62, 0.001); end
  def test_costpercapita_bl63; assert_in_epsilon(3.6247479356150025, worksheet.costpercapita_bl63, 0.001); end
  def test_costpercapita_bl64; assert_in_epsilon(5.118521818175581, worksheet.costpercapita_bl64, 0.001); end
  def test_costpercapita_bl65; assert_in_epsilon(319.9091863724084, worksheet.costpercapita_bl65, 0.001); end
  def test_costpercapita_bl66; assert_in_epsilon(106.2548851070414, worksheet.costpercapita_bl66, 0.001); end
  def test_costpercapita_bl67; assert_in_epsilon(3.427402607716681, worksheet.costpercapita_bl67, 0.001); end
  def test_costpercapita_bl68; assert_in_epsilon(33.19984695762448, worksheet.costpercapita_bl68, 0.001); end
  def test_costpercapita_bl72; assert_in_epsilon(7.71122411325883, worksheet.costpercapita_bl72, 0.001); end
  def test_costpercapita_bl73; assert_in_epsilon(67.78018283363917, worksheet.costpercapita_bl73, 0.001); end
  def test_costpercapita_bl75; assert_in_delta(0, (worksheet.costpercapita_bl75||0), 0.001); end
  def test_costpercapita_bl76; assert_in_delta(0, (worksheet.costpercapita_bl76||0), 0.001); end
  def test_costpercapita_bl77; assert_in_epsilon(75.6339721242248, worksheet.costpercapita_bl77, 0.001); end
  def test_costpercapita_bl78; assert_in_epsilon(31.411996905617872, worksheet.costpercapita_bl78, 0.001); end
  def test_costpercapita_bl79; assert_in_delta(0, (worksheet.costpercapita_bl79||0), 0.001); end
  def test_costpercapita_bl80; assert_in_epsilon(342.1873484385744, worksheet.costpercapita_bl80, 0.001); end
  def test_costpercapita_bl81; assert_in_epsilon(347.4348789216867, worksheet.costpercapita_bl81, 0.001); end
  def test_costpercapita_bl82; assert_in_epsilon(70.8445405416842, worksheet.costpercapita_bl82, 0.001); end
  def test_costpercapita_bl83; assert_in_epsilon(68.3873656706561, worksheet.costpercapita_bl83, 0.001); end
  def test_costpercapita_bl84; assert_in_epsilon(11.18549811143143, worksheet.costpercapita_bl84, 0.001); end
  def test_costpercapita_bl85; assert_in_epsilon(2.326819849906861, worksheet.costpercapita_bl85, 0.001); end
  def test_costpercapita_bl86; assert_in_epsilon(676.5231072071563, worksheet.costpercapita_bl86, 0.001); end
  def test_costpercapita_bl87; assert_in_epsilon(327.25037849973165, worksheet.costpercapita_bl87, 0.001); end
  def test_costpercapita_bl88; assert_in_epsilon(127.6541167561613, worksheet.costpercapita_bl88, 0.001); end
  def test_costpercapita_bl89; assert_in_delta(0, (worksheet.costpercapita_bl89||0), 0.001); end
  def test_costpercapita_bl90; assert_in_epsilon(29.888394149848068, worksheet.costpercapita_bl90, 0.001); end
  def test_costpercapita_bl91; assert_in_epsilon(4.109824816276314, worksheet.costpercapita_bl91, 0.001); end
  def test_costpercapita_bl92; assert_in_epsilon(3.238678826639491, worksheet.costpercapita_bl92, 0.001); end
  def test_costpercapita_bl93; assert_in_epsilon(87.256726119949, worksheet.costpercapita_bl93, 0.001); end
  def test_costpercapita_bl96; assert_in_delta(0, (worksheet.costpercapita_bl96||0), 0.001); end
  def test_costpercapita_bl97; assert_in_epsilon(8.38428511590707, worksheet.costpercapita_bl97, 0.001); end
  def test_costpercapita_bl101; assert_in_epsilon(14.030966475436143, worksheet.costpercapita_bl101, 0.001); end
  def test_costpercapita_bl105; assert_in_epsilon(1.3619752202463624, worksheet.costpercapita_bl105, 0.001); end
  def test_costpercapita_bl106; assert_in_epsilon(4.835791862797581, worksheet.costpercapita_bl106, 0.001); end
  def test_costpercapita_bl185; assert_in_epsilon(2944.4031970559727, worksheet.costpercapita_bl185, 0.001); end
  def test_costpercapita_bm57; assert_in_epsilon(1.338486175165062, worksheet.costpercapita_bm57, 0.001); end
  def test_costpercapita_bm58; assert_in_epsilon(2.742293124721032, worksheet.costpercapita_bm58, 0.001); end
  def test_costpercapita_bm59; assert_in_delta(0, (worksheet.costpercapita_bm59||0), 0.001); end
  def test_costpercapita_bm60; assert_in_epsilon(16.713843616378234, worksheet.costpercapita_bm60, 0.001); end
  def test_costpercapita_bm61; assert_in_epsilon(202.48050984912314, worksheet.costpercapita_bm61, 0.001); end
  def test_costpercapita_bm62; assert_in_delta(0.7181632282579805, worksheet.costpercapita_bm62, 0.001); end
  def test_costpercapita_bm63; assert_in_epsilon(7.327491142269567, worksheet.costpercapita_bm63, 0.001); end
  def test_costpercapita_bm64; assert_in_epsilon(17.49393261492327, worksheet.costpercapita_bm64, 0.001); end
  def test_costpercapita_bm65; assert_in_epsilon(386.87406287986016, worksheet.costpercapita_bm65, 0.001); end
  def test_costpercapita_bm66; assert_in_epsilon(167.69725848175742, worksheet.costpercapita_bm66, 0.001); end
  def test_costpercapita_bm67; assert_in_epsilon(3.3337654437508792, worksheet.costpercapita_bm67, 0.001); end
  def test_costpercapita_bm68; assert_in_epsilon(40.70254503802044, worksheet.costpercapita_bm68, 0.001); end
  def test_costpercapita_bm72; assert_in_epsilon(8.239433402095276, worksheet.costpercapita_bm72, 0.001); end
  def test_costpercapita_bm73; assert_in_epsilon(68.04397267996818, worksheet.costpercapita_bm73, 0.001); end
  def test_costpercapita_bm75; assert_in_delta(0, (worksheet.costpercapita_bm75||0), 0.001); end
  def test_costpercapita_bm76; assert_in_delta(0, (worksheet.costpercapita_bm76||0), 0.001); end
  def test_costpercapita_bm77; assert_in_epsilon(95.99383430564743, worksheet.costpercapita_bm77, 0.001); end
  def test_costpercapita_bm78; assert_in_epsilon(46.190168764083346, worksheet.costpercapita_bm78, 0.001); end
  def test_costpercapita_bm79; assert_in_delta(0, (worksheet.costpercapita_bm79||0), 0.001); end
  def test_costpercapita_bm80; assert_in_epsilon(466.90517634246817, worksheet.costpercapita_bm80, 0.001); end
  def test_costpercapita_bm81; assert_in_epsilon(419.53438446829733, worksheet.costpercapita_bm81, 0.001); end
  def test_costpercapita_bm82; assert_in_epsilon(69.6914236336954, worksheet.costpercapita_bm82, 0.001); end
  def test_costpercapita_bm83; assert_in_epsilon(68.34611070700839, worksheet.costpercapita_bm83, 0.001); end
  def test_costpercapita_bm84; assert_in_epsilon(10.168765299824486, worksheet.costpercapita_bm84, 0.001); end
  def test_costpercapita_bm85; assert_in_epsilon(2.887960917711558, worksheet.costpercapita_bm85, 0.001); end
  def test_costpercapita_bm86; assert_in_epsilon(357.22821418607197, worksheet.costpercapita_bm86, 0.001); end
  def test_costpercapita_bm87; assert_in_epsilon(630.7097461842909, worksheet.costpercapita_bm87, 0.001); end
  def test_costpercapita_bm88; assert_in_epsilon(202.19293104977172, worksheet.costpercapita_bm88, 0.001); end
  def test_costpercapita_bm89; assert_in_delta(0, (worksheet.costpercapita_bm89||0), 0.001); end
  def test_costpercapita_bm90; assert_in_epsilon(32.92320361069185, worksheet.costpercapita_bm90, 0.001); end
  def test_costpercapita_bm91; assert_in_epsilon(5.224188517774381, worksheet.costpercapita_bm91, 0.001); end
  def test_costpercapita_bm92; assert_in_epsilon(3.675509425439904, worksheet.costpercapita_bm92, 0.001); end
  def test_costpercapita_bm93; assert_in_epsilon(80.38593730897308, worksheet.costpercapita_bm93, 0.001); end
  def test_costpercapita_bm96; assert_in_delta(0, (worksheet.costpercapita_bm96||0), 0.001); end
  def test_costpercapita_bm97; assert_in_epsilon(7.755927126247096, worksheet.costpercapita_bm97, 0.001); end
  def test_costpercapita_bm101; assert_in_epsilon(11.338454247779389, worksheet.costpercapita_bm101, 0.001); end
  def test_costpercapita_bm105; assert_in_epsilon(1.631003484219964, worksheet.costpercapita_bm105, 0.001); end
  def test_costpercapita_bm106; assert_in_epsilon(5.6412781089657855, worksheet.costpercapita_bm106, 0.001); end
  def test_costpercapita_bm185; assert_in_epsilon(3442.1299753652524, worksheet.costpercapita_bm185, 0.001); end
  def test_costpercapita_bn57; assert_in_delta(0, (worksheet.costpercapita_bn57||0), 0.001); end
  def test_costpercapita_bn58; assert_in_epsilon(2.6776965020367527, worksheet.costpercapita_bn58, 0.001); end
  def test_costpercapita_bn59; assert_in_delta(0, (worksheet.costpercapita_bn59||0), 0.001); end
  def test_costpercapita_bn60; assert_in_epsilon(10.790548306738975, worksheet.costpercapita_bn60, 0.001); end
  def test_costpercapita_bn61; assert_in_epsilon(249.25464465336313, worksheet.costpercapita_bn61, 0.001); end
  def test_costpercapita_bn62; assert_in_delta(0.7590096880814259, worksheet.costpercapita_bn62, 0.001); end
  def test_costpercapita_bn63; assert_in_epsilon(17.718921945612514, worksheet.costpercapita_bn63, 0.001); end
  def test_costpercapita_bn64; assert_in_epsilon(17.081850859620264, worksheet.costpercapita_bn64, 0.001); end
  def test_costpercapita_bn65; assert_in_epsilon(433.77355680333983, worksheet.costpercapita_bn65, 0.001); end
  def test_costpercapita_bn66; assert_in_epsilon(238.63563336174215, worksheet.costpercapita_bn66, 0.001); end
  def test_costpercapita_bn67; assert_in_epsilon(3.1514417455689347, worksheet.costpercapita_bn67, 0.001); end
  def test_costpercapita_bn68; assert_in_epsilon(49.610653684867955, worksheet.costpercapita_bn68, 0.001); end
  def test_costpercapita_bn72; assert_in_epsilon(8.030411608081657, worksheet.costpercapita_bn72, 0.001); end
  def test_costpercapita_bn73; assert_in_epsilon(66.7739526873284, worksheet.costpercapita_bn73, 0.001); end
  def test_costpercapita_bn75; assert_in_delta(0, (worksheet.costpercapita_bn75||0), 0.001); end
  def test_costpercapita_bn76; assert_in_delta(0, (worksheet.costpercapita_bn76||0), 0.001); end
  def test_costpercapita_bn77; assert_in_epsilon(111.58658957740771, worksheet.costpercapita_bn77, 0.001); end
  def test_costpercapita_bn78; assert_in_epsilon(56.62194440596108, worksheet.costpercapita_bn78, 0.001); end
  def test_costpercapita_bn79; assert_in_delta(0, (worksheet.costpercapita_bn79||0), 0.001); end
  def test_costpercapita_bn80; assert_in_epsilon(526.5885034932119, worksheet.costpercapita_bn80, 0.001); end
  def test_costpercapita_bn81; assert_in_epsilon(483.03955447345135, worksheet.costpercapita_bn81, 0.001); end
  def test_costpercapita_bn82; assert_in_epsilon(66.46290809183722, worksheet.costpercapita_bn82, 0.001); end
  def test_costpercapita_bn83; assert_in_epsilon(68.2002864146311, worksheet.costpercapita_bn83, 0.001); end
  def test_costpercapita_bn84; assert_in_epsilon(9.317113841406677, worksheet.costpercapita_bn84, 0.001); end
  def test_costpercapita_bn85; assert_in_epsilon(3.673267352775792, worksheet.costpercapita_bn85, 0.001); end
  def test_costpercapita_bn86; assert_in_epsilon(159.17134690193208, worksheet.costpercapita_bn86, 0.001); end
  def test_costpercapita_bn87; assert_in_epsilon(695.4398024323564, worksheet.costpercapita_bn87, 0.001); end
  def test_costpercapita_bn88; assert_in_epsilon(328.2426118723784, worksheet.costpercapita_bn88, 0.001); end
  def test_costpercapita_bn89; assert_in_delta(0, (worksheet.costpercapita_bn89||0), 0.001); end
  def test_costpercapita_bn90; assert_in_epsilon(35.947635508588164, worksheet.costpercapita_bn90, 0.001); end
  def test_costpercapita_bn91; assert_in_epsilon(6.267204582285171, worksheet.costpercapita_bn91, 0.001); end
  def test_costpercapita_bn92; assert_in_epsilon(3.966880226350054, worksheet.costpercapita_bn92, 0.001); end
  def test_costpercapita_bn93; assert_in_epsilon(74.39633743137014, worksheet.costpercapita_bn93, 0.001); end
  def test_costpercapita_bn96; assert_in_delta(0, (worksheet.costpercapita_bn96||0), 0.001); end
  def test_costpercapita_bn97; assert_in_epsilon(7.247227409765991, worksheet.costpercapita_bn97, 0.001); end
  def test_costpercapita_bn101; assert_in_epsilon(8.289436318235174, worksheet.costpercapita_bn101, 0.001); end
  def test_costpercapita_bn105; assert_in_epsilon(1.3942553128568518, worksheet.costpercapita_bn105, 0.001); end
  def test_costpercapita_bn106; assert_in_epsilon(5.317343019248166, worksheet.costpercapita_bn106, 0.001); end
  def test_costpercapita_bn185; assert_in_epsilon(3749.428570512431, worksheet.costpercapita_bn185, 0.001); end
  def test_costpercapita_bo57; assert_in_delta(0, (worksheet.costpercapita_bo57||0), 0.001); end
  def test_costpercapita_bo58; assert_in_epsilon(2.6205909121485536, worksheet.costpercapita_bo58, 0.001); end
  def test_costpercapita_bo59; assert_in_delta(0, (worksheet.costpercapita_bo59||0), 0.001); end
  def test_costpercapita_bo60; assert_in_epsilon(5.2363956235212745, worksheet.costpercapita_bo60, 0.001); end
  def test_costpercapita_bo61; assert_in_epsilon(260.5962852984742, worksheet.costpercapita_bo61, 0.001); end
  def test_costpercapita_bo62; assert_in_delta(0.4522512963766723, worksheet.costpercapita_bo62, 0.001); end
  def test_costpercapita_bo63; assert_in_epsilon(38.24019609207188, worksheet.costpercapita_bo63, 0.001); end
  def test_costpercapita_bo64; assert_in_epsilon(16.706051120299968, worksheet.costpercapita_bo64, 0.001); end
  def test_costpercapita_bo65; assert_in_epsilon(504.28576175597794, worksheet.costpercapita_bo65, 0.001); end
  def test_costpercapita_bo66; assert_in_epsilon(321.8079625325526, worksheet.costpercapita_bo66, 0.001); end
  def test_costpercapita_bo67; assert_in_epsilon(1.149254605260181, worksheet.costpercapita_bo67, 0.001); end
  def test_costpercapita_bo68; assert_in_epsilon(57.04497556174425, worksheet.costpercapita_bo68, 0.001); end
  def test_costpercapita_bo72; assert_in_epsilon(7.704239227660383, worksheet.costpercapita_bo72, 0.001); end
  def test_costpercapita_bo73; assert_in_epsilon(65.57240380895736, worksheet.costpercapita_bo73, 0.001); end
  def test_costpercapita_bo75; assert_in_delta(0, (worksheet.costpercapita_bo75||0), 0.001); end
  def test_costpercapita_bo76; assert_in_delta(0, (worksheet.costpercapita_bo76||0), 0.001); end
  def test_costpercapita_bo77; assert_in_epsilon(122.20120433389067, worksheet.costpercapita_bo77, 0.001); end
  def test_costpercapita_bo78; assert_in_epsilon(34.789272197980054, worksheet.costpercapita_bo78, 0.001); end
  def test_costpercapita_bo79; assert_in_delta(0, (worksheet.costpercapita_bo79||0), 0.001); end
  def test_costpercapita_bo80; assert_in_epsilon(603.4677656146196, worksheet.costpercapita_bo80, 0.001); end
  def test_costpercapita_bo81; assert_in_epsilon(486.3869628922015, worksheet.costpercapita_bo81, 0.001); end
  def test_costpercapita_bo82; assert_in_epsilon(64.11329211372487, worksheet.costpercapita_bo82, 0.001); end
  def test_costpercapita_bo83; assert_in_epsilon(67.968348366727, worksheet.costpercapita_bo83, 0.001); end
  def test_costpercapita_bo84; assert_in_epsilon(8.591726135595973, worksheet.costpercapita_bo84, 0.001); end
  def test_costpercapita_bo85; assert_in_epsilon(4.994742022157002, worksheet.costpercapita_bo85, 0.001); end
  def test_costpercapita_bo86; assert_in_epsilon(146.8593654917975, worksheet.costpercapita_bo86, 0.001); end
  def test_costpercapita_bo87; assert_in_epsilon(488.6382471635716, worksheet.costpercapita_bo87, 0.001); end
  def test_costpercapita_bo88; assert_in_epsilon(408.17616601775103, worksheet.costpercapita_bo88, 0.001); end
  def test_costpercapita_bo89; assert_in_delta(0, (worksheet.costpercapita_bo89||0), 0.001); end
  def test_costpercapita_bo90; assert_in_epsilon(38.98406272826085, worksheet.costpercapita_bo90, 0.001); end
  def test_costpercapita_bo91; assert_in_epsilon(6.584665025900161, worksheet.costpercapita_bo91, 0.001); end
  def test_costpercapita_bo92; assert_in_epsilon(3.510247986242114, worksheet.costpercapita_bo92, 0.001); end
  def test_costpercapita_bo93; assert_in_epsilon(72.24745152638084, worksheet.costpercapita_bo93, 0.001); end
  def test_costpercapita_bo96; assert_in_delta(0, (worksheet.costpercapita_bo96||0), 0.001); end
  def test_costpercapita_bo97; assert_in_epsilon(6.8446109770096975, worksheet.costpercapita_bo97, 0.001); end
  def test_costpercapita_bo101; assert_in_epsilon(5.877493959605044, worksheet.costpercapita_bo101, 0.001); end
  def test_costpercapita_bo105; assert_in_epsilon(1.1617840984293322, worksheet.costpercapita_bo105, 0.001); end
  def test_costpercapita_bo106; assert_in_epsilon(5.207017629547227, worksheet.costpercapita_bo106, 0.001); end
  def test_costpercapita_bo185; assert_in_epsilon(3858.0207941164376, worksheet.costpercapita_bo185, 0.001); end
  def test_costpercapita_bp57; assert_in_delta(0, (worksheet.costpercapita_bp57||0), 0.001); end
  def test_costpercapita_bp58; assert_in_delta(0.9577867478012896, worksheet.costpercapita_bp58, 0.001); end
  def test_costpercapita_bp59; assert_in_delta(0, (worksheet.costpercapita_bp59||0), 0.001); end
  def test_costpercapita_bp60; assert_in_delta(0, (worksheet.costpercapita_bp60||0), 0.001); end
  def test_costpercapita_bp61; assert_in_epsilon(328.6959462761132, worksheet.costpercapita_bp61, 0.001); end
  def test_costpercapita_bp62; assert_in_delta(0.4432298212700535, worksheet.costpercapita_bp62, 0.001); end
  def test_costpercapita_bp63; assert_in_epsilon(75.25684465249908, worksheet.costpercapita_bp63, 0.001); end
  def test_costpercapita_bp64; assert_in_epsilon(28.078638685146792, worksheet.costpercapita_bp64, 0.001); end
  def test_costpercapita_bp65; assert_in_epsilon(694.3854489155984, worksheet.costpercapita_bp65, 0.001); end
  def test_costpercapita_bp66; assert_in_epsilon(481.26132445816313, worksheet.costpercapita_bp66, 0.001); end
  def test_costpercapita_bp67; assert_in_delta(0, (worksheet.costpercapita_bp67||0), 0.001); end
  def test_costpercapita_bp68; assert_in_epsilon(74.39621597508341, worksheet.costpercapita_bp68, 0.001); end
  def test_costpercapita_bp72; assert_in_epsilon(7.2490599947993966, worksheet.costpercapita_bp72, 0.001); end
  def test_costpercapita_bp73; assert_in_epsilon(63.960208774622735, worksheet.costpercapita_bp73, 0.001); end
  def test_costpercapita_bp75; assert_in_delta(0, (worksheet.costpercapita_bp75||0), 0.001); end
  def test_costpercapita_bp76; assert_in_delta(0, (worksheet.costpercapita_bp76||0), 0.001); end
  def test_costpercapita_bp77; assert_in_epsilon(158.68367254564677, worksheet.costpercapita_bp77, 0.001); end
  def test_costpercapita_bp78; assert_in_epsilon(33.73012662937734, worksheet.costpercapita_bp78, 0.001); end
  def test_costpercapita_bp79; assert_in_delta(0, (worksheet.costpercapita_bp79||0), 0.001); end
  def test_costpercapita_bp80; assert_in_epsilon(684.6729396976682, worksheet.costpercapita_bp80, 0.001); end
  def test_costpercapita_bp81; assert_in_epsilon(523.4580194810568, worksheet.costpercapita_bp81, 0.001); end
  def test_costpercapita_bp82; assert_in_epsilon(62.52996578182482, worksheet.costpercapita_bp82, 0.001); end
  def test_costpercapita_bp83; assert_in_epsilon(67.7608635323235, worksheet.costpercapita_bp83, 0.001); end
  def test_costpercapita_bp84; assert_in_epsilon(7.9679950319387585, worksheet.costpercapita_bp84, 0.001); end
  def test_costpercapita_bp85; assert_in_epsilon(7.203404580174457, worksheet.costpercapita_bp85, 0.001); end
  def test_costpercapita_bp86; assert_in_epsilon(164.91577266525377, worksheet.costpercapita_bp86, 0.001); end
  def test_costpercapita_bp87; assert_in_epsilon(250.122343057422, worksheet.costpercapita_bp87, 0.001); end
  def test_costpercapita_bp88; assert_in_epsilon(475.3751125337702, worksheet.costpercapita_bp88, 0.001); end
  def test_costpercapita_bp89; assert_in_delta(0, (worksheet.costpercapita_bp89||0), 0.001); end
  def test_costpercapita_bp90; assert_in_epsilon(42.027825119858015, worksheet.costpercapita_bp90, 0.001); end
  def test_costpercapita_bp91; assert_in_epsilon(7.842338630643234, worksheet.costpercapita_bp91, 0.001); end
  def test_costpercapita_bp92; assert_in_epsilon(3.1753793488226547, worksheet.costpercapita_bp92, 0.001); end
  def test_costpercapita_bp93; assert_in_epsilon(80.92827013184157, worksheet.costpercapita_bp93, 0.001); end
  def test_costpercapita_bp96; assert_in_delta(0, (worksheet.costpercapita_bp96||0), 0.001); end
  def test_costpercapita_bp97; assert_in_epsilon(6.519960535178551, worksheet.costpercapita_bp97, 0.001); end
  def test_costpercapita_bp101; assert_in_epsilon(4.057482110040556, worksheet.costpercapita_bp101, 0.001); end
  def test_costpercapita_bp105; assert_in_epsilon(1.0000175233812203, worksheet.costpercapita_bp105, 0.001); end
  def test_costpercapita_bp106; assert_in_epsilon(5.337853928113002, worksheet.costpercapita_bp106, 0.001); end
  def test_costpercapita_bp185; assert_in_epsilon(4341.994047165434, worksheet.costpercapita_bp185, 0.001); end
  def test_costpercapita_bq57; assert_in_delta(0, (worksheet.costpercapita_bq57||0), 0.001); end
  def test_costpercapita_bq58; assert_in_delta(-1.1936515821853693e-16, worksheet.costpercapita_bq58, 0.001); end
  def test_costpercapita_bq59; assert_in_delta(0, (worksheet.costpercapita_bq59||0), 0.001); end
  def test_costpercapita_bq60; assert_in_delta(0, (worksheet.costpercapita_bq60||0), 0.001); end
  def test_costpercapita_bq61; assert_in_epsilon(251.16862618453467, worksheet.costpercapita_bq61, 0.001); end
  def test_costpercapita_bq62; assert_in_delta(0.38058858573802073, worksheet.costpercapita_bq62, 0.001); end
  def test_costpercapita_bq63; assert_in_epsilon(87.10402734506916, worksheet.costpercapita_bq63, 0.001); end
  def test_costpercapita_bq64; assert_in_epsilon(27.415927348229072, worksheet.costpercapita_bq64, 0.001); end
  def test_costpercapita_bq65; assert_in_epsilon(849.9502361364264, worksheet.costpercapita_bq65, 0.001); end
  def test_costpercapita_bq66; assert_in_epsilon(517.746553865545, worksheet.costpercapita_bq66, 0.001); end
  def test_costpercapita_bq67; assert_in_delta(0, (worksheet.costpercapita_bq67||0), 0.001); end
  def test_costpercapita_bq68; assert_in_epsilon(74.44597197234854, worksheet.costpercapita_bq68, 0.001); end
  def test_costpercapita_bq72; assert_in_epsilon(6.825185048149573, worksheet.costpercapita_bq72, 0.001); end
  def test_costpercapita_bq73; assert_in_epsilon(62.19315016077724, worksheet.costpercapita_bq73, 0.001); end
  def test_costpercapita_bq75; assert_in_delta(0, (worksheet.costpercapita_bq75||0), 0.001); end
  def test_costpercapita_bq76; assert_in_delta(0, (worksheet.costpercapita_bq76||0), 0.001); end
  def test_costpercapita_bq77; assert_in_epsilon(139.40977795787398, worksheet.costpercapita_bq77, 0.001); end
  def test_costpercapita_bq78; assert_in_epsilon(14.964311556715213, worksheet.costpercapita_bq78, 0.001); end
  def test_costpercapita_bq79; assert_in_delta(0, (worksheet.costpercapita_bq79||0), 0.001); end
  def test_costpercapita_bq80; assert_in_epsilon(771.2080816404921, worksheet.costpercapita_bq80, 0.001); end
  def test_costpercapita_bq81; assert_in_epsilon(482.1066816162338, worksheet.costpercapita_bq81, 0.001); end
  def test_costpercapita_bq82; assert_in_epsilon(61.60557808558653, worksheet.costpercapita_bq82, 0.001); end
  def test_costpercapita_bq83; assert_in_epsilon(67.8269377605445, worksheet.costpercapita_bq83, 0.001); end
  def test_costpercapita_bq84; assert_in_epsilon(7.431844900259076, worksheet.costpercapita_bq84, 0.001); end
  def test_costpercapita_bq85; assert_in_epsilon(10.887065321826162, worksheet.costpercapita_bq85, 0.001); end
  def test_costpercapita_bq86; assert_in_epsilon(93.29602042413254, worksheet.costpercapita_bq86, 0.001); end
  def test_costpercapita_bq87; assert_in_epsilon(213.66520504950424, worksheet.costpercapita_bq87, 0.001); end
  def test_costpercapita_bq88; assert_in_epsilon(482.60833486225897, worksheet.costpercapita_bq88, 0.001); end
  def test_costpercapita_bq89; assert_in_delta(0, (worksheet.costpercapita_bq89||0), 0.001); end
  def test_costpercapita_bq90; assert_in_epsilon(45.0697320238142, worksheet.costpercapita_bq90, 0.001); end
  def test_costpercapita_bq91; assert_in_epsilon(7.6871580272690805, worksheet.costpercapita_bq91, 0.001); end
  def test_costpercapita_bq92; assert_in_epsilon(2.434630024811271, worksheet.costpercapita_bq92, 0.001); end
  def test_costpercapita_bq93; assert_in_epsilon(90.150314427103, worksheet.costpercapita_bq93, 0.001); end
  def test_costpercapita_bq96; assert_in_delta(0, (worksheet.costpercapita_bq96||0), 0.001); end
  def test_costpercapita_bq97; assert_in_epsilon(6.255443618950079, worksheet.costpercapita_bq97, 0.001); end
  def test_costpercapita_bq101; assert_in_epsilon(2.6590785554693337, worksheet.costpercapita_bq101, 0.001); end
  def test_costpercapita_bq105; assert_in_delta(0.9212496986319789, worksheet.costpercapita_bq105, 0.001); end
  def test_costpercapita_bq106; assert_in_epsilon(5.789514694162377, worksheet.costpercapita_bq106, 0.001); end
  def test_costpercapita_bq185; assert_in_epsilon(4383.207226892457, worksheet.costpercapita_bq185, 0.001); end
  def test_costpercapita_cc57; assert_in_epsilon(15.866110531609268, worksheet.costpercapita_cc57, 0.001); end
  def test_costpercapita_cc58; assert_in_epsilon(3.168142029493696, worksheet.costpercapita_cc58, 0.001); end
  def test_costpercapita_cc59; assert_in_epsilon(3.9106837439061213, worksheet.costpercapita_cc59, 0.001); end
  def test_costpercapita_cc60; assert_in_epsilon(10.484778092139459, worksheet.costpercapita_cc60, 0.001); end
  def test_costpercapita_cc61; assert_in_epsilon(229.69193527285364, worksheet.costpercapita_cc61, 0.001); end
  def test_costpercapita_cc62; assert_in_epsilon(3.3387565725655715, worksheet.costpercapita_cc62, 0.001); end
  def test_costpercapita_cc63; assert_in_epsilon(37.56372698303604, worksheet.costpercapita_cc63, 0.001); end
  def test_costpercapita_cc64; assert_in_epsilon(16.034216151145554, worksheet.costpercapita_cc64, 0.001); end
  def test_costpercapita_cc65; assert_in_epsilon(406.47230766285054, worksheet.costpercapita_cc65, 0.001); end
  def test_costpercapita_cc66; assert_in_epsilon(213.80435648005837, worksheet.costpercapita_cc66, 0.001); end
  def test_costpercapita_cc67; assert_in_epsilon(2.428381883473948, worksheet.costpercapita_cc67, 0.001); end
  def test_costpercapita_cc68; assert_in_epsilon(88.42949195745304, worksheet.costpercapita_cc68, 0.001); end
  def test_costpercapita_cc69; assert_in_epsilon(1.5690962488637503, worksheet.costpercapita_cc69, 0.001); end
  def test_costpercapita_cc70; assert_in_epsilon(80.76451050184319, worksheet.costpercapita_cc70, 0.001); end
  def test_costpercapita_cc71; assert_in_delta(3.927764602242245e-07, worksheet.costpercapita_cc71, 0.001); end
  def test_costpercapita_cc72; assert_in_epsilon(10.258903023302482, worksheet.costpercapita_cc72, 0.001); end
  def test_costpercapita_cc73; assert_in_epsilon(127.20639503855543, worksheet.costpercapita_cc73, 0.001); end
  def test_costpercapita_cc74; assert_in_epsilon(15.637721614077845, worksheet.costpercapita_cc74, 0.001); end
  def test_costpercapita_cc75; assert_in_delta(0, (worksheet.costpercapita_cc75||0), 0.001); end
  def test_costpercapita_cc76; assert_in_epsilon(-100.88353373539678, worksheet.costpercapita_cc76, 0.001); end
  def test_costpercapita_cc77; assert_in_epsilon(129.72244768173135, worksheet.costpercapita_cc77, 0.001); end
  def test_costpercapita_cc78; assert_in_epsilon(29.77670889764881, worksheet.costpercapita_cc78, 0.001); end
  def test_costpercapita_cc79; assert_in_delta(0, (worksheet.costpercapita_cc79||0), 0.001); end
  def test_costpercapita_cc80; assert_in_epsilon(542.1028322103961, worksheet.costpercapita_cc80, 0.001); end
  def test_costpercapita_cc81; assert_in_epsilon(360.174105299733, worksheet.costpercapita_cc81, 0.001); end
  def test_costpercapita_cc82; assert_in_epsilon(62.309524357646524, worksheet.costpercapita_cc82, 0.001); end
  def test_costpercapita_cc83; assert_in_epsilon(57.64055199127616, worksheet.costpercapita_cc83, 0.001); end
  def test_costpercapita_cc84; assert_in_epsilon(7.727921670880436, worksheet.costpercapita_cc84, 0.001); end
  def test_costpercapita_cc85; assert_in_epsilon(132.23229219838672, worksheet.costpercapita_cc85, 0.001); end
  def test_costpercapita_cc86; assert_in_epsilon(769.9957935732981, worksheet.costpercapita_cc86, 0.001); end
  def test_costpercapita_cc87; assert_in_epsilon(475.6627469049193, worksheet.costpercapita_cc87, 0.001); end
  def test_costpercapita_cc88; assert_in_epsilon(312.64396262682203, worksheet.costpercapita_cc88, 0.001); end
  def test_costpercapita_cc89; assert_in_delta(0, (worksheet.costpercapita_cc89||0), 0.001); end
  def test_costpercapita_cc90; assert_in_epsilon(53.05982551149359, worksheet.costpercapita_cc90, 0.001); end
  def test_costpercapita_cc91; assert_in_epsilon(171.5839421403808, worksheet.costpercapita_cc91, 0.001); end
  def test_costpercapita_cc92; assert_in_epsilon(5.166581985663431, worksheet.costpercapita_cc92, 0.001); end
  def test_costpercapita_cc93; assert_in_epsilon(162.22405954061256, worksheet.costpercapita_cc93, 0.001); end
  def test_costpercapita_cc94; assert_in_epsilon(101.0471638138306, worksheet.costpercapita_cc94, 0.001); end
  def test_costpercapita_cc95; assert_in_epsilon(18.064825489879357, worksheet.costpercapita_cc95, 0.001); end
  def test_costpercapita_cc96; assert_in_delta(0, (worksheet.costpercapita_cc96||0), 0.001); end
  def test_costpercapita_cc97; assert_in_epsilon(16.36035273538173, worksheet.costpercapita_cc97, 0.001); end
  def test_costpercapita_cc98; assert_in_epsilon(12.07042400698528, worksheet.costpercapita_cc98, 0.001); end
  def test_costpercapita_cc99; assert_in_epsilon(221.99917212449816, worksheet.costpercapita_cc99, 0.001); end
  def test_costpercapita_cc100; assert_in_epsilon(79.19758803353267, worksheet.costpercapita_cc100, 0.001); end
  def test_costpercapita_cc101; assert_in_epsilon(9.031361606281298, worksheet.costpercapita_cc101, 0.001); end
  def test_costpercapita_cc102; assert_in_epsilon(3.796995376971246, worksheet.costpercapita_cc102, 0.001); end
  def test_costpercapita_cc103; assert_in_epsilon(42.93981992308336, worksheet.costpercapita_cc103, 0.001); end
  def test_costpercapita_cc104; assert_in_epsilon(17.962701429452085, worksheet.costpercapita_cc104, 0.001); end
  def test_costpercapita_cc105; assert_in_epsilon(1.158804350696923, worksheet.costpercapita_cc105, 0.001); end
  def test_costpercapita_cc106; assert_in_epsilon(4.190038479104073, worksheet.costpercapita_cc106, 0.001); end
  def test_costpercapita_cc185; assert_in_epsilon(4965.588524405194, worksheet.costpercapita_cc185, 0.001); end
  def test_costpercapita_cf185; assert_in_epsilon(-1168.019078713049, worksheet.costpercapita_cf185, 0.001); end
  def test_costpercapita_cg185; assert_in_epsilon(-335.2063870223272, worksheet.costpercapita_cg185, 0.001); end
  def test_costpercapita_ch185; assert_in_epsilon(351.0021551422464, worksheet.costpercapita_ch185, 0.001); end
  def test_costpercapita_ci185; assert_in_epsilon(808.342775615676, worksheet.costpercapita_ci185, 0.001); end
  def test_costpercapita_cj185; assert_in_epsilon(1262.2794061403067, worksheet.costpercapita_cj185, 0.001); end
  def test_costpercapita_ck185; assert_in_epsilon(1585.3501478987473, worksheet.costpercapita_ck185, 0.001); end
  def test_costpercapita_cl185; assert_in_epsilon(1550.459712515725, worksheet.costpercapita_cl185, 0.001); end
  def test_costpercapita_cm185; assert_in_epsilon(1802.5765618626024, worksheet.costpercapita_cm185, 0.001); end
  def test_costpercapita_cn185; assert_in_epsilon(1825.6900658521251, worksheet.costpercapita_cn185, 0.001); end
  def test_costpercapita_cp57; assert_in_delta(0.2768986261874875, worksheet.costpercapita_cp57, 0.001); end
  def test_costpercapita_cp58; assert_in_epsilon(1.0266025742449374, worksheet.costpercapita_cp58, 0.001); end
  def test_costpercapita_cp59; assert_in_delta(0, (worksheet.costpercapita_cp59||0), 0.001); end
  def test_costpercapita_cp60; assert_in_epsilon(3.516143893086923, worksheet.costpercapita_cp60, 0.001); end
  def test_costpercapita_cp61; assert_in_epsilon(58.771525027699326, worksheet.costpercapita_cp61, 0.001); end
  def test_costpercapita_cp62; assert_in_delta(0.20175148247060512, worksheet.costpercapita_cp62, 0.001); end
  def test_costpercapita_cp63; assert_in_epsilon(1.4081902380819666, worksheet.costpercapita_cp63, 0.001); end
  def test_costpercapita_cp64; assert_in_epsilon(6.800176091542657, worksheet.costpercapita_cp64, 0.001); end
  def test_costpercapita_cp65; assert_in_epsilon(100.6866380647948, worksheet.costpercapita_cp65, 0.001); end
  def test_costpercapita_cp66; assert_in_epsilon(46.307026925343685, worksheet.costpercapita_cp66, 0.001); end
  def test_costpercapita_cp67; assert_in_delta(0.9375956308781945, worksheet.costpercapita_cp67, 0.001); end
  def test_costpercapita_cp68; assert_in_epsilon(14.384335354401166, worksheet.costpercapita_cp68, 0.001); end
  def test_costpercapita_cp72; assert_in_epsilon(1.7680977063361931, worksheet.costpercapita_cp72, 0.001); end
  def test_costpercapita_cp73; assert_in_epsilon(15.088605940051167, worksheet.costpercapita_cp73, 0.001); end
  def test_costpercapita_cp75; assert_in_delta(0, (worksheet.costpercapita_cp75||0), 0.001); end
  def test_costpercapita_cp76; assert_in_delta(0, (worksheet.costpercapita_cp76||0), 0.001); end
  def test_costpercapita_cp77; assert_in_epsilon(26.825381814076607, worksheet.costpercapita_cp77, 0.001); end
  def test_costpercapita_cp78; assert_in_epsilon(8.587995966931386, worksheet.costpercapita_cp78, 0.001); end
  def test_costpercapita_cp79; assert_in_delta(0, (worksheet.costpercapita_cp79||0), 0.001); end
  def test_costpercapita_cp80; assert_in_epsilon(96.11782921388222, worksheet.costpercapita_cp80, 0.001); end
  def test_costpercapita_cp81; assert_in_epsilon(153.8094394426002, worksheet.costpercapita_cp81, 0.001); end
  def test_costpercapita_cp82; assert_in_epsilon(15.3256746943886, worksheet.costpercapita_cp82, 0.001); end
  def test_costpercapita_cp83; assert_in_epsilon(15.266011033348946, worksheet.costpercapita_cp83, 0.001); end
  def test_costpercapita_cp84; assert_in_epsilon(2.3078580378952993, worksheet.costpercapita_cp84, 0.001); end
  def test_costpercapita_cp85; assert_in_delta(0.489389215134238, worksheet.costpercapita_cp85, 0.001); end
  def test_costpercapita_cp86; assert_in_epsilon(100.22838576050523, worksheet.costpercapita_cp86, 0.001); end
  def test_costpercapita_cp87; assert_in_epsilon(98.10829110711701, worksheet.costpercapita_cp87, 0.001); end
  def test_costpercapita_cp88; assert_in_epsilon(55.612222962116704, worksheet.costpercapita_cp88, 0.001); end
  def test_costpercapita_cp89; assert_in_delta(0, (worksheet.costpercapita_cp89||0), 0.001); end
  def test_costpercapita_cp90; assert_in_epsilon(5.051667604630193, worksheet.costpercapita_cp90, 0.001); end
  def test_costpercapita_cp91; assert_in_epsilon(1.899291401395396, worksheet.costpercapita_cp91, 0.001); end
  def test_costpercapita_cp92; assert_in_epsilon(1.3330138131244438, worksheet.costpercapita_cp92, 0.001); end
  def test_costpercapita_cp93; assert_in_epsilon(15.954139670176009, worksheet.costpercapita_cp93, 0.001); end
  def test_costpercapita_cp96; assert_in_delta(0, (worksheet.costpercapita_cp96||0), 0.001); end
  def test_costpercapita_cp97; assert_in_epsilon(1.7390789496572294, worksheet.costpercapita_cp97, 0.001); end
  def test_costpercapita_cp101; assert_in_epsilon(2.3915294521324117, worksheet.costpercapita_cp101, 0.001); end
  def test_costpercapita_cp105; assert_in_delta(0.2913364232067489, worksheet.costpercapita_cp105, 0.001); end
  def test_costpercapita_cp106; assert_in_epsilon(1.0962491372345258, worksheet.costpercapita_cp106, 0.001); end
  def test_costpercapita_cp185; assert_in_epsilon(853.6083732546725, worksheet.costpercapita_cp185, 0.001); end
  def test_costpercapita_cd185; assert_in_epsilon(101852.08578393688, worksheet.costpercapita_cd185, 0.001); end
  def test_costpercapita_cq185; assert_in_epsilon(15555.391798867115, worksheet.costpercapita_cq185, 0.001); end
  def test_costpercapita_at185; assert_in_epsilon(86296.69398506978, worksheet.costpercapita_at185, 0.001); end
  def test_costpercapita_cr185; assert_equal("ok", worksheet.costpercapita_cr185); end
  def test_costpercapita_e186; assert_equal("ok", worksheet.costpercapita_e186); end
  def test_costpercapita_f186; assert_equal("ok", worksheet.costpercapita_f186); end
  def test_costpercapita_g186; assert_equal("ok", worksheet.costpercapita_g186); end
  def test_costpercapita_h186; assert_equal("ok", worksheet.costpercapita_h186); end
  def test_costpercapita_i186; assert_equal("ok", worksheet.costpercapita_i186); end
  def test_costpercapita_j186; assert_equal("ok", worksheet.costpercapita_j186); end
  def test_costpercapita_k186; assert_equal("ok", worksheet.costpercapita_k186); end
  def test_costpercapita_l186; assert_equal("ok", worksheet.costpercapita_l186); end
  def test_costpercapita_m186; assert_equal("ok", worksheet.costpercapita_m186); end
  def test_costpercapita_o186; assert_equal("ok", worksheet.costpercapita_o186); end
  def test_costpercapita_p186; assert_equal("ok", worksheet.costpercapita_p186); end
  def test_costpercapita_q186; assert_equal("ok", worksheet.costpercapita_q186); end
  def test_costpercapita_r186; assert_equal("ok", worksheet.costpercapita_r186); end
  def test_costpercapita_s186; assert_equal("ok", worksheet.costpercapita_s186); end
  def test_costpercapita_t186; assert_equal("ok", worksheet.costpercapita_t186); end
  def test_costpercapita_u186; assert_equal("ok", worksheet.costpercapita_u186); end
  def test_costpercapita_v186; assert_equal("ok", worksheet.costpercapita_v186); end
  def test_costpercapita_w186; assert_equal("ok", worksheet.costpercapita_w186); end
  def test_costpercapita_y186; assert_equal("ok", worksheet.costpercapita_y186); end
  def test_costpercapita_z186; assert_equal("ok", worksheet.costpercapita_z186); end
  def test_costpercapita_aa186; assert_equal("ok", worksheet.costpercapita_aa186); end
  def test_costpercapita_ab186; assert_equal("ok", worksheet.costpercapita_ab186); end
  def test_costpercapita_ac186; assert_equal("ok", worksheet.costpercapita_ac186); end
  def test_costpercapita_ad186; assert_equal("ok", worksheet.costpercapita_ad186); end
  def test_costpercapita_ae186; assert_equal("ok", worksheet.costpercapita_ae186); end
  def test_costpercapita_af186; assert_equal("ok", worksheet.costpercapita_af186); end
  def test_costpercapita_ag186; assert_equal("ok", worksheet.costpercapita_ag186); end
  def test_costpercapita_ai186; assert_equal("ok", worksheet.costpercapita_ai186); end
  def test_costpercapita_aj186; assert_equal("ok", worksheet.costpercapita_aj186); end
  def test_costpercapita_ak186; assert_equal("ok", worksheet.costpercapita_ak186); end
  def test_costpercapita_al186; assert_equal("ok", worksheet.costpercapita_al186); end
  def test_costpercapita_am186; assert_equal("ok", worksheet.costpercapita_am186); end
  def test_costpercapita_an186; assert_equal("ok", worksheet.costpercapita_an186); end
  def test_costpercapita_ao186; assert_equal("ok", worksheet.costpercapita_ao186); end
  def test_costpercapita_ap186; assert_equal("ok", worksheet.costpercapita_ap186); end
  def test_costpercapita_aq186; assert_equal("ok", worksheet.costpercapita_aq186); end
  def test_costpercapita_as186; assert_equal("ok", worksheet.costpercapita_as186); end
  def test_costpercapita_at186; assert_equal("ok", worksheet.costpercapita_at186); end
  def test_costpercapita_ay186; assert_equal("ok", worksheet.costpercapita_ay186); end
  def test_costpercapita_az186; assert_equal("ok", worksheet.costpercapita_az186); end
  def test_costpercapita_ba186; assert_equal("ok", worksheet.costpercapita_ba186); end
  def test_costpercapita_bb186; assert_equal("ok", worksheet.costpercapita_bb186); end
  def test_costpercapita_bc186; assert_equal("ok", worksheet.costpercapita_bc186); end
  def test_costpercapita_bd186; assert_equal("ok", worksheet.costpercapita_bd186); end
  def test_costpercapita_be186; assert_equal("ok", worksheet.costpercapita_be186); end
  def test_costpercapita_bf186; assert_equal("ok", worksheet.costpercapita_bf186); end
  def test_costpercapita_bg186; assert_equal("ok", worksheet.costpercapita_bg186); end
  def test_costpercapita_bi186; assert_equal("ok", worksheet.costpercapita_bi186); end
  def test_costpercapita_bj186; assert_equal("ok", worksheet.costpercapita_bj186); end
  def test_costpercapita_bk186; assert_equal("ok", worksheet.costpercapita_bk186); end
  def test_costpercapita_bl186; assert_equal("ok", worksheet.costpercapita_bl186); end
  def test_costpercapita_bm186; assert_equal("ok", worksheet.costpercapita_bm186); end
  def test_costpercapita_bn186; assert_equal("ok", worksheet.costpercapita_bn186); end
  def test_costpercapita_bo186; assert_equal("ok", worksheet.costpercapita_bo186); end
  def test_costpercapita_bp186; assert_equal("ok", worksheet.costpercapita_bp186); end
  def test_costpercapita_bq186; assert_equal("ok", worksheet.costpercapita_bq186); end
  def test_costpercapita_bs186; assert_equal("ok", worksheet.costpercapita_bs186); end
  def test_costpercapita_bt186; assert_equal("ok", worksheet.costpercapita_bt186); end
  def test_costpercapita_bu186; assert_equal("ok", worksheet.costpercapita_bu186); end
  def test_costpercapita_bv186; assert_equal("ok", worksheet.costpercapita_bv186); end
  def test_costpercapita_bw186; assert_equal("ok", worksheet.costpercapita_bw186); end
  def test_costpercapita_bx186; assert_equal("ok", worksheet.costpercapita_bx186); end
  def test_costpercapita_by186; assert_equal("ok", worksheet.costpercapita_by186); end
  def test_costpercapita_bz186; assert_equal("ok", worksheet.costpercapita_bz186); end
  def test_costpercapita_ca186; assert_equal("ok", worksheet.costpercapita_ca186); end
  def test_costpercapita_cc186; assert_equal("ok", worksheet.costpercapita_cc186); end
  def test_costpercapita_cd186; assert_equal("ok", worksheet.costpercapita_cd186); end
  def test_costpercapita_cf186; assert_equal("ok", worksheet.costpercapita_cf186); end
  def test_costpercapita_cg186; assert_equal("ok", worksheet.costpercapita_cg186); end
  def test_costpercapita_ch186; assert_equal("ok", worksheet.costpercapita_ch186); end
  def test_costpercapita_ci186; assert_equal("ok", worksheet.costpercapita_ci186); end
  def test_costpercapita_cj186; assert_equal("ok", worksheet.costpercapita_cj186); end
  def test_costpercapita_ck186; assert_equal("ok", worksheet.costpercapita_ck186); end
  def test_costpercapita_cl186; assert_equal("ok", worksheet.costpercapita_cl186); end
  def test_costpercapita_cm186; assert_equal("ok", worksheet.costpercapita_cm186); end
  def test_costpercapita_cn186; assert_equal("ok", worksheet.costpercapita_cn186); end
  def test_costpercapita_cp186; assert_equal("ok", worksheet.costpercapita_cp186); end
  def test_costpercapita_cq186; assert_equal("ok", worksheet.costpercapita_cq186); end
  def test_costpercapita_c188; assert_equal("£m", worksheet.costpercapita_c188); end
  def test_costpercapita_e188; assert_equal("C1.High", worksheet.costpercapita_e188); end
  def test_costpercapita_f188; assert_equal("High estimate of capital costs", worksheet.costpercapita_f188); end
  def test_costpercapita_o188; assert_equal("C2.High", worksheet.costpercapita_o188); end
  def test_costpercapita_p188; assert_equal("High estimate of operating costs", worksheet.costpercapita_p188); end
  def test_costpercapita_y188; assert_equal("C3.High", worksheet.costpercapita_y188); end
  def test_costpercapita_z188; assert_equal("High estimate of fuel costs", worksheet.costpercapita_z188); end
  def test_costpercapita_ai188; assert_equal("High estimate of total cost", worksheet.costpercapita_ai188); end
  def test_costpercapita_as188; assert_equal("Cashflow capital basis", worksheet.costpercapita_as188); end
  def test_costpercapita_av188; assert_equal("Loan", worksheet.costpercapita_av188); end
  def test_costpercapita_ay188; assert_equal("Repayments for capital spent in that period", worksheet.costpercapita_ay188); end
  def test_costpercapita_bi188; assert_equal("Repayments for outstanding capital", worksheet.costpercapita_bi188); end
  def test_costpercapita_br188; assert_equal("Total cost (amortised capital)", worksheet.costpercapita_br188); end
  def test_costpercapita_bs185; assert_in_epsilon(2744.6095591719345, worksheet.costpercapita_bs185, 0.001); end
  def test_costpercapita_bt185; assert_in_epsilon(3584.9781505400565, worksheet.costpercapita_bt185, 0.001); end
  def test_costpercapita_bu185; assert_in_epsilon(4462.18941433742, worksheet.costpercapita_bu185, 0.001); end
  def test_costpercapita_bv185; assert_in_epsilon(5106.0305730295695, worksheet.costpercapita_bv185, 0.001); end
  def test_costpercapita_bw185; assert_in_epsilon(5464.448129949947, worksheet.costpercapita_bw185, 0.001); end
  def test_costpercapita_bx185; assert_in_epsilon(5654.040738082179, worksheet.costpercapita_bx185, 0.001); end
  def test_costpercapita_by185; assert_in_epsilon(5608.187621613994, worksheet.costpercapita_by185, 0.001); end
  def test_costpercapita_bz185; assert_in_epsilon(6073.613095257046, worksheet.costpercapita_bz185, 0.001); end
  def test_costpercapita_ca185; assert_in_epsilon(5992.199437664594, worksheet.costpercapita_ca185, 0.001); end
  def test_costpercapita_ca188; assert_in_epsilon(320524.916644619, worksheet.costpercapita_ca188, 0.001); end
  def test_costpercapita_cc188; assert_equal("Amortised Capital", worksheet.costpercapita_cc188); end
  def test_costpercapita_cf188; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cf188); end
  def test_costpercapita_cp188; assert_equal("Extra cost due to financing capital, compared with doing it out of cash", worksheet.costpercapita_cp188); end
  def test_costpercapita_c189; assert_equal("Category", worksheet.costpercapita_c189); end
  def test_costpercapita_e189; assert_equal("2010", worksheet.costpercapita_e189); end
  def test_costpercapita_f189; assert_equal("2015", worksheet.costpercapita_f189); end
  def test_costpercapita_g189; assert_equal("2020", worksheet.costpercapita_g189); end
  def test_costpercapita_h189; assert_equal("2025", worksheet.costpercapita_h189); end
  def test_costpercapita_i189; assert_equal("2030", worksheet.costpercapita_i189); end
  def test_costpercapita_j189; assert_equal("2035", worksheet.costpercapita_j189); end
  def test_costpercapita_k189; assert_equal("2040", worksheet.costpercapita_k189); end
  def test_costpercapita_l189; assert_equal("2045", worksheet.costpercapita_l189); end
  def test_costpercapita_m189; assert_equal("2050", worksheet.costpercapita_m189); end
  def test_costpercapita_o189; assert_equal("2010", worksheet.costpercapita_o189); end
  def test_costpercapita_p189; assert_equal("2015", worksheet.costpercapita_p189); end
  def test_costpercapita_q189; assert_equal("2020", worksheet.costpercapita_q189); end
  def test_costpercapita_r189; assert_equal("2025", worksheet.costpercapita_r189); end
  def test_costpercapita_s189; assert_equal("2030", worksheet.costpercapita_s189); end
  def test_costpercapita_t189; assert_equal("2035", worksheet.costpercapita_t189); end
  def test_costpercapita_u189; assert_equal("2040", worksheet.costpercapita_u189); end
  def test_costpercapita_v189; assert_equal("2045", worksheet.costpercapita_v189); end
  def test_costpercapita_w189; assert_equal("2050", worksheet.costpercapita_w189); end
  def test_costpercapita_y189; assert_equal("2010", worksheet.costpercapita_y189); end
  def test_costpercapita_z189; assert_equal("2015", worksheet.costpercapita_z189); end
  def test_costpercapita_aa189; assert_equal("2020", worksheet.costpercapita_aa189); end
  def test_costpercapita_ab189; assert_equal("2025", worksheet.costpercapita_ab189); end
  def test_costpercapita_ac189; assert_equal("2030", worksheet.costpercapita_ac189); end
  def test_costpercapita_ad189; assert_equal("2035", worksheet.costpercapita_ad189); end
  def test_costpercapita_ae189; assert_equal("2040", worksheet.costpercapita_ae189); end
  def test_costpercapita_af189; assert_equal("2045", worksheet.costpercapita_af189); end
  def test_costpercapita_ag189; assert_equal("2050", worksheet.costpercapita_ag189); end
  def test_costpercapita_ai189; assert_equal("2010", worksheet.costpercapita_ai189); end
  def test_costpercapita_aj189; assert_equal("2015", worksheet.costpercapita_aj189); end
  def test_costpercapita_ak189; assert_equal("2020", worksheet.costpercapita_ak189); end
  def test_costpercapita_al189; assert_equal("2025", worksheet.costpercapita_al189); end
  def test_costpercapita_am189; assert_equal("2030", worksheet.costpercapita_am189); end
  def test_costpercapita_an189; assert_equal("2035", worksheet.costpercapita_an189); end
  def test_costpercapita_ao189; assert_equal("2040", worksheet.costpercapita_ao189); end
  def test_costpercapita_ap189; assert_equal("2045", worksheet.costpercapita_ap189); end
  def test_costpercapita_aq189; assert_equal("2050", worksheet.costpercapita_aq189); end
  def test_costpercapita_as189; assert_equal("Mean", worksheet.costpercapita_as189); end
  def test_costpercapita_at189; assert_equal("NPV", worksheet.costpercapita_at189); end
  def test_costpercapita_av189; assert_equal("Rate", worksheet.costpercapita_av189); end
  def test_costpercapita_aw189; assert_equal("Years", worksheet.costpercapita_aw189); end
  def test_costpercapita_ay189; assert_in_epsilon(2010, worksheet.costpercapita_ay189, 0.001); end
  def test_costpercapita_az189; assert_in_epsilon(2015, worksheet.costpercapita_az189, 0.001); end
  def test_costpercapita_ba189; assert_in_epsilon(2020, worksheet.costpercapita_ba189, 0.001); end
  def test_costpercapita_bb189; assert_in_epsilon(2025, worksheet.costpercapita_bb189, 0.001); end
  def test_costpercapita_bc189; assert_in_epsilon(2030, worksheet.costpercapita_bc189, 0.001); end
  def test_costpercapita_bd189; assert_in_epsilon(2035, worksheet.costpercapita_bd189, 0.001); end
  def test_costpercapita_be189; assert_in_epsilon(2040, worksheet.costpercapita_be189, 0.001); end
  def test_costpercapita_bf189; assert_in_epsilon(2045, worksheet.costpercapita_bf189, 0.001); end
  def test_costpercapita_bg189; assert_in_epsilon(2050, worksheet.costpercapita_bg189, 0.001); end
  def test_costpercapita_bi189; assert_in_epsilon(2010, worksheet.costpercapita_bi189, 0.001); end
  def test_costpercapita_bj189; assert_in_epsilon(2015, worksheet.costpercapita_bj189, 0.001); end
  def test_costpercapita_bk189; assert_in_epsilon(2020, worksheet.costpercapita_bk189, 0.001); end
  def test_costpercapita_bl189; assert_in_epsilon(2025, worksheet.costpercapita_bl189, 0.001); end
  def test_costpercapita_bm189; assert_in_epsilon(2030, worksheet.costpercapita_bm189, 0.001); end
  def test_costpercapita_bn189; assert_in_epsilon(2035, worksheet.costpercapita_bn189, 0.001); end
  def test_costpercapita_bo189; assert_in_epsilon(2040, worksheet.costpercapita_bo189, 0.001); end
  def test_costpercapita_bp189; assert_in_epsilon(2045, worksheet.costpercapita_bp189, 0.001); end
  def test_costpercapita_bq189; assert_in_epsilon(2050, worksheet.costpercapita_bq189, 0.001); end
  def test_costpercapita_bs189; assert_equal("2010", worksheet.costpercapita_bs189); end
  def test_costpercapita_bt189; assert_equal("2015", worksheet.costpercapita_bt189); end
  def test_costpercapita_bu189; assert_equal("2020", worksheet.costpercapita_bu189); end
  def test_costpercapita_bv189; assert_equal("2025", worksheet.costpercapita_bv189); end
  def test_costpercapita_bw189; assert_equal("2030", worksheet.costpercapita_bw189); end
  def test_costpercapita_bx189; assert_equal("2035", worksheet.costpercapita_bx189); end
  def test_costpercapita_by189; assert_equal("2040", worksheet.costpercapita_by189); end
  def test_costpercapita_bz189; assert_equal("2045", worksheet.costpercapita_bz189); end
  def test_costpercapita_ca189; assert_equal("2050", worksheet.costpercapita_ca189); end
  def test_costpercapita_cc189; assert_equal("Mean", worksheet.costpercapita_cc189); end
  def test_costpercapita_cd189; assert_equal("NPV", worksheet.costpercapita_cd189); end
  def test_costpercapita_cf189; assert_equal("2010", worksheet.costpercapita_cf189); end
  def test_costpercapita_cg189; assert_equal("2015", worksheet.costpercapita_cg189); end
  def test_costpercapita_ch189; assert_equal("2020", worksheet.costpercapita_ch189); end
  def test_costpercapita_ci189; assert_equal("2025", worksheet.costpercapita_ci189); end
  def test_costpercapita_cj189; assert_equal("2030", worksheet.costpercapita_cj189); end
  def test_costpercapita_ck189; assert_equal("2035", worksheet.costpercapita_ck189); end
  def test_costpercapita_cl189; assert_equal("2040", worksheet.costpercapita_cl189); end
  def test_costpercapita_cm189; assert_equal("2045", worksheet.costpercapita_cm189); end
  def test_costpercapita_cn189; assert_equal("2050", worksheet.costpercapita_cn189); end
  def test_costpercapita_cp189; assert_equal("Mean", worksheet.costpercapita_cp189); end
  def test_costpercapita_cq189; assert_equal("NPV", worksheet.costpercapita_cq189); end
  def test_costpercapita_c190; assert_equal("Fossil Fuels", worksheet.costpercapita_c190); end
  def test_costpercapita_e190; assert_in_epsilon(34.689198046725465, worksheet.costpercapita_e190, 0.001); end
  def test_costpercapita_f190; assert_in_epsilon(10.203854734275321, worksheet.costpercapita_f190, 0.001); end
  def test_costpercapita_g190; assert_in_epsilon(10.526090753272403, worksheet.costpercapita_g190, 0.001); end
  def test_costpercapita_h190; assert_in_epsilon(9.089650621508428, worksheet.costpercapita_h190, 0.001); end
  def test_costpercapita_i190; assert_in_epsilon(7.064498166041793, worksheet.costpercapita_i190, 0.001); end
  def test_costpercapita_j190; assert_in_epsilon(4.9790447231177835, worksheet.costpercapita_j190, 0.001); end
  def test_costpercapita_k190; assert_in_epsilon(3.986316673259076, worksheet.costpercapita_k190, 0.001); end
  def test_costpercapita_l190; assert_in_epsilon(2.740101429463171, worksheet.costpercapita_l190, 0.001); end
  def test_costpercapita_m190; assert_in_epsilon(1.285946657004056, worksheet.costpercapita_m190, 0.001); end
  def test_costpercapita_o190; assert_in_delta(0.05623216890603242, worksheet.costpercapita_o190, 0.001); end
  def test_costpercapita_p190; assert_in_delta(0.08187354779771792, worksheet.costpercapita_p190, 0.001); end
  def test_costpercapita_q190; assert_in_delta(0.058809346877740566, worksheet.costpercapita_q190, 0.001); end
  def test_costpercapita_r190; assert_in_delta(0.0390304826634953, worksheet.costpercapita_r190, 0.001); end
  def test_costpercapita_s190; assert_in_delta(0.023977236491421843, worksheet.costpercapita_s190, 0.001); end
  def test_costpercapita_t190; assert_in_delta(0.01702479810270725, worksheet.costpercapita_t190, 0.001); end
  def test_costpercapita_u190; assert_in_delta(0.010517391729447276, worksheet.costpercapita_u190, 0.001); end
  def test_costpercapita_v190; assert_in_delta(0.004481280183863448, worksheet.costpercapita_v190, 0.001); end
  def test_costpercapita_w190; assert_in_delta(0, (worksheet.costpercapita_w190||0), 0.001); end
  def test_costpercapita_y190; assert_in_epsilon(696.5429062152073, worksheet.costpercapita_y190, 0.001); end
  def test_costpercapita_z190; assert_in_epsilon(746.3950371509286, worksheet.costpercapita_z190, 0.001); end
  def test_costpercapita_aa190; assert_in_epsilon(709.8002190898031, worksheet.costpercapita_aa190, 0.001); end
  def test_costpercapita_ab190; assert_in_epsilon(591.1013291326092, worksheet.costpercapita_ab190, 0.001); end
  def test_costpercapita_ac190; assert_in_epsilon(459.04066296557545, worksheet.costpercapita_ac190, 0.001); end
  def test_costpercapita_ad190; assert_in_epsilon(358.12278548657787, worksheet.costpercapita_ad190, 0.001); end
  def test_costpercapita_ae190; assert_in_epsilon(261.13013999793907, worksheet.costpercapita_ae190, 0.001); end
  def test_costpercapita_af190; assert_in_epsilon(163.2492826809442, worksheet.costpercapita_af190, 0.001); end
  def test_costpercapita_ag190; assert_in_epsilon(77.29978025485053, worksheet.costpercapita_ag190, 0.001); end
  def test_costpercapita_ai190; assert_in_epsilon(731.2883364308387, worksheet.costpercapita_ai190, 0.001); end
  def test_costpercapita_aj190; assert_in_epsilon(756.6807654330016, worksheet.costpercapita_aj190, 0.001); end
  def test_costpercapita_ak190; assert_in_epsilon(720.3851191899532, worksheet.costpercapita_ak190, 0.001); end
  def test_costpercapita_al190; assert_in_epsilon(600.2300102367813, worksheet.costpercapita_al190, 0.001); end
  def test_costpercapita_am190; assert_in_epsilon(466.12913836810867, worksheet.costpercapita_am190, 0.001); end
  def test_costpercapita_an190; assert_in_epsilon(363.11885500779835, worksheet.costpercapita_an190, 0.001); end
  def test_costpercapita_ao190; assert_in_epsilon(265.12697406292756, worksheet.costpercapita_ao190, 0.001); end
  def test_costpercapita_ap190; assert_in_epsilon(165.99386539059122, worksheet.costpercapita_ap190, 0.001); end
  def test_costpercapita_aq190; assert_in_epsilon(78.58572691185458, worksheet.costpercapita_aq190, 0.001); end
  def test_costpercapita_as190; assert_in_epsilon(460.837643447984, worksheet.costpercapita_as190, 0.001); end
  def test_costpercapita_ay190; assert_in_epsilon(13.682159653191158, worksheet.costpercapita_ay190, 0.001); end
  def test_costpercapita_az190; assert_in_epsilon(6.707696603626351, worksheet.costpercapita_az190, 0.001); end
  def test_costpercapita_ba190; assert_in_epsilon(6.919524535959839, worksheet.costpercapita_ba190, 0.001); end
  def test_costpercapita_bb190; assert_in_epsilon(5.975253488981816, worksheet.costpercapita_bb190, 0.001); end
  def test_costpercapita_bc190; assert_in_epsilon(4.643981278517145, worksheet.costpercapita_bc190, 0.001); end
  def test_costpercapita_bd190; assert_in_epsilon(3.2730690751971774, worksheet.costpercapita_bd190, 0.001); end
  def test_costpercapita_be190; assert_in_epsilon(2.6204805445123784, worksheet.costpercapita_be190, 0.001); end
  def test_costpercapita_bf190; assert_in_epsilon(1.8012574199300533, worksheet.costpercapita_bf190, 0.001); end
  def test_costpercapita_bg190; assert_in_delta(0.8453413193600672, worksheet.costpercapita_bg190, 0.001); end
  def test_costpercapita_bi190; assert_in_epsilon(13.682159653191158, worksheet.costpercapita_bi190, 0.001); end
  def test_costpercapita_bj190; assert_in_epsilon(19.938686094749688, worksheet.costpercapita_bj190, 0.001); end
  def test_costpercapita_bk190; assert_in_epsilon(26.205454925619794, worksheet.costpercapita_bk190, 0.001); end
  def test_costpercapita_bl190; assert_in_epsilon(18.967730434453067, worksheet.costpercapita_bl190, 0.001); end
  def test_costpercapita_bm190; assert_in_epsilon(16.978072882146716, worksheet.costpercapita_bm190, 0.001); end
  def test_costpercapita_bn190; assert_in_epsilon(13.482760884402461, worksheet.costpercapita_bn190, 0.001); end
  def test_costpercapita_bo190; assert_in_epsilon(10.261629554507483, worksheet.costpercapita_bo190, 0.001); end
  def test_costpercapita_bp190; assert_in_epsilon(7.508832636090548, worksheet.costpercapita_bp190, 0.001); end
  def test_costpercapita_bq190; assert_in_epsilon(5.13326433803175, worksheet.costpercapita_bq190, 0.001); end
  def test_costpercapita_bs190; assert_in_epsilon(710.2812980373045, worksheet.costpercapita_bs190, 0.001); end
  def test_costpercapita_bt190; assert_in_epsilon(766.415596793476, worksheet.costpercapita_bt190, 0.001); end
  def test_costpercapita_bu190; assert_in_epsilon(736.0644833623006, worksheet.costpercapita_bu190, 0.001); end
  def test_costpercapita_bv190; assert_in_epsilon(610.1080900497259, worksheet.costpercapita_bv190, 0.001); end
  def test_costpercapita_bw190; assert_in_epsilon(476.0427130842136, worksheet.costpercapita_bw190, 0.001); end
  def test_costpercapita_bx190; assert_in_epsilon(371.622571169083, worksheet.costpercapita_bx190, 0.001); end
  def test_costpercapita_by190; assert_in_epsilon(271.40228694417596, worksheet.costpercapita_by190, 0.001); end
  def test_costpercapita_bz190; assert_in_epsilon(170.7625965972186, worksheet.costpercapita_bz190, 0.001); end
  def test_costpercapita_ca190; assert_in_epsilon(82.43304459288227, worksheet.costpercapita_ca190, 0.001); end
  def test_costpercapita_cc190; assert_in_epsilon(466.12585340337574, worksheet.costpercapita_cc190, 0.001); end
  def test_costpercapita_cf190; assert_in_epsilon(-21.00703839353431, worksheet.costpercapita_cf190, 0.001); end
  def test_costpercapita_cg190; assert_in_epsilon(9.734831360474367, worksheet.costpercapita_cg190, 0.001); end
  def test_costpercapita_ch190; assert_in_epsilon(15.679364172347393, worksheet.costpercapita_ch190, 0.001); end
  def test_costpercapita_ci190; assert_in_epsilon(9.878079812944641, worksheet.costpercapita_ci190, 0.001); end
  def test_costpercapita_cj190; assert_in_epsilon(9.913574716104922, worksheet.costpercapita_cj190, 0.001); end
  def test_costpercapita_ck190; assert_in_epsilon(8.503716161284679, worksheet.costpercapita_ck190, 0.001); end
  def test_costpercapita_cl190; assert_in_epsilon(6.275312881248406, worksheet.costpercapita_cl190, 0.001); end
  def test_costpercapita_cm190; assert_in_epsilon(4.768731206627377, worksheet.costpercapita_cm190, 0.001); end
  def test_costpercapita_cn190; assert_in_epsilon(3.8473176810276932, worksheet.costpercapita_cn190, 0.001); end
  def test_costpercapita_cp190; assert_in_epsilon(5.288209955391685, worksheet.costpercapita_cp190, 0.001); end
  def test_costpercapita_cd190; assert_in_epsilon(11204.288074537992, worksheet.costpercapita_cd190, 0.001); end
  def test_costpercapita_cq190; assert_in_epsilon(171.54201911395617, worksheet.costpercapita_cq190, 0.001); end
  def test_costpercapita_at190; assert_in_epsilon(11032.746055424035, worksheet.costpercapita_at190, 0.001); end
  def test_costpercapita_cr190; assert_equal("ok", worksheet.costpercapita_cr190); end
  def test_costpercapita_c191; assert_equal("Bioenergy", worksheet.costpercapita_c191); end
  def test_costpercapita_e191; assert_in_epsilon(122.60941348957272, worksheet.costpercapita_e191, 0.001); end
  def test_costpercapita_f191; assert_in_epsilon(133.24681186468558, worksheet.costpercapita_f191, 0.001); end
  def test_costpercapita_g191; assert_in_epsilon(118.11931371887556, worksheet.costpercapita_g191, 0.001); end
  def test_costpercapita_h191; assert_in_epsilon(108.20081388907118, worksheet.costpercapita_h191, 0.001); end
  def test_costpercapita_i191; assert_in_epsilon(109.89180416615434, worksheet.costpercapita_i191, 0.001); end
  def test_costpercapita_j191; assert_in_epsilon(118.99980555524928, worksheet.costpercapita_j191, 0.001); end
  def test_costpercapita_k191; assert_in_epsilon(143.04984210092832, worksheet.costpercapita_k191, 0.001); end
  def test_costpercapita_l191; assert_in_epsilon(188.7335104739061, worksheet.costpercapita_l191, 0.001); end
  def test_costpercapita_m191; assert_in_epsilon(109.10501060442922, worksheet.costpercapita_m191, 0.001); end
  def test_costpercapita_o191; assert_in_epsilon(144.21630186475636, worksheet.costpercapita_o191, 0.001); end
  def test_costpercapita_p191; assert_in_epsilon(173.25545987911124, worksheet.costpercapita_p191, 0.001); end
  def test_costpercapita_q191; assert_in_epsilon(208.2552694762752, worksheet.costpercapita_q191, 0.001); end
  def test_costpercapita_r191; assert_in_epsilon(236.15161693054, worksheet.costpercapita_r191, 0.001); end
  def test_costpercapita_s191; assert_in_epsilon(254.46698705745519, worksheet.costpercapita_s191, 0.001); end
  def test_costpercapita_t191; assert_in_epsilon(270.120405321808, worksheet.costpercapita_t191, 0.001); end
  def test_costpercapita_u191; assert_in_epsilon(290.8032032033913, worksheet.costpercapita_u191, 0.001); end
  def test_costpercapita_v191; assert_in_epsilon(320.1664996617309, worksheet.costpercapita_v191, 0.001); end
  def test_costpercapita_w191; assert_in_epsilon(362.70426127835435, worksheet.costpercapita_w191, 0.001); end
  def test_costpercapita_y191; assert_in_epsilon(15.267151845215244, worksheet.costpercapita_y191, 0.001); end
  def test_costpercapita_z191; assert_in_epsilon(35.02198141655361, worksheet.costpercapita_z191, 0.001); end
  def test_costpercapita_aa191; assert_in_epsilon(62.976815522810725, worksheet.costpercapita_aa191, 0.001); end
  def test_costpercapita_ab191; assert_in_epsilon(86.82352897875991, worksheet.costpercapita_ab191, 0.001); end
  def test_costpercapita_ac191; assert_in_epsilon(115.27957609264523, worksheet.costpercapita_ac191, 0.001); end
  def test_costpercapita_ad191; assert_in_epsilon(142.8488307850633, worksheet.costpercapita_ad191, 0.001); end
  def test_costpercapita_ae191; assert_in_epsilon(177.6427532925457, worksheet.costpercapita_ae191, 0.001); end
  def test_costpercapita_af191; assert_in_epsilon(228.8719220933266, worksheet.costpercapita_af191, 0.001); end
  def test_costpercapita_ag191; assert_in_epsilon(306.74278227774795, worksheet.costpercapita_ag191, 0.001); end
  def test_costpercapita_ai191; assert_in_epsilon(282.09286719954434, worksheet.costpercapita_ai191, 0.001); end
  def test_costpercapita_aj191; assert_in_epsilon(341.52425316035044, worksheet.costpercapita_aj191, 0.001); end
  def test_costpercapita_ak191; assert_in_epsilon(389.3513987179615, worksheet.costpercapita_ak191, 0.001); end
  def test_costpercapita_al191; assert_in_epsilon(431.1759597983711, worksheet.costpercapita_al191, 0.001); end
  def test_costpercapita_am191; assert_in_epsilon(479.6383673162548, worksheet.costpercapita_am191, 0.001); end
  def test_costpercapita_an191; assert_in_epsilon(531.9690416621206, worksheet.costpercapita_an191, 0.001); end
  def test_costpercapita_ao191; assert_in_epsilon(611.4957985968653, worksheet.costpercapita_ao191, 0.001); end
  def test_costpercapita_ap191; assert_in_epsilon(737.7719322289636, worksheet.costpercapita_ap191, 0.001); end
  def test_costpercapita_aq191; assert_in_epsilon(778.5520541605315, worksheet.costpercapita_aq191, 0.001); end
  def test_costpercapita_as191; assert_in_epsilon(509.28574142677377, worksheet.costpercapita_as191, 0.001); end
  def test_costpercapita_ay191; assert_in_epsilon(43.02517407791272, worksheet.costpercapita_ay191, 0.001); end
  def test_costpercapita_az191; assert_in_epsilon(77.52194776693932, worksheet.costpercapita_az191, 0.001); end
  def test_costpercapita_ba191; assert_in_epsilon(69.93748660393682, worksheet.costpercapita_ba191, 0.001); end
  def test_costpercapita_bb191; assert_in_epsilon(64.21411932784196, worksheet.costpercapita_bb191, 0.001); end
  def test_costpercapita_bc191; assert_in_epsilon(64.95959294124293, worksheet.costpercapita_bc191, 0.001); end
  def test_costpercapita_bd191; assert_in_epsilon(69.66556539961749, worksheet.costpercapita_bd191, 0.001); end
  def test_costpercapita_be191; assert_in_epsilon(82.10495929695824, worksheet.costpercapita_be191, 0.001); end
  def test_costpercapita_bf191; assert_in_epsilon(106.13112355261079, worksheet.costpercapita_bf191, 0.001); end
  def test_costpercapita_bg191; assert_in_epsilon(63.7318681319381, worksheet.costpercapita_bg191, 0.001); end
  def test_costpercapita_bi191; assert_in_epsilon(43.02517407791272, worksheet.costpercapita_bi191, 0.001); end
  def test_costpercapita_bj191; assert_in_epsilon(119.12836375009462, worksheet.costpercapita_bj191, 0.001); end
  def test_costpercapita_bk191; assert_in_epsilon(185.16580805905014, worksheet.costpercapita_bk191, 0.001); end
  def test_costpercapita_bl191; assert_in_epsilon(224.84659469440524, worksheet.costpercapita_bl191, 0.001); end
  def test_costpercapita_bm191; assert_in_epsilon(251.33835458841426, worksheet.costpercapita_bm191, 0.001); end
  def test_costpercapita_bn191; assert_in_epsilon(280.35929734406704, worksheet.costpercapita_bn191, 0.001); end
  def test_costpercapita_bo191; assert_in_epsilon(304.8675157677476, worksheet.costpercapita_bo191, 0.001); end
  def test_costpercapita_bp191; assert_in_epsilon(365.1208134922397, worksheet.costpercapita_bp191, 0.001); end
  def test_costpercapita_bq191; assert_in_epsilon(362.2254035738702, worksheet.costpercapita_bq191, 0.001); end
  def test_costpercapita_bs191; assert_in_epsilon(202.50862778788434, worksheet.costpercapita_bs191, 0.001); end
  def test_costpercapita_bt191; assert_in_epsilon(327.4058050457595, worksheet.costpercapita_bt191, 0.001); end
  def test_costpercapita_bu191; assert_in_epsilon(456.39789305813605, worksheet.costpercapita_bu191, 0.001); end
  def test_costpercapita_bv191; assert_in_epsilon(547.8217406037052, worksheet.costpercapita_bv191, 0.001); end
  def test_costpercapita_bw191; assert_in_epsilon(621.0849177385147, worksheet.costpercapita_bw191, 0.001); end
  def test_costpercapita_bx191; assert_in_epsilon(693.3285334509384, worksheet.costpercapita_bx191, 0.001); end
  def test_costpercapita_by191; assert_in_epsilon(773.3134722636845, worksheet.costpercapita_by191, 0.001); end
  def test_costpercapita_bz191; assert_in_epsilon(914.159235247297, worksheet.costpercapita_bz191, 0.001); end
  def test_costpercapita_ca191; assert_in_epsilon(1031.6724471299726, worksheet.costpercapita_ca191, 0.001); end
  def test_costpercapita_cc191; assert_in_epsilon(618.6325191473213, worksheet.costpercapita_cc191, 0.001); end
  def test_costpercapita_cf191; assert_in_epsilon(-79.58423941165998, worksheet.costpercapita_cf191, 0.001); end
  def test_costpercapita_cg191; assert_in_epsilon(-14.118448114590963, worksheet.costpercapita_cg191, 0.001); end
  def test_costpercapita_ch191; assert_in_epsilon(67.04649434017459, worksheet.costpercapita_ch191, 0.001); end
  def test_costpercapita_ci191; assert_in_epsilon(116.64578080533406, worksheet.costpercapita_ci191, 0.001); end
  def test_costpercapita_cj191; assert_in_epsilon(141.44655042225992, worksheet.costpercapita_cj191, 0.001); end
  def test_costpercapita_ck191; assert_in_epsilon(161.3594917888177, worksheet.costpercapita_ck191, 0.001); end
  def test_costpercapita_cl191; assert_in_epsilon(161.8176736668193, worksheet.costpercapita_cl191, 0.001); end
  def test_costpercapita_cm191; assert_in_epsilon(176.38730301833357, worksheet.costpercapita_cm191, 0.001); end
  def test_costpercapita_cn191; assert_in_epsilon(253.120392969441, worksheet.costpercapita_cn191, 0.001); end
  def test_costpercapita_cp191; assert_in_epsilon(109.34677772054768, worksheet.costpercapita_cp191, 0.001); end
  def test_costpercapita_cd191; assert_in_epsilon(12010.934273163659, worksheet.costpercapita_cd191, 0.001); end
  def test_costpercapita_cq191; assert_in_epsilon(2038.402609470424, worksheet.costpercapita_cq191, 0.001); end
  def test_costpercapita_at191; assert_in_epsilon(9972.531663693238, worksheet.costpercapita_at191, 0.001); end
  def test_costpercapita_cr191; assert_equal("ok", worksheet.costpercapita_cr191); end
  def test_costpercapita_c192; assert_equal("Electricity", worksheet.costpercapita_c192); end
  def test_costpercapita_e192; assert_in_epsilon(640.2874505514733, worksheet.costpercapita_e192, 0.001); end
  def test_costpercapita_f192; assert_in_epsilon(767.314770392912, worksheet.costpercapita_f192, 0.001); end
  def test_costpercapita_g192; assert_in_epsilon(1031.735444321494, worksheet.costpercapita_g192, 0.001); end
  def test_costpercapita_h192; assert_in_epsilon(1164.3104947390418, worksheet.costpercapita_h192, 0.001); end
  def test_costpercapita_i192; assert_in_epsilon(1217.5957977353432, worksheet.costpercapita_i192, 0.001); end
  def test_costpercapita_j192; assert_in_epsilon(1455.300123891234, worksheet.costpercapita_j192, 0.001); end
  def test_costpercapita_k192; assert_in_epsilon(1754.2119357995357, worksheet.costpercapita_k192, 0.001); end
  def test_costpercapita_l192; assert_in_epsilon(2232.589277710545, worksheet.costpercapita_l192, 0.001); end
  def test_costpercapita_m192; assert_in_epsilon(2377.634320708995, worksheet.costpercapita_m192, 0.001); end
  def test_costpercapita_o192; assert_in_epsilon(168.65967447466343, worksheet.costpercapita_o192, 0.001); end
  def test_costpercapita_p192; assert_in_epsilon(197.8203775008815, worksheet.costpercapita_p192, 0.001); end
  def test_costpercapita_q192; assert_in_epsilon(266.466083630559, worksheet.costpercapita_q192, 0.001); end
  def test_costpercapita_r192; assert_in_epsilon(346.4884190462699, worksheet.costpercapita_r192, 0.001); end
  def test_costpercapita_s192; assert_in_epsilon(411.8105202064074, worksheet.costpercapita_s192, 0.001); end
  def test_costpercapita_t192; assert_in_epsilon(493.7614317158975, worksheet.costpercapita_t192, 0.001); end
  def test_costpercapita_u192; assert_in_epsilon(555.3767806346606, worksheet.costpercapita_u192, 0.001); end
  def test_costpercapita_v192; assert_in_epsilon(632.5291878585051, worksheet.costpercapita_v192, 0.001); end
  def test_costpercapita_w192; assert_in_epsilon(669.6963495615427, worksheet.costpercapita_w192, 0.001); end
  def test_costpercapita_y192; assert_in_epsilon(2.6735560562467136, worksheet.costpercapita_y192, 0.001); end
  def test_costpercapita_z192; assert_in_epsilon(2.1717321025221366, worksheet.costpercapita_z192, 0.001); end
  def test_costpercapita_aa192; assert_in_epsilon(1.2003620629819147, worksheet.costpercapita_aa192, 0.001); end
  def test_costpercapita_ab192; assert_in_delta(0.38773156085068894, worksheet.costpercapita_ab192, 0.001); end
  def test_costpercapita_ac192; assert_in_epsilon(-149.06562175616133, worksheet.costpercapita_ac192, 0.001); end
  def test_costpercapita_ad192; assert_in_epsilon(-379.21984696185353, worksheet.costpercapita_ad192, 0.001); end
  def test_costpercapita_ae192; assert_in_epsilon(-475.7106920214553, worksheet.costpercapita_ae192, 0.001); end
  def test_costpercapita_af192; assert_in_epsilon(-551.0112942294445, worksheet.costpercapita_af192, 0.001); end
  def test_costpercapita_ag192; assert_in_epsilon(-578.0540705961951, worksheet.costpercapita_ag192, 0.001); end
  def test_costpercapita_ai192; assert_in_epsilon(811.6206810823834, worksheet.costpercapita_ai192, 0.001); end
  def test_costpercapita_aj192; assert_in_epsilon(967.3068799963158, worksheet.costpercapita_aj192, 0.001); end
  def test_costpercapita_ak192; assert_in_epsilon(1299.401890015035, worksheet.costpercapita_ak192, 0.001); end
  def test_costpercapita_al192; assert_in_epsilon(1511.1866453461623, worksheet.costpercapita_al192, 0.001); end
  def test_costpercapita_am192; assert_in_epsilon(1480.3406961855892, worksheet.costpercapita_am192, 0.001); end
  def test_costpercapita_an192; assert_in_epsilon(1569.8417086452782, worksheet.costpercapita_an192, 0.001); end
  def test_costpercapita_ao192; assert_in_epsilon(1833.878024412741, worksheet.costpercapita_ao192, 0.001); end
  def test_costpercapita_ap192; assert_in_epsilon(2314.107171339606, worksheet.costpercapita_ap192, 0.001); end
  def test_costpercapita_aq192; assert_in_epsilon(2469.276599674343, worksheet.costpercapita_aq192, 0.001); end
  def test_costpercapita_as192; assert_in_epsilon(1584.1066996330503, worksheet.costpercapita_as192, 0.001); end
  def test_costpercapita_ay192; assert_in_epsilon(216.72938354513818, worksheet.costpercapita_ay192, 0.001); end
  def test_costpercapita_az192; assert_in_epsilon(435.850277875481, worksheet.costpercapita_az192, 0.001); end
  def test_costpercapita_ba192; assert_in_epsilon(592.9072482106814, worksheet.costpercapita_ba192, 0.001); end
  def test_costpercapita_bb192; assert_in_epsilon(675.6470926249294, worksheet.costpercapita_bb192, 0.001); end
  def test_costpercapita_bc192; assert_in_epsilon(704.7846467670355, worksheet.costpercapita_bc192, 0.001); end
  def test_costpercapita_bd192; assert_in_epsilon(838.4144456251364, worksheet.costpercapita_bd192, 0.001); end
  def test_costpercapita_be192; assert_in_epsilon(994.4435846855723, worksheet.costpercapita_be192, 0.001); end
  def test_costpercapita_bf192; assert_in_epsilon(1264.6618576847823, worksheet.costpercapita_bf192, 0.001); end
  def test_costpercapita_bg192; assert_in_epsilon(1339.095318345021, worksheet.costpercapita_bg192, 0.001); end
  def test_costpercapita_bi192; assert_in_epsilon(216.72938354513818, worksheet.costpercapita_bi192, 0.001); end
  def test_costpercapita_bj192; assert_in_epsilon(645.4329949894822, worksheet.costpercapita_bj192, 0.001); end
  def test_costpercapita_bk192; assert_in_epsilon(1217.2099607066004, worksheet.costpercapita_bk192, 0.001); end
  def test_costpercapita_bl192; assert_in_epsilon(1855.1680034455778, worksheet.costpercapita_bl192, 0.001); end
  def test_costpercapita_bm192; assert_in_epsilon(2431.748912209196, worksheet.costpercapita_bm192, 0.001); end
  def test_costpercapita_bn192; assert_in_epsilon(2902.644546912232, worksheet.costpercapita_bn192, 0.001); end
  def test_costpercapita_bo192; assert_in_epsilon(3268.5130362928685, worksheet.costpercapita_bo192, 0.001); end
  def test_costpercapita_bp192; assert_in_epsilon(4477.4918152826, worksheet.costpercapita_bp192, 0.001); end
  def test_costpercapita_bq192; assert_in_epsilon(4683.332513716686, worksheet.costpercapita_bq192, 0.001); end
  def test_costpercapita_bs192; assert_in_epsilon(388.0626140760482, worksheet.costpercapita_bs192, 0.001); end
  def test_costpercapita_bt192; assert_in_epsilon(845.4251045928858, worksheet.costpercapita_bt192, 0.001); end
  def test_costpercapita_bu192; assert_in_epsilon(1484.8764064001411, worksheet.costpercapita_bu192, 0.001); end
  def test_costpercapita_bv192; assert_in_epsilon(2202.0441540526986, worksheet.costpercapita_bv192, 0.001); end
  def test_costpercapita_bw192; assert_in_epsilon(2694.4938106594423, worksheet.costpercapita_bw192, 0.001); end
  def test_costpercapita_bx192; assert_in_epsilon(3017.186131666276, worksheet.costpercapita_bx192, 0.001); end
  def test_costpercapita_by192; assert_in_epsilon(3348.179124906074, worksheet.costpercapita_by192, 0.001); end
  def test_costpercapita_bz192; assert_in_epsilon(4559.009708911661, worksheet.costpercapita_bz192, 0.001); end
  def test_costpercapita_ca192; assert_in_epsilon(4774.974792682034, worksheet.costpercapita_ca192, 0.001); end
  def test_costpercapita_cc192; assert_in_epsilon(2590.4724275496956, worksheet.costpercapita_cc192, 0.001); end
  def test_costpercapita_cf192; assert_in_epsilon(-423.558067006335, worksheet.costpercapita_cf192, 0.001); end
  def test_costpercapita_cg192; assert_in_epsilon(-121.88177540342996, worksheet.costpercapita_cg192, 0.001); end
  def test_costpercapita_ch192; assert_in_epsilon(185.47451638510626, worksheet.costpercapita_ch192, 0.001); end
  def test_costpercapita_ci192; assert_in_epsilon(690.8575087065359, worksheet.costpercapita_ci192, 0.001); end
  def test_costpercapita_cj192; assert_in_epsilon(1214.1531144738528, worksheet.costpercapita_cj192, 0.001); end
  def test_costpercapita_ck192; assert_in_epsilon(1447.3444230209977, worksheet.costpercapita_ck192, 0.001); end
  def test_costpercapita_cl192; assert_in_epsilon(1514.301100493333, worksheet.costpercapita_cl192, 0.001); end
  def test_costpercapita_cm192; assert_in_epsilon(2244.902537572055, worksheet.costpercapita_cm192, 0.001); end
  def test_costpercapita_cn192; assert_in_epsilon(2305.6981930076913, worksheet.costpercapita_cn192, 0.001); end
  def test_costpercapita_cp192; assert_in_epsilon(1006.3657279166453, worksheet.costpercapita_cp192, 0.001); end
  def test_costpercapita_cd192; assert_in_epsilon(48236.075354995366, worksheet.costpercapita_cd192, 0.001); end
  def test_costpercapita_cq192; assert_in_epsilon(17099.193443843084, worksheet.costpercapita_cq192, 0.001); end
  def test_costpercapita_at192; assert_in_epsilon(31136.881911152286, worksheet.costpercapita_at192, 0.001); end
  def test_costpercapita_cr192; assert_equal("ok", worksheet.costpercapita_cr192); end
  def test_costpercapita_c193; assert_equal("Buildings", worksheet.costpercapita_c193); end
  def test_costpercapita_e193; assert_in_epsilon(714.4108352867515, worksheet.costpercapita_e193, 0.001); end
  def test_costpercapita_f193; assert_in_epsilon(722.3118494624819, worksheet.costpercapita_f193, 0.001); end
  def test_costpercapita_g193; assert_in_epsilon(1016.8161197825597, worksheet.costpercapita_g193, 0.001); end
  def test_costpercapita_h193; assert_in_epsilon(993.9766459771089, worksheet.costpercapita_h193, 0.001); end
  def test_costpercapita_i193; assert_in_epsilon(1116.4414790977723, worksheet.costpercapita_i193, 0.001); end
  def test_costpercapita_j193; assert_in_epsilon(1257.8226544494096, worksheet.costpercapita_j193, 0.001); end
  def test_costpercapita_k193; assert_in_epsilon(1412.1643672180726, worksheet.costpercapita_k193, 0.001); end
  def test_costpercapita_l193; assert_in_epsilon(1560.2289028771368, worksheet.costpercapita_l193, 0.001); end
  def test_costpercapita_m193; assert_in_epsilon(1736.9546350249352, worksheet.costpercapita_m193, 0.001); end
  def test_costpercapita_o193; assert_in_epsilon(111.85458776031255, worksheet.costpercapita_o193, 0.001); end
  def test_costpercapita_p193; assert_in_epsilon(108.30079704222632, worksheet.costpercapita_p193, 0.001); end
  def test_costpercapita_q193; assert_in_epsilon(141.75662791032678, worksheet.costpercapita_q193, 0.001); end
  def test_costpercapita_r193; assert_in_epsilon(175.66364674063624, worksheet.costpercapita_r193, 0.001); end
  def test_costpercapita_s193; assert_in_epsilon(209.97689338562793, worksheet.costpercapita_s193, 0.001); end
  def test_costpercapita_t193; assert_in_epsilon(244.61940337399767, worksheet.costpercapita_t193, 0.001); end
  def test_costpercapita_u193; assert_in_epsilon(279.5106156956272, worksheet.costpercapita_u193, 0.001); end
  def test_costpercapita_v193; assert_in_epsilon(314.59737122188494, worksheet.costpercapita_v193, 0.001); end
  def test_costpercapita_w193; assert_in_epsilon(349.86961616599893, worksheet.costpercapita_w193, 0.001); end
  def test_costpercapita_y193; assert_in_delta(0, (worksheet.costpercapita_y193||0), 0.001); end
  def test_costpercapita_z193; assert_in_delta(0, (worksheet.costpercapita_z193||0), 0.001); end
  def test_costpercapita_aa193; assert_in_delta(0, (worksheet.costpercapita_aa193||0), 0.001); end
  def test_costpercapita_ab193; assert_in_delta(0, (worksheet.costpercapita_ab193||0), 0.001); end
  def test_costpercapita_ac193; assert_in_delta(0, (worksheet.costpercapita_ac193||0), 0.001); end
  def test_costpercapita_ad193; assert_in_delta(0, (worksheet.costpercapita_ad193||0), 0.001); end
  def test_costpercapita_ae193; assert_in_delta(0, (worksheet.costpercapita_ae193||0), 0.001); end
  def test_costpercapita_af193; assert_in_delta(0, (worksheet.costpercapita_af193||0), 0.001); end
  def test_costpercapita_ag193; assert_in_delta(0, (worksheet.costpercapita_ag193||0), 0.001); end
  def test_costpercapita_ai193; assert_in_epsilon(826.2654230470641, worksheet.costpercapita_ai193, 0.001); end
  def test_costpercapita_aj193; assert_in_epsilon(830.6126465047084, worksheet.costpercapita_aj193, 0.001); end
  def test_costpercapita_ak193; assert_in_epsilon(1158.5727476928862, worksheet.costpercapita_ak193, 0.001); end
  def test_costpercapita_al193; assert_in_epsilon(1169.640292717745, worksheet.costpercapita_al193, 0.001); end
  def test_costpercapita_am193; assert_in_epsilon(1326.4183724834004, worksheet.costpercapita_am193, 0.001); end
  def test_costpercapita_an193; assert_in_epsilon(1502.4420578234071, worksheet.costpercapita_an193, 0.001); end
  def test_costpercapita_ao193; assert_in_epsilon(1691.6749829136995, worksheet.costpercapita_ao193, 0.001); end
  def test_costpercapita_ap193; assert_in_epsilon(1874.8262740990215, worksheet.costpercapita_ap193, 0.001); end
  def test_costpercapita_aq193; assert_in_epsilon(2086.8242511909343, worksheet.costpercapita_aq193, 0.001); end
  def test_costpercapita_as193; assert_in_epsilon(1385.253005385874, worksheet.costpercapita_as193, 0.001); end
  def test_costpercapita_ay193; assert_in_epsilon(248.74033395016, worksheet.costpercapita_ay193, 0.001); end
  def test_costpercapita_az193; assert_in_epsilon(417.31569881033005, worksheet.costpercapita_az193, 0.001); end
  def test_costpercapita_ba193; assert_in_epsilon(609.0780870630551, worksheet.costpercapita_ba193, 0.001); end
  def test_costpercapita_bb193; assert_in_epsilon(600.5592591494587, worksheet.costpercapita_bb193, 0.001); end
  def test_costpercapita_bc193; assert_in_epsilon(678.5233438011163, worksheet.costpercapita_bc193, 0.001); end
  def test_costpercapita_bd193; assert_in_epsilon(767.5882081118474, worksheet.costpercapita_bd193, 0.001); end
  def test_costpercapita_be193; assert_in_epsilon(863.7914049184847, worksheet.costpercapita_be193, 0.001); end
  def test_costpercapita_bf193; assert_in_epsilon(958.3539505544258, worksheet.costpercapita_bf193, 0.001); end
  def test_costpercapita_bg193; assert_in_epsilon(1068.2814275554, worksheet.costpercapita_bg193, 0.001); end
  def test_costpercapita_bi193; assert_in_epsilon(248.74033395016, worksheet.costpercapita_bi193, 0.001); end
  def test_costpercapita_bj193; assert_in_epsilon(657.8538030229557, worksheet.costpercapita_bj193, 0.001); end
  def test_costpercapita_bk193; assert_in_epsilon(1245.3949733103718, worksheet.costpercapita_bk193, 0.001); end
  def test_costpercapita_bl193; assert_in_epsilon(1712.2438841799349, worksheet.costpercapita_bl193, 0.001); end
  def test_costpercapita_bm193; assert_in_epsilon(2195.748103319995, worksheet.costpercapita_bm193, 0.001); end
  def test_costpercapita_bn193; assert_in_epsilon(2572.0578633763757, worksheet.costpercapita_bn193, 0.001); end
  def test_costpercapita_bo193; assert_in_epsilon(2895.3716031298627, worksheet.costpercapita_bo193, 0.001); end
  def test_costpercapita_bp193; assert_in_epsilon(3459.551853890806, worksheet.costpercapita_bp193, 0.001); end
  def test_costpercapita_bq193; assert_in_epsilon(3600.0144360313298, worksheet.costpercapita_bq193, 0.001); end
  def test_costpercapita_bs193; assert_in_epsilon(360.59492171047253, worksheet.costpercapita_bs193, 0.001); end
  def test_costpercapita_bt193; assert_in_epsilon(766.1546000651821, worksheet.costpercapita_bt193, 0.001); end
  def test_costpercapita_bu193; assert_in_epsilon(1387.1516012206987, worksheet.costpercapita_bu193, 0.001); end
  def test_costpercapita_bv193; assert_in_epsilon(1887.907530920571, worksheet.costpercapita_bv193, 0.001); end
  def test_costpercapita_bw193; assert_in_epsilon(2405.724996705623, worksheet.costpercapita_bw193, 0.001); end
  def test_costpercapita_bx193; assert_in_epsilon(2816.6772667503737, worksheet.costpercapita_bx193, 0.001); end
  def test_costpercapita_by193; assert_in_epsilon(3174.88221882549, worksheet.costpercapita_by193, 0.001); end
  def test_costpercapita_bz193; assert_in_epsilon(3774.1492251126906, worksheet.costpercapita_bz193, 0.001); end
  def test_costpercapita_ca193; assert_in_epsilon(3949.884052197329, worksheet.costpercapita_ca193, 0.001); end
  def test_costpercapita_cc193; assert_in_epsilon(2280.347379278715, worksheet.costpercapita_cc193, 0.001); end
  def test_costpercapita_cf193; assert_in_epsilon(-465.6705013365916, worksheet.costpercapita_cf193, 0.001); end
  def test_costpercapita_cg193; assert_in_epsilon(-64.45804643952634, worksheet.costpercapita_cg193, 0.001); end
  def test_costpercapita_ch193; assert_in_epsilon(228.57885352781233, worksheet.costpercapita_ch193, 0.001); end
  def test_costpercapita_ci193; assert_in_epsilon(718.2672382028259, worksheet.costpercapita_ci193, 0.001); end
  def test_costpercapita_cj193; assert_in_epsilon(1079.306624222223, worksheet.costpercapita_cj193, 0.001); end
  def test_costpercapita_ck193; assert_in_epsilon(1314.2352089269673, worksheet.costpercapita_ck193, 0.001); end
  def test_costpercapita_cl193; assert_in_epsilon(1483.2072359117903, worksheet.costpercapita_cl193, 0.001); end
  def test_costpercapita_cm193; assert_in_epsilon(1899.3229510136691, worksheet.costpercapita_cm193, 0.001); end
  def test_costpercapita_cn193; assert_in_epsilon(1863.0598010063948, worksheet.costpercapita_cn193, 0.001); end
  def test_costpercapita_cp193; assert_in_epsilon(895.0943738928405, worksheet.costpercapita_cp193, 0.001); end
  def test_costpercapita_cd193; assert_in_epsilon(42832.68034081581, worksheet.costpercapita_cd193, 0.001); end
  def test_costpercapita_cq193; assert_in_epsilon(15739.796915157809, worksheet.costpercapita_cq193, 0.001); end
  def test_costpercapita_at193; assert_in_epsilon(27092.883425658005, worksheet.costpercapita_at193, 0.001); end
  def test_costpercapita_cr193; assert_equal("ok", worksheet.costpercapita_cr193); end
  def test_costpercapita_c194; assert_equal("Transport", worksheet.costpercapita_c194); end
  def test_costpercapita_e194; assert_in_epsilon(929.9142525187569, worksheet.costpercapita_e194, 0.001); end
  def test_costpercapita_f194; assert_in_epsilon(964.6332223791914, worksheet.costpercapita_f194, 0.001); end
  def test_costpercapita_g194; assert_in_epsilon(919.7410904398995, worksheet.costpercapita_g194, 0.001); end
  def test_costpercapita_h194; assert_in_epsilon(1398.268310083422, worksheet.costpercapita_h194, 0.001); end
  def test_costpercapita_i194; assert_in_epsilon(1502.3348757577405, worksheet.costpercapita_i194, 0.001); end
  def test_costpercapita_j194; assert_in_epsilon(1241.3463235064453, worksheet.costpercapita_j194, 0.001); end
  def test_costpercapita_k194; assert_in_epsilon(1209.5160737214894, worksheet.costpercapita_k194, 0.001); end
  def test_costpercapita_l194; assert_in_epsilon(1274.6463557120633, worksheet.costpercapita_l194, 0.001); end
  def test_costpercapita_m194; assert_in_epsilon(1266.057749583837, worksheet.costpercapita_m194, 0.001); end
  def test_costpercapita_o194; assert_in_epsilon(1107.410746919577, worksheet.costpercapita_o194, 0.001); end
  def test_costpercapita_p194; assert_in_epsilon(1117.3140911165717, worksheet.costpercapita_p194, 0.001); end
  def test_costpercapita_q194; assert_in_epsilon(1119.340315205146, worksheet.costpercapita_q194, 0.001); end
  def test_costpercapita_r194; assert_in_epsilon(1227.0248374152131, worksheet.costpercapita_r194, 0.001); end
  def test_costpercapita_s194; assert_in_epsilon(1307.5802976324653, worksheet.costpercapita_s194, 0.001); end
  def test_costpercapita_t194; assert_in_epsilon(1337.0749405282277, worksheet.costpercapita_t194, 0.001); end
  def test_costpercapita_u194; assert_in_epsilon(1263.064354017136, worksheet.costpercapita_u194, 0.001); end
  def test_costpercapita_v194; assert_in_epsilon(1310.8026764085428, worksheet.costpercapita_v194, 0.001); end
  def test_costpercapita_w194; assert_in_epsilon(1209.3984730669777, worksheet.costpercapita_w194, 0.001); end
  def test_costpercapita_y194; assert_in_delta(0, (worksheet.costpercapita_y194||0), 0.001); end
  def test_costpercapita_z194; assert_in_delta(0, (worksheet.costpercapita_z194||0), 0.001); end
  def test_costpercapita_aa194; assert_in_delta(0, (worksheet.costpercapita_aa194||0), 0.001); end
  def test_costpercapita_ab194; assert_in_delta(0, (worksheet.costpercapita_ab194||0), 0.001); end
  def test_costpercapita_ac194; assert_in_delta(0, (worksheet.costpercapita_ac194||0), 0.001); end
  def test_costpercapita_ad194; assert_in_delta(0, (worksheet.costpercapita_ad194||0), 0.001); end
  def test_costpercapita_ae194; assert_in_delta(0, (worksheet.costpercapita_ae194||0), 0.001); end
  def test_costpercapita_af194; assert_in_delta(0, (worksheet.costpercapita_af194||0), 0.001); end
  def test_costpercapita_ag194; assert_in_delta(0, (worksheet.costpercapita_ag194||0), 0.001); end
  def test_costpercapita_ai194; assert_in_epsilon(2037.3249994383336, worksheet.costpercapita_ai194, 0.001); end
  def test_costpercapita_aj194; assert_in_epsilon(2081.947313495763, worksheet.costpercapita_aj194, 0.001); end
  def test_costpercapita_ak194; assert_in_epsilon(2039.0814056450458, worksheet.costpercapita_ak194, 0.001); end
  def test_costpercapita_al194; assert_in_epsilon(2625.2931474986344, worksheet.costpercapita_al194, 0.001); end
  def test_costpercapita_am194; assert_in_epsilon(2809.9151733902063, worksheet.costpercapita_am194, 0.001); end
  def test_costpercapita_an194; assert_in_epsilon(2578.421264034673, worksheet.costpercapita_an194, 0.001); end
  def test_costpercapita_ao194; assert_in_epsilon(2472.5804277386255, worksheet.costpercapita_ao194, 0.001); end
  def test_costpercapita_ap194; assert_in_epsilon(2585.4490321206063, worksheet.costpercapita_ap194, 0.001); end
  def test_costpercapita_aq194; assert_in_epsilon(2475.4562226508147, worksheet.costpercapita_aq194, 0.001); end
  def test_costpercapita_as194; assert_in_epsilon(2411.718776223633, worksheet.costpercapita_as194, 0.001); end
  def test_costpercapita_ay194; assert_in_epsilon(377.0937471238852, worksheet.costpercapita_ay194, 0.001); end
  def test_costpercapita_az194; assert_in_epsilon(659.5604385013943, worksheet.costpercapita_az194, 0.001); end
  def test_costpercapita_ba194; assert_in_epsilon(634.4013325342663, worksheet.costpercapita_ba194, 0.001); end
  def test_costpercapita_bb194; assert_in_epsilon(952.9488120976768, worksheet.costpercapita_bb194, 0.001); end
  def test_costpercapita_bc194; assert_in_epsilon(1026.3637941458953, worksheet.costpercapita_bc194, 0.001); end
  def test_costpercapita_bd194; assert_in_epsilon(860.4925712467518, worksheet.costpercapita_bd194, 0.001); end
  def test_costpercapita_be194; assert_in_epsilon(847.1966402234286, worksheet.costpercapita_be194, 0.001); end
  def test_costpercapita_bf194; assert_in_epsilon(902.0699020152965, worksheet.costpercapita_bf194, 0.001); end
  def test_costpercapita_bg194; assert_in_epsilon(907.2207715995577, worksheet.costpercapita_bg194, 0.001); end
  def test_costpercapita_bi194; assert_in_epsilon(377.0937471238852, worksheet.costpercapita_bi194, 0.001); end
  def test_costpercapita_bj194; assert_in_epsilon(1012.9939878014599, worksheet.costpercapita_bj194, 0.001); end
  def test_costpercapita_bk194; assert_in_epsilon(1562.96857212126, worksheet.costpercapita_bk194, 0.001); end
  def test_costpercapita_bl194; assert_in_epsilon(2063.838928928737, worksheet.costpercapita_bl194, 0.001); end
  def test_costpercapita_bm194; assert_in_epsilon(2418.552145089817, worksheet.costpercapita_bm194, 0.001); end
  def test_costpercapita_bn194; assert_in_epsilon(2620.864317535904, worksheet.costpercapita_bn194, 0.001); end
  def test_costpercapita_bo194; assert_in_epsilon(2503.7528937864586, worksheet.costpercapita_bo194, 0.001); end
  def test_costpercapita_bp194; assert_in_epsilon(2370.9908453069575, worksheet.costpercapita_bp194, 0.001); end
  def test_costpercapita_bq194; assert_in_epsilon(2388.1118539323793, worksheet.costpercapita_bq194, 0.001); end
  def test_costpercapita_bs194; assert_in_epsilon(1484.5044940434618, worksheet.costpercapita_bs194, 0.001); end
  def test_costpercapita_bt194; assert_in_epsilon(2130.3080789180312, worksheet.costpercapita_bt194, 0.001); end
  def test_costpercapita_bu194; assert_in_epsilon(2682.308887326406, worksheet.costpercapita_bu194, 0.001); end
  def test_costpercapita_bv194; assert_in_epsilon(3290.8637663439495, worksheet.costpercapita_bv194, 0.001); end
  def test_costpercapita_bw194; assert_in_epsilon(3726.1324427222817, worksheet.costpercapita_bw194, 0.001); end
  def test_costpercapita_bx194; assert_in_epsilon(3957.9392580641315, worksheet.costpercapita_bx194, 0.001); end
  def test_costpercapita_by194; assert_in_epsilon(3766.817247803595, worksheet.costpercapita_by194, 0.001); end
  def test_costpercapita_bz194; assert_in_epsilon(3681.7935217155004, worksheet.costpercapita_bz194, 0.001); end
  def test_costpercapita_ca194; assert_in_epsilon(3597.5103269993574, worksheet.costpercapita_ca194, 0.001); end
  def test_costpercapita_cc194; assert_in_epsilon(3146.464224881857, worksheet.costpercapita_cc194, 0.001); end
  def test_costpercapita_cf194; assert_in_epsilon(-552.8205053948718, worksheet.costpercapita_cf194, 0.001); end
  def test_costpercapita_cg194; assert_in_epsilon(48.36076542226853, worksheet.costpercapita_cg194, 0.001); end
  def test_costpercapita_ch194; assert_in_epsilon(643.2274816813602, worksheet.costpercapita_ch194, 0.001); end
  def test_costpercapita_ci194; assert_in_epsilon(665.570618845315, worksheet.costpercapita_ci194, 0.001); end
  def test_costpercapita_cj194; assert_in_epsilon(916.2172693320764, worksheet.costpercapita_cj194, 0.001); end
  def test_costpercapita_ck194; assert_in_epsilon(1379.5179940294584, worksheet.costpercapita_ck194, 0.001); end
  def test_costpercapita_cl194; assert_in_epsilon(1294.2368200649694, worksheet.costpercapita_cl194, 0.001); end
  def test_costpercapita_cm194; assert_in_epsilon(1096.3444895948946, worksheet.costpercapita_cm194, 0.001); end
  def test_costpercapita_cn194; assert_in_epsilon(1122.0541043485423, worksheet.costpercapita_cn194, 0.001); end
  def test_costpercapita_cp194; assert_in_epsilon(734.7454486582236, worksheet.costpercapita_cp194, 0.001); end
  def test_costpercapita_cd194; assert_in_epsilon(64655.39451089944, worksheet.costpercapita_cd194, 0.001); end
  def test_costpercapita_cq194; assert_in_epsilon(14615.65192821589, worksheet.costpercapita_cq194, 0.001); end
  def test_costpercapita_at194; assert_in_epsilon(50039.74258268355, worksheet.costpercapita_at194, 0.001); end
  def test_costpercapita_cr194; assert_equal("ok", worksheet.costpercapita_cr194); end
  def test_costpercapita_c195; assert_equal("Industry", worksheet.costpercapita_c195); end
  def test_costpercapita_e195; assert_in_epsilon(11.206311627764768, worksheet.costpercapita_e195, 0.001); end
  def test_costpercapita_f195; assert_in_epsilon(10.330026578606791, worksheet.costpercapita_f195, 0.001); end
  def test_costpercapita_g195; assert_in_epsilon(10.22512754555634, worksheet.costpercapita_g195, 0.001); end
  def test_costpercapita_h195; assert_in_epsilon(10.005503925954297, worksheet.costpercapita_h195, 0.001); end
  def test_costpercapita_i195; assert_in_epsilon(10.248507339365503, worksheet.costpercapita_i195, 0.001); end
  def test_costpercapita_j195; assert_in_epsilon(11.15379648379539, worksheet.costpercapita_j195, 0.001); end
  def test_costpercapita_k195; assert_in_epsilon(12.957029033728345, worksheet.costpercapita_k195, 0.001); end
  def test_costpercapita_l195; assert_in_epsilon(16.245205318299984, worksheet.costpercapita_l195, 0.001); end
  def test_costpercapita_m195; assert_in_epsilon(21.965257502556685, worksheet.costpercapita_m195, 0.001); end
  def test_costpercapita_o195; assert_in_epsilon(196.5339518842133, worksheet.costpercapita_o195, 0.001); end
  def test_costpercapita_p195; assert_in_epsilon(196.19311989123216, worksheet.costpercapita_p195, 0.001); end
  def test_costpercapita_q195; assert_in_epsilon(196.14331196900713, worksheet.costpercapita_q195, 0.001); end
  def test_costpercapita_r195; assert_in_epsilon(196.7346183488361, worksheet.costpercapita_r195, 0.001); end
  def test_costpercapita_s195; assert_in_epsilon(198.3341862004929, worksheet.costpercapita_s195, 0.001); end
  def test_costpercapita_t195; assert_in_epsilon(200.95791366898604, worksheet.costpercapita_t195, 0.001); end
  def test_costpercapita_u195; assert_in_epsilon(204.3020073375611, worksheet.costpercapita_u195, 0.001); end
  def test_costpercapita_v195; assert_in_epsilon(208.22154264697872, worksheet.costpercapita_v195, 0.001); end
  def test_costpercapita_w195; assert_in_epsilon(212.74949200058398, worksheet.costpercapita_w195, 0.001); end
  def test_costpercapita_y195; assert_in_delta(0, (worksheet.costpercapita_y195||0), 0.001); end
  def test_costpercapita_z195; assert_in_delta(0, (worksheet.costpercapita_z195||0), 0.001); end
  def test_costpercapita_aa195; assert_in_delta(0, (worksheet.costpercapita_aa195||0), 0.001); end
  def test_costpercapita_ab195; assert_in_delta(0, (worksheet.costpercapita_ab195||0), 0.001); end
  def test_costpercapita_ac195; assert_in_delta(0, (worksheet.costpercapita_ac195||0), 0.001); end
  def test_costpercapita_ad195; assert_in_delta(0, (worksheet.costpercapita_ad195||0), 0.001); end
  def test_costpercapita_ae195; assert_in_delta(0, (worksheet.costpercapita_ae195||0), 0.001); end
  def test_costpercapita_af195; assert_in_delta(0, (worksheet.costpercapita_af195||0), 0.001); end
  def test_costpercapita_ag195; assert_in_delta(0, (worksheet.costpercapita_ag195||0), 0.001); end
  def test_costpercapita_ai195; assert_in_epsilon(207.74026351197807, worksheet.costpercapita_ai195, 0.001); end
  def test_costpercapita_aj195; assert_in_epsilon(206.52314646983893, worksheet.costpercapita_aj195, 0.001); end
  def test_costpercapita_ak195; assert_in_epsilon(206.36843951456348, worksheet.costpercapita_ak195, 0.001); end
  def test_costpercapita_al195; assert_in_epsilon(206.74012227479037, worksheet.costpercapita_al195, 0.001); end
  def test_costpercapita_am195; assert_in_epsilon(208.58269353985838, worksheet.costpercapita_am195, 0.001); end
  def test_costpercapita_an195; assert_in_epsilon(212.11171015278143, worksheet.costpercapita_an195, 0.001); end
  def test_costpercapita_ao195; assert_in_epsilon(217.25903637128943, worksheet.costpercapita_ao195, 0.001); end
  def test_costpercapita_ap195; assert_in_epsilon(224.4667479652787, worksheet.costpercapita_ap195, 0.001); end
  def test_costpercapita_aq195; assert_in_epsilon(234.71474950314064, worksheet.costpercapita_aq195, 0.001); end
  def test_costpercapita_as195; assert_in_epsilon(213.83410103372435, worksheet.costpercapita_as195, 0.001); end
  def test_costpercapita_ay195; assert_in_epsilon(4.420008344037331, worksheet.costpercapita_ay195, 0.001); end
  def test_costpercapita_az195; assert_in_epsilon(6.790638048181872, worksheet.costpercapita_az195, 0.001); end
  def test_costpercapita_ba195; assert_in_epsilon(6.721680687846991, worksheet.costpercapita_ba195, 0.001); end
  def test_costpercapita_bb195; assert_in_epsilon(6.577306954033212, worksheet.costpercapita_bb195, 0.001); end
  def test_costpercapita_bc195; assert_in_epsilon(6.737049836821685, worksheet.costpercapita_bc195, 0.001); end
  def test_costpercapita_bd195; assert_in_epsilon(7.33215875178836, worksheet.costpercapita_bd195, 0.001); end
  def test_costpercapita_be195; assert_in_epsilon(8.517547721518023, worksheet.costpercapita_be195, 0.001); end
  def test_costpercapita_bf195; assert_in_epsilon(10.679092497538624, worksheet.costpercapita_bf195, 0.001); end
  def test_costpercapita_bg195; assert_in_epsilon(14.439276820824084, worksheet.costpercapita_bg195, 0.001); end
  def test_costpercapita_bi195; assert_in_epsilon(4.420008344037331, worksheet.costpercapita_bi195, 0.001); end
  def test_costpercapita_bj195; assert_in_epsilon(11.064896310984377, worksheet.costpercapita_bj195, 0.001); end
  def test_costpercapita_bk195; assert_in_epsilon(17.424332758719515, worksheet.costpercapita_bk195, 0.001); end
  def test_costpercapita_bl195; assert_in_epsilon(19.455808000783815, worksheet.costpercapita_bl195, 0.001); end
  def test_costpercapita_bm195; assert_in_epsilon(19.470266560340537, worksheet.costpercapita_bm195, 0.001); end
  def test_costpercapita_bn195; assert_in_epsilon(20.15742636557015, worksheet.costpercapita_bn195, 0.001); end
  def test_costpercapita_bo195; assert_in_epsilon(22.13139944673795, worksheet.costpercapita_bo195, 0.001); end
  def test_costpercapita_bp195; assert_in_epsilon(26.059380985555354, worksheet.costpercapita_bp195, 0.001); end
  def test_costpercapita_bq195; assert_in_epsilon(33.11093778363755, worksheet.costpercapita_bq195, 0.001); end
  def test_costpercapita_bs195; assert_in_epsilon(200.95396022825062, worksheet.costpercapita_bs195, 0.001); end
  def test_costpercapita_bt195; assert_in_epsilon(207.25801620221654, worksheet.costpercapita_bt195, 0.001); end
  def test_costpercapita_bu195; assert_in_epsilon(213.56764472772667, worksheet.costpercapita_bu195, 0.001); end
  def test_costpercapita_bv195; assert_in_epsilon(216.1904263496199, worksheet.costpercapita_bv195, 0.001); end
  def test_costpercapita_bw195; assert_in_epsilon(217.80445276083344, worksheet.costpercapita_bw195, 0.001); end
  def test_costpercapita_bx195; assert_in_epsilon(221.1153400345562, worksheet.costpercapita_bx195, 0.001); end
  def test_costpercapita_by195; assert_in_epsilon(226.43340678429905, worksheet.costpercapita_by195, 0.001); end
  def test_costpercapita_bz195; assert_in_epsilon(234.28092363253407, worksheet.costpercapita_bz195, 0.001); end
  def test_costpercapita_ca195; assert_in_epsilon(245.86042978422154, worksheet.costpercapita_ca195, 0.001); end
  def test_costpercapita_cc195; assert_in_epsilon(220.38495561158425, worksheet.costpercapita_cc195, 0.001); end
  def test_costpercapita_cf195; assert_in_epsilon(-6.786303283727436, worksheet.costpercapita_cf195, 0.001); end
  def test_costpercapita_cg195; assert_in_delta(0.734869732377586, worksheet.costpercapita_cg195, 0.001); end
  def test_costpercapita_ch195; assert_in_epsilon(7.199205213163175, worksheet.costpercapita_ch195, 0.001); end
  def test_costpercapita_ci195; assert_in_epsilon(9.45030407482952, worksheet.costpercapita_ci195, 0.001); end
  def test_costpercapita_cj195; assert_in_epsilon(9.221759220975036, worksheet.costpercapita_cj195, 0.001); end
  def test_costpercapita_ck195; assert_in_epsilon(9.00362988177476, worksheet.costpercapita_ck195, 0.001); end
  def test_costpercapita_cl195; assert_in_epsilon(9.174370413009608, worksheet.costpercapita_cl195, 0.001); end
  def test_costpercapita_cm195; assert_in_epsilon(9.81417566725537, worksheet.costpercapita_cm195, 0.001); end
  def test_costpercapita_cn195; assert_in_epsilon(11.145680281080868, worksheet.costpercapita_cn195, 0.001); end
  def test_costpercapita_cp195; assert_in_epsilon(6.550854577859832, worksheet.costpercapita_cp195, 0.001); end
  def test_costpercapita_cd195; assert_in_epsilon(4580.096883860678, worksheet.costpercapita_cd195, 0.001); end
  def test_costpercapita_cq195; assert_in_epsilon(138.44955566570133, worksheet.costpercapita_cq195, 0.001); end
  def test_costpercapita_at195; assert_in_epsilon(4441.647328194977, worksheet.costpercapita_at195, 0.001); end
  def test_costpercapita_cr195; assert_equal("ok", worksheet.costpercapita_cr195); end
  def test_costpercapita_c196; assert_equal("Other", worksheet.costpercapita_c196); end
  def test_costpercapita_e196; assert_in_delta(0, (worksheet.costpercapita_e196||0), 0.001); end
  def test_costpercapita_f196; assert_in_epsilon(2.510941756577549, worksheet.costpercapita_f196, 0.001); end
  def test_costpercapita_g196; assert_in_epsilon(5.999836282126266, worksheet.costpercapita_g196, 0.001); end
  def test_costpercapita_h196; assert_in_epsilon(5.898171000873321, worksheet.costpercapita_h196, 0.001); end
  def test_costpercapita_i196; assert_in_epsilon(5.969024849778815, worksheet.costpercapita_i196, 0.001); end
  def test_costpercapita_j196; assert_in_epsilon(6.307430505700716, worksheet.costpercapita_j196, 0.001); end
  def test_costpercapita_k196; assert_in_epsilon(7.104971818562152, worksheet.costpercapita_k196, 0.001); end
  def test_costpercapita_l196; assert_in_epsilon(8.445057163322357, worksheet.costpercapita_l196, 0.001); end
  def test_costpercapita_m196; assert_in_epsilon(10.830914553856188, worksheet.costpercapita_m196, 0.001); end
  def test_costpercapita_o196; assert_in_delta(0, (worksheet.costpercapita_o196||0), 0.001); end
  def test_costpercapita_p196; assert_in_delta(0.09799487630794962, worksheet.costpercapita_p196, 0.001); end
  def test_costpercapita_q196; assert_in_delta(0.2883178166800579, worksheet.costpercapita_q196, 0.001); end
  def test_costpercapita_r196; assert_in_delta(0.336675982067282, worksheet.costpercapita_r196, 0.001); end
  def test_costpercapita_s196; assert_in_delta(0.3946036454309648, worksheet.costpercapita_s196, 0.001); end
  def test_costpercapita_t196; assert_in_delta(0.47391321682451015, worksheet.costpercapita_t196, 0.001); end
  def test_costpercapita_u196; assert_in_delta(0.5979746206678923, worksheet.costpercapita_u196, 0.001); end
  def test_costpercapita_v196; assert_in_delta(0.7869947279757448, worksheet.costpercapita_v196, 0.001); end
  def test_costpercapita_w196; assert_in_epsilon(1.1071049217221471, worksheet.costpercapita_w196, 0.001); end
  def test_costpercapita_y196; assert_in_delta(0, (worksheet.costpercapita_y196||0), 0.001); end
  def test_costpercapita_z196; assert_in_delta(0, (worksheet.costpercapita_z196||0), 0.001); end
  def test_costpercapita_aa196; assert_in_delta(0, (worksheet.costpercapita_aa196||0), 0.001); end
  def test_costpercapita_ab196; assert_in_delta(0, (worksheet.costpercapita_ab196||0), 0.001); end
  def test_costpercapita_ac196; assert_in_delta(0, (worksheet.costpercapita_ac196||0), 0.001); end
  def test_costpercapita_ad196; assert_in_delta(0, (worksheet.costpercapita_ad196||0), 0.001); end
  def test_costpercapita_ae196; assert_in_delta(0, (worksheet.costpercapita_ae196||0), 0.001); end
  def test_costpercapita_af196; assert_in_delta(0, (worksheet.costpercapita_af196||0), 0.001); end
  def test_costpercapita_ag196; assert_in_delta(0, (worksheet.costpercapita_ag196||0), 0.001); end
  def test_costpercapita_ai196; assert_in_delta(0, (worksheet.costpercapita_ai196||0), 0.001); end
  def test_costpercapita_aj196; assert_in_epsilon(2.6089366328854986, worksheet.costpercapita_aj196, 0.001); end
  def test_costpercapita_ak196; assert_in_epsilon(6.288154098806324, worksheet.costpercapita_ak196, 0.001); end
  def test_costpercapita_al196; assert_in_epsilon(6.234846982940603, worksheet.costpercapita_al196, 0.001); end
  def test_costpercapita_am196; assert_in_epsilon(6.363628495209781, worksheet.costpercapita_am196, 0.001); end
  def test_costpercapita_an196; assert_in_epsilon(6.781343722525227, worksheet.costpercapita_an196, 0.001); end
  def test_costpercapita_ao196; assert_in_epsilon(7.702946439230044, worksheet.costpercapita_ao196, 0.001); end
  def test_costpercapita_ap196; assert_in_epsilon(9.232051891298102, worksheet.costpercapita_ap196, 0.001); end
  def test_costpercapita_aq196; assert_in_epsilon(11.938019475578335, worksheet.costpercapita_aq196, 0.001); end
  def test_costpercapita_as196; assert_in_epsilon(6.349991970941546, worksheet.costpercapita_as196, 0.001); end
  def test_costpercapita_ay196; assert_in_delta(0, (worksheet.costpercapita_ay196||0), 0.001); end
  def test_costpercapita_az196; assert_in_epsilon(1.6506149814073159, worksheet.costpercapita_az196, 0.001); end
  def test_costpercapita_ba196; assert_in_epsilon(3.944105683585148, worksheet.costpercapita_ba196, 0.001); end
  def test_costpercapita_bb196; assert_in_epsilon(3.8772740910619397, worksheet.costpercapita_bb196, 0.001); end
  def test_costpercapita_bc196; assert_in_epsilon(3.9238512066750024, worksheet.costpercapita_bc196, 0.001); end
  def test_costpercapita_bd196; assert_in_epsilon(4.146308555195507, worksheet.costpercapita_bd196, 0.001); end
  def test_costpercapita_be196; assert_in_epsilon(4.670587398323539, worksheet.costpercapita_be196, 0.001); end
  def test_costpercapita_bf196; assert_in_epsilon(5.55151780645874, worksheet.costpercapita_bf196, 0.001); end
  def test_costpercapita_bg196; assert_in_epsilon(7.119906217699406, worksheet.costpercapita_bg196, 0.001); end
  def test_costpercapita_bi196; assert_in_delta(0, (worksheet.costpercapita_bi196||0), 0.001); end
  def test_costpercapita_bj196; assert_in_epsilon(1.6506149814073159, worksheet.costpercapita_bj196, 0.001); end
  def test_costpercapita_bk196; assert_in_epsilon(5.540682583400722, worksheet.costpercapita_bk196, 0.001); end
  def test_costpercapita_bl196; assert_in_epsilon(9.246397889183916, worksheet.costpercapita_bl196, 0.001); end
  def test_costpercapita_bm196; assert_in_epsilon(11.412762896679943, worksheet.costpercapita_bm196, 0.001); end
  def test_costpercapita_bn196; assert_in_epsilon(11.660240397824207, worksheet.costpercapita_bn196, 0.001); end
  def test_costpercapita_bo196; assert_in_epsilon(12.47818194800953, worksheet.costpercapita_bo196, 0.001); end
  def test_costpercapita_bp196; assert_in_epsilon(14.10587311055741, worksheet.costpercapita_bp196, 0.001); end
  def test_costpercapita_bq196; assert_in_epsilon(17.059819359264125, worksheet.costpercapita_bq196, 0.001); end
  def test_costpercapita_bs196; assert_in_delta(0, (worksheet.costpercapita_bs196||0), 0.001); end
  def test_costpercapita_bt196; assert_in_epsilon(1.7486098577152653, worksheet.costpercapita_bt196, 0.001); end
  def test_costpercapita_bu196; assert_in_epsilon(5.82900040008078, worksheet.costpercapita_bu196, 0.001); end
  def test_costpercapita_bv196; assert_in_epsilon(9.583073871251198, worksheet.costpercapita_bv196, 0.001); end
  def test_costpercapita_bw196; assert_in_epsilon(11.807366542110907, worksheet.costpercapita_bw196, 0.001); end
  def test_costpercapita_bx196; assert_in_epsilon(12.134153614648719, worksheet.costpercapita_bx196, 0.001); end
  def test_costpercapita_by196; assert_in_epsilon(13.076156568677423, worksheet.costpercapita_by196, 0.001); end
  def test_costpercapita_bz196; assert_in_epsilon(14.892867838533153, worksheet.costpercapita_bz196, 0.001); end
  def test_costpercapita_ca196; assert_in_epsilon(18.166924280986272, worksheet.costpercapita_ca196, 0.001); end
  def test_costpercapita_cc196; assert_in_epsilon(9.693128108222636, worksheet.costpercapita_cc196, 0.001); end
  def test_costpercapita_cf196; assert_in_delta(0, (worksheet.costpercapita_cf196||0), 0.001); end
  def test_costpercapita_cg196; assert_in_delta(-0.860326775170233, worksheet.costpercapita_cg196, 0.001); end
  def test_costpercapita_ch196; assert_in_delta(-0.4591536987255439, worksheet.costpercapita_ch196, 0.001); end
  def test_costpercapita_ci196; assert_in_epsilon(3.3482268883105957, worksheet.costpercapita_ci196, 0.001); end
  def test_costpercapita_cj196; assert_in_epsilon(5.443738046901127, worksheet.costpercapita_cj196, 0.001); end
  def test_costpercapita_ck196; assert_in_epsilon(5.352809892123491, worksheet.costpercapita_ck196, 0.001); end
  def test_costpercapita_cl196; assert_in_epsilon(5.3732101294473775, worksheet.costpercapita_cl196, 0.001); end
  def test_costpercapita_cm196; assert_in_epsilon(5.6608159472350525, worksheet.costpercapita_cm196, 0.001); end
  def test_costpercapita_cn196; assert_in_epsilon(6.228904805407936, worksheet.costpercapita_cn196, 0.001); end
  def test_costpercapita_cp196; assert_in_epsilon(3.3431361372810895, worksheet.costpercapita_cp196, 0.001); end
  def test_costpercapita_cd196; assert_in_epsilon(182.22511807815408, worksheet.costpercapita_cd196, 0.001); end
  def test_costpercapita_cq196; assert_in_epsilon(56.27457603866964, worksheet.costpercapita_cq196, 0.001); end
  def test_costpercapita_at196; assert_in_epsilon(125.95054203948447, worksheet.costpercapita_at196, 0.001); end
  def test_costpercapita_cr196; assert_equal("ok", worksheet.costpercapita_cr196); end
  def test_costpercapita_c197; assert_equal("Total", worksheet.costpercapita_c197); end
  def test_costpercapita_e112; assert_in_delta(0, (worksheet.costpercapita_e112||0), 0.001); end
  def test_costpercapita_e113; assert_in_delta(0, (worksheet.costpercapita_e113||0), 0.001); end
  def test_costpercapita_e114; assert_in_delta(0, (worksheet.costpercapita_e114||0), 0.001); end
  def test_costpercapita_e115; assert_in_epsilon(18.314518218355097, worksheet.costpercapita_e115, 0.001); end
  def test_costpercapita_e116; assert_in_epsilon(21.761722488709864, worksheet.costpercapita_e116, 0.001); end
  def test_costpercapita_e117; assert_in_epsilon(15.635574215929923, worksheet.costpercapita_e117, 0.001); end
  def test_costpercapita_e118; assert_in_delta(0.060160661806703465, worksheet.costpercapita_e118, 0.001); end
  def test_costpercapita_e119; assert_in_delta(0, (worksheet.costpercapita_e119||0), 0.001); end
  def test_costpercapita_e120; assert_in_epsilon(379.6989237971876, worksheet.costpercapita_e120, 0.001); end
  def test_costpercapita_e121; assert_in_epsilon(32.567084078711986, worksheet.costpercapita_e121, 0.001); end
  def test_costpercapita_e122; assert_in_epsilon(2.4107072817486657, worksheet.costpercapita_e122, 0.001); end
  def test_costpercapita_e123; assert_in_epsilon(70.02287801277001, worksheet.costpercapita_e123, 0.001); end
  def test_costpercapita_e127; assert_in_epsilon(2.9883008827450017, worksheet.costpercapita_e127, 0.001); end
  def test_costpercapita_e128; assert_in_epsilon(49.59823459405771, worksheet.costpercapita_e128, 0.001); end
  def test_costpercapita_e130; assert_in_delta(0, (worksheet.costpercapita_e130||0), 0.001); end
  def test_costpercapita_e131; assert_in_delta(0, (worksheet.costpercapita_e131||0), 0.001); end
  def test_costpercapita_e132; assert_in_epsilon(202.4058438877354, worksheet.costpercapita_e132, 0.001); end
  def test_costpercapita_e133; assert_in_delta(0, (worksheet.costpercapita_e133||0), 0.001); end
  def test_costpercapita_e134; assert_in_delta(0, (worksheet.costpercapita_e134||0), 0.001); end
  def test_costpercapita_e136; assert_in_epsilon(415.69765660868546, worksheet.costpercapita_e136, 0.001); end
  def test_costpercapita_e137; assert_in_epsilon(39.84396700399896, worksheet.costpercapita_e137, 0.001); end
  def test_costpercapita_e138; assert_in_epsilon(53.897928818241006, worksheet.costpercapita_e138, 0.001); end
  def test_costpercapita_e139; assert_in_epsilon(4.141038938932107, worksheet.costpercapita_e139, 0.001); end
  def test_costpercapita_e140; assert_in_epsilon(1.7048082337035007, worksheet.costpercapita_e140, 0.001); end
  def test_costpercapita_e141; assert_in_epsilon(855.6806945937004, worksheet.costpercapita_e141, 0.001); end
  def test_costpercapita_e142; assert_in_epsilon(1.5450269718139802, worksheet.costpercapita_e142, 0.001); end
  def test_costpercapita_e143; assert_in_delta(0, (worksheet.costpercapita_e143||0), 0.001); end
  def test_costpercapita_e144; assert_in_delta(0, (worksheet.costpercapita_e144||0), 0.001); end
  def test_costpercapita_e146; assert_in_epsilon(2.490259743866717, worksheet.costpercapita_e146, 0.001); end
  def test_costpercapita_e147; assert_in_epsilon(3.099705001825792, worksheet.costpercapita_e147, 0.001); end
  def test_costpercapita_e148; assert_in_epsilon(52.430382726922915, worksheet.costpercapita_e148, 0.001); end
  def test_costpercapita_e151; assert_in_delta(0, (worksheet.costpercapita_e151||0), 0.001); end
  def test_costpercapita_e152; assert_in_epsilon(9.501503394061267, worksheet.costpercapita_e152, 0.001); end
  def test_costpercapita_e156; assert_in_epsilon(34.689198046725465, worksheet.costpercapita_e156, 0.001); end
  def test_costpercapita_e160; assert_in_delta(0.9090522393684488, worksheet.costpercapita_e160, 0.001); end
  def test_costpercapita_e161; assert_in_delta(0, (worksheet.costpercapita_e161||0), 0.001); end
  def test_costpercapita_e197; assert_in_epsilon(2453.117461521045, worksheet.costpercapita_e197, 0.001); end
  def test_costpercapita_f112; assert_in_epsilon(3.854134892742047, worksheet.costpercapita_f112, 0.001); end
  def test_costpercapita_f113; assert_in_epsilon(7.360730631077048, worksheet.costpercapita_f113, 0.001); end
  def test_costpercapita_f114; assert_in_delta(0, (worksheet.costpercapita_f114||0), 0.001); end
  def test_costpercapita_f115; assert_in_epsilon(15.881784198086304, worksheet.costpercapita_f115, 0.001); end
  def test_costpercapita_f116; assert_in_epsilon(77.61960542306281, worksheet.costpercapita_f116, 0.001); end
  def test_costpercapita_f117; assert_in_epsilon(2.9550469198787845, worksheet.costpercapita_f117, 0.001); end
  def test_costpercapita_f118; assert_in_delta(0.953730889444259, worksheet.costpercapita_f118, 0.001); end
  def test_costpercapita_f119; assert_in_delta(0.31711970858705485, worksheet.costpercapita_f119, 0.001); end
  def test_costpercapita_f120; assert_in_epsilon(367.1783254904284, worksheet.costpercapita_f120, 0.001); end
  def test_costpercapita_f121; assert_in_epsilon(86.84555754323195, worksheet.costpercapita_f121, 0.001); end
  def test_costpercapita_f122; assert_in_epsilon(27.668596663230772, worksheet.costpercapita_f122, 0.001); end
  def test_costpercapita_f123; assert_in_epsilon(79.311259902983, worksheet.costpercapita_f123, 0.001); end
  def test_costpercapita_f127; assert_in_epsilon(3.678461562537197, worksheet.costpercapita_f127, 0.001); end
  def test_costpercapita_f128; assert_in_epsilon(50.25709039916539, worksheet.costpercapita_f128, 0.001); end
  def test_costpercapita_f130; assert_in_delta(0, (worksheet.costpercapita_f130||0), 0.001); end
  def test_costpercapita_f131; assert_in_delta(0, (worksheet.costpercapita_f131||0), 0.001); end
  def test_costpercapita_f132; assert_in_epsilon(259.87501438630665, worksheet.costpercapita_f132, 0.001); end
  def test_costpercapita_f133; assert_in_epsilon(3.6506811900679836, worksheet.costpercapita_f133, 0.001); end
  def test_costpercapita_f134; assert_in_delta(0, (worksheet.costpercapita_f134||0), 0.001); end
  def test_costpercapita_f135; assert_in_epsilon(108.04504243602658, worksheet.costpercapita_f135, 0.001); end
  def test_costpercapita_f136; assert_in_epsilon(405.00300168173476, worksheet.costpercapita_f136, 0.001); end
  def test_costpercapita_f137; assert_in_epsilon(55.15613912342275, worksheet.costpercapita_f137, 0.001); end
  def test_costpercapita_f138; assert_in_epsilon(55.253789807099196, worksheet.costpercapita_f138, 0.001); end
  def test_costpercapita_f139; assert_in_epsilon(11.494813302424449, worksheet.costpercapita_f139, 0.001); end
  def test_costpercapita_f140; assert_in_epsilon(1.6753688479208293, worksheet.costpercapita_f140, 0.001); end
  def test_costpercapita_f141; assert_in_epsilon(755.1872803141367, worksheet.costpercapita_f141, 0.001); end
  def test_costpercapita_f142; assert_in_epsilon(44.669926071069995, worksheet.costpercapita_f142, 0.001); end
  def test_costpercapita_f143; assert_in_epsilon(61.32848105041654, worksheet.costpercapita_f143, 0.001); end
  def test_costpercapita_f144; assert_in_delta(0, (worksheet.costpercapita_f144||0), 0.001); end
  def test_costpercapita_f145; assert_in_epsilon(21.41336832211416, worksheet.costpercapita_f145, 0.001); end
  def test_costpercapita_f146; assert_in_epsilon(2.6804610096233294, worksheet.costpercapita_f146, 0.001); end
  def test_costpercapita_f147; assert_in_epsilon(2.802930858012572, worksheet.costpercapita_f147, 0.001); end
  def test_costpercapita_f148; assert_in_epsilon(76.55077475381799, worksheet.costpercapita_f148, 0.001); end
  def test_costpercapita_f151; assert_in_delta(0, (worksheet.costpercapita_f151||0), 0.001); end
  def test_costpercapita_f152; assert_in_epsilon(8.654657730685962, worksheet.costpercapita_f152, 0.001); end
  def test_costpercapita_f156; assert_in_epsilon(10.203854734275321, worksheet.costpercapita_f156, 0.001); end
  def test_costpercapita_f160; assert_in_delta(0.5135055685423147, worksheet.costpercapita_f160, 0.001); end
  def test_costpercapita_f161; assert_in_epsilon(2.510941756577549, worksheet.costpercapita_f161, 0.001); end
  def test_costpercapita_f197; assert_in_epsilon(2610.551477168731, worksheet.costpercapita_f197, 0.001); end
  def test_costpercapita_g112; assert_in_delta(0, (worksheet.costpercapita_g112||0), 0.001); end
  def test_costpercapita_g113; assert_in_epsilon(10.615742211572174, worksheet.costpercapita_g113, 0.001); end
  def test_costpercapita_g114; assert_in_delta(0, (worksheet.costpercapita_g114||0), 0.001); end
  def test_costpercapita_g115; assert_in_epsilon(15.361843957639133, worksheet.costpercapita_g115, 0.001); end
  def test_costpercapita_g116; assert_in_epsilon(223.6927407522947, worksheet.costpercapita_g116, 0.001); end
  def test_costpercapita_g117; assert_in_epsilon(2.85830414923721, worksheet.costpercapita_g117, 0.001); end
  def test_costpercapita_g118; assert_in_epsilon(5.995673109866504, worksheet.costpercapita_g118, 0.001); end
  def test_costpercapita_g119; assert_in_epsilon(2.147164571002881, worksheet.costpercapita_g119, 0.001); end
  def test_costpercapita_g120; assert_in_epsilon(355.15758622956565, worksheet.costpercapita_g120, 0.001); end
  def test_costpercapita_g121; assert_in_epsilon(141.12403100775197, worksheet.costpercapita_g121, 0.001); end
  def test_costpercapita_g122; assert_in_epsilon(16.531194615095682, worksheet.costpercapita_g122, 0.001); end
  def test_costpercapita_g123; assert_in_epsilon(60.72548143571777, worksheet.costpercapita_g123, 0.001); end
  def test_costpercapita_g127; assert_in_epsilon(4.312016861057035, worksheet.costpercapita_g127, 0.001); end
  def test_costpercapita_g128; assert_in_epsilon(53.08181542210075, worksheet.costpercapita_g128, 0.001); end
  def test_costpercapita_g130; assert_in_delta(0, (worksheet.costpercapita_g130||0), 0.001); end
  def test_costpercapita_g131; assert_in_delta(0, (worksheet.costpercapita_g131||0), 0.001); end
  def test_costpercapita_g132; assert_in_epsilon(374.9992156186467, worksheet.costpercapita_g132, 0.001); end
  def test_costpercapita_g133; assert_in_epsilon(24.375979106573464, worksheet.costpercapita_g133, 0.001); end
  def test_costpercapita_g134; assert_in_delta(0, (worksheet.costpercapita_g134||0), 0.001); end
  def test_costpercapita_g135; assert_in_epsilon(360.90467548639674, worksheet.costpercapita_g135, 0.001); end
  def test_costpercapita_g136; assert_in_epsilon(389.50534423520986, worksheet.costpercapita_g136, 0.001); end
  def test_costpercapita_g137; assert_in_epsilon(57.97149763513583, worksheet.costpercapita_g137, 0.001); end
  def test_costpercapita_g138; assert_in_epsilon(55.22887952483105, worksheet.costpercapita_g138, 0.001); end
  def test_costpercapita_g139; assert_in_epsilon(10.35366235035451, worksheet.costpercapita_g139, 0.001); end
  def test_costpercapita_g140; assert_in_epsilon(2.2923494268582547, worksheet.costpercapita_g140, 0.001); end
  def test_costpercapita_g141; assert_in_epsilon(676.3014308785796, worksheet.costpercapita_g141, 0.001); end
  def test_costpercapita_g142; assert_in_epsilon(61.18483645008319, worksheet.costpercapita_g142, 0.001); end
  def test_costpercapita_g143; assert_in_epsilon(79.28133659825507, worksheet.costpercapita_g143, 0.001); end
  def test_costpercapita_g144; assert_in_delta(0, (worksheet.costpercapita_g144||0), 0.001); end
  def test_costpercapita_g145; assert_in_epsilon(30.383376603287026, worksheet.costpercapita_g145, 0.001); end
  def test_costpercapita_g146; assert_in_epsilon(3.446046744495722, worksheet.costpercapita_g146, 0.001); end
  def test_costpercapita_g147; assert_in_epsilon(2.41317517577867, worksheet.costpercapita_g147, 0.001); end
  def test_costpercapita_g148; assert_in_epsilon(66.73088798942038, worksheet.costpercapita_g148, 0.001); end
  def test_costpercapita_g151; assert_in_delta(0, (worksheet.costpercapita_g151||0), 0.001); end
  def test_costpercapita_g152; assert_in_epsilon(7.932778118698085, worksheet.costpercapita_g152, 0.001); end
  def test_costpercapita_g156; assert_in_epsilon(10.526090753272403, worksheet.costpercapita_g156, 0.001); end
  def test_costpercapita_g160; assert_in_epsilon(1.7280295428796806, worksheet.costpercapita_g160, 0.001); end
  def test_costpercapita_g161; assert_in_epsilon(5.999836282126266, worksheet.costpercapita_g161, 0.001); end
  def test_costpercapita_g197; assert_in_epsilon(3113.1630228437834, worksheet.costpercapita_g197, 0.001); end
  def test_costpercapita_h112; assert_in_delta(0, (worksheet.costpercapita_h112||0), 0.001); end
  def test_costpercapita_h113; assert_in_delta(-1.3436365674501494e-15, worksheet.costpercapita_h113, 0.001); end
  def test_costpercapita_h114; assert_in_delta(0, (worksheet.costpercapita_h114||0), 0.001); end
  def test_costpercapita_h115; assert_in_epsilon(14.886187890116016, worksheet.costpercapita_h115, 0.001); end
  def test_costpercapita_h116; assert_in_epsilon(261.614664405687, worksheet.costpercapita_h116, 0.001); end
  def test_costpercapita_h117; assert_in_epsilon(1.3849005604397002, worksheet.costpercapita_h117, 0.001); end
  def test_costpercapita_h118; assert_in_epsilon(7.381510895782849, worksheet.costpercapita_h118, 0.001); end
  def test_costpercapita_h119; assert_in_epsilon(16.645447160165766, worksheet.costpercapita_h119, 0.001); end
  def test_costpercapita_h120; assert_in_epsilon(344.160673275444, worksheet.costpercapita_h120, 0.001); end
  def test_costpercapita_h121; assert_in_epsilon(195.40250447227194, worksheet.costpercapita_h121, 0.001); end
  def test_costpercapita_h122; assert_in_delta(0, (worksheet.costpercapita_h122||0), 0.001); end
  def test_costpercapita_h123; assert_in_epsilon(54.45054005940162, worksheet.costpercapita_h123, 0.001); end
  def test_costpercapita_h127; assert_in_epsilon(3.964963798549419, worksheet.costpercapita_h127, 0.001); end
  def test_costpercapita_h128; assert_in_epsilon(49.78531003112014, worksheet.costpercapita_h128, 0.001); end
  def test_costpercapita_h130; assert_in_delta(0, (worksheet.costpercapita_h130||0), 0.001); end
  def test_costpercapita_h131; assert_in_delta(0, (worksheet.costpercapita_h131||0), 0.001); end
  def test_costpercapita_h132; assert_in_epsilon(439.7060265773801, worksheet.costpercapita_h132, 0.001); end
  def test_costpercapita_h133; assert_in_epsilon(78.5310839740263, worksheet.costpercapita_h133, 0.001); end
  def test_costpercapita_h134; assert_in_delta(0, (worksheet.costpercapita_h134||0), 0.001); end
  def test_costpercapita_h135; assert_in_epsilon(369.7506879954678, worksheet.costpercapita_h135, 0.001); end
  def test_costpercapita_h136; assert_in_epsilon(308.3975940610911, worksheet.costpercapita_h136, 0.001); end
  def test_costpercapita_h137; assert_in_epsilon(54.485588642253276, worksheet.costpercapita_h137, 0.001); end
  def test_costpercapita_h138; assert_in_epsilon(55.04228533393741, worksheet.costpercapita_h138, 0.001); end
  def test_costpercapita_h139; assert_in_epsilon(9.378341754368185, worksheet.costpercapita_h139, 0.001); end
  def test_costpercapita_h140; assert_in_epsilon(2.7141715355351352, worksheet.costpercapita_h140, 0.001); end
  def test_costpercapita_h141; assert_in_epsilon(186.97103415247506, worksheet.costpercapita_h141, 0.001); end
  def test_costpercapita_h142; assert_in_epsilon(824.0312865048456, worksheet.costpercapita_h142, 0.001); end
  def test_costpercapita_h143; assert_in_epsilon(282.6774006146983, worksheet.costpercapita_h143, 0.001); end
  def test_costpercapita_h144; assert_in_delta(0, (worksheet.costpercapita_h144||0), 0.001); end
  def test_costpercapita_h145; assert_in_epsilon(37.37723670262842, worksheet.costpercapita_h145, 0.001); end
  def test_costpercapita_h146; assert_in_epsilon(3.1675409660095526, worksheet.costpercapita_h146, 0.001); end
  def test_costpercapita_h147; assert_in_epsilon(2.012898448191436, worksheet.costpercapita_h147, 0.001); end
  def test_costpercapita_h148; assert_in_epsilon(62.03091269457367, worksheet.costpercapita_h148, 0.001); end
  def test_costpercapita_h151; assert_in_delta(0, (worksheet.costpercapita_h151||0), 0.001); end
  def test_costpercapita_h152; assert_in_epsilon(7.2913323904191625, worksheet.costpercapita_h152, 0.001); end
  def test_costpercapita_h156; assert_in_epsilon(9.089650621508428, worksheet.costpercapita_h156, 0.001); end
  def test_costpercapita_h160; assert_in_epsilon(1.5196437177192148, worksheet.costpercapita_h160, 0.001); end
  def test_costpercapita_h161; assert_in_epsilon(5.898171000873321, worksheet.costpercapita_h161, 0.001); end
  def test_costpercapita_h197; assert_in_epsilon(3689.7495902369797, worksheet.costpercapita_h197, 0.001); end
  def test_costpercapita_i112; assert_in_delta(0, (worksheet.costpercapita_i112||0), 0.001); end
  def test_costpercapita_i113; assert_in_delta(0, (worksheet.costpercapita_i113||0), 0.001); end
  def test_costpercapita_i114; assert_in_delta(0, (worksheet.costpercapita_i114||0), 0.001); end
  def test_costpercapita_i115; assert_in_delta(0, (worksheet.costpercapita_i115||0), 0.001); end
  def test_costpercapita_i116; assert_in_epsilon(302.93727585935926, worksheet.costpercapita_i116, 0.001); end
  def test_costpercapita_i117; assert_in_epsilon(1.3470648651051955, worksheet.costpercapita_i117, 0.001); end
  def test_costpercapita_i118; assert_in_epsilon(14.910513609296297, worksheet.costpercapita_i118, 0.001); end
  def test_costpercapita_i119; assert_in_epsilon(48.21623362364019, worksheet.costpercapita_i119, 0.001); end
  def test_costpercapita_i120; assert_in_epsilon(334.7581509918008, worksheet.costpercapita_i120, 0.001); end
  def test_costpercapita_i121; assert_in_epsilon(278.39345555025864, worksheet.costpercapita_i121, 0.001); end
  def test_costpercapita_i122; assert_in_delta(0, (worksheet.costpercapita_i122||0), 0.001); end
  def test_costpercapita_i123; assert_in_epsilon(57.334080714201704, worksheet.costpercapita_i123, 0.001); end
  def test_costpercapita_i127; assert_in_epsilon(3.6701038324651054, worksheet.costpercapita_i127, 0.001); end
  def test_costpercapita_i128; assert_in_epsilon(48.887619619487545, worksheet.costpercapita_i128, 0.001); end
  def test_costpercapita_i130; assert_in_delta(0, (worksheet.costpercapita_i130||0), 0.001); end
  def test_costpercapita_i131; assert_in_delta(0, (worksheet.costpercapita_i131||0), 0.001); end
  def test_costpercapita_i132; assert_in_epsilon(450.0584190083319, worksheet.costpercapita_i132, 0.001); end
  def test_costpercapita_i133; assert_in_epsilon(65.36813977780953, worksheet.costpercapita_i133, 0.001); end
  def test_costpercapita_i134; assert_in_delta(0, (worksheet.costpercapita_i134||0), 0.001); end
  def test_costpercapita_i135; assert_in_epsilon(439.27818469225144, worksheet.costpercapita_i135, 0.001); end
  def test_costpercapita_i136; assert_in_epsilon(282.60658190813234, worksheet.costpercapita_i136, 0.001); end
  def test_costpercapita_i137; assert_in_epsilon(51.648696375500315, worksheet.costpercapita_i137, 0.001); end
  def test_costpercapita_i138; assert_in_epsilon(54.65921666499735, worksheet.costpercapita_i138, 0.001); end
  def test_costpercapita_i139; assert_in_epsilon(8.560753045881237, worksheet.costpercapita_i139, 0.001); end
  def test_costpercapita_i140; assert_in_epsilon(3.4576965174373737, worksheet.costpercapita_i140, 0.001); end
  def test_costpercapita_i141; assert_in_epsilon(7.8777020696519156, worksheet.costpercapita_i141, 0.001); end
  def test_costpercapita_i142; assert_in_epsilon(1040.0992602612444, worksheet.costpercapita_i142, 0.001); end
  def test_costpercapita_i143; assert_in_epsilon(345.3089550032831, worksheet.costpercapita_i143, 0.001); end
  def test_costpercapita_i144; assert_in_delta(0, (worksheet.costpercapita_i144||0), 0.001); end
  def test_costpercapita_i145; assert_in_epsilon(45.89715590943136, worksheet.costpercapita_i145, 0.001); end
  def test_costpercapita_i146; assert_in_epsilon(3.565792272115051, worksheet.costpercapita_i146, 0.001); end
  def test_costpercapita_i147; assert_in_epsilon(1.6052342828159507, worksheet.costpercapita_i147, 0.001); end
  def test_costpercapita_i148; assert_in_epsilon(57.980775959199086, worksheet.costpercapita_i148, 0.001); end
  def test_costpercapita_i151; assert_in_delta(0, (worksheet.costpercapita_i151||0), 0.001); end
  def test_costpercapita_i152; assert_in_epsilon(6.790810821928129, worksheet.costpercapita_i152, 0.001); end
  def test_costpercapita_i156; assert_in_epsilon(7.064498166041793, worksheet.costpercapita_i156, 0.001); end
  def test_costpercapita_i160; assert_in_epsilon(1.2945908607510541, worksheet.costpercapita_i160, 0.001); end
  def test_costpercapita_i161; assert_in_epsilon(5.969024849778815, worksheet.costpercapita_i161, 0.001); end
  def test_costpercapita_i197; assert_in_epsilon(3969.545987112196, worksheet.costpercapita_i197, 0.001); end
  def test_costpercapita_j112; assert_in_delta(0, (worksheet.costpercapita_j112||0), 0.001); end
  def test_costpercapita_j113; assert_in_delta(0, (worksheet.costpercapita_j113||0), 0.001); end
  def test_costpercapita_j114; assert_in_delta(0, (worksheet.costpercapita_j114||0), 0.001); end
  def test_costpercapita_j115; assert_in_delta(0, (worksheet.costpercapita_j115||0), 0.001); end
  def test_costpercapita_j116; assert_in_epsilon(295.8013775378838, worksheet.costpercapita_j116, 0.001); end
  def test_costpercapita_j117; assert_in_epsilon(1.3153338148983542, worksheet.costpercapita_j117, 0.001); end
  def test_costpercapita_j118; assert_in_epsilon(49.42199589141059, worksheet.costpercapita_j118, 0.001); end
  def test_costpercapita_j119; assert_in_delta(0, (worksheet.costpercapita_j119||0), 0.001); end
  def test_costpercapita_j120; assert_in_epsilon(523.2494461164268, worksheet.costpercapita_j120, 0.001); end
  def test_costpercapita_j121; assert_in_epsilon(381.2718607183178, worksheet.costpercapita_j121, 0.001); end
  def test_costpercapita_j122; assert_in_delta(0, (worksheet.costpercapita_j122||0), 0.001); end
  def test_costpercapita_j123; assert_in_epsilon(67.42557934096773, worksheet.costpercapita_j123, 0.001); end
  def test_costpercapita_j127; assert_in_epsilon(3.3571110618006452, worksheet.costpercapita_j127, 0.001); end
  def test_costpercapita_j128; assert_in_epsilon(48.2171151524809, worksheet.costpercapita_j128, 0.001); end
  def test_costpercapita_j130; assert_in_delta(0, (worksheet.costpercapita_j130||0), 0.001); end
  def test_costpercapita_j131; assert_in_delta(0, (worksheet.costpercapita_j131||0), 0.001); end
  def test_costpercapita_j132; assert_in_epsilon(504.40871163786073, worksheet.costpercapita_j132, 0.001); end
  def test_costpercapita_j133; assert_in_epsilon(81.10325889275373, worksheet.costpercapita_j133, 0.001); end
  def test_costpercapita_j134; assert_in_delta(0, (worksheet.costpercapita_j134||0), 0.001); end
  def test_costpercapita_j135; assert_in_epsilon(507.44552916653237, worksheet.costpercapita_j135, 0.001); end
  def test_costpercapita_j136; assert_in_epsilon(256.3485880371861, worksheet.costpercapita_j136, 0.001); end
  def test_costpercapita_j137; assert_in_epsilon(49.560872071712325, worksheet.costpercapita_j137, 0.001); end
  def test_costpercapita_j138; assert_in_epsilon(54.26341146960773, worksheet.costpercapita_j138, 0.001); end
  def test_costpercapita_j139; assert_in_epsilon(7.877202559213112, worksheet.costpercapita_j139, 0.001); end
  def test_costpercapita_j140; assert_in_epsilon(4.750612409361549, worksheet.costpercapita_j140, 0.001); end
  def test_costpercapita_j141; assert_in_epsilon(194.54961204758027, worksheet.costpercapita_j141, 0.001); end
  def test_costpercapita_j142; assert_in_epsilon(346.79867126108724, worksheet.costpercapita_j142, 0.001); end
  def test_costpercapita_j143; assert_in_epsilon(585.5557206898447, worksheet.costpercapita_j143, 0.001); end
  def test_costpercapita_j144; assert_in_delta(0, (worksheet.costpercapita_j144||0), 0.001); end
  def test_costpercapita_j145; assert_in_epsilon(55.272151102759445, worksheet.costpercapita_j145, 0.001); end
  def test_costpercapita_j146; assert_in_epsilon(3.541382250585067, worksheet.costpercapita_j146, 0.001); end
  def test_costpercapita_j147; assert_in_epsilon(1.2258024493039328, worksheet.costpercapita_j147, 0.001); end
  def test_costpercapita_j148; assert_in_epsilon(54.40298370528458, worksheet.costpercapita_j148, 0.001); end
  def test_costpercapita_j151; assert_in_delta(0, (worksheet.costpercapita_j151||0), 0.001); end
  def test_costpercapita_j152; assert_in_epsilon(6.403184074433841, worksheet.costpercapita_j152, 0.001); end
  def test_costpercapita_j156; assert_in_epsilon(4.9790447231177835, worksheet.costpercapita_j156, 0.001); end
  def test_costpercapita_j160; assert_in_epsilon(1.0551904268400203, worksheet.costpercapita_j160, 0.001); end
  def test_costpercapita_j161; assert_in_epsilon(6.307430505700716, worksheet.costpercapita_j161, 0.001); end
  def test_costpercapita_j197; assert_in_epsilon(4095.909179114952, worksheet.costpercapita_j197, 0.001); end
  def test_costpercapita_k112; assert_in_delta(0, (worksheet.costpercapita_k112||0), 0.001); end
  def test_costpercapita_k113; assert_in_delta(0, (worksheet.costpercapita_k113||0), 0.001); end
  def test_costpercapita_k114; assert_in_delta(0, (worksheet.costpercapita_k114||0), 0.001); end
  def test_costpercapita_k115; assert_in_delta(0, (worksheet.costpercapita_k115||0), 0.001); end
  def test_costpercapita_k116; assert_in_epsilon(289.49300310441305, worksheet.costpercapita_k116, 0.001); end
  def test_costpercapita_k117; assert_in_epsilon(1.287282497901616, worksheet.costpercapita_k117, 0.001); end
  def test_costpercapita_k118; assert_in_epsilon(94.65243209226138, worksheet.costpercapita_k118, 0.001); end
  def test_costpercapita_k119; assert_in_delta(0.2762884391835793, worksheet.costpercapita_k119, 0.001); end
  def test_costpercapita_k120; assert_in_epsilon(831.9921028928898, worksheet.costpercapita_k120, 0.001); end
  def test_costpercapita_k121; assert_in_epsilon(485.3528053435341, worksheet.costpercapita_k121, 0.001); end
  def test_costpercapita_k122; assert_in_delta(0, (worksheet.costpercapita_k122||0), 0.001); end
  def test_costpercapita_k123; assert_in_epsilon(93.9695002448396, worksheet.costpercapita_k123, 0.001); end
  def test_costpercapita_k127; assert_in_epsilon(3.066896652801604, worksheet.costpercapita_k127, 0.001); end
  def test_costpercapita_k128; assert_in_epsilon(46.01344520328713, worksheet.costpercapita_k128, 0.001); end
  def test_costpercapita_k130; assert_in_delta(0, (worksheet.costpercapita_k130||0), 0.001); end
  def test_costpercapita_k131; assert_in_delta(0, (worksheet.costpercapita_k131||0), 0.001); end
  def test_costpercapita_k132; assert_in_epsilon(536.5108267728864, worksheet.costpercapita_k132, 0.001); end
  def test_costpercapita_k133; assert_in_delta(0, (worksheet.costpercapita_k133||0), 0.001); end
  def test_costpercapita_k134; assert_in_delta(0, (worksheet.costpercapita_k134||0), 0.001); end
  def test_costpercapita_k135; assert_in_epsilon(575.9467533700578, worksheet.costpercapita_k135, 0.001); end
  def test_costpercapita_k136; assert_in_epsilon(240.30743017766432, worksheet.costpercapita_k136, 0.001); end
  def test_costpercapita_k137; assert_in_epsilon(48.36700183156851, worksheet.costpercapita_k137, 0.001); end
  def test_costpercapita_k138; assert_in_epsilon(54.029015847908894, worksheet.costpercapita_k138, 0.001); end
  def test_costpercapita_k139; assert_in_epsilon(7.295946532874068, worksheet.costpercapita_k139, 0.001); end
  def test_costpercapita_k140; assert_in_epsilon(6.862807257822014, worksheet.costpercapita_k140, 0.001); end
  def test_costpercapita_k141; assert_in_epsilon(160.89479046135858, worksheet.costpercapita_k141, 0.001); end
  def test_costpercapita_k142; assert_in_epsilon(249.16390774376427, worksheet.costpercapita_k142, 0.001); end
  def test_costpercapita_k143; assert_in_epsilon(669.7866156393203, worksheet.costpercapita_k143, 0.001); end
  def test_costpercapita_k144; assert_in_delta(0, (worksheet.costpercapita_k144||0), 0.001); end
  def test_costpercapita_k145; assert_in_epsilon(65.53536515690647, worksheet.costpercapita_k145, 0.001); end
  def test_costpercapita_k146; assert_in_epsilon(3.653696737548041, worksheet.costpercapita_k146, 0.001); end
  def test_costpercapita_k147; assert_in_delta(0.8960778092830292, worksheet.costpercapita_k147, 0.001); end
  def test_costpercapita_k148; assert_in_epsilon(59.58562017330874, worksheet.costpercapita_k148, 0.001); end
  def test_costpercapita_k151; assert_in_delta(0, (worksheet.costpercapita_k151||0), 0.001); end
  def test_costpercapita_k152; assert_in_epsilon(6.094221775906331, worksheet.costpercapita_k152, 0.001); end
  def test_costpercapita_k156; assert_in_epsilon(3.986316673259076, worksheet.costpercapita_k156, 0.001); end
  def test_costpercapita_k160; assert_in_delta(0.8654141144646954, worksheet.costpercapita_k160, 0.001); end
  def test_costpercapita_k161; assert_in_epsilon(7.104971818562152, worksheet.costpercapita_k161, 0.001); end
  def test_costpercapita_k197; assert_in_epsilon(4542.990536365576, worksheet.costpercapita_k197, 0.001); end
  def test_costpercapita_l112; assert_in_delta(0, (worksheet.costpercapita_l112||0), 0.001); end
  def test_costpercapita_l113; assert_in_delta(0, (worksheet.costpercapita_l113||0), 0.001); end
  def test_costpercapita_l114; assert_in_delta(0, (worksheet.costpercapita_l114||0), 0.001); end
  def test_costpercapita_l115; assert_in_delta(0, (worksheet.costpercapita_l115||0), 0.001); end
  def test_costpercapita_l116; assert_in_epsilon(283.71821828462265, worksheet.costpercapita_l116, 0.001); end
  def test_costpercapita_l117; assert_in_epsilon(1.2616038827090217, worksheet.costpercapita_l117, 0.001); end
  def test_costpercapita_l118; assert_in_epsilon(174.82499585234604, worksheet.costpercapita_l118, 0.001); end
  def test_costpercapita_l119; assert_in_epsilon(2.166216464154936, worksheet.costpercapita_l119, 0.001); end
  def test_costpercapita_l120; assert_in_epsilon(1128.915888325397, worksheet.costpercapita_l120, 0.001); end
  def test_costpercapita_l121; assert_in_epsilon(590.5223616285526, worksheet.costpercapita_l121, 0.001); end
  def test_costpercapita_l122; assert_in_delta(0, (worksheet.costpercapita_l122||0), 0.001); end
  def test_costpercapita_l123; assert_in_epsilon(141.26203279030355, worksheet.costpercapita_l123, 0.001); end
  def test_costpercapita_l127; assert_in_epsilon(2.801637993486015, worksheet.costpercapita_l127, 0.001); end
  def test_costpercapita_l128; assert_in_epsilon(44.66983969011654, worksheet.costpercapita_l128, 0.001); end
  def test_costpercapita_l130; assert_in_delta(0, (worksheet.costpercapita_l130||0), 0.001); end
  def test_costpercapita_l131; assert_in_delta(0, (worksheet.costpercapita_l131||0), 0.001); end
  def test_costpercapita_l132; assert_in_epsilon(574.3026902302396, worksheet.costpercapita_l132, 0.001); end
  def test_costpercapita_l133; assert_in_epsilon(67.3996646710757, worksheet.costpercapita_l133, 0.001); end
  def test_costpercapita_l134; assert_in_delta(0, (worksheet.costpercapita_l134||0), 0.001); end
  def test_costpercapita_l135; assert_in_epsilon(656.5536903875965, worksheet.costpercapita_l135, 0.001); end
  def test_costpercapita_l136; assert_in_epsilon(204.08830700067784, worksheet.costpercapita_l136, 0.001); end
  def test_costpercapita_l137; assert_in_epsilon(47.545088107331765, worksheet.costpercapita_l137, 0.001); end
  def test_costpercapita_l138; assert_in_epsilon(53.88408075027923, worksheet.costpercapita_l138, 0.001); end
  def test_costpercapita_l139; assert_in_epsilon(6.796924489435453, worksheet.costpercapita_l139, 0.001); end
  def test_costpercapita_l140; assert_in_epsilon(10.403293594571595, worksheet.costpercapita_l140, 0.001); end
  def test_costpercapita_l141; assert_in_epsilon(60.48054898195799, worksheet.costpercapita_l141, 0.001); end
  def test_costpercapita_l142; assert_in_epsilon(321.134061821391, worksheet.costpercapita_l142, 0.001); end
  def test_costpercapita_l143; assert_in_epsilon(722.5990550023693, worksheet.costpercapita_l143, 0.001); end
  def test_costpercapita_l144; assert_in_delta(0, (worksheet.costpercapita_l144||0), 0.001); end
  def test_costpercapita_l145; assert_in_epsilon(76.68345945372859, worksheet.costpercapita_l145, 0.001); end
  def test_costpercapita_l146; assert_in_epsilon(3.764730836017006, worksheet.costpercapita_l146, 0.001); end
  def test_costpercapita_l147; assert_in_delta(0.5997742210621787, worksheet.costpercapita_l147, 0.001); end
  def test_costpercapita_l148; assert_in_epsilon(89.384725395537, worksheet.costpercapita_l148, 0.001); end
  def test_costpercapita_l151; assert_in_delta(0, (worksheet.costpercapita_l151||0), 0.001); end
  def test_costpercapita_l152; assert_in_epsilon(5.841911723728388, worksheet.costpercapita_l152, 0.001); end
  def test_costpercapita_l156; assert_in_epsilon(2.740101429463171, worksheet.costpercapita_l156, 0.001); end
  def test_costpercapita_l160; assert_in_delta(0.8384505132633515, worksheet.costpercapita_l160, 0.001); end
  def test_costpercapita_l161; assert_in_epsilon(8.445057163322357, worksheet.costpercapita_l161, 0.001); end
  def test_costpercapita_l197; assert_in_epsilon(5283.628410684736, worksheet.costpercapita_l197, 0.001); end
  def test_costpercapita_m112; assert_in_delta(0, (worksheet.costpercapita_m112||0), 0.001); end
  def test_costpercapita_m113; assert_in_delta(0, (worksheet.costpercapita_m113||0), 0.001); end
  def test_costpercapita_m114; assert_in_delta(0, (worksheet.costpercapita_m114||0), 0.001); end
  def test_costpercapita_m115; assert_in_delta(0, (worksheet.costpercapita_m115||0), 0.001); end
  def test_costpercapita_m116; assert_in_epsilon(278.42354401578666, worksheet.costpercapita_m116, 0.001); end
  def test_costpercapita_m117; assert_in_epsilon(1.2380601650879808, worksheet.costpercapita_m117, 0.001); end
  def test_costpercapita_m118; assert_in_epsilon(87.65585925776276, worksheet.costpercapita_m118, 0.001); end
  def test_costpercapita_m119; assert_in_epsilon(17.006328848443996, worksheet.costpercapita_m119, 0.001); end
  def test_costpercapita_m120; assert_in_epsilon(1415.517827868439, worksheet.costpercapita_m120, 0.001); end
  def test_costpercapita_m121; assert_in_epsilon(696.2716258631393, worksheet.costpercapita_m121, 0.001); end
  def test_costpercapita_m122; assert_in_delta(0, (worksheet.costpercapita_m122||0), 0.001); end
  def test_costpercapita_m123; assert_in_epsilon(62.929862495160116, worksheet.costpercapita_m123, 0.001); end
  def test_costpercapita_m127; assert_in_epsilon(2.557344237350851, worksheet.costpercapita_m127, 0.001); end
  def test_costpercapita_m128; assert_in_epsilon(43.617803871918255, worksheet.costpercapita_m128, 0.001); end
  def test_costpercapita_m130; assert_in_delta(0, (worksheet.costpercapita_m130||0), 0.001); end
  def test_costpercapita_m131; assert_in_delta(0, (worksheet.costpercapita_m131||0), 0.001); end
  def test_costpercapita_m132; assert_in_epsilon(577.7927005534743, worksheet.costpercapita_m132, 0.001); end
  def test_costpercapita_m133; assert_in_delta(0, (worksheet.costpercapita_m133||0), 0.001); end
  def test_costpercapita_m134; assert_in_delta(0, (worksheet.costpercapita_m134||0), 0.001); end
  def test_costpercapita_m135; assert_in_epsilon(737.7277440365704, worksheet.costpercapita_m135, 0.001); end
  def test_costpercapita_m136; assert_in_epsilon(194.92561688349187, worksheet.costpercapita_m136, 0.001); end
  def test_costpercapita_m137; assert_in_epsilon(47.08097298250203, worksheet.costpercapita_m137, 0.001); end
  def test_costpercapita_m138; assert_in_epsilon(53.74884724886964, worksheet.costpercapita_m138, 0.001); end
  def test_costpercapita_m139; assert_in_epsilon(6.3688321329853474, worksheet.costpercapita_m139, 0.001); end
  def test_costpercapita_m140; assert_in_epsilon(16.33164446641484, worksheet.costpercapita_m140, 0.001); end
  def test_costpercapita_m141; assert_in_epsilon(17.796028107842503, worksheet.costpercapita_m141, 0.001); end
  def test_costpercapita_m142; assert_in_epsilon(288.6247432192158, worksheet.costpercapita_m142, 0.001); end
  def test_costpercapita_m143; assert_in_epsilon(759.3066712428496, worksheet.costpercapita_m143, 0.001); end
  def test_costpercapita_m144; assert_in_delta(0, (worksheet.costpercapita_m144||0), 0.001); end
  def test_costpercapita_m145; assert_in_epsilon(88.7015038477863, worksheet.costpercapita_m145, 0.001); end
  def test_costpercapita_m146; assert_in_epsilon(3.863924282810438, worksheet.costpercapita_m146, 0.001); end
  def test_costpercapita_m147; assert_in_delta(0.3249011566927001, worksheet.costpercapita_m147, 0.001); end
  def test_costpercapita_m148; assert_in_epsilon(107.43997772663967, worksheet.costpercapita_m148, 0.001); end
  def test_costpercapita_m151; assert_in_delta(0, (worksheet.costpercapita_m151||0), 0.001); end
  def test_costpercapita_m152; assert_in_epsilon(5.6336130361418455, worksheet.costpercapita_m152, 0.001); end
  def test_costpercapita_m156; assert_in_epsilon(1.285946657004056, worksheet.costpercapita_m156, 0.001); end
  def test_costpercapita_m160; assert_in_delta(0.8309958773767842, worksheet.costpercapita_m160, 0.001); end
  def test_costpercapita_m161; assert_in_epsilon(10.830914553856188, worksheet.costpercapita_m161, 0.001); end
  def test_costpercapita_m197; assert_in_epsilon(5523.833834635613, worksheet.costpercapita_m197, 0.001); end
  def test_costpercapita_o112; assert_in_epsilon(91.05647172431496, worksheet.costpercapita_o112, 0.001); end
  def test_costpercapita_o113; assert_in_delta(0, (worksheet.costpercapita_o113||0), 0.001); end
  def test_costpercapita_o114; assert_in_epsilon(23.874058512683277, worksheet.costpercapita_o114, 0.001); end
  def test_costpercapita_o115; assert_in_epsilon(4.729084474606355, worksheet.costpercapita_o115, 0.001); end
  def test_costpercapita_o116; assert_in_epsilon(4.621698715171772, worksheet.costpercapita_o116, 0.001); end
  def test_costpercapita_o117; assert_in_epsilon(4.834271668999991, worksheet.costpercapita_o117, 0.001); end
  def test_costpercapita_o118; assert_in_delta(0.0035673412337731835, worksheet.costpercapita_o118, 0.001); end
  def test_costpercapita_o119; assert_in_delta(0, (worksheet.costpercapita_o119||0), 0.001); end
  def test_costpercapita_o120; assert_in_epsilon(15.940995982440684, worksheet.costpercapita_o120, 0.001); end
  def test_costpercapita_o121; assert_in_delta(0, (worksheet.costpercapita_o121||0), 0.001); end
  def test_costpercapita_o123; assert_in_epsilon(20.55815881458067, worksheet.costpercapita_o123, 0.001); end
  def test_costpercapita_o126; assert_in_delta(3.3744784853612904e-08, worksheet.costpercapita_o126, 0.001); end
  def test_costpercapita_o127; assert_in_epsilon(2.9882725037154225, worksheet.costpercapita_o127, 0.001); end
  def test_costpercapita_o128; assert_in_epsilon(120.66987051271548, worksheet.costpercapita_o128, 0.001); end
  def test_costpercapita_o130; assert_in_delta(0, (worksheet.costpercapita_o130||0), 0.001); end
  def test_costpercapita_o131; assert_in_delta(0, (worksheet.costpercapita_o131||0), 0.001); end
  def test_costpercapita_o132; assert_in_epsilon(20.98877203352015, worksheet.costpercapita_o132, 0.001); end
  def test_costpercapita_o133; assert_in_epsilon(2.6107540216924687, worksheet.costpercapita_o133, 0.001); end
  def test_costpercapita_o134; assert_in_delta(0, (worksheet.costpercapita_o134||0), 0.001); end
  def test_costpercapita_o137; assert_in_epsilon(25.417131274747245, worksheet.costpercapita_o137, 0.001); end
  def test_costpercapita_o140; assert_in_epsilon(182.167003399948, worksheet.costpercapita_o140, 0.001); end
  def test_costpercapita_o141; assert_in_epsilon(862.8255185232231, worksheet.costpercapita_o141, 0.001); end
  def test_costpercapita_o142; assert_in_delta(0.42712410901052306, worksheet.costpercapita_o142, 0.001); end
  def test_costpercapita_o143; assert_in_delta(0, (worksheet.costpercapita_o143||0), 0.001); end
  def test_costpercapita_o144; assert_in_delta(0, (worksheet.costpercapita_o144||0), 0.001); end
  def test_costpercapita_o146; assert_in_epsilon(144.33870740720542, worksheet.costpercapita_o146, 0.001); end
  def test_costpercapita_o147; assert_in_epsilon(3.539563798683592, worksheet.costpercapita_o147, 0.001); end
  def test_costpercapita_o148; assert_in_epsilon(94.57550841098407, worksheet.costpercapita_o148, 0.001); end
  def test_costpercapita_o149; assert_in_epsilon(-10.295675329529756, worksheet.costpercapita_o149, 0.001); end
  def test_costpercapita_o150; assert_in_delta(0, (worksheet.costpercapita_o150||0), 0.001); end
  def test_costpercapita_o151; assert_in_delta(0, (worksheet.costpercapita_o151||0), 0.001); end
  def test_costpercapita_o152; assert_in_epsilon(14.36694848426531, worksheet.costpercapita_o152, 0.001); end
  def test_costpercapita_o156; assert_in_delta(0.05623216890603242, worksheet.costpercapita_o156, 0.001); end
  def test_costpercapita_o160; assert_in_delta(0.15930475592121726, worksheet.costpercapita_o160, 0.001); end
  def test_costpercapita_o161; assert_in_delta(0, (worksheet.costpercapita_o161||0), 0.001); end
  def test_costpercapita_o197; assert_in_epsilon(1728.7314950724287, worksheet.costpercapita_o197, 0.001); end
  def test_costpercapita_p112; assert_in_epsilon(73.97823220703107, worksheet.costpercapita_p112, 0.001); end
  def test_costpercapita_p113; assert_in_epsilon(1.9434554398382349, worksheet.costpercapita_p113, 0.001); end
  def test_costpercapita_p114; assert_in_epsilon(17.154954734634767, worksheet.costpercapita_p114, 0.001); end
  def test_costpercapita_p115; assert_in_epsilon(7.778561894572056, worksheet.costpercapita_p115, 0.001); end
  def test_costpercapita_p116; assert_in_epsilon(23.8923516224224, worksheet.costpercapita_p116, 0.001); end
  def test_costpercapita_p117; assert_in_epsilon(4.967040052557376, worksheet.costpercapita_p117, 0.001); end
  def test_costpercapita_p118; assert_in_delta(0.2325431674645385, worksheet.costpercapita_p118, 0.001); end
  def test_costpercapita_p119; assert_in_delta(0.052125945983346175, worksheet.costpercapita_p119, 0.001); end
  def test_costpercapita_p120; assert_in_epsilon(41.074455801560354, worksheet.costpercapita_p120, 0.001); end
  def test_costpercapita_p121; assert_in_delta(0, (worksheet.costpercapita_p121||0), 0.001); end
  def test_costpercapita_p123; assert_in_epsilon(47.880681768439395, worksheet.costpercapita_p123, 0.001); end
  def test_costpercapita_p126; assert_in_delta(4.7940679646211255e-08, worksheet.costpercapita_p126, 0.001); end
  def test_costpercapita_p127; assert_in_epsilon(4.111026883836211, worksheet.costpercapita_p127, 0.001); end
  def test_costpercapita_p128; assert_in_epsilon(121.26375117889495, worksheet.costpercapita_p128, 0.001); end
  def test_costpercapita_p130; assert_in_delta(0, (worksheet.costpercapita_p130||0), 0.001); end
  def test_costpercapita_p131; assert_in_delta(0, (worksheet.costpercapita_p131||0), 0.001); end
  def test_costpercapita_p132; assert_in_epsilon(24.20849571473956, worksheet.costpercapita_p132, 0.001); end
  def test_costpercapita_p133; assert_in_epsilon(2.538160920077827, worksheet.costpercapita_p133, 0.001); end
  def test_costpercapita_p134; assert_in_delta(0, (worksheet.costpercapita_p134||0), 0.001); end
  def test_costpercapita_p137; assert_in_epsilon(24.08836861517854, worksheet.costpercapita_p137, 0.001); end
  def test_costpercapita_p140; assert_in_epsilon(183.02773512151737, worksheet.costpercapita_p140, 0.001); end
  def test_costpercapita_p141; assert_in_epsilon(782.8729140372642, worksheet.costpercapita_p141, 0.001); end
  def test_costpercapita_p142; assert_in_epsilon(18.284303820890422, worksheet.costpercapita_p142, 0.001); end
  def test_costpercapita_p143; assert_in_epsilon(11.422099079173536, worksheet.costpercapita_p143, 0.001); end
  def test_costpercapita_p144; assert_in_delta(0, (worksheet.costpercapita_p144||0), 0.001); end
  def test_costpercapita_p145; assert_in_epsilon(15.437500000000002, worksheet.costpercapita_p145, 0.001); end
  def test_costpercapita_p146; assert_in_epsilon(160.1800429340533, worksheet.costpercapita_p146, 0.001); end
  def test_costpercapita_p147; assert_in_epsilon(3.2202190496193683, worksheet.costpercapita_p147, 0.001); end
  def test_costpercapita_p148; assert_in_epsilon(106.63888852145733, worksheet.costpercapita_p148, 0.001); end
  def test_costpercapita_p149; assert_in_epsilon(16.995264105403493, worksheet.costpercapita_p149, 0.001); end
  def test_costpercapita_p150; assert_in_epsilon(2.2628595687100987, worksheet.costpercapita_p150, 0.001); end
  def test_costpercapita_p151; assert_in_delta(0, (worksheet.costpercapita_p151||0), 0.001); end
  def test_costpercapita_p152; assert_in_epsilon(13.165384769714793, worksheet.costpercapita_p152, 0.001); end
  def test_costpercapita_p156; assert_in_delta(0.08187354779771792, worksheet.costpercapita_p156, 0.001); end
  def test_costpercapita_p160; assert_in_delta(0.14841742354005252, worksheet.costpercapita_p160, 0.001); end
  def test_costpercapita_p161; assert_in_delta(0.09799487630794962, worksheet.costpercapita_p161, 0.001); end
  def test_costpercapita_p197; assert_in_epsilon(1793.0637138541285, worksheet.costpercapita_p197, 0.001); end
  def test_costpercapita_q112; assert_in_epsilon(56.74751078509565, worksheet.costpercapita_q112, 0.001); end
  def test_costpercapita_q113; assert_in_epsilon(3.9626011030763046, worksheet.costpercapita_q113, 0.001); end
  def test_costpercapita_q114; assert_in_epsilon(8.554176727536158, worksheet.costpercapita_q114, 0.001); end
  def test_costpercapita_q115; assert_in_epsilon(10.624385973462417, worksheet.costpercapita_q115, 0.001); end
  def test_costpercapita_q116; assert_in_epsilon(79.08565895876612, worksheet.costpercapita_q116, 0.001); end
  def test_costpercapita_q117; assert_in_epsilon(5.0870417802770165, worksheet.costpercapita_q117, 0.001); end
  def test_costpercapita_q118; assert_in_epsilon(1.1942558384218391, worksheet.costpercapita_q118, 0.001); end
  def test_costpercapita_q119; assert_in_delta(0.40335551137231934, worksheet.costpercapita_q119, 0.001); end
  def test_costpercapita_q120; assert_in_epsilon(64.54883737765586, worksheet.costpercapita_q120, 0.001); end
  def test_costpercapita_q121; assert_in_delta(0, (worksheet.costpercapita_q121||0), 0.001); end
  def test_costpercapita_q123; assert_in_epsilon(81.64489598725848, worksheet.costpercapita_q123, 0.001); end
  def test_costpercapita_q126; assert_in_delta(1.4945163258348577e-08, worksheet.costpercapita_q126, 0.001); end
  def test_costpercapita_q127; assert_in_epsilon(5.221293887092475, worksheet.costpercapita_q127, 0.001); end
  def test_costpercapita_q128; assert_in_epsilon(121.38907958697911, worksheet.costpercapita_q128, 0.001); end
  def test_costpercapita_q130; assert_in_delta(0, (worksheet.costpercapita_q130||0), 0.001); end
  def test_costpercapita_q131; assert_in_delta(0, (worksheet.costpercapita_q131||0), 0.001); end
  def test_costpercapita_q132; assert_in_epsilon(30.528743611746894, worksheet.costpercapita_q132, 0.001); end
  def test_costpercapita_q133; assert_in_epsilon(5.729515963148399, worksheet.costpercapita_q133, 0.001); end
  def test_costpercapita_q134; assert_in_delta(0, (worksheet.costpercapita_q134||0), 0.001); end
  def test_costpercapita_q135; assert_in_epsilon(121.5835601031287, worksheet.costpercapita_q135, 0.001); end
  def test_costpercapita_q137; assert_in_epsilon(19.967034237054754, worksheet.costpercapita_q137, 0.001); end
  def test_costpercapita_q140; assert_in_epsilon(184.06464358913905, worksheet.costpercapita_q140, 0.001); end
  def test_costpercapita_q141; assert_in_epsilon(705.2346495111858, worksheet.costpercapita_q141, 0.001); end
  def test_costpercapita_q142; assert_in_epsilon(36.10807579149958, worksheet.costpercapita_q142, 0.001); end
  def test_costpercapita_q143; assert_in_epsilon(21.39608829573939, worksheet.costpercapita_q143, 0.001); end
  def test_costpercapita_q144; assert_in_delta(0, (worksheet.costpercapita_q144||0), 0.001); end
  def test_costpercapita_q145; assert_in_epsilon(20.348837209302328, worksheet.costpercapita_q145, 0.001); end
  def test_costpercapita_q146; assert_in_epsilon(175.078282248488, worksheet.costpercapita_q146, 0.001); end
  def test_costpercapita_q147; assert_in_epsilon(2.9123593497468963, worksheet.costpercapita_q147, 0.001); end
  def test_costpercapita_q148; assert_in_epsilon(99.59590887655318, worksheet.costpercapita_q148, 0.001); end
  def test_costpercapita_q149; assert_in_epsilon(51.260272035079076, worksheet.costpercapita_q149, 0.001); end
  def test_costpercapita_q150; assert_in_epsilon(7.4058418875517225, worksheet.costpercapita_q150, 0.001); end
  def test_costpercapita_q151; assert_in_delta(0, (worksheet.costpercapita_q151||0), 0.001); end
  def test_costpercapita_q152; assert_in_epsilon(12.078668379868072, worksheet.costpercapita_q152, 0.001); end
  def test_costpercapita_q156; assert_in_delta(0.058809346877740566, worksheet.costpercapita_q156, 0.001); end
  def test_costpercapita_q160; assert_in_delta(0.20603357014332574, worksheet.costpercapita_q160, 0.001); end
  def test_costpercapita_q161; assert_in_delta(0.2883178166800579, worksheet.costpercapita_q161, 0.001); end
  def test_costpercapita_q197; assert_in_epsilon(1932.308735354872, worksheet.costpercapita_q197, 0.001); end
  def test_costpercapita_r112; assert_in_epsilon(37.5352910345913, worksheet.costpercapita_r112, 0.001); end
  def test_costpercapita_r113; assert_in_epsilon(3.8399052038698325, worksheet.costpercapita_r113, 0.001); end
  def test_costpercapita_r114; assert_in_epsilon(2.7631032308036145, worksheet.costpercapita_r114, 0.001); end
  def test_costpercapita_r115; assert_in_epsilon(12.032552723529971, worksheet.costpercapita_r115, 0.001); end
  def test_costpercapita_r116; assert_in_epsilon(141.63413429832465, worksheet.costpercapita_r116, 0.001); end
  def test_costpercapita_r117; assert_in_epsilon(5.066460659734172, worksheet.costpercapita_r117, 0.001); end
  def test_costpercapita_r118; assert_in_epsilon(2.8873287674923294, worksheet.costpercapita_r118, 0.001); end
  def test_costpercapita_r119; assert_in_epsilon(3.1269297854396156, worksheet.costpercapita_r119, 0.001); end
  def test_costpercapita_r120; assert_in_epsilon(86.60077931211889, worksheet.costpercapita_r120, 0.001); end
  def test_costpercapita_r121; assert_in_delta(0, (worksheet.costpercapita_r121||0), 0.001); end
  def test_costpercapita_r123; assert_in_epsilon(112.24684462428492, worksheet.costpercapita_r123, 0.001); end
  def test_costpercapita_r126; assert_in_delta(1.988586341479224e-08, worksheet.costpercapita_r126, 0.001); end
  def test_costpercapita_r127; assert_in_epsilon(5.133693649713847, worksheet.costpercapita_r127, 0.001); end
  def test_costpercapita_r128; assert_in_epsilon(118.77107863665537, worksheet.costpercapita_r128, 0.001); end
  def test_costpercapita_r130; assert_in_delta(0, (worksheet.costpercapita_r130||0), 0.001); end
  def test_costpercapita_r131; assert_in_delta(0, (worksheet.costpercapita_r131||0), 0.001); end
  def test_costpercapita_r132; assert_in_epsilon(37.39182017517393, worksheet.costpercapita_r132, 0.001); end
  def test_costpercapita_r133; assert_in_epsilon(13.61011385519158, worksheet.costpercapita_r133, 0.001); end
  def test_costpercapita_r134; assert_in_delta(0, (worksheet.costpercapita_r134||0), 0.001); end
  def test_costpercapita_r135; assert_in_epsilon(159.10310920274972, worksheet.costpercapita_r135, 0.001); end
  def test_costpercapita_r137; assert_in_epsilon(16.318176972920416, worksheet.costpercapita_r137, 0.001); end
  def test_costpercapita_r140; assert_in_epsilon(185.52724029065766, worksheet.costpercapita_r140, 0.001); end
  def test_costpercapita_r141; assert_in_epsilon(469.93635665795495, worksheet.costpercapita_r141, 0.001); end
  def test_costpercapita_r142; assert_in_epsilon(304.73147421614334, worksheet.costpercapita_r142, 0.001); end
  def test_costpercapita_r143; assert_in_epsilon(63.34175791244783, worksheet.costpercapita_r143, 0.001); end
  def test_costpercapita_r144; assert_in_delta(0, (worksheet.costpercapita_r144||0), 0.001); end
  def test_costpercapita_r145; assert_in_epsilon(24.418604651162795, worksheet.costpercapita_r145, 0.001); end
  def test_costpercapita_r146; assert_in_epsilon(189.03342535050948, worksheet.costpercapita_r146, 0.001); end
  def test_costpercapita_r147; assert_in_epsilon(2.615984699066175, worksheet.costpercapita_r147, 0.001); end
  def test_costpercapita_r148; assert_in_epsilon(93.04744140891354, worksheet.costpercapita_r148, 0.001); end
  def test_costpercapita_r149; assert_in_epsilon(67.40076500279213, worksheet.costpercapita_r149, 0.001); end
  def test_costpercapita_r150; assert_in_epsilon(12.499027516222807, worksheet.costpercapita_r150, 0.001); end
  def test_costpercapita_r151; assert_in_delta(0, (worksheet.costpercapita_r151||0), 0.001); end
  def test_costpercapita_r152; assert_in_epsilon(11.20737805817844, worksheet.costpercapita_r152, 0.001); end
  def test_costpercapita_r156; assert_in_delta(0.0390304826634953, worksheet.costpercapita_r156, 0.001); end
  def test_costpercapita_r160; assert_in_delta(0.2423605649661059, worksheet.costpercapita_r160, 0.001); end
  def test_costpercapita_r161; assert_in_delta(0.336675982067282, worksheet.costpercapita_r161, 0.001); end
  def test_costpercapita_r197; assert_in_epsilon(2182.4388449462263, worksheet.costpercapita_r197, 0.001); end
  def test_costpercapita_s112; assert_in_epsilon(1.5812815709029229, worksheet.costpercapita_s112, 0.001); end
  def test_costpercapita_s113; assert_in_epsilon(3.734998405824467, worksheet.costpercapita_s113, 0.001); end
  def test_costpercapita_s114; assert_in_epsilon(2.6876148275169176, worksheet.costpercapita_s114, 0.001); end
  def test_costpercapita_s115; assert_in_epsilon(8.802679949205153, worksheet.costpercapita_s115, 0.001); end
  def test_costpercapita_s116; assert_in_epsilon(209.94998474403346, worksheet.costpercapita_s116, 0.001); end
  def test_costpercapita_s117; assert_in_epsilon(5.061234562065627, worksheet.costpercapita_s117, 0.001); end
  def test_costpercapita_s118; assert_in_epsilon(5.67640360380405, worksheet.costpercapita_s118, 0.001); end
  def test_costpercapita_s119; assert_in_epsilon(10.966952830455755, worksheet.costpercapita_s119, 0.001); end
  def test_costpercapita_s120; assert_in_epsilon(107.6283649681804, worksheet.costpercapita_s120, 0.001); end
  def test_costpercapita_s121; assert_in_delta(0, (worksheet.costpercapita_s121||0), 0.001); end
  def test_costpercapita_s123; assert_in_epsilon(133.16997069607032, worksheet.costpercapita_s123, 0.001); end
  def test_costpercapita_s126; assert_in_delta(2.4510356112468317e-08, worksheet.costpercapita_s126, 0.001); end
  def test_costpercapita_s127; assert_in_epsilon(5.093975052078148, worksheet.costpercapita_s127, 0.001); end
  def test_costpercapita_s128; assert_in_epsilon(116.20304128479638, worksheet.costpercapita_s128, 0.001); end
  def test_costpercapita_s130; assert_in_delta(0, (worksheet.costpercapita_s130||0), 0.001); end
  def test_costpercapita_s131; assert_in_delta(0, (worksheet.costpercapita_s131||0), 0.001); end
  def test_costpercapita_s132; assert_in_epsilon(42.839888438715214, worksheet.costpercapita_s132, 0.001); end
  def test_costpercapita_s133; assert_in_epsilon(12.881116305703356, worksheet.costpercapita_s133, 0.001); end
  def test_costpercapita_s134; assert_in_delta(0, (worksheet.costpercapita_s134||0), 0.001); end
  def test_costpercapita_s135; assert_in_epsilon(196.62265830237072, worksheet.costpercapita_s135, 0.001); end
  def test_costpercapita_s137; assert_in_epsilon(13.093056175864051, worksheet.costpercapita_s137, 0.001); end
  def test_costpercapita_s140; assert_in_epsilon(187.80727842218334, worksheet.costpercapita_s140, 0.001); end
  def test_costpercapita_s141; assert_in_epsilon(264.15547259834506, worksheet.costpercapita_s141, 0.001); end
  def test_costpercapita_s142; assert_in_epsilon(531.7278783215372, worksheet.costpercapita_s142, 0.001); end
  def test_costpercapita_s143; assert_in_epsilon(98.64304700376903, worksheet.costpercapita_s143, 0.001); end
  def test_costpercapita_s144; assert_in_delta(0, (worksheet.costpercapita_s144||0), 0.001); end
  def test_costpercapita_s145; assert_in_epsilon(28.837209302325586, worksheet.costpercapita_s145, 0.001); end
  def test_costpercapita_s146; assert_in_epsilon(202.04547224011773, worksheet.costpercapita_s146, 0.001); end
  def test_costpercapita_s147; assert_in_epsilon(2.331095097577205, worksheet.costpercapita_s147, 0.001); end
  def test_costpercapita_s148; assert_in_epsilon(87.1306006449194, worksheet.costpercapita_s148, 0.001); end
  def test_costpercapita_s149; assert_in_epsilon(73.70808659252967, worksheet.costpercapita_s149, 0.001); end
  def test_costpercapita_s150; assert_in_epsilon(19.001435831344192, worksheet.costpercapita_s150, 0.001); end
  def test_costpercapita_s151; assert_in_delta(0, (worksheet.costpercapita_s151||0), 0.001); end
  def test_costpercapita_s152; assert_in_epsilon(10.52690777830955, worksheet.costpercapita_s152, 0.001); end
  def test_costpercapita_s156; assert_in_delta(0.023977236491421843, worksheet.costpercapita_s156, 0.001); end
  def test_costpercapita_s160; assert_in_delta(0.2611789073931387, worksheet.costpercapita_s160, 0.001); end
  def test_costpercapita_s161; assert_in_delta(0.3946036454309648, worksheet.costpercapita_s161, 0.001); end
  def test_costpercapita_s197; assert_in_epsilon(2382.587465364371, worksheet.costpercapita_s197, 0.001); end
  def test_costpercapita_t112; assert_in_delta(0, (worksheet.costpercapita_t112||0), 0.001); end
  def test_costpercapita_t113; assert_in_epsilon(3.6470179195035626, worksheet.costpercapita_t113, 0.001); end
  def test_costpercapita_t114; assert_in_delta(0, (worksheet.costpercapita_t114||0), 0.001); end
  def test_costpercapita_t115; assert_in_epsilon(5.741770378162275, worksheet.costpercapita_t115, 0.001); end
  def test_costpercapita_t116; assert_in_epsilon(261.73302805007813, worksheet.costpercapita_t116, 0.001); end
  def test_costpercapita_t117; assert_in_epsilon(5.072066651327792, worksheet.costpercapita_t117, 0.001); end
  def test_costpercapita_t118; assert_in_epsilon(19.926807071289648, worksheet.costpercapita_t118, 0.001); end
  def test_costpercapita_t119; assert_in_epsilon(10.70861862555295, worksheet.costpercapita_t119, 0.001); end
  def test_costpercapita_t120; assert_in_epsilon(127.93558521826418, worksheet.costpercapita_t120, 0.001); end
  def test_costpercapita_t121; assert_in_delta(0, (worksheet.costpercapita_t121||0), 0.001); end
  def test_costpercapita_t123; assert_in_epsilon(152.8095756074193, worksheet.costpercapita_t123, 0.001); end
  def test_costpercapita_t126; assert_in_delta(2.8894331060100988e-08, worksheet.costpercapita_t126, 0.001); end
  def test_costpercapita_t127; assert_in_epsilon(4.778260353933559, worksheet.costpercapita_t127, 0.001); end
  def test_costpercapita_t128; assert_in_epsilon(112.53256933156081, worksheet.costpercapita_t128, 0.001); end
  def test_costpercapita_t130; assert_in_delta(0, (worksheet.costpercapita_t130||0), 0.001); end
  def test_costpercapita_t131; assert_in_delta(0, (worksheet.costpercapita_t131||0), 0.001); end
  def test_costpercapita_t132; assert_in_epsilon(48.81459217644749, worksheet.costpercapita_t132, 0.001); end
  def test_costpercapita_t133; assert_in_epsilon(10.181945625271466, worksheet.costpercapita_t133, 0.001); end
  def test_costpercapita_t134; assert_in_delta(0, (worksheet.costpercapita_t134||0), 0.001); end
  def test_costpercapita_t135; assert_in_epsilon(234.14220740199173, worksheet.costpercapita_t135, 0.001); end
  def test_costpercapita_t137; assert_in_epsilon(10.21191423691642, worksheet.costpercapita_t137, 0.001); end
  def test_costpercapita_t140; assert_in_epsilon(190.9617655384987, worksheet.costpercapita_t140, 0.001); end
  def test_costpercapita_t141; assert_in_epsilon(225.61866053078052, worksheet.costpercapita_t141, 0.001); end
  def test_costpercapita_t142; assert_in_epsilon(426.86732479394544, worksheet.costpercapita_t142, 0.001); end
  def test_costpercapita_t143; assert_in_epsilon(162.0776379575101, worksheet.costpercapita_t143, 0.001); end
  def test_costpercapita_t144; assert_in_delta(0, (worksheet.costpercapita_t144||0), 0.001); end
  def test_costpercapita_t145; assert_in_epsilon(33.60465116279071, worksheet.costpercapita_t145, 0.001); end
  def test_costpercapita_t146; assert_in_epsilon(214.11442291731282, worksheet.costpercapita_t146, 0.001); end
  def test_costpercapita_t147; assert_in_epsilon(2.0576905452799865, worksheet.costpercapita_t147, 0.001); end
  def test_costpercapita_t148; assert_in_epsilon(81.77919645076798, worksheet.costpercapita_t148, 0.001); end
  def test_costpercapita_t149; assert_in_epsilon(167.70067583437094, worksheet.costpercapita_t149, 0.001); end
  def test_costpercapita_t150; assert_in_epsilon(23.254680335469203, worksheet.costpercapita_t150, 0.001); end
  def test_costpercapita_t151; assert_in_delta(0, (worksheet.costpercapita_t151||0), 0.001); end
  def test_costpercapita_t152; assert_in_epsilon(9.99614813048735, worksheet.costpercapita_t152, 0.001); end
  def test_costpercapita_t156; assert_in_delta(0.01702479810270725, worksheet.costpercapita_t156, 0.001); end
  def test_costpercapita_t160; assert_in_delta(0.2652817350895232, worksheet.costpercapita_t160, 0.001); end
  def test_costpercapita_t161; assert_in_delta(0.47391321682451015, worksheet.costpercapita_t161, 0.001); end
  def test_costpercapita_t197; assert_in_epsilon(2547.0250326238443, worksheet.costpercapita_t197, 0.001); end
  def test_costpercapita_u112; assert_in_delta(0, (worksheet.costpercapita_u112||0), 0.001); end
  def test_costpercapita_u113; assert_in_epsilon(3.569240206656842, worksheet.costpercapita_u113, 0.001); end
  def test_costpercapita_u114; assert_in_delta(0, (worksheet.costpercapita_u114||0), 0.001); end
  def test_costpercapita_u115; assert_in_epsilon(2.8266188897596685, worksheet.costpercapita_u115, 0.001); end
  def test_costpercapita_u116; assert_in_epsilon(278.1732579877017, worksheet.costpercapita_u116, 0.001); end
  def test_costpercapita_u117; assert_in_epsilon(5.091177229525693, worksheet.costpercapita_u117, 0.001); end
  def test_costpercapita_u118; assert_in_epsilon(43.713983686507014, worksheet.costpercapita_u118, 0.001); end
  def test_costpercapita_u119; assert_in_epsilon(10.480242488438526, worksheet.costpercapita_u119, 0.001); end
  def test_costpercapita_u120; assert_in_epsilon(147.5625152091838, worksheet.costpercapita_u120, 0.001); end
  def test_costpercapita_u121; assert_in_delta(0, (worksheet.costpercapita_u121||0), 0.001); end
  def test_costpercapita_u123; assert_in_epsilon(177.21635028193933, worksheet.costpercapita_u123, 0.001); end
  def test_costpercapita_u126; assert_in_delta(3.305195970452638e-08, worksheet.costpercapita_u126, 0.001); end
  def test_costpercapita_u127; assert_in_epsilon(4.489646499942089, worksheet.costpercapita_u127, 0.001); end
  def test_costpercapita_u128; assert_in_epsilon(109.09720638845795, worksheet.costpercapita_u128, 0.001); end
  def test_costpercapita_u130; assert_in_delta(0, (worksheet.costpercapita_u130||0), 0.001); end
  def test_costpercapita_u131; assert_in_delta(0, (worksheet.costpercapita_u131||0), 0.001); end
  def test_costpercapita_u132; assert_in_epsilon(54.38171502316873, worksheet.costpercapita_u132, 0.001); end
  def test_costpercapita_u133; assert_in_epsilon(9.578029913718687, worksheet.costpercapita_u133, 0.001); end
  def test_costpercapita_u134; assert_in_delta(0, (worksheet.costpercapita_u134||0), 0.001); end
  def test_costpercapita_u135; assert_in_epsilon(271.66175650161273, worksheet.costpercapita_u135, 0.001); end
  def test_costpercapita_u137; assert_in_epsilon(7.592204307514873, worksheet.costpercapita_u137, 0.001); end
  def test_costpercapita_u140; assert_in_epsilon(194.73319261284973, worksheet.costpercapita_u140, 0.001); end
  def test_costpercapita_u141; assert_in_epsilon(190.95959611551808, worksheet.costpercapita_u141, 0.001); end
  def test_costpercapita_u142; assert_in_epsilon(334.5205552258543, worksheet.costpercapita_u142, 0.001); end
  def test_costpercapita_u143; assert_in_epsilon(213.89410875823572, worksheet.costpercapita_u143, 0.001); end
  def test_costpercapita_u144; assert_in_delta(0, (worksheet.costpercapita_u144||0), 0.001); end
  def test_costpercapita_u145; assert_in_epsilon(38.720930232558146, worksheet.costpercapita_u145, 0.001); end
  def test_costpercapita_u146; assert_in_epsilon(225.24027738209466, worksheet.costpercapita_u146, 0.001); end
  def test_costpercapita_u147; assert_in_epsilon(1.7957710421745186, worksheet.costpercapita_u147, 0.001); end
  def test_costpercapita_u148; assert_in_epsilon(77.20067189753958, worksheet.costpercapita_u148, 0.001); end
  def test_costpercapita_u149; assert_in_epsilon(152.95641381148806, worksheet.costpercapita_u149, 0.001); end
  def test_costpercapita_u150; assert_in_epsilon(27.776029551673084, worksheet.costpercapita_u150, 0.001); end
  def test_costpercapita_u151; assert_in_delta(0, (worksheet.costpercapita_u151||0), 0.001); end
  def test_costpercapita_u152; assert_in_epsilon(9.568814724711372, worksheet.costpercapita_u152, 0.001); end
  def test_costpercapita_u156; assert_in_delta(0.010517391729447276, worksheet.costpercapita_u156, 0.001); end
  def test_costpercapita_u160; assert_in_delta(0.2566548864996165, worksheet.costpercapita_u160, 0.001); end
  def test_costpercapita_u161; assert_in_delta(0.5979746206678923, worksheet.costpercapita_u161, 0.001); end
  def test_costpercapita_u197; assert_in_epsilon(2593.6654529007737, worksheet.costpercapita_u197, 0.001); end
  def test_costpercapita_v112; assert_in_delta(0, (worksheet.costpercapita_v112||0), 0.001); end
  def test_costpercapita_v113; assert_in_epsilon(3.4980412694025507, worksheet.costpercapita_v113, 0.001); end
  def test_costpercapita_v114; assert_in_delta(0, (worksheet.costpercapita_v114||0), 0.001); end
  def test_costpercapita_v115; assert_in_delta(0.03324200826954858, worksheet.costpercapita_v115, 0.001); end
  def test_costpercapita_v116; assert_in_epsilon(283.9836235402678, worksheet.costpercapita_v116, 0.001); end
  def test_costpercapita_v117; assert_in_epsilon(5.11435927628127, worksheet.costpercapita_v117, 0.001); end
  def test_costpercapita_v118; assert_in_epsilon(90.83026240947574, worksheet.costpercapita_v118, 0.001); end
  def test_costpercapita_v119; assert_in_epsilon(10.27118339346576, worksheet.costpercapita_v119, 0.001); end
  def test_costpercapita_v120; assert_in_epsilon(166.5283403385294, worksheet.costpercapita_v120, 0.001); end
  def test_costpercapita_v121; assert_in_delta(0, (worksheet.costpercapita_v121||0), 0.001); end
  def test_costpercapita_v123; assert_in_epsilon(210.15843676626494, worksheet.costpercapita_v123, 0.001); end
  def test_costpercapita_v126; assert_in_delta(3.699237680934668e-08, worksheet.costpercapita_v126, 0.001); end
  def test_costpercapita_v127; assert_in_epsilon(4.221601942442996, worksheet.costpercapita_v127, 0.001); end
  def test_costpercapita_v128; assert_in_epsilon(105.78646091603059, worksheet.costpercapita_v128, 0.001); end
  def test_costpercapita_v130; assert_in_delta(0, (worksheet.costpercapita_v130||0), 0.001); end
  def test_costpercapita_v131; assert_in_delta(0, (worksheet.costpercapita_v131||0), 0.001); end
  def test_costpercapita_v132; assert_in_epsilon(59.83100709504404, worksheet.costpercapita_v132, 0.001); end
  def test_costpercapita_v133; assert_in_epsilon(12.439128527769103, worksheet.costpercapita_v133, 0.001); end
  def test_costpercapita_v134; assert_in_delta(0, (worksheet.costpercapita_v134||0), 0.001); end
  def test_costpercapita_v135; assert_in_epsilon(309.1813056012337, worksheet.costpercapita_v135, 0.001); end
  def test_costpercapita_v137; assert_in_epsilon(5.179192023449703, worksheet.costpercapita_v137, 0.001); end
  def test_costpercapita_v140; assert_in_epsilon(199.00600691860998, worksheet.costpercapita_v140, 0.001); end
  def test_costpercapita_v141; assert_in_epsilon(132.53437605686142, worksheet.costpercapita_v141, 0.001); end
  def test_costpercapita_v142; assert_in_epsilon(305.92764166332876, worksheet.costpercapita_v142, 0.001); end
  def test_costpercapita_v143; assert_in_epsilon(253.8810879531566, worksheet.costpercapita_v143, 0.001); end
  def test_costpercapita_v144; assert_in_delta(0, (worksheet.costpercapita_v144||0), 0.001); end
  def test_costpercapita_v145; assert_in_epsilon(44.186046511627914, worksheet.costpercapita_v145, 0.001); end
  def test_costpercapita_v146; assert_in_epsilon(235.4230356344633, worksheet.costpercapita_v146, 0.001); end
  def test_costpercapita_v147; assert_in_epsilon(1.5453365882608028, worksheet.costpercapita_v147, 0.001); end
  def test_costpercapita_v148; assert_in_epsilon(74.15265131149711, worksheet.costpercapita_v148, 0.001); end
  def test_costpercapita_v149; assert_in_epsilon(230.55154071212598, worksheet.costpercapita_v149, 0.001); end
  def test_costpercapita_v150; assert_in_epsilon(32.60095997722088, worksheet.costpercapita_v150, 0.001); end
  def test_costpercapita_v151; assert_in_delta(0, (worksheet.costpercapita_v151||0), 0.001); end
  def test_costpercapita_v152; assert_in_epsilon(9.215535728368746, worksheet.costpercapita_v152, 0.001); end
  def test_costpercapita_v156; assert_in_delta(0.004481280183863448, worksheet.costpercapita_v156, 0.001); end
  def test_costpercapita_v160; assert_in_delta(0.23687359720148812, worksheet.costpercapita_v160, 0.001); end
  def test_costpercapita_v161; assert_in_delta(0.7869947279757448, worksheet.costpercapita_v161, 0.001); end
  def test_costpercapita_v197; assert_in_epsilon(2787.108753805802, worksheet.costpercapita_v197, 0.001); end
  def test_costpercapita_w112; assert_in_delta(0, (worksheet.costpercapita_w112||0), 0.001); end
  def test_costpercapita_w113; assert_in_epsilon(3.432761749418212, worksheet.costpercapita_w113, 0.001); end
  def test_costpercapita_w114; assert_in_delta(0, (worksheet.costpercapita_w114||0), 0.001); end
  def test_costpercapita_w115; assert_in_delta(0.03262165471279304, worksheet.costpercapita_w115, 0.001); end
  def test_costpercapita_w116; assert_in_epsilon(278.683996348823, worksheet.costpercapita_w116, 0.001); end
  def test_costpercapita_w117; assert_in_epsilon(5.1413290541362295, worksheet.costpercapita_w117, 0.001); end
  def test_costpercapita_w118; assert_in_epsilon(111.18314298308005, worksheet.costpercapita_w118, 0.001); end
  def test_costpercapita_w119; assert_in_epsilon(10.079505288504157, worksheet.costpercapita_w119, 0.001); end
  def test_costpercapita_w120; assert_in_epsilon(184.921156455761, worksheet.costpercapita_w120, 0.001); end
  def test_costpercapita_w121; assert_in_delta(0, (worksheet.costpercapita_w121||0), 0.001); end
  def test_costpercapita_w123; assert_in_epsilon(256.15087843925494, worksheet.costpercapita_w123, 0.001); end
  def test_costpercapita_w126; assert_in_delta(4.073966661552892e-08, worksheet.costpercapita_w126, 0.001); end
  def test_costpercapita_w127; assert_in_epsilon(3.971846071513934, worksheet.costpercapita_w127, 0.001); end
  def test_costpercapita_w128; assert_in_epsilon(102.58153672684578, worksheet.costpercapita_w128, 0.001); end
  def test_costpercapita_w130; assert_in_delta(0, (worksheet.costpercapita_w130||0), 0.001); end
  def test_costpercapita_w131; assert_in_delta(0, (worksheet.costpercapita_w131||0), 0.001); end
  def test_costpercapita_w132; assert_in_epsilon(64.01484322238383, worksheet.costpercapita_w132, 0.001); end
  def test_costpercapita_w133; assert_in_epsilon(12.206992804723459, worksheet.costpercapita_w133, 0.001); end
  def test_costpercapita_w134; assert_in_delta(0, (worksheet.costpercapita_w134||0), 0.001); end
  def test_costpercapita_w135; assert_in_epsilon(346.7008547008548, worksheet.costpercapita_w135, 0.001); end
  def test_costpercapita_w137; assert_in_epsilon(2.9335007339018424, worksheet.costpercapita_w137, 0.001); end
  def test_costpercapita_w140; assert_in_epsilon(203.82925186785354, worksheet.costpercapita_w140, 0.001); end
  def test_costpercapita_w141; assert_in_epsilon(82.74287272823247, worksheet.costpercapita_w141, 0.001); end
  def test_costpercapita_w142; assert_in_epsilon(278.4738554729904, worksheet.costpercapita_w142, 0.001); end
  def test_costpercapita_w143; assert_in_epsilon(284.1386391595339, worksheet.costpercapita_w143, 0.001); end
  def test_costpercapita_w144; assert_in_delta(0, (worksheet.costpercapita_w144||0), 0.001); end
  def test_costpercapita_w145; assert_in_epsilon(49.99999999999999, worksheet.costpercapita_w145, 0.001); end
  def test_costpercapita_w146; assert_in_epsilon(244.66269767441864, worksheet.costpercapita_w146, 0.001); end
  def test_costpercapita_w147; assert_in_epsilon(1.3063871835388368, worksheet.costpercapita_w147, 0.001); end
  def test_costpercapita_w148; assert_in_epsilon(71.14429454732549, worksheet.costpercapita_w148, 0.001); end
  def test_costpercapita_w149; assert_in_epsilon(159.1471315602158, worksheet.costpercapita_w149, 0.001); end
  def test_costpercapita_w150; assert_in_epsilon(37.78259474072222, worksheet.costpercapita_w150, 0.001); end
  def test_costpercapita_w151; assert_in_delta(0, (worksheet.costpercapita_w151||0), 0.001); end
  def test_costpercapita_w152; assert_in_epsilon(8.920240132730443, worksheet.costpercapita_w152, 0.001); end
  def test_costpercapita_w156; assert_in_delta(0, (worksheet.costpercapita_w156||0), 0.001); end
  def test_costpercapita_w160; assert_in_delta(0.23526073124228633, worksheet.costpercapita_w160, 0.001); end
  def test_costpercapita_w161; assert_in_epsilon(1.1071049217221471, worksheet.costpercapita_w161, 0.001); end
  def test_costpercapita_w197; assert_in_epsilon(2805.5252969951794, worksheet.costpercapita_w197, 0.001); end
  def test_costpercapita_y114; assert_in_epsilon(2.6735560562468708, worksheet.costpercapita_y114, 0.001); end
  def test_costpercapita_y124; assert_in_epsilon(5.849332075368716, worksheet.costpercapita_y124, 0.001); end
  def test_costpercapita_y125; assert_in_epsilon(9.417819769846528, worksheet.costpercapita_y125, 0.001); end
  def test_costpercapita_y129; assert_in_delta(0, (worksheet.costpercapita_y129||0), 0.001); end
  def test_costpercapita_y131; assert_in_delta(-1.571309941864344e-13, worksheet.costpercapita_y131, 0.001); end
  def test_costpercapita_y153; assert_in_epsilon(16.56242208548784, worksheet.costpercapita_y153, 0.001); end
  def test_costpercapita_y154; assert_in_epsilon(407.9280784216838, worksheet.costpercapita_y154, 0.001); end
  def test_costpercapita_y155; assert_in_epsilon(151.2771269277196, worksheet.costpercapita_y155, 0.001); end
  def test_costpercapita_y157; assert_in_epsilon(37.55568640361976, worksheet.costpercapita_y157, 0.001); end
  def test_costpercapita_y158; assert_in_epsilon(25.305851963681697, worksheet.costpercapita_y158, 0.001); end
  def test_costpercapita_y159; assert_in_epsilon(57.913740413014594, worksheet.costpercapita_y159, 0.001); end
  def test_costpercapita_y197; assert_in_epsilon(714.4836141166693, worksheet.costpercapita_y197, 0.001); end
  def test_costpercapita_z114; assert_in_epsilon(2.1717321025222884, worksheet.costpercapita_z114, 0.001); end
  def test_costpercapita_z124; assert_in_epsilon(4.949393701972193, worksheet.costpercapita_z124, 0.001); end
  def test_costpercapita_z125; assert_in_epsilon(30.072587714581413, worksheet.costpercapita_z125, 0.001); end
  def test_costpercapita_z129; assert_in_delta(0, (worksheet.costpercapita_z129||0), 0.001); end
  def test_costpercapita_z131; assert_in_delta(-1.519495887716513e-13, worksheet.costpercapita_z131, 0.001); end
  def test_costpercapita_z153; assert_in_epsilon(18.685654248629497, worksheet.costpercapita_z153, 0.001); end
  def test_costpercapita_z154; assert_in_epsilon(403.23585682698973, worksheet.costpercapita_z154, 0.001); end
  def test_costpercapita_z155; assert_in_epsilon(148.07770551122937, worksheet.costpercapita_z155, 0.001); end
  def test_costpercapita_z157; assert_in_epsilon(30.844154871657018, worksheet.costpercapita_z157, 0.001); end
  def test_costpercapita_z158; assert_in_epsilon(66.11728151372989, worksheet.costpercapita_z158, 0.001); end
  def test_costpercapita_z159; assert_in_epsilon(79.43438417869316, worksheet.costpercapita_z159, 0.001); end
  def test_costpercapita_z197; assert_in_epsilon(783.5887506700043, worksheet.costpercapita_z197, 0.001); end
  def test_costpercapita_aa114; assert_in_epsilon(1.2003620629822087, worksheet.costpercapita_aa114, 0.001); end
  def test_costpercapita_aa124; assert_in_epsilon(4.1034511768581625, worksheet.costpercapita_aa124, 0.001); end
  def test_costpercapita_aa125; assert_in_epsilon(58.86154306202831, worksheet.costpercapita_aa125, 0.001); end
  def test_costpercapita_aa129; assert_in_delta(0.011821283924247455, worksheet.costpercapita_aa129, 0.001); end
  def test_costpercapita_aa131; assert_in_delta(-2.9395008054810466e-13, worksheet.costpercapita_aa131, 0.001); end
  def test_costpercapita_aa153; assert_in_epsilon(20.65590912986651, worksheet.costpercapita_aa153, 0.001); end
  def test_costpercapita_aa154; assert_in_epsilon(366.58283373821, worksheet.costpercapita_aa154, 0.001); end
  def test_costpercapita_aa155; assert_in_epsilon(137.36957684062, worksheet.costpercapita_aa155, 0.001); end
  def test_costpercapita_aa157; assert_in_epsilon(16.508830359901502, worksheet.costpercapita_aa157, 0.001); end
  def test_costpercapita_aa158; assert_in_epsilon(103.1854955707491, worksheet.costpercapita_aa158, 0.001); end
  def test_costpercapita_aa159; assert_in_epsilon(65.497573450456, worksheet.costpercapita_aa159, 0.001); end
  def test_costpercapita_aa197; assert_in_epsilon(773.9773966755957, worksheet.costpercapita_aa197, 0.001); end
  def test_costpercapita_ab114; assert_in_delta(0.38773156085068894, worksheet.costpercapita_ab114, 0.001); end
  def test_costpercapita_ab124; assert_in_epsilon(3.3136617249569666, worksheet.costpercapita_ab124, 0.001); end
  def test_costpercapita_ab125; assert_in_epsilon(82.74618352727458, worksheet.costpercapita_ab125, 0.001); end
  def test_costpercapita_ab129; assert_in_delta(0.763683726528361, worksheet.costpercapita_ab129, 0.001); end
  def test_costpercapita_ab131; assert_in_delta(0, (worksheet.costpercapita_ab131||0), 0.001); end
  def test_costpercapita_ab153; assert_in_epsilon(22.51837171017997, worksheet.costpercapita_ab153, 0.001); end
  def test_costpercapita_ab154; assert_in_epsilon(322.86537140717735, worksheet.costpercapita_ab154, 0.001); end
  def test_costpercapita_ab155; assert_in_epsilon(123.03103814107529, worksheet.costpercapita_ab155, 0.001); end
  def test_costpercapita_ab157; assert_in_epsilon(-5.939959649853833, worksheet.costpercapita_ab157, 0.001); end
  def test_costpercapita_ab158; assert_in_epsilon(90.83932630665234, worksheet.costpercapita_ab158, 0.001); end
  def test_costpercapita_ab159; assert_in_epsilon(37.78718121737819, worksheet.costpercapita_ab159, 0.001); end
  def test_costpercapita_ab197; assert_in_epsilon(678.3125896722198, worksheet.costpercapita_ab197, 0.001); end
  def test_costpercapita_ac114; assert_in_delta(0.37713867524794414, worksheet.costpercapita_ac114, 0.001); end
  def test_costpercapita_ac124; assert_in_epsilon(2.5785055834571837, worksheet.costpercapita_ac124, 0.001); end
  def test_costpercapita_ac125; assert_in_epsilon(108.98697165817613, worksheet.costpercapita_ac125, 0.001); end
  def test_costpercapita_ac129; assert_in_epsilon(3.7140988510119057, worksheet.costpercapita_ac129, 0.001); end
  def test_costpercapita_ac131; assert_in_epsilon(-149.44276043140928, worksheet.costpercapita_ac131, 0.001); end
  def test_costpercapita_ac153; assert_in_epsilon(12.16842574865352, worksheet.costpercapita_ac153, 0.001); end
  def test_costpercapita_ac154; assert_in_epsilon(279.12363862554867, worksheet.costpercapita_ac154, 0.001); end
  def test_costpercapita_ac155; assert_in_epsilon(107.67234745556414, worksheet.costpercapita_ac155, 0.001); end
  def test_costpercapita_ac157; assert_in_epsilon(-10.709914275552226, worksheet.costpercapita_ac157, 0.001); end
  def test_costpercapita_ac158; assert_in_epsilon(63.58179926432008, worksheet.costpercapita_ac158, 0.001); end
  def test_costpercapita_ac159; assert_in_epsilon(7.204366147041324, worksheet.costpercapita_ac159, 0.001); end
  def test_costpercapita_ac197; assert_in_epsilon(425.2546173020593, worksheet.costpercapita_ac197, 0.001); end
  def test_costpercapita_ad114; assert_in_delta(0, (worksheet.costpercapita_ad114||0), 0.001); end
  def test_costpercapita_ad124; assert_in_epsilon(1.8883253177050265, worksheet.costpercapita_ad124, 0.001); end
  def test_costpercapita_ad125; assert_in_epsilon(133.70728413086456, worksheet.costpercapita_ad125, 0.001); end
  def test_costpercapita_ad129; assert_in_epsilon(7.253221336493713, worksheet.costpercapita_ad129, 0.001); end
  def test_costpercapita_ad131; assert_in_epsilon(-379.21984696185353, worksheet.costpercapita_ad131, 0.001); end
  def test_costpercapita_ad153; assert_in_epsilon(11.881790013158467, worksheet.costpercapita_ad153, 0.001); end
  def test_costpercapita_ad154; assert_in_epsilon(210.892978617878, worksheet.costpercapita_ad154, 0.001); end
  def test_costpercapita_ad155; assert_in_epsilon(81.35227163667624, worksheet.costpercapita_ad155, 0.001); end
  def test_costpercapita_ad157; assert_in_epsilon(-10.174502789216543, worksheet.costpercapita_ad157, 0.001); end
  def test_costpercapita_ad158; assert_in_epsilon(63.95545262739851, worksheet.costpercapita_ad158, 0.001); end
  def test_costpercapita_ad159; assert_in_delta(0.2147953806831896, worksheet.costpercapita_ad159, 0.001); end
  def test_costpercapita_ad197; assert_in_epsilon(121.75176930978768, worksheet.costpercapita_ad197, 0.001); end
  def test_costpercapita_ae114; assert_in_delta(0, (worksheet.costpercapita_ae114||0), 0.001); end
  def test_costpercapita_ae124; assert_in_epsilon(1.2320361083973466, worksheet.costpercapita_ae124, 0.001); end
  def test_costpercapita_ae125; assert_in_epsilon(162.21364451085662, worksheet.costpercapita_ae125, 0.001); end
  def test_costpercapita_ae129; assert_in_epsilon(14.197072673291725, worksheet.costpercapita_ae129, 0.001); end
  def test_costpercapita_ae131; assert_in_epsilon(-475.7106920214553, worksheet.costpercapita_ae131, 0.001); end
  def test_costpercapita_ae153; assert_in_epsilon(11.628394369883353, worksheet.costpercapita_ae153, 0.001); end
  def test_costpercapita_ae154; assert_in_epsilon(159.70482107536617, worksheet.costpercapita_ae154, 0.001); end
  def test_costpercapita_ae155; assert_in_epsilon(61.60636580201707, worksheet.costpercapita_ae155, 0.001); end
  def test_costpercapita_ae157; assert_in_epsilon(-10.950609435613993, worksheet.costpercapita_ae157, 0.001); end
  def test_costpercapita_ae158; assert_in_epsilon(50.35793225157396, worksheet.costpercapita_ae158, 0.001); end
  def test_costpercapita_ae159; assert_in_epsilon(-11.216764065287494, worksheet.costpercapita_ae159, 0.001); end
  def test_costpercapita_ae197; assert_in_epsilon(-36.93779873097054, worksheet.costpercapita_ae197, 0.001); end
  def test_costpercapita_af114; assert_in_delta(0, (worksheet.costpercapita_af114||0), 0.001); end
  def test_costpercapita_af124; assert_in_delta(0.6037297720296557, worksheet.costpercapita_af124, 0.001); end
  def test_costpercapita_af125; assert_in_epsilon(193.4835160033097, worksheet.costpercapita_af125, 0.001); end
  def test_costpercapita_af129; assert_in_epsilon(34.784676317987234, worksheet.costpercapita_af129, 0.001); end
  def test_costpercapita_af131; assert_in_epsilon(-551.0112942294445, worksheet.costpercapita_af131, 0.001); end
  def test_costpercapita_af153; assert_in_epsilon(11.39643202687115, worksheet.costpercapita_af153, 0.001); end
  def test_costpercapita_af154; assert_in_epsilon(121.11145045492978, worksheet.costpercapita_af154, 0.001); end
  def test_costpercapita_af155; assert_in_epsilon(46.71891724557404, worksheet.costpercapita_af155, 0.001); end
  def test_costpercapita_af157; assert_in_epsilon(-12.457111323972118, worksheet.costpercapita_af157, 0.001); end
  def test_costpercapita_af158; assert_in_epsilon(21.72836668641221, worksheet.costpercapita_af158, 0.001); end
  def test_costpercapita_af159; assert_in_epsilon(-25.24877240887084, worksheet.costpercapita_af159, 0.001); end
  def test_costpercapita_af197; assert_in_epsilon(-158.89008945517372, worksheet.costpercapita_af197, 0.001); end
  def test_costpercapita_ag114; assert_in_delta(0, (worksheet.costpercapita_ag114||0), 0.001); end
  def test_costpercapita_ag124; assert_in_delta(0, (worksheet.costpercapita_ag124||0), 0.001); end
  def test_costpercapita_ag125; assert_in_epsilon(226.72786194028453, worksheet.costpercapita_ag125, 0.001); end
  def test_costpercapita_ag129; assert_in_epsilon(80.01492033746342, worksheet.costpercapita_ag129, 0.001); end
  def test_costpercapita_ag131; assert_in_epsilon(-578.0540705961951, worksheet.costpercapita_ag131, 0.001); end
  def test_costpercapita_ag153; assert_in_epsilon(11.183754829847869, worksheet.costpercapita_ag153, 0.001); end
  def test_costpercapita_ag154; assert_in_epsilon(91.96487082730361, worksheet.costpercapita_ag154, 0.001); end
  def test_costpercapita_ag155; assert_in_epsilon(35.47558198289116, worksheet.costpercapita_ag155, 0.001); end
  def test_costpercapita_ag157; assert_in_epsilon(-12.126678611843047, worksheet.costpercapita_ag157, 0.001); end
  def test_costpercapita_ag158; assert_in_epsilon(-13.72216679045791, worksheet.costpercapita_ag158, 0.001); end
  def test_costpercapita_ag159; assert_in_epsilon(-35.47558198289116, worksheet.costpercapita_ag159, 0.001); end
  def test_costpercapita_ag197; assert_in_epsilon(-194.01150806359658, worksheet.costpercapita_ag197, 0.001); end
  def test_costpercapita_ai197; assert_in_epsilon(4896.332570710142, worksheet.costpercapita_ai197, 0.001); end
  def test_costpercapita_aj197; assert_in_epsilon(5187.203941692864, worksheet.costpercapita_aj197, 0.001); end
  def test_costpercapita_ak197; assert_in_epsilon(5819.449154874252, worksheet.costpercapita_ak197, 0.001); end
  def test_costpercapita_al197; assert_in_epsilon(6550.5010248554245, worksheet.costpercapita_al197, 0.001); end
  def test_costpercapita_am197; assert_in_epsilon(6777.388069778627, worksheet.costpercapita_am197, 0.001); end
  def test_costpercapita_an197; assert_in_epsilon(6764.685981048584, worksheet.costpercapita_an197, 0.001); end
  def test_costpercapita_ao197; assert_in_epsilon(7099.718190535378, worksheet.costpercapita_ao197, 0.001); end
  def test_costpercapita_ap197; assert_in_epsilon(7911.847075035365, worksheet.costpercapita_ap197, 0.001); end
  def test_costpercapita_aq197; assert_in_epsilon(8135.347623567198, worksheet.costpercapita_aq197, 0.001); end
  def test_costpercapita_as112; assert_in_epsilon(29.416991357186443, worksheet.costpercapita_as112, 0.001); end
  def test_costpercapita_as113; assert_in_epsilon(5.067166015582137, worksheet.costpercapita_as113, 0.001); end
  def test_costpercapita_as114; assert_in_epsilon(6.8716031656694145, worksheet.costpercapita_as114, 0.001); end
  def test_costpercapita_as115; assert_in_epsilon(13.005094690052978, worksheet.costpercapita_as115, 0.001); end
  def test_costpercapita_as116; assert_in_epsilon(399.6466540152676, worksheet.costpercapita_as116, 0.001); end
  def test_costpercapita_as117; assert_in_epsilon(8.302016889565884, worksheet.costpercapita_as117, 0.001); end
  def test_costpercapita_as118; assert_in_epsilon(79.05612968097181, worksheet.costpercapita_as118, 0.001); end
  def test_costpercapita_as119; assert_in_epsilon(15.873745853821204, worksheet.costpercapita_as119, 0.001); end
  def test_costpercapita_as120; assert_in_epsilon(735.9299950723639, worksheet.costpercapita_as120, 0.001); end
  def test_costpercapita_as121; assert_in_epsilon(320.8612540228634, worksheet.costpercapita_as121, 0.001); end
  def test_costpercapita_as122; assert_in_epsilon(5.178944284452791, worksheet.costpercapita_as122, 0.001); end
  def test_costpercapita_as123; assert_in_epsilon(208.80744533131752, worksheet.costpercapita_as123, 0.001); end
  def test_costpercapita_as124; assert_in_epsilon(2.7242706067494717, worksheet.costpercapita_as124, 0.001); end
  def test_costpercapita_as125; assert_in_epsilon(111.8019347019136, worksheet.costpercapita_as125, 0.001); end
  def test_costpercapita_as126; assert_in_delta(3.118946460832625e-08, worksheet.costpercapita_as126, 0.001); end
  def test_costpercapita_as127; assert_in_epsilon(7.82293930300684, worksheet.costpercapita_as127, 0.001); end
  def test_costpercapita_as128; assert_in_epsilon(162.491429838519, worksheet.costpercapita_as128, 0.001); end
  def test_costpercapita_as129; assert_in_epsilon(15.637721614077845, worksheet.costpercapita_as129, 0.001); end
  def test_costpercapita_as130; assert_in_delta(0, (worksheet.costpercapita_as130||0), 0.001); end
  def test_costpercapita_as131; assert_in_epsilon(-237.04874047115092, worksheet.costpercapita_as131, 0.001); end
  def test_costpercapita_as132; assert_in_epsilon(478.11770290708904, worksheet.costpercapita_as132, 0.001); end
  def test_costpercapita_as133; assert_in_epsilon(44.689396172178114, worksheet.costpercapita_as133, 0.001); end
  def test_costpercapita_as134; assert_in_delta(0, (worksheet.costpercapita_as134||0), 0.001); end
  def test_costpercapita_as135; assert_in_epsilon(636.9271144129784, worksheet.costpercapita_as135, 0.001); end
  def test_costpercapita_as136; assert_in_epsilon(299.65334673265266, worksheet.costpercapita_as136, 0.001); end
  def test_costpercapita_as137; assert_in_epsilon(64.05115581677484, worksheet.costpercapita_as137, 0.001); end
  def test_costpercapita_as138; assert_in_epsilon(54.44527282953017, worksheet.costpercapita_as138, 0.001); end
  def test_costpercapita_as139; assert_in_epsilon(8.029723900718718, worksheet.costpercapita_as139, 0.001); end
  def test_costpercapita_as140; assert_in_epsilon(195.70187445009802, worksheet.costpercapita_as140, 0.001); end
  def test_costpercapita_as141; assert_in_epsilon(736.9577264851833, worksheet.costpercapita_as141, 0.001); end
  def test_costpercapita_as142; assert_in_epsilon(601.5911059688574, worksheet.costpercapita_as142, 0.001); end
  def test_costpercapita_as143; assert_in_epsilon(512.7376335511781, worksheet.costpercapita_as143, 0.001); end
  def test_costpercapita_as144; assert_in_delta(0, (worksheet.costpercapita_as144||0), 0.001); end
  def test_costpercapita_as145; assert_in_epsilon(78.16506440544849, worksheet.costpercapita_as145, 0.001); end
  def test_costpercapita_as146; assert_in_epsilon(202.25446651463713, worksheet.costpercapita_as146, 0.001); end
  def test_costpercapita_as147; assert_in_epsilon(4.0338785285459595, worksheet.costpercapita_as147, 0.001); end
  def test_costpercapita_as148; assert_in_epsilon(156.86691146607353, worksheet.costpercapita_as148, 0.001); end
  def test_costpercapita_as149; assert_in_epsilon(101.0471638138306, worksheet.costpercapita_as149, 0.001); end
  def test_costpercapita_as150; assert_in_epsilon(18.064825489879357, worksheet.costpercapita_as150, 0.001); end
  def test_costpercapita_as151; assert_in_delta(0, (worksheet.costpercapita_as151||0), 0.001); end
  def test_costpercapita_as152; assert_in_epsilon(18.132226583626345, worksheet.costpercapita_as152, 0.001); end
  def test_costpercapita_as153; assert_in_epsilon(15.18679490695313, worksheet.costpercapita_as153, 0.001); end
  def test_costpercapita_as154; assert_in_epsilon(262.6010999994541, worksheet.costpercapita_as154, 0.001); end
  def test_costpercapita_as155; assert_in_epsilon(99.17565906037412, worksheet.costpercapita_as155, 0.001); end
  def test_costpercapita_as156; assert_in_epsilon(9.428516450824437, worksheet.costpercapita_as156, 0.001); end
  def test_costpercapita_as157; assert_in_epsilon(2.5055439499029464, worksheet.costpercapita_as157, 0.001); end
  def test_costpercapita_as158; assert_in_epsilon(52.37214882156221, worksheet.costpercapita_as158, 0.001); end
  def test_costpercapita_as159; assert_in_epsilon(19.567880258912997, worksheet.costpercapita_as159, 0.001); end
  def test_costpercapita_as160; assert_in_epsilon(1.2851376703558133, worksheet.costpercapita_as160, 0.001); end
  def test_costpercapita_as161; assert_in_epsilon(6.349991970941546, worksheet.costpercapita_as161, 0.001); end
  def test_costpercapita_as197; assert_in_epsilon(6571.385959121981, worksheet.costpercapita_as197, 0.001); end
  def test_costpercapita_ay112; assert_in_delta(0, (worksheet.costpercapita_ay112||0), 0.001); end
  def test_costpercapita_ay113; assert_in_delta(0, (worksheet.costpercapita_ay113||0), 0.001); end
  def test_costpercapita_ay114; assert_in_delta(0, (worksheet.costpercapita_ay114||0), 0.001); end
  def test_costpercapita_ay115; assert_in_epsilon(6.453649313453831, worksheet.costpercapita_ay115, 0.001); end
  def test_costpercapita_ay116; assert_in_epsilon(7.668371273784396, worksheet.costpercapita_ay116, 0.001); end
  def test_costpercapita_ay117; assert_in_epsilon(4.975829876472337, worksheet.costpercapita_ay117, 0.001); end
  def test_costpercapita_ay118; assert_in_delta(0.01914539333650815, worksheet.costpercapita_ay118, 0.001); end
  def test_costpercapita_ay119; assert_in_delta(0, (worksheet.costpercapita_ay119||0), 0.001); end
  def test_costpercapita_ay120; assert_in_epsilon(125.49209534208538, worksheet.costpercapita_ay120, 0.001); end
  def test_costpercapita_ay121; assert_in_epsilon(11.475952427464382, worksheet.costpercapita_ay121, 0.001); end
  def test_costpercapita_ay122; assert_in_delta(0.7967489215340879, worksheet.costpercapita_ay122, 0.001); end
  def test_costpercapita_ay123; assert_in_epsilon(22.283922780241593, worksheet.costpercapita_ay123, 0.001); end
  def test_costpercapita_ay127; assert_in_epsilon(1.1786496105910613, worksheet.costpercapita_ay127, 0.001); end
  def test_costpercapita_ay128; assert_in_epsilon(19.56260168708007, worksheet.costpercapita_ay128, 0.001); end
  def test_costpercapita_ay130; assert_in_delta(0, (worksheet.costpercapita_ay130||0), 0.001); end
  def test_costpercapita_ay131; assert_in_delta(0, (worksheet.costpercapita_ay131||0), 0.001); end
  def test_costpercapita_ay132; assert_in_epsilon(71.32354342447164, worksheet.costpercapita_ay132, 0.001); end
  def test_costpercapita_ay133; assert_in_delta(0, (worksheet.costpercapita_ay133||0), 0.001); end
  def test_costpercapita_ay134; assert_in_delta(0, (worksheet.costpercapita_ay134||0), 0.001); end
  def test_costpercapita_ay136; assert_in_epsilon(132.29068474029276, worksheet.costpercapita_ay136, 0.001); end
  def test_costpercapita_ay137; assert_in_epsilon(15.715310484574742, worksheet.costpercapita_ay137, 0.001); end
  def test_costpercapita_ay138; assert_in_epsilon(21.258492804422662, worksheet.costpercapita_ay138, 0.001); end
  def test_costpercapita_ay139; assert_in_epsilon(1.6333140886172413, worksheet.costpercapita_ay139, 0.001); end
  def test_costpercapita_ay140; assert_in_delta(0.6724127320610676, worksheet.costpercapita_ay140, 0.001); end
  def test_costpercapita_ay141; assert_in_epsilon(337.4987181835316, worksheet.costpercapita_ay141, 0.001); end
  def test_costpercapita_ay142; assert_in_delta(0.6093915941317307, worksheet.costpercapita_ay142, 0.001); end
  def test_costpercapita_ay143; assert_in_delta(0, (worksheet.costpercapita_ay143||0), 0.001); end
  def test_costpercapita_ay144; assert_in_delta(0, (worksheet.costpercapita_ay144||0), 0.001); end
  def test_costpercapita_ay146; assert_in_delta(0.7924946447495341, worksheet.costpercapita_ay146, 0.001); end
  def test_costpercapita_ay147; assert_in_delta(0.9864431291958278, worksheet.costpercapita_ay147, 0.001); end
  def test_costpercapita_ay148; assert_in_epsilon(25.59841002220286, worksheet.costpercapita_ay148, 0.001); end
  def test_costpercapita_ay151; assert_in_delta(0, (worksheet.costpercapita_ay151||0), 0.001); end
  def test_costpercapita_ay152; assert_in_epsilon(3.7475956119762635, worksheet.costpercapita_ay152, 0.001); end
  def test_costpercapita_ay156; assert_in_epsilon(13.682159653191158, worksheet.costpercapita_ay156, 0.001); end
  def test_costpercapita_ay160; assert_in_delta(0.3585495938930806, worksheet.costpercapita_ay160, 0.001); end
  def test_costpercapita_ay161; assert_in_delta(0, (worksheet.costpercapita_ay161||0), 0.001); end
  def test_costpercapita_ay197; assert_in_epsilon(903.6908066943245, worksheet.costpercapita_ay197, 0.001); end
  def test_costpercapita_az112; assert_in_epsilon(2.2635261916212843, worksheet.costpercapita_az112, 0.001); end
  def test_costpercapita_az113; assert_in_epsilon(3.9041038596739446, worksheet.costpercapita_az113, 0.001); end
  def test_costpercapita_az114; assert_in_delta(0, (worksheet.costpercapita_az114||0), 0.001); end
  def test_costpercapita_az115; assert_in_epsilon(9.327342063128821, worksheet.costpercapita_az115, 0.001); end
  def test_costpercapita_az116; assert_in_epsilon(45.58584863993009, worksheet.costpercapita_az116, 0.001); end
  def test_costpercapita_az117; assert_in_epsilon(1.567345779060014, worksheet.costpercapita_az117, 0.001); end
  def test_costpercapita_az118; assert_in_delta(0.5058552789378145, worksheet.costpercapita_az118, 0.001); end
  def test_costpercapita_az119; assert_in_delta(0.17468233474248515, worksheet.costpercapita_az119, 0.001); end
  def test_costpercapita_az120; assert_in_epsilon(202.25664134620246, worksheet.costpercapita_az120, 0.001); end
  def test_costpercapita_az121; assert_in_epsilon(51.004233010952795, worksheet.costpercapita_az121, 0.001); end
  def test_costpercapita_az122; assert_in_epsilon(15.24097977295689, worksheet.costpercapita_az122, 0.001); end
  def test_costpercapita_az123; assert_in_epsilon(42.066394142388525, worksheet.costpercapita_az123, 0.001); end
  def test_costpercapita_az127; assert_in_epsilon(2.4181061738089498, worksheet.costpercapita_az127, 0.001); end
  def test_costpercapita_az128; assert_in_epsilon(33.03744745074184, worksheet.costpercapita_az128, 0.001); end
  def test_costpercapita_az130; assert_in_delta(0, (worksheet.costpercapita_az130||0), 0.001); end
  def test_costpercapita_az131; assert_in_delta(0, (worksheet.costpercapita_az131||0), 0.001); end
  def test_costpercapita_az132; assert_in_epsilon(152.62410838787758, worksheet.costpercapita_az132, 0.001); end
  def test_costpercapita_az133; assert_in_epsilon(2.3998442213496234, worksheet.costpercapita_az133, 0.001); end
  def test_costpercapita_az134; assert_in_delta(0, (worksheet.costpercapita_az134||0), 0.001); end
  def test_costpercapita_az135; assert_in_epsilon(71.02544901510412, worksheet.costpercapita_az135, 0.001); end
  def test_costpercapita_az136; assert_in_epsilon(214.81206979229327, worksheet.costpercapita_az136, 0.001); end
  def test_costpercapita_az137; assert_in_epsilon(36.25792964540873, worksheet.costpercapita_az137, 0.001); end
  def test_costpercapita_az138; assert_in_epsilon(36.322122166401606, worksheet.costpercapita_az138, 0.001); end
  def test_costpercapita_az139; assert_in_epsilon(7.556332597424752, worksheet.costpercapita_az139, 0.001); end
  def test_costpercapita_az140; assert_in_epsilon(1.1013353505779848, worksheet.costpercapita_az140, 0.001); end
  def test_costpercapita_az141; assert_in_epsilon(496.4366200010112, worksheet.costpercapita_az141, 0.001); end
  def test_costpercapita_az142; assert_in_epsilon(29.364619469216343, worksheet.costpercapita_az142, 0.001); end
  def test_costpercapita_az143; assert_in_epsilon(40.3154351723195, worksheet.costpercapita_az143, 0.001); end
  def test_costpercapita_az144; assert_in_delta(0, (worksheet.costpercapita_az144||0), 0.001); end
  def test_costpercapita_az145; assert_in_epsilon(28.243963093518598, worksheet.costpercapita_az145, 0.001); end
  def test_costpercapita_az146; assert_in_epsilon(1.4217064443566945, worksheet.costpercapita_az146, 0.001); end
  def test_costpercapita_az147; assert_in_epsilon(1.486663991610419, worksheet.costpercapita_az147, 0.001); end
  def test_costpercapita_az148; assert_in_epsilon(62.291430329361546, worksheet.costpercapita_az148, 0.001); end
  def test_costpercapita_az151; assert_in_delta(0, (worksheet.costpercapita_az151||0), 0.001); end
  def test_costpercapita_az152; assert_in_epsilon(5.689302697603887, worksheet.costpercapita_az152, 0.001); end
  def test_costpercapita_az156; assert_in_epsilon(6.707696603626351, worksheet.costpercapita_az156, 0.001); end
  def test_costpercapita_az160; assert_in_delta(0.3375625827447776, worksheet.costpercapita_az160, 0.001); end
  def test_costpercapita_az161; assert_in_epsilon(1.6506149814073159, worksheet.costpercapita_az161, 0.001); end
  def test_costpercapita_az197; assert_in_epsilon(1605.39731258736, worksheet.costpercapita_az197, 0.001); end
  def test_costpercapita_ba112; assert_in_delta(0, (worksheet.costpercapita_ba112||0), 0.001); end
  def test_costpercapita_ba113; assert_in_epsilon(5.63054976723665, worksheet.costpercapita_ba113, 0.001); end
  def test_costpercapita_ba114; assert_in_delta(0, (worksheet.costpercapita_ba114||0), 0.001); end
  def test_costpercapita_ba115; assert_in_epsilon(9.021982135393461, worksheet.costpercapita_ba115, 0.001); end
  def test_costpercapita_ba116; assert_in_epsilon(131.3743269655345, worksheet.costpercapita_ba116, 0.001); end
  def test_costpercapita_ba117; assert_in_epsilon(1.5160337771423378, worksheet.costpercapita_ba117, 0.001); end
  def test_costpercapita_ba118; assert_in_epsilon(3.180082481315853, worksheet.costpercapita_ba118, 0.001); end
  def test_costpercapita_ba119; assert_in_epsilon(1.1827449073105027, worksheet.costpercapita_ba119, 0.001); end
  def test_costpercapita_ba120; assert_in_epsilon(195.63513299286174, worksheet.costpercapita_ba120, 0.001); end
  def test_costpercapita_ba121; assert_in_epsilon(82.8818786427983, worksheet.costpercapita_ba121, 0.001); end
  def test_costpercapita_ba122; assert_in_epsilon(9.106049208715726, worksheet.costpercapita_ba122, 0.001); end
  def test_costpercapita_ba123; assert_in_epsilon(32.208567102401084, worksheet.costpercapita_ba123, 0.001); end
  def test_costpercapita_ba127; assert_in_epsilon(2.834585713625999, worksheet.costpercapita_ba127, 0.001); end
  def test_costpercapita_ba128; assert_in_epsilon(34.89433378790974, worksheet.costpercapita_ba128, 0.001); end
  def test_costpercapita_ba130; assert_in_delta(0, (worksheet.costpercapita_ba130||0), 0.001); end
  def test_costpercapita_ba131; assert_in_delta(0, (worksheet.costpercapita_ba131||0), 0.001); end
  def test_costpercapita_ba132; assert_in_epsilon(220.23633578282616, worksheet.costpercapita_ba132, 0.001); end
  def test_costpercapita_ba133; assert_in_epsilon(16.024010192344434, worksheet.costpercapita_ba133, 0.001); end
  def test_costpercapita_ba134; assert_in_delta(0, (worksheet.costpercapita_ba134||0), 0.001); end
  def test_costpercapita_ba135; assert_in_epsilon(237.24750391254, worksheet.costpercapita_ba135, 0.001); end
  def test_costpercapita_ba136; assert_in_epsilon(206.5921705342723, worksheet.costpercapita_ba136, 0.001); end
  def test_costpercapita_ba137; assert_in_epsilon(38.108658729543386, worksheet.costpercapita_ba137, 0.001); end
  def test_costpercapita_ba138; assert_in_epsilon(36.30574692193599, worksheet.costpercapita_ba138, 0.001); end
  def test_costpercapita_ba139; assert_in_epsilon(6.8061754690884735, worksheet.costpercapita_ba139, 0.001); end
  def test_costpercapita_ba140; assert_in_epsilon(1.5069191854732888, worksheet.costpercapita_ba140, 0.001); end
  def test_costpercapita_ba141; assert_in_epsilon(444.57951715970484, worksheet.costpercapita_ba141, 0.001); end
  def test_costpercapita_ba142; assert_in_epsilon(40.22100768164298, worksheet.costpercapita_ba142, 0.001); end
  def test_costpercapita_ba143; assert_in_epsilon(52.11708379625822, worksheet.costpercapita_ba143, 0.001); end
  def test_costpercapita_ba144; assert_in_delta(0, (worksheet.costpercapita_ba144||0), 0.001); end
  def test_costpercapita_ba145; assert_in_epsilon(40.07529102992562, worksheet.costpercapita_ba145, 0.001); end
  def test_costpercapita_ba146; assert_in_epsilon(1.8277702404977132, worksheet.costpercapita_ba146, 0.001); end
  def test_costpercapita_ba147; assert_in_epsilon(1.2799390427425954, worksheet.costpercapita_ba147, 0.001); end
  def test_costpercapita_ba148; assert_in_epsilon(54.30072358349436, worksheet.costpercapita_ba148, 0.001); end
  def test_costpercapita_ba151; assert_in_delta(0, (worksheet.costpercapita_ba151||0), 0.001); end
  def test_costpercapita_ba152; assert_in_epsilon(5.214761502373702, worksheet.costpercapita_ba152, 0.001); end
  def test_costpercapita_ba156; assert_in_epsilon(6.919524535959839, worksheet.costpercapita_ba156, 0.001); end
  def test_costpercapita_ba160; assert_in_epsilon(1.1359528528767546, worksheet.costpercapita_ba160, 0.001); end
  def test_costpercapita_ba161; assert_in_epsilon(3.944105683585148, worksheet.costpercapita_ba161, 0.001); end
  def test_costpercapita_ba197; assert_in_epsilon(1923.9094653193315, worksheet.costpercapita_ba197, 0.001); end
  def test_costpercapita_bb112; assert_in_delta(0, (worksheet.costpercapita_bb112||0), 0.001); end
  def test_costpercapita_bb113; assert_in_delta(-7.126597849993065e-16, worksheet.costpercapita_bb113, 0.001); end
  def test_costpercapita_bb114; assert_in_delta(0, (worksheet.costpercapita_bb114||0), 0.001); end
  def test_costpercapita_bb115; assert_in_epsilon(8.742630219333211, worksheet.costpercapita_bb115, 0.001); end
  def test_costpercapita_bb116; assert_in_epsilon(153.64580158043745, worksheet.costpercapita_bb116, 0.001); end
  def test_costpercapita_bb117; assert_in_delta(0.734546051780474, worksheet.costpercapita_bb117, 0.001); end
  def test_costpercapita_bb118; assert_in_epsilon(3.915125633966355, worksheet.costpercapita_bb118, 0.001); end
  def test_costpercapita_bb119; assert_in_epsilon(9.168984121881598, worksheet.costpercapita_bb119, 0.001); end
  def test_costpercapita_bb120; assert_in_epsilon(189.57758949187647, worksheet.costpercapita_bb120, 0.001); end
  def test_costpercapita_bb121; assert_in_epsilon(114.75952427464382, worksheet.costpercapita_bb121, 0.001); end
  def test_costpercapita_bb122; assert_in_delta(0, (worksheet.costpercapita_bb122||0), 0.001); end
  def test_costpercapita_bb123; assert_in_epsilon(28.880361782256262, worksheet.costpercapita_bb123, 0.001); end
  def test_costpercapita_bb127; assert_in_epsilon(2.606443829084971, worksheet.costpercapita_bb127, 0.001); end
  def test_costpercapita_bb128; assert_in_epsilon(32.72731371650072, worksheet.costpercapita_bb128, 0.001); end
  def test_costpercapita_bb130; assert_in_delta(0, (worksheet.costpercapita_bb130||0), 0.001); end
  def test_costpercapita_bb131; assert_in_delta(0, (worksheet.costpercapita_bb131||0), 0.001); end
  def test_costpercapita_bb132; assert_in_epsilon(258.2385244600306, worksheet.costpercapita_bb132, 0.001); end
  def test_costpercapita_bb133; assert_in_epsilon(51.623891065623134, worksheet.costpercapita_bb133, 0.001); end
  def test_costpercapita_bb134; assert_in_delta(0, (worksheet.costpercapita_bb134||0), 0.001); end
  def test_costpercapita_bb135; assert_in_epsilon(243.06259728734256, worksheet.costpercapita_bb135, 0.001); end
  def test_costpercapita_bb136; assert_in_epsilon(163.57292470460754, worksheet.costpercapita_bb136, 0.001); end
  def test_costpercapita_bb137; assert_in_epsilon(35.817130623643756, worksheet.costpercapita_bb137, 0.001); end
  def test_costpercapita_bb138; assert_in_epsilon(36.183085706825835, worksheet.costpercapita_bb138, 0.001); end
  def test_costpercapita_bb139; assert_in_epsilon(6.16503005693665, worksheet.costpercapita_bb139, 0.001); end
  def test_costpercapita_bb140; assert_in_epsilon(1.7842119144850141, worksheet.costpercapita_bb140, 0.001); end
  def test_costpercapita_bb141; assert_in_epsilon(122.90894014281879, worksheet.costpercapita_bb141, 0.001); end
  def test_costpercapita_bb142; assert_in_epsilon(541.692527550762, worksheet.costpercapita_bb142, 0.001); end
  def test_costpercapita_bb143; assert_in_epsilon(185.8233274975959, worksheet.costpercapita_bb143, 0.001); end
  def test_costpercapita_bb144; assert_in_delta(0, (worksheet.costpercapita_bb144||0), 0.001); end
  def test_costpercapita_bb145; assert_in_epsilon(49.30010440611138, worksheet.costpercapita_bb145, 0.001); end
  def test_costpercapita_bb146; assert_in_epsilon(1.680051822418576, worksheet.costpercapita_bb146, 0.001); end
  def test_costpercapita_bb147; assert_in_epsilon(1.0676337709652046, worksheet.costpercapita_bb147, 0.001); end
  def test_costpercapita_bb148; assert_in_epsilon(50.47622690700498, worksheet.costpercapita_bb148, 0.001); end
  def test_costpercapita_bb151; assert_in_delta(0, (worksheet.costpercapita_bb151||0), 0.001); end
  def test_costpercapita_bb152; assert_in_epsilon(4.793095039548198, worksheet.costpercapita_bb152, 0.001); end
  def test_costpercapita_bb156; assert_in_epsilon(5.975253488981816, worksheet.costpercapita_bb156, 0.001); end
  def test_costpercapita_bb160; assert_in_delta(0.9989664954585645, worksheet.costpercapita_bb160, 0.001); end
  def test_costpercapita_bb161; assert_in_epsilon(3.8772740910619397, worksheet.costpercapita_bb161, 0.001); end
  def test_costpercapita_bb197; assert_in_epsilon(2309.7991177339836, worksheet.costpercapita_bb197, 0.001); end
  def test_costpercapita_bc112; assert_in_delta(0, (worksheet.costpercapita_bc112||0), 0.001); end
  def test_costpercapita_bc113; assert_in_delta(0, (worksheet.costpercapita_bc113||0), 0.001); end
  def test_costpercapita_bc114; assert_in_delta(0, (worksheet.costpercapita_bc114||0), 0.001); end
  def test_costpercapita_bc115; assert_in_delta(0, (worksheet.costpercapita_bc115||0), 0.001); end
  def test_costpercapita_bc116; assert_in_epsilon(177.91449376028766, worksheet.costpercapita_bc116, 0.001); end
  def test_costpercapita_bc117; assert_in_delta(0.7144781411894742, worksheet.costpercapita_bc117, 0.001); end
  def test_costpercapita_bc118; assert_in_epsilon(7.908480373674093, worksheet.costpercapita_bc118, 0.001); end
  def test_costpercapita_bc119; assert_in_epsilon(26.55944753290052, worksheet.costpercapita_bc119, 0.001); end
  def test_costpercapita_bc120; assert_in_epsilon(184.39830072331304, worksheet.costpercapita_bc120, 0.001); end
  def test_costpercapita_bc121; assert_in_epsilon(163.4999541403289, worksheet.costpercapita_bc121, 0.001); end
  def test_costpercapita_bc122; assert_in_delta(0, (worksheet.costpercapita_bc122||0), 0.001); end
  def test_costpercapita_bc123; assert_in_epsilon(30.40978090709177, worksheet.costpercapita_bc123, 0.001); end
  def test_costpercapita_bc127; assert_in_epsilon(2.412612062115035, worksheet.costpercapita_bc127, 0.001); end
  def test_costpercapita_bc128; assert_in_epsilon(32.137199972036136, worksheet.costpercapita_bc128, 0.001); end
  def test_costpercapita_bc130; assert_in_delta(0, (worksheet.costpercapita_bc130||0), 0.001); end
  def test_costpercapita_bc131; assert_in_delta(0, (worksheet.costpercapita_bc131||0), 0.001); end
  def test_costpercapita_bc132; assert_in_epsilon(264.31846511221926, worksheet.costpercapita_bc132, 0.001); end
  def test_costpercapita_bc133; assert_in_epsilon(42.97098112345146, worksheet.costpercapita_bc133, 0.001); end
  def test_costpercapita_bc134; assert_in_delta(0, (worksheet.costpercapita_bc134||0), 0.001); end
  def test_costpercapita_bc135; assert_in_epsilon(288.7678102285948, worksheet.costpercapita_bc135, 0.001); end
  def test_costpercapita_bc136; assert_in_epsilon(149.8934688003055, worksheet.costpercapita_bc136, 0.001); end
  def test_costpercapita_bc137; assert_in_epsilon(33.95224591898079, worksheet.costpercapita_bc137, 0.001); end
  def test_costpercapita_bc138; assert_in_epsilon(35.931268283262, worksheet.costpercapita_bc138, 0.001); end
  def test_costpercapita_bc139; assert_in_epsilon(5.62757267971041, worksheet.costpercapita_bc139, 0.001); end
  def test_costpercapita_bc140; assert_in_epsilon(2.2729821023890264, worksheet.costpercapita_bc140, 0.001); end
  def test_costpercapita_bc141; assert_in_epsilon(5.178556221453031, worksheet.costpercapita_bc141, 0.001); end
  def test_costpercapita_bc142; assert_in_epsilon(683.7288904215387, worksheet.costpercapita_bc142, 0.001); end
  def test_costpercapita_bc143; assert_in_epsilon(226.9953625365665, worksheet.costpercapita_bc143, 0.001); end
  def test_costpercapita_bc144; assert_in_delta(0, (worksheet.costpercapita_bc144||0), 0.001); end
  def test_costpercapita_bc145; assert_in_epsilon(60.53777052275827, worksheet.costpercapita_bc145, 0.001); end
  def test_costpercapita_bc146; assert_in_epsilon(1.89128281825508, worksheet.costpercapita_bc146, 0.001); end
  def test_costpercapita_bc147; assert_in_delta(0.8514102299523602, worksheet.costpercapita_bc147, 0.001); end
  def test_costpercapita_bc148; assert_in_epsilon(47.18052139537146, worksheet.costpercapita_bc148, 0.001); end
  def test_costpercapita_bc151; assert_in_delta(0, (worksheet.costpercapita_bc151||0), 0.001); end
  def test_costpercapita_bc152; assert_in_epsilon(4.464067734432658, worksheet.costpercapita_bc152, 0.001); end
  def test_costpercapita_bc156; assert_in_epsilon(4.643981278517145, worksheet.costpercapita_bc156, 0.001); end
  def test_costpercapita_bc160; assert_in_delta(0.8510237499340763, worksheet.costpercapita_bc160, 0.001); end
  def test_costpercapita_bc161; assert_in_epsilon(3.9238512066750024, worksheet.costpercapita_bc161, 0.001); end
  def test_costpercapita_bc197; assert_in_epsilon(2489.936259977304, worksheet.costpercapita_bc197, 0.001); end
  def test_costpercapita_bd112; assert_in_delta(0, (worksheet.costpercapita_bd112||0), 0.001); end
  def test_costpercapita_bd113; assert_in_delta(0, (worksheet.costpercapita_bd113||0), 0.001); end
  def test_costpercapita_bd114; assert_in_delta(0, (worksheet.costpercapita_bd114||0), 0.001); end
  def test_costpercapita_bd115; assert_in_delta(0, (worksheet.costpercapita_bd115||0), 0.001); end
  def test_costpercapita_bd116; assert_in_epsilon(173.72359406400992, worksheet.costpercapita_bd116, 0.001); end
  def test_costpercapita_bd117; assert_in_delta(0.6976481114284329, worksheet.costpercapita_bd117, 0.001); end
  def test_costpercapita_bd118; assert_in_epsilon(26.213240856527985, worksheet.costpercapita_bd118, 0.001); end
  def test_costpercapita_bd119; assert_in_delta(0, (worksheet.costpercapita_bd119||0), 0.001); end
  def test_costpercapita_bd120; assert_in_epsilon(288.22691376571464, worksheet.costpercapita_bd120, 0.001); end
  def test_costpercapita_bd121; assert_in_epsilon(223.92024848151976, worksheet.costpercapita_bd121, 0.001); end
  def test_costpercapita_bd122; assert_in_delta(0, (worksheet.costpercapita_bd122||0), 0.001); end
  def test_costpercapita_bd123; assert_in_epsilon(35.7622738474409, worksheet.costpercapita_bd123, 0.001); end
  def test_costpercapita_bd127; assert_in_epsilon(2.2068603536265363, worksheet.costpercapita_bd127, 0.001); end
  def test_costpercapita_bd128; assert_in_epsilon(31.69643119855005, worksheet.costpercapita_bd128, 0.001); end
  def test_costpercapita_bd130; assert_in_delta(0, (worksheet.costpercapita_bd130||0), 0.001); end
  def test_costpercapita_bd131; assert_in_delta(0, (worksheet.costpercapita_bd131||0), 0.001); end
  def test_costpercapita_bd132; assert_in_epsilon(296.2382900049319, worksheet.costpercapita_bd132, 0.001); end
  def test_costpercapita_bd133; assert_in_epsilon(53.31475882252346, worksheet.costpercapita_bd133, 0.001); end
  def test_costpercapita_bd134; assert_in_delta(0, (worksheet.costpercapita_bd134||0), 0.001); end
  def test_costpercapita_bd135; assert_in_epsilon(333.57890142067606, worksheet.costpercapita_bd135, 0.001); end
  def test_costpercapita_bd136; assert_in_epsilon(135.96632754804423, worksheet.costpercapita_bd136, 0.001); end
  def test_costpercapita_bd137; assert_in_epsilon(32.579775185499514, worksheet.costpercapita_bd137, 0.001); end
  def test_costpercapita_bd138; assert_in_epsilon(35.67107826351441, worksheet.costpercapita_bd138, 0.001); end
  def test_costpercapita_bd139; assert_in_epsilon(5.178227858833111, worksheet.costpercapita_bd139, 0.001); end
  def test_costpercapita_bd140; assert_in_epsilon(3.1229047799339105, worksheet.costpercapita_bd140, 0.001); end
  def test_costpercapita_bd141; assert_in_epsilon(127.89086143934198, worksheet.costpercapita_bd141, 0.001); end
  def test_costpercapita_bd142; assert_in_epsilon(227.9746556510867, worksheet.costpercapita_bd142, 0.001); end
  def test_costpercapita_bd143; assert_in_epsilon(384.9261108855055, worksheet.costpercapita_bd143, 0.001); end
  def test_costpercapita_bd144; assert_in_delta(0, (worksheet.costpercapita_bd144||0), 0.001); end
  def test_costpercapita_bd145; assert_in_epsilon(72.90327109507227, worksheet.costpercapita_bd145, 0.001); end
  def test_costpercapita_bd146; assert_in_epsilon(1.8783358345864238, worksheet.costpercapita_bd146, 0.001); end
  def test_costpercapita_bd147; assert_in_delta(0.650161011641993, worksheet.costpercapita_bd147, 0.001); end
  def test_costpercapita_bd148; assert_in_epsilon(44.269175329516926, worksheet.costpercapita_bd148, 0.001); end
  def test_costpercapita_bd151; assert_in_delta(0, (worksheet.costpercapita_bd151||0), 0.001); end
  def test_costpercapita_bd152; assert_in_epsilon(4.20925397185445, worksheet.costpercapita_bd152, 0.001); end
  def test_costpercapita_bd156; assert_in_epsilon(3.2730690751971774, worksheet.costpercapita_bd156, 0.001); end
  def test_costpercapita_bd160; assert_in_delta(0.6936493537602795, worksheet.costpercapita_bd160, 0.001); end
  def test_costpercapita_bd161; assert_in_epsilon(4.146308555195507, worksheet.costpercapita_bd161, 0.001); end
  def test_costpercapita_bd197; assert_in_epsilon(2550.9123267655345, worksheet.costpercapita_bd197, 0.001); end
  def test_costpercapita_be112; assert_in_delta(0, (worksheet.costpercapita_be112||0), 0.001); end
  def test_costpercapita_be113; assert_in_delta(0, (worksheet.costpercapita_be113||0), 0.001); end
  def test_costpercapita_be114; assert_in_delta(0, (worksheet.costpercapita_be114||0), 0.001); end
  def test_costpercapita_be115; assert_in_delta(0, (worksheet.costpercapita_be115||0), 0.001); end
  def test_costpercapita_be116; assert_in_epsilon(170.01869759460894, worksheet.costpercapita_be116, 0.001); end
  def test_costpercapita_be117; assert_in_delta(0.6827697983308811, worksheet.costpercapita_be117, 0.001); end
  def test_costpercapita_be118; assert_in_epsilon(50.20329420815283, worksheet.costpercapita_be118, 0.001); end
  def test_costpercapita_be119; assert_in_delta(0.15219082356622374, worksheet.costpercapita_be119, 0.001); end
  def test_costpercapita_be120; assert_in_epsilon(458.29483026515567, worksheet.costpercapita_be120, 0.001); end
  def test_costpercapita_be121; assert_in_epsilon(285.04679198976993, worksheet.costpercapita_be121, 0.001); end
  def test_costpercapita_be122; assert_in_delta(0, (worksheet.costpercapita_be122||0), 0.001); end
  def test_costpercapita_be123; assert_in_epsilon(49.84106972324141, worksheet.costpercapita_be123, 0.001); end
  def test_costpercapita_be127; assert_in_epsilon(2.016082431335334, worksheet.costpercapita_be127, 0.001); end
  def test_costpercapita_be128; assert_in_epsilon(30.247807142381497, worksheet.costpercapita_be128, 0.001); end
  def test_costpercapita_be130; assert_in_delta(0, (worksheet.costpercapita_be130||0), 0.001); end
  def test_costpercapita_be131; assert_in_delta(0, (worksheet.costpercapita_be131||0), 0.001); end
  def test_costpercapita_be132; assert_in_epsilon(315.0918019957577, worksheet.costpercapita_be132, 0.001); end
  def test_costpercapita_be133; assert_in_delta(0, (worksheet.costpercapita_be133||0), 0.001); end
  def test_costpercapita_be134; assert_in_delta(0, (worksheet.costpercapita_be134||0), 0.001); end
  def test_costpercapita_be135; assert_in_epsilon(378.60947475790687, worksheet.costpercapita_be135, 0.001); end
  def test_costpercapita_be136; assert_in_epsilon(127.45815771384473, worksheet.costpercapita_be136, 0.001); end
  def test_costpercapita_be137; assert_in_epsilon(31.794962037573807, worksheet.costpercapita_be137, 0.001); end
  def test_costpercapita_be138; assert_in_epsilon(35.51699387516136, worksheet.costpercapita_be138, 0.001); end
  def test_costpercapita_be139; assert_in_epsilon(4.796128233226411, worksheet.costpercapita_be139, 0.001); end
  def test_costpercapita_be140; assert_in_epsilon(4.511395951179651, worksheet.costpercapita_be140, 0.001); end
  def test_costpercapita_be141; assert_in_epsilon(105.76722891728582, worksheet.costpercapita_be141, 0.001); end
  def test_costpercapita_be142; assert_in_epsilon(163.7926000754473, worksheet.costpercapita_be142, 0.001); end
  def test_costpercapita_be143; assert_in_epsilon(440.29688033356075, worksheet.costpercapita_be143, 0.001); end
  def test_costpercapita_be144; assert_in_delta(0, (worksheet.costpercapita_be144||0), 0.001); end
  def test_costpercapita_be145; assert_in_epsilon(86.44032115677831, worksheet.costpercapita_be145, 0.001); end
  def test_costpercapita_be146; assert_in_epsilon(1.9379070163109866, worksheet.costpercapita_be146, 0.001); end
  def test_costpercapita_be147; assert_in_delta(0.47527630192305403, worksheet.costpercapita_be147, 0.001); end
  def test_costpercapita_be148; assert_in_epsilon(48.486426422122406, worksheet.costpercapita_be148, 0.001); end
  def test_costpercapita_be151; assert_in_delta(0, (worksheet.costpercapita_be151||0), 0.001); end
  def test_costpercapita_be152; assert_in_epsilon(4.006151770338372, worksheet.costpercapita_be152, 0.001); end
  def test_costpercapita_be156; assert_in_epsilon(2.6204805445123784, worksheet.costpercapita_be156, 0.001); end
  def test_costpercapita_be160; assert_in_delta(0.5688963110015709, worksheet.costpercapita_be160, 0.001); end
  def test_costpercapita_be161; assert_in_epsilon(4.670587398323539, worksheet.costpercapita_be161, 0.001); end
  def test_costpercapita_be197; assert_in_epsilon(2803.3452047887977, worksheet.costpercapita_be197, 0.001); end
  def test_costpercapita_bf112; assert_in_delta(0, (worksheet.costpercapita_bf112||0), 0.001); end
  def test_costpercapita_bf113; assert_in_delta(0, (worksheet.costpercapita_bf113||0), 0.001); end
  def test_costpercapita_bf114; assert_in_delta(0, (worksheet.costpercapita_bf114||0), 0.001); end
  def test_costpercapita_bf115; assert_in_delta(0, (worksheet.costpercapita_bf115||0), 0.001); end
  def test_costpercapita_bf116; assert_in_epsilon(166.6271773042351, worksheet.costpercapita_bf116, 0.001); end
  def test_costpercapita_bf117; assert_in_delta(0.6691499573518858, worksheet.costpercapita_bf117, 0.001); end
  def test_costpercapita_bf118; assert_in_epsilon(92.72652067893357, worksheet.costpercapita_bf118, 0.001); end
  def test_costpercapita_bf119; assert_in_epsilon(1.1932394590111635, worksheet.costpercapita_bf119, 0.001); end
  def test_costpercapita_bf120; assert_in_epsilon(621.8524354074694, worksheet.costpercapita_bf120, 0.001); end
  def test_costpercapita_bf121; assert_in_epsilon(346.8126750834369, worksheet.costpercapita_bf121, 0.001); end
  def test_costpercapita_bf122; assert_in_delta(0, (worksheet.costpercapita_bf122||0), 0.001); end
  def test_costpercapita_bf123; assert_in_epsilon(74.92485122517164, worksheet.costpercapita_bf123, 0.001); end
  def test_costpercapita_bf127; assert_in_epsilon(1.841709642373828, worksheet.costpercapita_bf127, 0.001); end
  def test_costpercapita_bf128; assert_in_epsilon(29.364562685065327, worksheet.costpercapita_bf128, 0.001); end
  def test_costpercapita_bf130; assert_in_delta(0, (worksheet.costpercapita_bf130||0), 0.001); end
  def test_costpercapita_bf131; assert_in_delta(0, (worksheet.costpercapita_bf131||0), 0.001); end
  def test_costpercapita_bf132; assert_in_epsilon(337.28689250153775, worksheet.costpercapita_bf132, 0.001); end
  def test_costpercapita_bf133; assert_in_epsilon(44.30644237624355, worksheet.costpercapita_bf133, 0.001); end
  def test_costpercapita_bf134; assert_in_delta(0, (worksheet.costpercapita_bf134||0), 0.001); end
  def test_costpercapita_bf135; assert_in_epsilon(431.5979670229986, worksheet.costpercapita_bf135, 0.001); end
  def test_costpercapita_bf136; assert_in_epsilon(108.24767091892336, worksheet.costpercapita_bf136, 0.001); end
  def test_costpercapita_bf137; assert_in_epsilon(31.25466152956895, worksheet.costpercapita_bf137, 0.001); end
  def test_costpercapita_bf138; assert_in_epsilon(35.4217180517168, worksheet.costpercapita_bf138, 0.001); end
  def test_costpercapita_bf139; assert_in_epsilon(4.4680866692217664, worksheet.costpercapita_bf139, 0.001); end
  def test_costpercapita_bf140; assert_in_epsilon(6.838801504732674, worksheet.costpercapita_bf140, 0.001); end
  def test_costpercapita_bf141; assert_in_epsilon(39.75803101439866, worksheet.costpercapita_bf141, 0.001); end
  def test_costpercapita_bf142; assert_in_epsilon(211.1035399742058, worksheet.costpercapita_bf142, 0.001); end
  def test_costpercapita_bf143; assert_in_epsilon(475.01413468203754, worksheet.costpercapita_bf143, 0.001); end
  def test_costpercapita_bf144; assert_in_delta(0, (worksheet.costpercapita_bf144||0), 0.001); end
  def test_costpercapita_bf145; assert_in_epsilon(101.14451711259804, worksheet.costpercapita_bf145, 0.001); end
  def test_costpercapita_bf146; assert_in_epsilon(1.9967990847909702, worksheet.costpercapita_bf146, 0.001); end
  def test_costpercapita_bf147; assert_in_delta(0.318117992457925, worksheet.costpercapita_bf147, 0.001); end
  def test_costpercapita_bf148; assert_in_epsilon(72.73476215480768, worksheet.costpercapita_bf148, 0.001); end
  def test_costpercapita_bf151; assert_in_delta(0, (worksheet.costpercapita_bf151||0), 0.001); end
  def test_costpercapita_bf152; assert_in_epsilon(3.8402909928059508, worksheet.costpercapita_bf152, 0.001); end
  def test_costpercapita_bf156; assert_in_epsilon(1.8012574199300533, worksheet.costpercapita_bf156, 0.001); end
  def test_costpercapita_bf160; assert_in_delta(0.551171278559443, worksheet.costpercapita_bf160, 0.001); end
  def test_costpercapita_bf161; assert_in_epsilon(5.55151780645874, worksheet.costpercapita_bf161, 0.001); end
  def test_costpercapita_bf197; assert_in_epsilon(3249.2487015310426, worksheet.costpercapita_bf197, 0.001); end
  def test_costpercapita_bg112; assert_in_delta(0, (worksheet.costpercapita_bg112||0), 0.001); end
  def test_costpercapita_bg113; assert_in_delta(0, (worksheet.costpercapita_bg113||0), 0.001); end
  def test_costpercapita_bg114; assert_in_delta(0, (worksheet.costpercapita_bg114||0), 0.001); end
  def test_costpercapita_bg115; assert_in_delta(0, (worksheet.costpercapita_bg115||0), 0.001); end
  def test_costpercapita_bg116; assert_in_epsilon(163.51762503968345, worksheet.costpercapita_bg116, 0.001); end
  def test_costpercapita_bg117; assert_in_delta(0.6566624580203244, worksheet.costpercapita_bg117, 0.001); end
  def test_costpercapita_bg118; assert_in_epsilon(46.49233827501078, worksheet.costpercapita_bg118, 0.001); end
  def test_costpercapita_bg119; assert_in_epsilon(9.367772321313062, worksheet.costpercapita_bg119, 0.001); end
  def test_costpercapita_bg120; assert_in_epsilon(779.7243512343586, worksheet.costpercapita_bg120, 0.001); end
  def test_costpercapita_bg121; assert_in_epsilon(408.9190195682737, worksheet.costpercapita_bg121, 0.001); end
  def test_costpercapita_bg122; assert_in_delta(0, (worksheet.costpercapita_bg122||0), 0.001); end
  def test_costpercapita_bg123; assert_in_epsilon(33.377762530641036, worksheet.costpercapita_bg123, 0.001); end
  def test_costpercapita_bg127; assert_in_epsilon(1.6811185284283643, worksheet.costpercapita_bg127, 0.001); end
  def test_costpercapita_bg128; assert_in_epsilon(28.672987072868704, worksheet.costpercapita_bg128, 0.001); end
  def test_costpercapita_bg130; assert_in_delta(0, (worksheet.costpercapita_bg130||0), 0.001); end
  def test_costpercapita_bg131; assert_in_delta(0, (worksheet.costpercapita_bg131||0), 0.001); end
  def test_costpercapita_bg132; assert_in_epsilon(339.336569016635, worksheet.costpercapita_bg132, 0.001); end
  def test_costpercapita_bg133; assert_in_delta(0, (worksheet.costpercapita_bg133||0), 0.001); end
  def test_costpercapita_bg134; assert_in_delta(0, (worksheet.costpercapita_bg134||0), 0.001); end
  def test_costpercapita_bg135; assert_in_epsilon(484.9592641154424, worksheet.costpercapita_bg135, 0.001); end
  def test_costpercapita_bg136; assert_in_epsilon(103.38781452090875, worksheet.costpercapita_bg136, 0.001); end
  def test_costpercapita_bg137; assert_in_epsilon(30.949566687709364, worksheet.costpercapita_bg137, 0.001); end
  def test_costpercapita_bg138; assert_in_epsilon(35.33281975575669, worksheet.costpercapita_bg138, 0.001); end
  def test_costpercapita_bg139; assert_in_epsilon(4.186672074426213, worksheet.costpercapita_bg139, 0.001); end
  def test_costpercapita_bg140; assert_in_epsilon(10.73591490390656, worksheet.costpercapita_bg140, 0.001); end
  def test_costpercapita_bg141; assert_in_epsilon(11.698555144659448, worksheet.costpercapita_bg141, 0.001); end
  def test_costpercapita_bg142; assert_in_epsilon(189.7329254708914, worksheet.costpercapita_bg142, 0.001); end
  def test_costpercapita_bg143; assert_in_epsilon(499.1445794203785, worksheet.costpercapita_bg143, 0.001); end
  def test_costpercapita_bg144; assert_in_delta(0, (worksheet.costpercapita_bg144||0), 0.001); end
  def test_costpercapita_bg145; assert_in_epsilon(116.99616628875722, worksheet.costpercapita_bg145, 0.001); end
  def test_costpercapita_bg146; assert_in_epsilon(2.0494109161281444, worksheet.costpercapita_bg146, 0.001); end
  def test_costpercapita_bg147; assert_in_delta(0.17232635229186422, worksheet.costpercapita_bg147, 0.001); end
  def test_costpercapita_bg148; assert_in_epsilon(87.42680800645113, worksheet.costpercapita_bg148, 0.001); end
  def test_costpercapita_bg151; assert_in_delta(0, (worksheet.costpercapita_bg151||0), 0.001); end
  def test_costpercapita_bg152; assert_in_epsilon(3.7033619169175234, worksheet.costpercapita_bg152, 0.001); end
  def test_costpercapita_bg156; assert_in_delta(0.8453413193600672, worksheet.costpercapita_bg156, 0.001); end
  def test_costpercapita_bg160; assert_in_delta(0.5462708328828073, worksheet.costpercapita_bg160, 0.001); end
  def test_costpercapita_bg161; assert_in_epsilon(7.119906217699406, worksheet.costpercapita_bg161, 0.001); end
  def test_costpercapita_bg197; assert_in_epsilon(3400.7339099898, worksheet.costpercapita_bg197, 0.001); end
  def test_costpercapita_bi112; assert_in_delta(0, (worksheet.costpercapita_bi112||0), 0.001); end
  def test_costpercapita_bi113; assert_in_delta(0, (worksheet.costpercapita_bi113||0), 0.001); end
  def test_costpercapita_bi114; assert_in_delta(0, (worksheet.costpercapita_bi114||0), 0.001); end
  def test_costpercapita_bi115; assert_in_epsilon(6.453649313453831, worksheet.costpercapita_bi115, 0.001); end
  def test_costpercapita_bi116; assert_in_epsilon(7.668371273784396, worksheet.costpercapita_bi116, 0.001); end
  def test_costpercapita_bi117; assert_in_epsilon(4.975829876472337, worksheet.costpercapita_bi117, 0.001); end
  def test_costpercapita_bi118; assert_in_delta(0.01914539333650815, worksheet.costpercapita_bi118, 0.001); end
  def test_costpercapita_bi119; assert_in_delta(0, (worksheet.costpercapita_bi119||0), 0.001); end
  def test_costpercapita_bi120; assert_in_epsilon(125.49209534208538, worksheet.costpercapita_bi120, 0.001); end
  def test_costpercapita_bi121; assert_in_epsilon(11.475952427464382, worksheet.costpercapita_bi121, 0.001); end
  def test_costpercapita_bi122; assert_in_delta(0.7967489215340879, worksheet.costpercapita_bi122, 0.001); end
  def test_costpercapita_bi123; assert_in_epsilon(22.283922780241593, worksheet.costpercapita_bi123, 0.001); end
  def test_costpercapita_bi127; assert_in_epsilon(1.1786496105910613, worksheet.costpercapita_bi127, 0.001); end
  def test_costpercapita_bi128; assert_in_epsilon(19.56260168708007, worksheet.costpercapita_bi128, 0.001); end
  def test_costpercapita_bi130; assert_in_delta(0, (worksheet.costpercapita_bi130||0), 0.001); end
  def test_costpercapita_bi131; assert_in_delta(0, (worksheet.costpercapita_bi131||0), 0.001); end
  def test_costpercapita_bi132; assert_in_epsilon(71.32354342447164, worksheet.costpercapita_bi132, 0.001); end
  def test_costpercapita_bi133; assert_in_delta(0, (worksheet.costpercapita_bi133||0), 0.001); end
  def test_costpercapita_bi134; assert_in_delta(0, (worksheet.costpercapita_bi134||0), 0.001); end
  def test_costpercapita_bi136; assert_in_epsilon(132.29068474029276, worksheet.costpercapita_bi136, 0.001); end
  def test_costpercapita_bi137; assert_in_epsilon(15.715310484574742, worksheet.costpercapita_bi137, 0.001); end
  def test_costpercapita_bi138; assert_in_epsilon(21.258492804422662, worksheet.costpercapita_bi138, 0.001); end
  def test_costpercapita_bi139; assert_in_epsilon(1.6333140886172413, worksheet.costpercapita_bi139, 0.001); end
  def test_costpercapita_bi140; assert_in_delta(0.6724127320610676, worksheet.costpercapita_bi140, 0.001); end
  def test_costpercapita_bi141; assert_in_epsilon(337.4987181835316, worksheet.costpercapita_bi141, 0.001); end
  def test_costpercapita_bi142; assert_in_delta(0.6093915941317307, worksheet.costpercapita_bi142, 0.001); end
  def test_costpercapita_bi143; assert_in_delta(0, (worksheet.costpercapita_bi143||0), 0.001); end
  def test_costpercapita_bi144; assert_in_delta(0, (worksheet.costpercapita_bi144||0), 0.001); end
  def test_costpercapita_bi146; assert_in_delta(0.7924946447495341, worksheet.costpercapita_bi146, 0.001); end
  def test_costpercapita_bi147; assert_in_delta(0.9864431291958278, worksheet.costpercapita_bi147, 0.001); end
  def test_costpercapita_bi148; assert_in_epsilon(25.59841002220286, worksheet.costpercapita_bi148, 0.001); end
  def test_costpercapita_bi151; assert_in_delta(0, (worksheet.costpercapita_bi151||0), 0.001); end
  def test_costpercapita_bi152; assert_in_epsilon(3.7475956119762635, worksheet.costpercapita_bi152, 0.001); end
  def test_costpercapita_bi156; assert_in_epsilon(13.682159653191158, worksheet.costpercapita_bi156, 0.001); end
  def test_costpercapita_bi160; assert_in_delta(0.3585495938930806, worksheet.costpercapita_bi160, 0.001); end
  def test_costpercapita_bi161; assert_in_delta(0, (worksheet.costpercapita_bi161||0), 0.001); end
  def test_costpercapita_bi197; assert_in_epsilon(903.6908066943245, worksheet.costpercapita_bi197, 0.001); end
  def test_costpercapita_bj112; assert_in_epsilon(2.2635261916212843, worksheet.costpercapita_bj112, 0.001); end
  def test_costpercapita_bj113; assert_in_epsilon(3.9041038596739446, worksheet.costpercapita_bj113, 0.001); end
  def test_costpercapita_bj114; assert_in_delta(0, (worksheet.costpercapita_bj114||0), 0.001); end
  def test_costpercapita_bj115; assert_in_epsilon(15.568181843549558, worksheet.costpercapita_bj115, 0.001); end
  def test_costpercapita_bj116; assert_in_epsilon(53.001354839918726, worksheet.costpercapita_bj116, 0.001); end
  def test_costpercapita_bj117; assert_in_epsilon(6.379097320774261, worksheet.costpercapita_bj117, 0.001); end
  def test_costpercapita_bj118; assert_in_delta(0.5243693516032127, worksheet.costpercapita_bj118, 0.001); end
  def test_costpercapita_bj119; assert_in_delta(0.17468233474248515, worksheet.costpercapita_bj119, 0.001); end
  def test_costpercapita_bj120; assert_in_epsilon(323.61062615392393, worksheet.costpercapita_bj120, 0.001); end
  def test_costpercapita_bj121; assert_in_epsilon(62.10176511239985, worksheet.costpercapita_bj121, 0.001); end
  def test_costpercapita_bj122; assert_in_epsilon(16.011455843627697, worksheet.costpercapita_bj122, 0.001); end
  def test_costpercapita_bj123; assert_in_epsilon(63.61550302576673, worksheet.costpercapita_bj123, 0.001); end
  def test_costpercapita_bj127; assert_in_epsilon(3.557889731868055, worksheet.costpercapita_bj127, 0.001); end
  def test_costpercapita_bj128; assert_in_epsilon(51.95497099245984, worksheet.costpercapita_bj128, 0.001); end
  def test_costpercapita_bj130; assert_in_delta(0, (worksheet.costpercapita_bj130||0), 0.001); end
  def test_costpercapita_bj131; assert_in_delta(0, (worksheet.costpercapita_bj131||0), 0.001); end
  def test_costpercapita_bj132; assert_in_epsilon(221.5957530286974, worksheet.costpercapita_bj132, 0.001); end
  def test_costpercapita_bj133; assert_in_epsilon(2.3998442213496234, worksheet.costpercapita_bj133, 0.001); end
  def test_costpercapita_bj134; assert_in_delta(0, (worksheet.costpercapita_bj134||0), 0.001); end
  def test_costpercapita_bj135; assert_in_epsilon(134.85685947186, worksheet.costpercapita_bj135, 0.001); end
  def test_costpercapita_bj136; assert_in_epsilon(342.7404600420068, worksheet.costpercapita_bj136, 0.001); end
  def test_costpercapita_bj137; assert_in_epsilon(51.45502667845295, worksheet.costpercapita_bj137, 0.001); end
  def test_costpercapita_bj138; assert_in_epsilon(56.879614698425605, worksheet.costpercapita_bj138, 0.001); end
  def test_costpercapita_bj139; assert_in_epsilon(9.135788040861133, worksheet.costpercapita_bj139, 0.001); end
  def test_costpercapita_bj140; assert_in_epsilon(1.7515752262340547, worksheet.costpercapita_bj140, 0.001); end
  def test_costpercapita_bj141; assert_in_epsilon(822.8062945803022, worksheet.costpercapita_bj141, 0.001); end
  def test_costpercapita_bj142; assert_in_epsilon(29.953916333330575, worksheet.costpercapita_bj142, 0.001); end
  def test_costpercapita_bj143; assert_in_epsilon(40.3154351723195, worksheet.costpercapita_bj143, 0.001); end
  def test_costpercapita_bj144; assert_in_delta(0, (worksheet.costpercapita_bj144||0), 0.001); end
  def test_costpercapita_bj145; assert_in_epsilon(28.243963093518598, worksheet.costpercapita_bj145, 0.001); end
  def test_costpercapita_bj146; assert_in_epsilon(2.188068523314531, worksheet.costpercapita_bj146, 0.001); end
  def test_costpercapita_bj147; assert_in_epsilon(2.4405790903087974, worksheet.costpercapita_bj147, 0.001); end
  def test_costpercapita_bj148; assert_in_epsilon(87.04573100836565, worksheet.costpercapita_bj148, 0.001); end
  def test_costpercapita_bj151; assert_in_delta(0, (worksheet.costpercapita_bj151||0), 0.001); end
  def test_costpercapita_bj152; assert_in_epsilon(9.313321084750322, worksheet.costpercapita_bj152, 0.001); end
  def test_costpercapita_bj156; assert_in_epsilon(19.938686094749688, worksheet.costpercapita_bj156, 0.001); end
  def test_costpercapita_bj160; assert_in_delta(0.6842889789493001, worksheet.costpercapita_bj160, 0.001); end
  def test_costpercapita_bj161; assert_in_epsilon(1.6506149814073159, worksheet.costpercapita_bj161, 0.001); end
  def test_costpercapita_bj197; assert_in_epsilon(2468.0633469511336, worksheet.costpercapita_bj197, 0.001); end
  def test_costpercapita_bk112; assert_in_epsilon(2.189422530618772, worksheet.costpercapita_bk112, 0.001); end
  def test_costpercapita_bk113; assert_in_epsilon(9.40684048739103, worksheet.costpercapita_bk113, 0.001); end
  def test_costpercapita_bk114; assert_in_delta(0, (worksheet.costpercapita_bk114||0), 0.001); end
  def test_costpercapita_bk115; assert_in_epsilon(24.080490499559275, worksheet.costpercapita_bk115, 0.001); end
  def test_costpercapita_bk116; assert_in_epsilon(182.64051547679767, worksheet.costpercapita_bk116, 0.001); end
  def test_costpercapita_bk117; assert_in_epsilon(7.686291250111657, worksheet.costpercapita_bk117, 0.001); end
  def test_costpercapita_bk118; assert_in_epsilon(3.6872849501963705, worksheet.costpercapita_bk118, 0.001); end
  def test_costpercapita_bk119; assert_in_epsilon(1.3517084654977174, worksheet.costpercapita_bk119, 0.001); end
  def test_costpercapita_bk120; assert_in_epsilon(508.6513457814406, worksheet.costpercapita_bk120, 0.001); end
  def test_costpercapita_bk121; assert_in_epsilon(142.95054682591072, worksheet.costpercapita_bk121, 0.001); end
  def test_costpercapita_bk122; assert_in_epsilon(24.59331960205578, worksheet.costpercapita_bk122, 0.001); end
  def test_costpercapita_bk123; assert_in_epsilon(93.74141621933492, worksheet.costpercapita_bk123, 0.001); end
  def test_costpercapita_bk127; assert_in_epsilon(6.275996716177551, worksheet.costpercapita_bk127, 0.001); end
  def test_costpercapita_bk128; assert_in_epsilon(85.14839512353767, worksheet.costpercapita_bk128, 0.001); end
  def test_costpercapita_bk130; assert_in_delta(0, (worksheet.costpercapita_bk130||0), 0.001); end
  def test_costpercapita_bk131; assert_in_delta(0, (worksheet.costpercapita_bk131||0), 0.001); end
  def test_costpercapita_bk132; assert_in_epsilon(434.57745371040585, worksheet.costpercapita_bk132, 0.001); end
  def test_costpercapita_bk133; assert_in_epsilon(18.34528795252563, worksheet.costpercapita_bk133, 0.001); end
  def test_costpercapita_bk134; assert_in_delta(0, (worksheet.costpercapita_bk134||0), 0.001); end
  def test_costpercapita_bk135; assert_in_epsilon(367.6893992301711, worksheet.costpercapita_bk135, 0.001); end
  def test_costpercapita_bk136; assert_in_epsilon(538.1119418310758, worksheet.costpercapita_bk136, 0.001); end
  def test_costpercapita_bk137; assert_in_epsilon(87.87914300333162, worksheet.costpercapita_bk137, 0.001); end
  def test_costpercapita_bk138; assert_in_epsilon(91.32322823698483, worksheet.costpercapita_bk138, 0.001); end
  def test_costpercapita_bk139; assert_in_epsilon(15.642874706614014, worksheet.costpercapita_bk139, 0.001); end
  def test_costpercapita_bk140; assert_in_epsilon(3.2011510784312764, worksheet.costpercapita_bk140, 0.001); end
  def test_costpercapita_bk141; assert_in_epsilon(1240.4486554791206, worksheet.costpercapita_bk141, 0.001); end
  def test_costpercapita_bk142; assert_in_epsilon(69.19428819556965, worksheet.costpercapita_bk142, 0.001); end
  def test_costpercapita_bk143; assert_in_epsilon(91.11266618656133, worksheet.costpercapita_bk143, 0.001); end
  def test_costpercapita_bk144; assert_in_delta(0, (worksheet.costpercapita_bk144||0), 0.001); end
  def test_costpercapita_bk145; assert_in_epsilon(40.07529102992562, worksheet.costpercapita_bk145, 0.001); end
  def test_costpercapita_bk146; assert_in_epsilon(3.9442054473071546, worksheet.costpercapita_bk146, 0.001); end
  def test_costpercapita_bk147; assert_in_epsilon(3.6406180876145338, worksheet.costpercapita_bk147, 0.001); end
  def test_costpercapita_bk148; assert_in_epsilon(114.55284769516096, worksheet.costpercapita_bk148, 0.001); end
  def test_costpercapita_bk151; assert_in_delta(0, (worksheet.costpercapita_bk151||0), 0.001); end
  def test_costpercapita_bk152; assert_in_epsilon(14.223181680288238, worksheet.costpercapita_bk152, 0.001); end
  def test_costpercapita_bk156; assert_in_epsilon(26.205454925619794, worksheet.costpercapita_bk156, 0.001); end
  def test_costpercapita_bk160; assert_in_epsilon(1.7978394762838406, worksheet.costpercapita_bk160, 0.001); end
  def test_costpercapita_bk161; assert_in_epsilon(5.540682583400722, worksheet.costpercapita_bk161, 0.001); end
  def test_costpercapita_bk197; assert_in_epsilon(4259.909784465022, worksheet.costpercapita_bk197, 0.001); end
  def test_costpercapita_bl112; assert_in_epsilon(2.1216304013709832, worksheet.costpercapita_bl112, 0.001); end
  def test_costpercapita_bl113; assert_in_epsilon(9.115572019465692, worksheet.costpercapita_bl113, 0.001); end
  def test_costpercapita_bl114; assert_in_delta(0, (worksheet.costpercapita_bl114||0), 0.001); end
  def test_costpercapita_bl115; assert_in_epsilon(32.07750505929894, worksheet.costpercapita_bl115, 0.001); end
  def test_costpercapita_bl116; assert_in_epsilon(330.63113206761756, worksheet.costpercapita_bl116, 0.001); end
  def test_costpercapita_bl117; assert_in_epsilon(8.182843016834484, worksheet.costpercapita_bl117, 0.001); end
  def test_costpercapita_bl118; assert_in_epsilon(7.488239429704708, worksheet.costpercapita_bl118, 0.001); end
  def test_costpercapita_bl119; assert_in_epsilon(10.478838996436112, worksheet.costpercapita_bl119, 0.001); end
  def test_costpercapita_bl120; assert_in_epsilon(682.4793221707554, worksheet.costpercapita_bl120, 0.001); end
  def test_costpercapita_bl121; assert_in_epsilon(253.28382545315753, worksheet.costpercapita_bl121, 0.001); end
  def test_costpercapita_bl122; assert_in_epsilon(23.83182497149511, worksheet.costpercapita_bl122, 0.001); end
  def test_costpercapita_bl123; assert_in_epsilon(119.71921802728788, worksheet.costpercapita_bl123, 0.001); end
  def test_costpercapita_bl127; assert_in_epsilon(7.619781002707563, worksheet.costpercapita_bl127, 0.001); end
  def test_costpercapita_bl128; assert_in_epsilon(97.50759566440979, worksheet.costpercapita_bl128, 0.001); end
  def test_costpercapita_bl130; assert_in_delta(0, (worksheet.costpercapita_bl130||0), 0.001); end
  def test_costpercapita_bl131; assert_in_delta(0, (worksheet.costpercapita_bl131||0), 0.001); end
  def test_costpercapita_bl132; assert_in_epsilon(679.3599501547822, worksheet.costpercapita_bl132, 0.001); end
  def test_costpercapita_bl133; assert_in_epsilon(69.40114515781663, worksheet.costpercapita_bl133, 0.001); end
  def test_costpercapita_bl134; assert_in_delta(0, (worksheet.costpercapita_bl134||0), 0.001); end
  def test_costpercapita_bl135; assert_in_epsilon(539.5371041517811, worksheet.costpercapita_bl135, 0.001); end
  def test_costpercapita_bl136; assert_in_epsilon(685.0230510111663, worksheet.costpercapita_bl136, 0.001); end
  def test_costpercapita_bl137; assert_in_epsilon(106.73080764955003, worksheet.costpercapita_bl137, 0.001); end
  def test_costpercapita_bl138; assert_in_epsilon(105.40984376355654, worksheet.costpercapita_bl138, 0.001); end
  def test_costpercapita_bl139; assert_in_epsilon(19.843104369483182, worksheet.costpercapita_bl139, 0.001); end
  def test_costpercapita_bl140; assert_in_epsilon(4.276766553874646, worksheet.costpercapita_bl140, 0.001); end
  def test_costpercapita_bl141; assert_in_epsilon(1019.0387624422325, worksheet.costpercapita_bl141, 0.001); end
  def test_costpercapita_bl142; assert_in_epsilon(608.191965092167, worksheet.costpercapita_bl142, 0.001); end
  def test_costpercapita_bl143; assert_in_epsilon(274.11482894512244, worksheet.costpercapita_bl143, 0.001); end
  def test_costpercapita_bl144; assert_in_delta(0, (worksheet.costpercapita_bl144||0), 0.001); end
  def test_costpercapita_bl145; assert_in_epsilon(49.30010440611138, worksheet.costpercapita_bl145, 0.001); end
  def test_costpercapita_bl146; assert_in_epsilon(5.50213096394221, worksheet.costpercapita_bl146, 0.001); end
  def test_costpercapita_bl147; assert_in_epsilon(4.595525672343018, worksheet.costpercapita_bl147, 0.001); end
  def test_costpercapita_bl148; assert_in_epsilon(103.09561140681852, worksheet.costpercapita_bl148, 0.001); end
  def test_costpercapita_bl151; assert_in_delta(0, (worksheet.costpercapita_bl151||0), 0.001); end
  def test_costpercapita_bl152; assert_in_epsilon(15.179041446909169, worksheet.costpercapita_bl152, 0.001); end
  def test_costpercapita_bl156; assert_in_epsilon(18.967730434453067, worksheet.costpercapita_bl156, 0.001); end
  def test_costpercapita_bl160; assert_in_epsilon(2.4161477812399252, worksheet.costpercapita_bl160, 0.001); end
  def test_costpercapita_bl161; assert_in_epsilon(9.246397889183916, worksheet.costpercapita_bl161, 0.001); end
  def test_costpercapita_bl197; assert_in_epsilon(5903.767347573075, worksheet.costpercapita_bl197, 0.001); end
  def test_costpercapita_bm112; assert_in_epsilon(2.063667133991563, worksheet.costpercapita_bm112, 0.001); end
  def test_costpercapita_bm113; assert_in_epsilon(8.86653319633268, worksheet.costpercapita_bm113, 0.001); end
  def test_costpercapita_bm114; assert_in_delta(0, (worksheet.costpercapita_bm114||0), 0.001); end
  def test_costpercapita_bm115; assert_in_epsilon(25.511340669827586, worksheet.costpercapita_bm115, 0.001); end
  def test_costpercapita_bm116; assert_in_epsilon(492.75198191849273, worksheet.costpercapita_bm116, 0.001); end
  def test_costpercapita_bm117; assert_in_epsilon(8.673764634040278, worksheet.costpercapita_bm117, 0.001); end
  def test_costpercapita_bm118; assert_in_epsilon(15.192139955736813, worksheet.costpercapita_bm118, 0.001); end
  def test_costpercapita_bm119; assert_in_epsilon(36.752003043681526, worksheet.costpercapita_bm119, 0.001); end
  def test_costpercapita_bm120; assert_in_epsilon(848.2321833272398, worksheet.costpercapita_bm120, 0.001); end
  def test_costpercapita_bm121; assert_in_epsilon(399.746356164962, worksheet.costpercapita_bm121, 0.001); end
  def test_costpercapita_bm122; assert_in_epsilon(23.180735864707387, worksheet.costpercapita_bm122, 0.001); end
  def test_costpercapita_bm123; assert_in_epsilon(146.85825156929351, worksheet.costpercapita_bm123, 0.001); end
  def test_costpercapita_bm127; assert_in_epsilon(7.619621073763743, worksheet.costpercapita_bm127, 0.001); end
  def test_costpercapita_bm128; assert_in_epsilon(96.86048194535701, worksheet.costpercapita_bm128, 0.001); end
  def test_costpercapita_bm130; assert_in_delta(0, (worksheet.costpercapita_bm130||0), 0.001); end
  def test_costpercapita_bm131; assert_in_delta(0, (worksheet.costpercapita_bm131||0), 0.001); end
  def test_costpercapita_bm132; assert_in_epsilon(862.2364349969603, worksheet.costpercapita_bm132, 0.001); end
  def test_costpercapita_bm133; assert_in_epsilon(108.2881274681854, worksheet.costpercapita_bm133, 0.001); end
  def test_costpercapita_bm134; assert_in_delta(0, (worksheet.costpercapita_bm134||0), 0.001); end
  def test_costpercapita_bm135; assert_in_epsilon(748.8104528711795, worksheet.costpercapita_bm135, 0.001); end
  def test_costpercapita_bm136; assert_in_epsilon(816.2015851832875, worksheet.costpercapita_bm136, 0.001); end
  def test_costpercapita_bm137; assert_in_epsilon(104.71063203529312, worksheet.costpercapita_bm137, 0.001); end
  def test_costpercapita_bm138; assert_in_epsilon(105.34625483554433, worksheet.costpercapita_bm138, 0.001); end
  def test_costpercapita_bm139; assert_in_epsilon(18.03941756934186, worksheet.costpercapita_bm139, 0.001); end
  def test_costpercapita_bm140; assert_in_epsilon(5.428814286114627, worksheet.costpercapita_bm140, 0.001); end
  def test_costpercapita_bm141; assert_in_epsilon(543.7734970949931, worksheet.costpercapita_bm141, 0.001); end
  def test_costpercapita_bm142; assert_in_epsilon(1248.5331006578497, worksheet.costpercapita_bm142, 0.001); end
  def test_costpercapita_bm143; assert_in_epsilon(456.86556659939305, worksheet.costpercapita_bm143, 0.001); end
  def test_costpercapita_bm144; assert_in_delta(0, (worksheet.costpercapita_bm144||0), 0.001); end
  def test_costpercapita_bm145; assert_in_epsilon(60.53777052275827, worksheet.costpercapita_bm145, 0.001); end
  def test_costpercapita_bm146; assert_in_epsilon(7.243094721905976, worksheet.costpercapita_bm146, 0.001); end
  def test_costpercapita_bm147; assert_in_epsilon(5.321385437368556, worksheet.costpercapita_bm147, 0.001); end
  def test_costpercapita_bm148; assert_in_epsilon(96.2777300555487, worksheet.costpercapita_bm148, 0.001); end
  def test_costpercapita_bm151; assert_in_delta(0, (worksheet.costpercapita_bm151||0), 0.001); end
  def test_costpercapita_bm152; assert_in_epsilon(14.041452274225911, worksheet.costpercapita_bm152, 0.001); end
  def test_costpercapita_bm156; assert_in_epsilon(16.978072882146716, worksheet.costpercapita_bm156, 0.001); end
  def test_costpercapita_bm160; assert_in_epsilon(2.89340466038716, worksheet.costpercapita_bm160, 0.001); end
  def test_costpercapita_bm161; assert_in_epsilon(11.412762896679943, worksheet.costpercapita_bm161, 0.001); end
  def test_costpercapita_bm197; assert_in_epsilon(7345.248617546589, worksheet.costpercapita_bm197, 0.001); end
  def test_costpercapita_bn112; assert_in_delta(0, (worksheet.costpercapita_bn112||0), 0.001); end
  def test_costpercapita_bn113; assert_in_epsilon(8.657675837417264, worksheet.costpercapita_bn113, 0.001); end
  def test_costpercapita_bn114; assert_in_delta(0, (worksheet.costpercapita_bn114||0), 0.001); end
  def test_costpercapita_bn115; assert_in_epsilon(16.606935526100255, worksheet.costpercapita_bn115, 0.001); end
  def test_costpercapita_bn116; assert_in_epsilon(614.2866286103391, worksheet.costpercapita_bn116, 0.001); end
  def test_costpercapita_bn117; assert_in_epsilon(9.167096184169544, worksheet.costpercapita_bn117, 0.001); end
  def test_costpercapita_bn118; assert_in_epsilon(41.04751938467313, worksheet.costpercapita_bn118, 0.001); end
  def test_costpercapita_bn119; assert_in_epsilon(35.88628403935529, worksheet.costpercapita_bn119, 0.001); end
  def test_costpercapita_bn120; assert_in_epsilon(1008.4455955356526, worksheet.costpercapita_bn120, 0.001); end
  def test_costpercapita_bn121; assert_in_epsilon(568.8448681339144, worksheet.costpercapita_bn121, 0.001); end
  def test_costpercapita_bn122; assert_in_epsilon(21.948797577587335, worksheet.costpercapita_bn122, 0.001); end
  def test_costpercapita_bn123; assert_in_epsilon(179.16117711469624, worksheet.costpercapita_bn123, 0.001); end
  def test_costpercapita_bn127; assert_in_epsilon(7.038157810979043, worksheet.costpercapita_bn127, 0.001); end
  def test_costpercapita_bn128; assert_in_epsilon(94.15996241839173, worksheet.costpercapita_bn128, 0.001); end
  def test_costpercapita_bn130; assert_in_delta(0, (worksheet.costpercapita_bn130||0), 0.001); end
  def test_costpercapita_bn131; assert_in_delta(0, (worksheet.costpercapita_bn131||0), 0.001); end
  def test_costpercapita_bn132; assert_in_epsilon(1002.2937815395984, worksheet.costpercapita_bn132, 0.001); end
  def test_costpercapita_bn133; assert_in_epsilon(144.30423267733877, worksheet.costpercapita_bn133, 0.001); end
  def test_costpercapita_bn134; assert_in_delta(0, (worksheet.costpercapita_bn134||0), 0.001); end
  def test_costpercapita_bn135; assert_in_epsilon(846.3975880332322, worksheet.costpercapita_bn135, 0.001); end
  def test_costpercapita_bn136; assert_in_epsilon(932.9417164662046, worksheet.costpercapita_bn136, 0.001); end
  def test_costpercapita_bn137; assert_in_epsilon(99.75020596796463, worksheet.costpercapita_bn137, 0.001); end
  def test_costpercapita_bn138; assert_in_epsilon(105.12148647773905, worksheet.costpercapita_bn138, 0.001); end
  def test_costpercapita_bn139; assert_in_epsilon(16.528585543136767, worksheet.costpercapita_bn139, 0.001); end
  def test_costpercapita_bn140; assert_in_epsilon(7.036932047061638, worksheet.costpercapita_bn140, 0.001); end
  def test_costpercapita_bn141; assert_in_epsilon(249.6823741002354, worksheet.costpercapita_bn141, 0.001); end
  def test_costpercapita_bn142; assert_in_epsilon(1410.0799003059822, worksheet.costpercapita_bn142, 0.001); end
  def test_costpercapita_bn143; assert_in_epsilon(783.063433387371, worksheet.costpercapita_bn143, 0.001); end
  def test_costpercapita_bn144; assert_in_delta(0, (worksheet.costpercapita_bn144||0), 0.001); end
  def test_costpercapita_bn145; assert_in_epsilon(72.90327109507227, worksheet.costpercapita_bn145, 0.001); end
  def test_costpercapita_bn146; assert_in_epsilon(8.950814420456595, worksheet.costpercapita_bn146, 0.001); end
  def test_costpercapita_bn147; assert_in_epsilon(5.8461975123281205, worksheet.costpercapita_bn147, 0.001); end
  def test_costpercapita_bn148; assert_in_epsilon(90.338326714458, worksheet.costpercapita_bn148, 0.001); end
  def test_costpercapita_bn151; assert_in_delta(0, (worksheet.costpercapita_bn151||0), 0.001); end
  def test_costpercapita_bn152; assert_in_epsilon(13.120494318508511, worksheet.costpercapita_bn152, 0.001); end
  def test_costpercapita_bn156; assert_in_epsilon(13.482760884402461, worksheet.costpercapita_bn156, 0.001); end
  def test_costpercapita_bn160; assert_in_epsilon(2.473412754184841, worksheet.costpercapita_bn160, 0.001); end
  def test_costpercapita_bn161; assert_in_epsilon(11.660240397824207, worksheet.costpercapita_bn161, 0.001); end
  def test_costpercapita_bn197; assert_in_epsilon(8421.226452816374, worksheet.costpercapita_bn197, 0.001); end
  def test_costpercapita_bo112; assert_in_delta(0, (worksheet.costpercapita_bo112||0), 0.001); end
  def test_costpercapita_bo113; assert_in_epsilon(8.473038898398798, worksheet.costpercapita_bo113, 0.001); end
  def test_costpercapita_bo114; assert_in_delta(0, (worksheet.costpercapita_bo114||0), 0.001); end
  def test_costpercapita_bo115; assert_in_epsilon(8.126384802241857, worksheet.costpercapita_bo115, 0.001); end
  def test_costpercapita_bo116; assert_in_epsilon(652.8717987632983, worksheet.costpercapita_bo116, 0.001); end
  def test_costpercapita_bo117; assert_in_epsilon(5.462158386647049, worksheet.costpercapita_bo117, 0.001); end
  def test_costpercapita_bo118; assert_in_epsilon(90.35928807662991, worksheet.costpercapita_bo118, 0.001); end
  def test_costpercapita_bo119; assert_in_epsilon(35.120959284513184, worksheet.costpercapita_bo119, 0.001); end
  def test_costpercapita_bo120; assert_in_epsilon(1269.0191705159066, worksheet.costpercapita_bo120, 0.001); end
  def test_costpercapita_bo121; assert_in_epsilon(767.1059239245257, worksheet.costpercapita_bo121, 0.001); end
  def test_costpercapita_bo122; assert_in_epsilon(8.202106675413711, worksheet.costpercapita_bo122, 0.001); end
  def test_costpercapita_bo123; assert_in_epsilon(206.40686842832596, worksheet.costpercapita_bo123, 0.001); end
  def test_costpercapita_bo127; assert_in_epsilon(6.481419432817207, worksheet.costpercapita_bo127, 0.001); end
  def test_costpercapita_bo128; assert_in_epsilon(91.97922790660442, worksheet.costpercapita_bo128, 0.001); end
  def test_costpercapita_bo130; assert_in_delta(0, (worksheet.costpercapita_bo130||0), 0.001); end
  def test_costpercapita_bo131; assert_in_delta(0, (worksheet.costpercapita_bo131||0), 0.001); end
  def test_costpercapita_bo132; assert_in_epsilon(1097.6364423750306, worksheet.costpercapita_bo132, 0.001); end
  def test_costpercapita_bo133; assert_in_epsilon(93.24168851478885, worksheet.costpercapita_bo133, 0.001); end
  def test_costpercapita_bo134; assert_in_delta(0, (worksheet.costpercapita_bo134||0), 0.001); end
  def test_costpercapita_bo135; assert_in_epsilon(981.0267181293756, worksheet.costpercapita_bo135, 0.001); end
  def test_costpercapita_bo136; assert_in_epsilon(929.0468387199838, worksheet.costpercapita_bo136, 0.001); end
  def test_costpercapita_bo137; assert_in_epsilon(96.12538296207498, worksheet.costpercapita_bo137, 0.001); end
  def test_costpercapita_bo138; assert_in_epsilon(104.76398545174348, worksheet.costpercapita_bo138, 0.001); end
  def test_costpercapita_bo139; assert_in_epsilon(15.241745760826909, worksheet.costpercapita_bo139, 0.001); end
  def test_costpercapita_bo140; assert_in_epsilon(9.739808241080388, worksheet.costpercapita_bo140, 0.001); end
  def test_costpercapita_bo141; assert_in_epsilon(235.8793737710593, worksheet.costpercapita_bo141, 0.001); end
  def test_costpercapita_bo142; assert_in_epsilon(1040.290570994361, worksheet.costpercapita_bo142, 0.001); end
  def test_costpercapita_bo143; assert_in_epsilon(1033.9352792476573, worksheet.costpercapita_bo143, 0.001); end
  def test_costpercapita_bo144; assert_in_delta(0, (worksheet.costpercapita_bo144||0), 0.001); end
  def test_costpercapita_bo145; assert_in_epsilon(86.44032115677831, worksheet.costpercapita_bo145, 0.001); end
  def test_costpercapita_bo146; assert_in_epsilon(10.030145041467861, worksheet.costpercapita_bo146, 0.001); end
  def test_costpercapita_bo147; assert_in_epsilon(5.365703355963259, worksheet.costpercapita_bo147, 0.001); end
  def test_costpercapita_bo148; assert_in_epsilon(91.81150021917168, worksheet.costpercapita_bo148, 0.001); end
  def test_costpercapita_bo151; assert_in_delta(0, (worksheet.costpercapita_bo151||0), 0.001); end
  def test_costpercapita_bo152; assert_in_epsilon(12.391591205657566, worksheet.costpercapita_bo152, 0.001); end
  def test_costpercapita_bo156; assert_in_epsilon(10.261629554507483, worksheet.costpercapita_bo156, 0.001); end
  def test_costpercapita_bo160; assert_in_epsilon(2.061008181332479, worksheet.costpercapita_bo160, 0.001); end
  def test_costpercapita_bo161; assert_in_epsilon(12.47818194800953, worksheet.costpercapita_bo161, 0.001); end
  def test_costpercapita_bo197; assert_in_epsilon(9017.376259926194, worksheet.costpercapita_bo197, 0.001); end
  def test_costpercapita_bp112; assert_in_delta(0, (worksheet.costpercapita_bp112||0), 0.001); end
  def test_costpercapita_bp113; assert_in_epsilon(4.970446164749744, worksheet.costpercapita_bp113, 0.001); end
  def test_costpercapita_bp114; assert_in_delta(0, (worksheet.costpercapita_bp114||0), 0.001); end
  def test_costpercapita_bp115; assert_in_delta(0, (worksheet.costpercapita_bp115||0), 0.001); end
  def test_costpercapita_bp116; assert_in_epsilon(833.1358865211754, worksheet.costpercapita_bp116, 0.001); end
  def test_costpercapita_bp117; assert_in_epsilon(5.353199658815114, worksheet.costpercapita_bp117, 0.001); end
  def test_costpercapita_bp118; assert_in_epsilon(188.25814454668236, worksheet.costpercapita_bp118, 0.001); end
  def test_costpercapita_bp119; assert_in_epsilon(59.44397728016193, worksheet.costpercapita_bp119, 0.001); end
  def test_costpercapita_bp120; assert_in_epsilon(1865.5573062224087, worksheet.costpercapita_bp120, 0.001); end
  def test_costpercapita_bp121; assert_in_epsilon(1147.2009891932857, worksheet.costpercapita_bp121, 0.001); end
  def test_costpercapita_bp122; assert_in_delta(0, (worksheet.costpercapita_bp122||0), 0.001); end
  def test_costpercapita_bp123; assert_in_epsilon(269.7758696787144, worksheet.costpercapita_bp123, 0.001); end
  def test_costpercapita_bp127; assert_in_epsilon(5.9342879597831155, worksheet.costpercapita_bp127, 0.001); end
  def test_costpercapita_bp128; assert_in_epsilon(89.41065585374217, worksheet.costpercapita_bp128, 0.001); end
  def test_costpercapita_bp130; assert_in_delta(0, (worksheet.costpercapita_bp130||0), 0.001); end
  def test_costpercapita_bp131; assert_in_delta(0, (worksheet.costpercapita_bp131||0), 0.001); end
  def test_costpercapita_bp132; assert_in_epsilon(1425.3295026463384, worksheet.costpercapita_bp132, 0.001); end
  def test_costpercapita_bp133; assert_in_epsilon(95.44335224226832, worksheet.costpercapita_bp133, 0.001); end
  def test_costpercapita_bp134; assert_in_delta(0, (worksheet.costpercapita_bp134||0), 0.001); end
  def test_costpercapita_bp135; assert_in_epsilon(1122.6075403169525, worksheet.costpercapita_bp135, 0.001); end
  def test_costpercapita_bp136; assert_in_epsilon(975.72556231704, worksheet.costpercapita_bp136, 0.001); end
  def test_costpercapita_bp137; assert_in_epsilon(93.66430742471121, worksheet.costpercapita_bp137, 0.001); end
  def test_costpercapita_bp138; assert_in_epsilon(104.44417573596779, worksheet.costpercapita_bp138, 0.001); end
  def test_costpercapita_bp139; assert_in_epsilon(14.13524506992659, worksheet.costpercapita_bp139, 0.001); end
  def test_costpercapita_bp140; assert_in_epsilon(14.255542038341737, worksheet.costpercapita_bp140, 0.001); end
  def test_costpercapita_bp141; assert_in_epsilon(266.0820842806511, worksheet.costpercapita_bp141, 0.001); end
  def test_costpercapita_bp142; assert_in_epsilon(590.2909604899083, worksheet.costpercapita_bp142, 0.001); end
  def test_costpercapita_bp143; assert_in_epsilon(1275.73031051362, worksheet.costpercapita_bp143, 0.001); end
  def test_costpercapita_bp144; assert_in_delta(0, (worksheet.costpercapita_bp144||0), 0.001); end
  def test_costpercapita_bp145; assert_in_epsilon(101.14451711259804, worksheet.costpercapita_bp145, 0.001); end
  def test_costpercapita_bp146; assert_in_epsilon(12.38421515236992, worksheet.costpercapita_bp146, 0.001); end
  def test_costpercapita_bp147; assert_in_epsilon(5.1047727963931235, worksheet.costpercapita_bp147, 0.001); end
  def test_costpercapita_bp148; assert_in_epsilon(120.2539849614169, worksheet.costpercapita_bp148, 0.001); end
  def test_costpercapita_bp151; assert_in_delta(0, (worksheet.costpercapita_bp151||0), 0.001); end
  def test_costpercapita_bp152; assert_in_epsilon(11.803838947213617, worksheet.costpercapita_bp152, 0.001); end
  def test_costpercapita_bp156; assert_in_epsilon(7.508832636090548, worksheet.costpercapita_bp156, 0.001); end
  def test_costpercapita_bp160; assert_in_epsilon(1.7740338329221033, worksheet.costpercapita_bp160, 0.001); end
  def test_costpercapita_bp161; assert_in_epsilon(14.10587311055741, worksheet.costpercapita_bp161, 0.001); end
  def test_costpercapita_bp197; assert_in_epsilon(10720.829414704804, worksheet.costpercapita_bp197, 0.001); end
  def test_costpercapita_bq112; assert_in_delta(0, (worksheet.costpercapita_bq112||0), 0.001); end
  def test_costpercapita_bq113; assert_in_delta(-6.370967824488918e-16, worksheet.costpercapita_bq113, 0.001); end
  def test_costpercapita_bq114; assert_in_delta(0, (worksheet.costpercapita_bq114||0), 0.001); end
  def test_costpercapita_bq115; assert_in_delta(0, (worksheet.costpercapita_bq115||0), 0.001); end
  def test_costpercapita_bq116; assert_in_epsilon(654.0705001587338, worksheet.costpercapita_bq116, 0.001); end
  def test_costpercapita_bq117; assert_in_epsilon(4.5966372061422325, worksheet.costpercapita_bq117, 0.001); end
  def test_costpercapita_bq118; assert_in_epsilon(228.48238548904192, worksheet.costpercapita_bq118, 0.001); end
  def test_costpercapita_bq119; assert_in_epsilon(59.50562105545619, worksheet.costpercapita_bq119, 0.001); end
  def test_costpercapita_bq120; assert_in_epsilon(2440.9903596293625, worksheet.costpercapita_bq120, 0.001); end
  def test_costpercapita_bq121; assert_in_epsilon(1234.172223198463, worksheet.costpercapita_bq121, 0.001); end
  def test_costpercapita_bq122; assert_in_delta(0, (worksheet.costpercapita_bq122||0), 0.001); end
  def test_costpercapita_bq123; assert_in_epsilon(270.2171864397347, worksheet.costpercapita_bq123, 0.001); end
  def test_costpercapita_bq127; assert_in_epsilon(5.427451358719747, worksheet.costpercapita_bq127, 0.001); end
  def test_costpercapita_bq128; assert_in_epsilon(86.58076577541577, worksheet.costpercapita_bq128, 0.001); end
  def test_costpercapita_bq130; assert_in_delta(0, (worksheet.costpercapita_bq130||0), 0.001); end
  def test_costpercapita_bq131; assert_in_delta(0, (worksheet.costpercapita_bq131||0), 0.001); end
  def test_costpercapita_bq132; assert_in_epsilon(1252.2074028982022, worksheet.costpercapita_bq132, 0.001); end
  def test_costpercapita_bq133; assert_in_epsilon(43.47960727974713, worksheet.costpercapita_bq133, 0.001); end
  def test_costpercapita_bq134; assert_in_delta(0, (worksheet.costpercapita_bq134||0), 0.001); end
  def test_costpercapita_bq135; assert_in_epsilon(1272.6352978549428, worksheet.costpercapita_bq135, 0.001); end
  def test_costpercapita_bq136; assert_in_epsilon(881.9359112504053, worksheet.costpercapita_bq136, 0.001); end
  def test_costpercapita_bq137; assert_in_epsilon(92.2001674287446, worksheet.costpercapita_bq137, 0.001); end
  def test_costpercapita_bq138; assert_in_epsilon(104.25242353943867, worksheet.costpercapita_bq138, 0.001); end
  def test_costpercapita_bq139; assert_in_epsilon(13.184113263846426, worksheet.costpercapita_bq139, 0.001); end
  def test_costpercapita_bq140; assert_in_epsilon(21.785984415735033, worksheet.costpercapita_bq140, 0.001); end
  def test_costpercapita_bq141; assert_in_epsilon(152.4375976335437, worksheet.costpercapita_bq141, 0.001); end
  def test_costpercapita_bq142; assert_in_epsilon(554.4265043639462, worksheet.costpercapita_bq142, 0.001); end
  def test_costpercapita_bq143; assert_in_epsilon(1388.7551995095707, worksheet.costpercapita_bq143, 0.001); end
  def test_costpercapita_bq144; assert_in_delta(0, (worksheet.costpercapita_bq144||0), 0.001); end
  def test_costpercapita_bq145; assert_in_epsilon(116.99616628875722, worksheet.costpercapita_bq145, 0.001); end
  def test_costpercapita_bq146; assert_in_epsilon(12.619136024310055, worksheet.costpercapita_bq146, 0.001); end
  def test_costpercapita_bq147; assert_in_epsilon(4.073036824158197, worksheet.costpercapita_bq147, 0.001); end
  def test_costpercapita_bq148; assert_in_epsilon(158.80421328809308, worksheet.costpercapita_bq148, 0.001); end
  def test_costpercapita_bq151; assert_in_delta(0, (worksheet.costpercapita_bq151||0), 0.001); end
  def test_costpercapita_bq152; assert_in_epsilon(11.324953367902518, worksheet.costpercapita_bq152, 0.001); end
  def test_costpercapita_bq156; assert_in_epsilon(5.13326433803175, worksheet.costpercapita_bq156, 0.001); end
  def test_costpercapita_bq160; assert_in_epsilon(1.6342994954893348, worksheet.costpercapita_bq160, 0.001); end
  def test_costpercapita_bq161; assert_in_epsilon(17.059819359264125, worksheet.costpercapita_bq161, 0.001); end
  def test_costpercapita_bq197; assert_in_epsilon(11088.988228735201, worksheet.costpercapita_bq197, 0.001); end
  def test_costpercapita_bs197; assert_in_epsilon(3346.905915883422, worksheet.costpercapita_bs197, 0.001); end
  def test_costpercapita_bt197; assert_in_epsilon(5044.715811475267, worksheet.costpercapita_bt197, 0.001); end
  def test_costpercapita_bu197; assert_in_epsilon(6966.19591649549, worksheet.costpercapita_bu197, 0.001); end
  def test_costpercapita_bv197; assert_in_epsilon(8764.518782191522, worksheet.costpercapita_bv197, 0.001); end
  def test_costpercapita_bw197; assert_in_epsilon(10153.090700213019, worksheet.costpercapita_bw197, 0.001); end
  def test_costpercapita_bx197; assert_in_epsilon(11090.003254750007, worksheet.costpercapita_bx197, 0.001); end
  def test_costpercapita_by197; assert_in_epsilon(11574.103914095997, worksheet.costpercapita_by197, 0.001); end
  def test_costpercapita_bz197; assert_in_epsilon(13349.048079055434, worksheet.costpercapita_bz197, 0.001); end
  def test_costpercapita_ca197; assert_in_epsilon(13700.502017666782, worksheet.costpercapita_ca197, 0.001); end
  def test_costpercapita_cc112; assert_in_epsilon(29.94855928661539, worksheet.costpercapita_cc112, 0.001); end
  def test_costpercapita_cc113; assert_in_epsilon(9.002470195668794, worksheet.costpercapita_cc113, 0.001); end
  def test_costpercapita_cc114; assert_in_epsilon(6.8716031656694145, worksheet.costpercapita_cc114, 0.001); end
  def test_costpercapita_cc115; assert_in_epsilon(20.114000628923502, worksheet.costpercapita_cc115, 0.001); end
  def test_costpercapita_cc116; assert_in_epsilon(598.0906559884163, worksheet.costpercapita_cc116, 0.001); end
  def test_costpercapita_cc117; assert_in_epsilon(11.767988718768013, worksheet.costpercapita_cc117, 0.001); end
  def test_costpercapita_cc118; assert_in_epsilon(94.5229790495971, worksheet.costpercapita_cc118, 0.001); end
  def test_costpercapita_cc119; assert_in_epsilon(32.75588759656187, worksheet.costpercapita_cc119, 0.001); end
  def test_costpercapita_cc120; assert_in_epsilon(1112.8021150380523, worksheet.costpercapita_cc120, 0.001); end
  def test_costpercapita_cc121; assert_in_epsilon(509.65360560378696, worksheet.costpercapita_cc121, 0.001); end
  def test_costpercapita_cc122; assert_in_epsilon(13.173887717380122, worksheet.costpercapita_cc122, 0.001); end
  def test_costpercapita_cc123; assert_in_epsilon(284.84613402987867, worksheet.costpercapita_cc123, 0.001); end
  def test_costpercapita_cc124; assert_in_epsilon(2.7242706067494717, worksheet.costpercapita_cc124, 0.001); end
  def test_costpercapita_cc125; assert_in_epsilon(111.8019347019136, worksheet.costpercapita_cc125, 0.001); end
  def test_costpercapita_cc126; assert_in_delta(3.118946460832625e-08, worksheet.costpercapita_cc126, 0.001); end
  def test_costpercapita_cc127; assert_in_epsilon(10.126985726852862, worksheet.costpercapita_cc127, 0.001); end
  def test_costpercapita_cc128; assert_in_epsilon(193.49547243665944, worksheet.costpercapita_cc128, 0.001); end
  def test_costpercapita_cc129; assert_in_epsilon(15.637721614077845, worksheet.costpercapita_cc129, 0.001); end
  def test_costpercapita_cc130; assert_in_delta(0, (worksheet.costpercapita_cc130||0), 0.001); end
  def test_costpercapita_cc131; assert_in_epsilon(-237.04874047115092, worksheet.costpercapita_cc131, 0.001); end
  def test_costpercapita_cc132; assert_in_epsilon(825.5066824739364, worksheet.costpercapita_cc132, 0.001); end
  def test_costpercapita_cc133; assert_in_epsilon(72.96433816125742, worksheet.costpercapita_cc133, 0.001); end
  def test_costpercapita_cc134; assert_in_delta(0, (worksheet.costpercapita_cc134||0), 0.001); end
  def test_costpercapita_cc135; assert_in_epsilon(876.5451782686092, worksheet.costpercapita_cc135, 0.001); end
  def test_costpercapita_cc136; assert_in_epsilon(692.6686390623848, worksheet.costpercapita_cc136, 0.001); end
  def test_costpercapita_cc137; assert_in_epsilon(97.00350691247178, worksheet.costpercapita_cc137, 0.001); end
  def test_costpercapita_cc138; assert_in_epsilon(88.75550061598031, worksheet.costpercapita_cc138, 0.001); end
  def test_costpercapita_cc139; assert_in_epsilon(13.70935426807268, worksheet.costpercapita_cc139, 0.001); end
  def test_costpercapita_cc140; assert_in_epsilon(197.6970115977991, worksheet.costpercapita_cc140, 0.001); end
  def test_costpercapita_cc141; assert_in_epsilon(953.8364193694483, worksheet.costpercapita_cc141, 0.001); end
  def test_costpercapita_cc142; assert_in_epsilon(865.4043146047163, worksheet.costpercapita_cc142, 0.001); end
  def test_costpercapita_cc143; assert_in_epsilon(716.9652428534646, worksheet.costpercapita_cc143, 0.001); end
  def test_costpercapita_cc144; assert_in_delta(0, (worksheet.costpercapita_cc144||0), 0.001); end
  def test_costpercapita_cc145; assert_in_epsilon(92.75594148059564, worksheet.costpercapita_cc145, 0.001); end
  def test_costpercapita_cc146; assert_in_epsilon(205.97451874760972, worksheet.costpercapita_cc146, 0.001); end
  def test_costpercapita_cc147; assert_in_epsilon(6.522074362180089, worksheet.costpercapita_cc147, 0.001); end
  def test_costpercapita_cc148; assert_in_epsilon(185.89372416013268, worksheet.costpercapita_cc148, 0.001); end
  def test_costpercapita_cc149; assert_in_epsilon(101.0471638138306, worksheet.costpercapita_cc149, 0.001); end
  def test_costpercapita_cc150; assert_in_epsilon(18.064825489879357, worksheet.costpercapita_cc150, 0.001); end
  def test_costpercapita_cc151; assert_in_delta(0, (worksheet.costpercapita_cc151||0), 0.001); end
  def test_costpercapita_cc152; assert_in_epsilon(22.687944013785128, worksheet.costpercapita_cc152, 0.001); end
  def test_costpercapita_cc153; assert_in_epsilon(15.18679490695313, worksheet.costpercapita_cc153, 0.001); end
  def test_costpercapita_cc154; assert_in_epsilon(262.6010999994541, worksheet.costpercapita_cc154, 0.001); end
  def test_costpercapita_cc155; assert_in_epsilon(99.17565906037412, worksheet.costpercapita_cc155, 0.001); end
  def test_costpercapita_cc156; assert_in_epsilon(14.71672640621612, worksheet.costpercapita_cc156, 0.001); end
  def test_costpercapita_cc157; assert_in_epsilon(2.5055439499029464, worksheet.costpercapita_cc157, 0.001); end
  def test_costpercapita_cc158; assert_in_epsilon(52.37214882156221, worksheet.costpercapita_cc158, 0.001); end
  def test_costpercapita_cc159; assert_in_epsilon(19.567880258912997, worksheet.costpercapita_cc159, 0.001); end
  def test_costpercapita_cc160; assert_in_epsilon(2.0115945474087575, worksheet.costpercapita_cc160, 0.001); end
  def test_costpercapita_cc161; assert_in_epsilon(9.693128108222636, worksheet.costpercapita_cc161, 0.001); end
  def test_costpercapita_cc197; assert_in_epsilon(9332.120487980772, worksheet.costpercapita_cc197, 0.001); end
  def test_costpercapita_cf197; assert_in_epsilon(-1549.42665482672, worksheet.costpercapita_cf197, 0.001); end
  def test_costpercapita_cg197; assert_in_epsilon(-142.48813021759705, worksheet.costpercapita_cg197, 0.001); end
  def test_costpercapita_ch197; assert_in_epsilon(1146.7467616212384, worksheet.costpercapita_ch197, 0.001); end
  def test_costpercapita_ci197; assert_in_epsilon(2214.017757336096, worksheet.costpercapita_ci197, 0.001); end
  def test_costpercapita_cj197; assert_in_epsilon(3375.702630434393, worksheet.costpercapita_cj197, 0.001); end
  def test_costpercapita_ck197; assert_in_epsilon(4325.317273701424, worksheet.costpercapita_ck197, 0.001); end
  def test_costpercapita_cl197; assert_in_epsilon(4474.3857235606165, worksheet.costpercapita_cl197, 0.001); end
  def test_costpercapita_cm197; assert_in_epsilon(5437.20100402007, worksheet.costpercapita_cm197, 0.001); end
  def test_costpercapita_cn197; assert_in_epsilon(5565.154394099585, worksheet.costpercapita_cn197, 0.001); end
  def test_costpercapita_cp112; assert_in_delta(0.5315679294289506, worksheet.costpercapita_cp112, 0.001); end
  def test_costpercapita_cp113; assert_in_epsilon(3.935304180086659, worksheet.costpercapita_cp113, 0.001); end
  def test_costpercapita_cp114; assert_in_delta(0, (worksheet.costpercapita_cp114||0), 0.001); end
  def test_costpercapita_cp115; assert_in_epsilon(7.108905938870529, worksheet.costpercapita_cp115, 0.001); end
  def test_costpercapita_cp116; assert_in_epsilon(198.44400197314866, worksheet.costpercapita_cp116, 0.001); end
  def test_costpercapita_cp117; assert_in_epsilon(3.46597182920213, worksheet.costpercapita_cp117, 0.001); end
  def test_costpercapita_cp118; assert_in_epsilon(15.466849368625283, worksheet.costpercapita_cp118, 0.001); end
  def test_costpercapita_cp119; assert_in_epsilon(16.88214174274067, worksheet.costpercapita_cp119, 0.001); end
  def test_costpercapita_cp120; assert_in_epsilon(376.8721199656885, worksheet.costpercapita_cp120, 0.001); end
  def test_costpercapita_cp121; assert_in_epsilon(188.79235158092368, worksheet.costpercapita_cp121, 0.001); end
  def test_costpercapita_cp122; assert_in_epsilon(7.994943432927332, worksheet.costpercapita_cp122, 0.001); end
  def test_costpercapita_cp123; assert_in_epsilon(76.0386886985612, worksheet.costpercapita_cp123, 0.001); end
  def test_costpercapita_cp127; assert_in_epsilon(2.3040464238460237, worksheet.costpercapita_cp127, 0.001); end
  def test_costpercapita_cp128; assert_in_epsilon(31.004042598140458, worksheet.costpercapita_cp128, 0.001); end
  def test_costpercapita_cp130; assert_in_delta(0, (worksheet.costpercapita_cp130||0), 0.001); end
  def test_costpercapita_cp131; assert_in_delta(0, (worksheet.costpercapita_cp131||0), 0.001); end
  def test_costpercapita_cp132; assert_in_epsilon(347.38897956684724, worksheet.costpercapita_cp132, 0.001); end
  def test_costpercapita_cp133; assert_in_epsilon(28.27494198907929, worksheet.costpercapita_cp133, 0.001); end
  def test_costpercapita_cp134; assert_in_delta(0, (worksheet.costpercapita_cp134||0), 0.001); end
  def test_costpercapita_cp135; assert_in_epsilon(239.6180638556308, worksheet.costpercapita_cp135, 0.001); end
  def test_costpercapita_cp136; assert_in_epsilon(393.0152923297321, worksheet.costpercapita_cp136, 0.001); end
  def test_costpercapita_cp137; assert_in_epsilon(32.952351095696905, worksheet.costpercapita_cp137, 0.001); end
  def test_costpercapita_cp138; assert_in_epsilon(34.31022778645016, worksheet.costpercapita_cp138, 0.001); end
  def test_costpercapita_cp139; assert_in_epsilon(5.679630367353962, worksheet.costpercapita_cp139, 0.001); end
  def test_costpercapita_cp140; assert_in_epsilon(1.995137147701042, worksheet.costpercapita_cp140, 0.001); end
  def test_costpercapita_cp141; assert_in_epsilon(216.8786928842652, worksheet.costpercapita_cp141, 0.001); end
  def test_costpercapita_cp142; assert_in_epsilon(263.8132086358589, worksheet.costpercapita_cp142, 0.001); end
  def test_costpercapita_cp143; assert_in_epsilon(204.22760930228654, worksheet.costpercapita_cp143, 0.001); end
  def test_costpercapita_cp144; assert_in_delta(0, (worksheet.costpercapita_cp144||0), 0.001); end
  def test_costpercapita_cp145; assert_in_epsilon(14.590877075147157, worksheet.costpercapita_cp145, 0.001); end
  def test_costpercapita_cp146; assert_in_epsilon(3.7200522329725465, worksheet.costpercapita_cp146, 0.001); end
  def test_costpercapita_cp147; assert_in_epsilon(2.4881958336341303, worksheet.costpercapita_cp147, 0.001); end
  def test_costpercapita_cp148; assert_in_epsilon(29.02681269405915, worksheet.costpercapita_cp148, 0.001); end
  def test_costpercapita_cp151; assert_in_delta(0, (worksheet.costpercapita_cp151||0), 0.001); end
  def test_costpercapita_cp152; assert_in_epsilon(4.55571743015879, worksheet.costpercapita_cp152, 0.001); end
  def test_costpercapita_cp156; assert_in_epsilon(5.288209955391685, worksheet.costpercapita_cp156, 0.001); end
  def test_costpercapita_cp160; assert_in_delta(0.7264568770529445, worksheet.costpercapita_cp160, 0.001); end
  def test_costpercapita_cp161; assert_in_epsilon(3.3431361372810895, worksheet.costpercapita_cp161, 0.001); end
  def test_costpercapita_cp197; assert_in_epsilon(2760.7345288587894, worksheet.costpercapita_cp197, 0.001); end
  def test_costpercapita_cd197; assert_in_epsilon(183701.69455635108, worksheet.costpercapita_cd197, 0.001); end
  def test_costpercapita_cq197; assert_in_epsilon(49859.31104750553, worksheet.costpercapita_cq197, 0.001); end
  def test_costpercapita_at197; assert_in_epsilon(133842.38350884555, worksheet.costpercapita_at197, 0.001); end
  def test_costpercapita_cr197; assert_equal("ok", worksheet.costpercapita_cr197); end
  def test_costpercapita_e198; assert_equal("ok", worksheet.costpercapita_e198); end
  def test_costpercapita_f198; assert_equal("ok", worksheet.costpercapita_f198); end
  def test_costpercapita_g198; assert_equal("ok", worksheet.costpercapita_g198); end
  def test_costpercapita_h198; assert_equal("ok", worksheet.costpercapita_h198); end
  def test_costpercapita_i198; assert_equal("ok", worksheet.costpercapita_i198); end
  def test_costpercapita_j198; assert_equal("ok", worksheet.costpercapita_j198); end
  def test_costpercapita_k198; assert_equal("ok", worksheet.costpercapita_k198); end
  def test_costpercapita_l198; assert_equal("ok", worksheet.costpercapita_l198); end
  def test_costpercapita_m198; assert_equal("ok", worksheet.costpercapita_m198); end
  def test_costpercapita_o198; assert_equal("ok", worksheet.costpercapita_o198); end
  def test_costpercapita_p198; assert_equal("ok", worksheet.costpercapita_p198); end
  def test_costpercapita_q198; assert_equal("ok", worksheet.costpercapita_q198); end
  def test_costpercapita_r198; assert_equal("ok", worksheet.costpercapita_r198); end
  def test_costpercapita_s198; assert_equal("ok", worksheet.costpercapita_s198); end
  def test_costpercapita_t198; assert_equal("ok", worksheet.costpercapita_t198); end
  def test_costpercapita_u198; assert_equal("ok", worksheet.costpercapita_u198); end
  def test_costpercapita_v198; assert_equal("ok", worksheet.costpercapita_v198); end
  def test_costpercapita_w198; assert_equal("ok", worksheet.costpercapita_w198); end
  def test_costpercapita_y198; assert_equal("ok", worksheet.costpercapita_y198); end
  def test_costpercapita_z198; assert_equal("ok", worksheet.costpercapita_z198); end
  def test_costpercapita_aa198; assert_equal("ok", worksheet.costpercapita_aa198); end
  def test_costpercapita_ab198; assert_equal("ok", worksheet.costpercapita_ab198); end
  def test_costpercapita_ac198; assert_equal("ok", worksheet.costpercapita_ac198); end
  def test_costpercapita_ad198; assert_equal("ok", worksheet.costpercapita_ad198); end
  def test_costpercapita_ae198; assert_equal("ok", worksheet.costpercapita_ae198); end
  def test_costpercapita_af198; assert_equal("ok", worksheet.costpercapita_af198); end
  def test_costpercapita_ag198; assert_equal("ok", worksheet.costpercapita_ag198); end
  def test_costpercapita_ai198; assert_equal("ok", worksheet.costpercapita_ai198); end
  def test_costpercapita_aj198; assert_equal("ok", worksheet.costpercapita_aj198); end
  def test_costpercapita_ak198; assert_equal("ok", worksheet.costpercapita_ak198); end
  def test_costpercapita_al198; assert_equal("ok", worksheet.costpercapita_al198); end
  def test_costpercapita_am198; assert_equal("ok", worksheet.costpercapita_am198); end
  def test_costpercapita_an198; assert_equal("ok", worksheet.costpercapita_an198); end
  def test_costpercapita_ao198; assert_equal("ok", worksheet.costpercapita_ao198); end
  def test_costpercapita_ap198; assert_equal("ok", worksheet.costpercapita_ap198); end
  def test_costpercapita_aq198; assert_equal("ok", worksheet.costpercapita_aq198); end
  def test_costpercapita_as198; assert_equal("ok", worksheet.costpercapita_as198); end
  def test_costpercapita_at198; assert_equal("ok", worksheet.costpercapita_at198); end
  def test_costpercapita_ay198; assert_equal("ok", worksheet.costpercapita_ay198); end
  def test_costpercapita_az198; assert_equal("ok", worksheet.costpercapita_az198); end
  def test_costpercapita_ba198; assert_equal("ok", worksheet.costpercapita_ba198); end
  def test_costpercapita_bb198; assert_equal("ok", worksheet.costpercapita_bb198); end
  def test_costpercapita_bc198; assert_equal("ok", worksheet.costpercapita_bc198); end
  def test_costpercapita_bd198; assert_equal("ok", worksheet.costpercapita_bd198); end
  def test_costpercapita_be198; assert_equal("ok", worksheet.costpercapita_be198); end
  def test_costpercapita_bf198; assert_equal("ok", worksheet.costpercapita_bf198); end
  def test_costpercapita_bg198; assert_equal("ok", worksheet.costpercapita_bg198); end
  def test_costpercapita_bi198; assert_equal("ok", worksheet.costpercapita_bi198); end
  def test_costpercapita_bj198; assert_equal("ok", worksheet.costpercapita_bj198); end
  def test_costpercapita_bk198; assert_equal("ok", worksheet.costpercapita_bk198); end
  def test_costpercapita_bl198; assert_equal("ok", worksheet.costpercapita_bl198); end
  def test_costpercapita_bm198; assert_equal("ok", worksheet.costpercapita_bm198); end
  def test_costpercapita_bn198; assert_equal("ok", worksheet.costpercapita_bn198); end
  def test_costpercapita_bo198; assert_equal("ok", worksheet.costpercapita_bo198); end
  def test_costpercapita_bp198; assert_equal("ok", worksheet.costpercapita_bp198); end
  def test_costpercapita_bq198; assert_equal("ok", worksheet.costpercapita_bq198); end
  def test_costpercapita_bs198; assert_equal("ok", worksheet.costpercapita_bs198); end
  def test_costpercapita_bt198; assert_equal("ok", worksheet.costpercapita_bt198); end
  def test_costpercapita_bu198; assert_equal("ok", worksheet.costpercapita_bu198); end
  def test_costpercapita_bv198; assert_equal("ok", worksheet.costpercapita_bv198); end
  def test_costpercapita_bw198; assert_equal("ok", worksheet.costpercapita_bw198); end
  def test_costpercapita_bx198; assert_equal("ok", worksheet.costpercapita_bx198); end
  def test_costpercapita_by198; assert_equal("ok", worksheet.costpercapita_by198); end
  def test_costpercapita_bz198; assert_equal("ok", worksheet.costpercapita_bz198); end
  def test_costpercapita_ca198; assert_equal("ok", worksheet.costpercapita_ca198); end
  def test_costpercapita_cc198; assert_equal("ok", worksheet.costpercapita_cc198); end
  def test_costpercapita_cd198; assert_equal("ok", worksheet.costpercapita_cd198); end
  def test_costpercapita_cf198; assert_equal("ok", worksheet.costpercapita_cf198); end
  def test_costpercapita_cg198; assert_equal("ok", worksheet.costpercapita_cg198); end
  def test_costpercapita_ch198; assert_equal("ok", worksheet.costpercapita_ch198); end
  def test_costpercapita_ci198; assert_equal("ok", worksheet.costpercapita_ci198); end
  def test_costpercapita_cj198; assert_equal("ok", worksheet.costpercapita_cj198); end
  def test_costpercapita_ck198; assert_equal("ok", worksheet.costpercapita_ck198); end
  def test_costpercapita_cl198; assert_equal("ok", worksheet.costpercapita_cl198); end
  def test_costpercapita_cm198; assert_equal("ok", worksheet.costpercapita_cm198); end
  def test_costpercapita_cn198; assert_equal("ok", worksheet.costpercapita_cn198); end
  def test_costpercapita_cp198; assert_equal("ok", worksheet.costpercapita_cp198); end
  def test_costpercapita_cq198; assert_equal("ok", worksheet.costpercapita_cq198); end
  def test_aq_outputs_b2; assert_equal("YOUR CHOICE", worksheet.aq_outputs_b2); end
  def test_aq_outputs_d3; assert_in_epsilon(2010, worksheet.aq_outputs_d3, 0.001); end
  def test_aq_outputs_e3; assert_equal("2050 - All Level 1", worksheet.aq_outputs_e3); end
  def test_aq_outputs_f3; assert_equal("2050 - YOUR CHOICE", worksheet.aq_outputs_f3); end
  def test_aq_outputs_c4; assert_equal("Emissions in 2010", worksheet.aq_outputs_c4); end
  def test_aq_outputs_d4; assert_in_epsilon(100, worksheet.aq_outputs_d4, 0.001); end
  def test_aq_outputs_c5; assert_equal("Low innovation", worksheet.aq_outputs_c5); end
  def test_aq_outputs_e5; assert_in_epsilon(62.42562135992872, worksheet.aq_outputs_e5, 0.001); end
  def test_aq_outputs_f5; assert_in_epsilon(32.161751951003026, worksheet.aq_outputs_f5, 0.001); end
  def test_aq_outputs_c6; assert_equal("High innovation", worksheet.aq_outputs_c6); end
  def test_aq_outputs_e6; assert_in_epsilon(23.740859094730222, worksheet.aq_outputs_e6, 0.001); end
  def test_aq_outputs_f6; assert_in_epsilon(8.934794345194891, worksheet.aq_outputs_f6, 0.001); end
end
